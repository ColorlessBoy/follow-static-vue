{"index":1144,"title":"Removing some axiom requirements and disjoint variable conditions","content":"","blocks":[{"name":"bj-exlimvmpi","content":"A Fol lemma ( ~ exlimiv followed by ~ mpi ). (Contributed by BJ, 2-Jul-2022.) (Proof modification is discouraged.)","origin":"thm bj-exlimvmpi(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wex(s0, w0), w1)\n  -| wi(w0, wi(w2, w1))\n  -| w2\n  -| diffsw(s0, w1)\n} = {\n  exlimiv(s0, w0, w1)\n  mpi(w0, w1, w2)\n}","pretty":"thm bj-exlimvmpi(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∃(s0, w0)→ w1)\n  ⊣ (w0 →(w2 → w1))\n  ⊣ w2\n  ⊣ d(s0, w1)\n} = {\n  exlimiv(s0, w0, w1)\n  mpi(w0, w1, w2)\n}","parent":["exlimiv","mpi"],"children":["bj-vtoclg"]},{"name":"bj-exlimmpi","content":"Lemma for ~ bj-vtoclg1f1 (an instance of this lemma is a version of ~ bj-vtoclg1f1 where ` x ` and ` y ` are identified). (Contributed by BJ, 30-Apr-2019.) (Proof modification is discouraged.)","origin":"thm bj-exlimmpi(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wex(s0, w0), w1)\n  -| wnf(s0, w1)\n  -| wi(w0, wi(w2, w1))\n  -| w2\n} = {\n  exlimi(s0, w0, w1)\n  mpi(w0, w1, w2)\n}","pretty":"thm bj-exlimmpi(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∃(s0, w0)→ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (w0 →(w2 → w1))\n  ⊣ w2\n} = {\n  exlimi(s0, w0, w1)\n  mpi(w0, w1, w2)\n}","parent":["exlimi","mpi"],"children":["bj-vtoclg1f1","bj-vtoclg1f","bj-vtoclg1fv"]},{"name":"bj-exlimmpbi","content":"Lemma for theorems of the ~ vtoclg family. (Contributed by BJ, 3-Oct-2019.) (Proof modification is discouraged.)","origin":"thm bj-exlimmpbi(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wex(s0, w0), w1)\n  -| wnf(s0, w1)\n  -| wi(w0, wb(w2, w1))\n  -| w2\n} = {\n  exlimi(s0, w0, w1)\n  mpbii(w0, w1, w2)\n}","pretty":"thm bj-exlimmpbi(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∃(s0, w0)→ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (w0 →(w2 ↔ w1))\n  ⊣ w2\n} = {\n  exlimi(s0, w0, w1)\n  mpbii(w0, w1, w2)\n}","parent":["exlimi","mpbii"],"children":[]},{"name":"bj-exlimmpbir","content":"Lemma for theorems of the ~ vtoclg family. (Contributed by BJ, 3-Oct-2019.) (Proof modification is discouraged.)","origin":"thm bj-exlimmpbir(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wex(s0, w0), w1)\n  -| wnf(s0, w1)\n  -| wi(w0, wb(w1, w2))\n  -| w2\n} = {\n  exlimi(s0, w0, w1)\n  mpbiri(w0, w1, w2)\n}","pretty":"thm bj-exlimmpbir(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∃(s0, w0)→ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (w0 →(w1 ↔ w2))\n  ⊣ w2\n} = {\n  exlimi(s0, w0, w1)\n  mpbiri(w0, w1, w2)\n}","parent":["exlimi","mpbiri"],"children":[]},{"name":"bj-vtoclf","content":"Remove dependency on ~ ax-ext , ~ df-clab and ~ df-cleq (and ~ df-sb and ~ df-v ) from ~ vtoclf . (Contributed by BJ, 6-Oct-2019.) (Proof modification is discouraged.)","origin":"thm bj-vtoclf(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- w0\n  -| wnf(s0, w0)\n  -| wcel(c0, c1)\n  -| wi(wceq(cv(s0), c0), wb(w1, w0))\n  -| w1\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  mpg(s0, w0, w1)\n  19.36i(s0, w1, w0)\n  eximii(s0, wi(w1, w0), wceq(cv(s0), c0))\n  bj-issetiv(s0, c0, c1)\n  biimpd(wceq(cv(s0), c0), w1, w0)\n}","pretty":"thm bj-vtoclf(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ w0\n  ⊣ F/(s0, w0)\n  ⊣ c0 ∈ c1\n  ⊣ (s0 = c0 →(w1 ↔ w0))\n  ⊣ w1\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  mpg(s0, w0, w1)\n  19.36i(s0, w1, w0)\n  eximii(s0, (w1 → w0), s0 = c0)\n  bj-issetiv(s0, c0, c1)\n  biimpd(s0 = c0, w1, w0)\n}","parent":["mpg","19.36i","eximii","bj-issetiv","biimpd"],"children":["bj-vtocl"]},{"name":"bj-vtocl","content":"Remove dependency on ~ ax-ext , ~ df-clab and ~ df-cleq (and ~ df-sb and ~ df-v ) from ~ vtocl . (Contributed by BJ, 6-Oct-2019.) (Proof modification is discouraged.)","origin":"thm bj-vtocl(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- w0\n  -| wcel(c0, c1)\n  -| wi(wceq(cv(s0), c0), wb(w1, w0))\n  -| w1\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsw(s0, w0)\n} = {\n  bj-vtoclf(s0, c0, c1, w0, w1)\n  nfv(s0, w0)\n}","pretty":"thm bj-vtocl(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ w0\n  ⊣ c0 ∈ c1\n  ⊣ (s0 = c0 →(w1 ↔ w0))\n  ⊣ w1\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, w0)\n} = {\n  bj-vtoclf(s0, c0, c1, w0, w1)\n  nfv(s0, w0)\n}","parent":["bj-vtoclf","nfv"],"children":[]},{"name":"bj-vtoclg1f1","content":"The FOL content of ~ vtoclg1f (hence not using ~ ax-ext , ~ df-cleq , ~ df-nfc , ~ df-v ). Note the weakened \"major\" hypothesis and the disjoint variable condition between ` x ` and ` A ` (needed since the nonfreeness quantifier for classes is not available without ~ ax-ext ; as a byproduct, this dispenses with ~ ax-11 and ~ ax-13 ). (Contributed by BJ, 30-Apr-2019.) (Proof modification is discouraged.)","origin":"thm bj-vtoclg1f1(setvar s0, setvar s1, class c0, wff w0, wff w1) {\n  |- wi(wex(s0, wceq(cv(s0), c0)), w0)\n  -| wnf(s1, w0)\n  -| wi(wceq(cv(s1), c0), wi(w1, w0))\n  -| w1\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  sylbi(wex(s0, wceq(cv(s0), c0)), w0, wex(s1, wceq(cv(s1), c0)))\n  bj-denotes(s0, s1, c0)\n  bj-exlimmpi(s1, wceq(cv(s1), c0), w0, w1)\n}","pretty":"thm bj-vtoclg1f1(setvar s0, setvar s1, class c0, wff w0, wff w1) {\n  ⊢ (∃(s0, s0 = c0)→ w0)\n  ⊣ F/(s1, w0)\n  ⊣ (s1 = c0 →(w1 → w0))\n  ⊣ w1\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  sylbi(∃(s0, s0 = c0), w0, ∃(s1, s1 = c0))\n  bj-denotes(s0, s1, c0)\n  bj-exlimmpi(s1, s1 = c0, w0, w1)\n}","parent":["sylbi","bj-denotes","bj-exlimmpi"],"children":[]},{"name":"bj-vtoclg1f","content":"Reprove ~ vtoclg1f from ~ bj-vtoclg1f1 . This removes dependency on ~ ax-ext , ~ df-cleq and ~ df-v . Use ~ bj-vtoclg1fv instead when sufficient (in particular when ` V ` is substituted for ` _V ` ). (Contributed by BJ, 14-Sep-2019.) (Proof modification is discouraged.)","origin":"thm bj-vtoclg1f(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wi(wcel(c0, c1), w0)\n  -| wnf(s0, w0)\n  -| wi(wceq(cv(s0), c0), wi(w1, w0))\n  -| w1\n  -| diffsc(s0, c0)\n} = {\n  syl(wcel(c0, c1), w0, wex(s0, wceq(cv(s0), c0)))\n  bj-elisset(s0, c0, c1)\n  bj-exlimmpi(s0, wceq(cv(s0), c0), w0, w1)\n}","pretty":"thm bj-vtoclg1f(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ (c0 ∈ c1 → w0)\n  ⊣ F/(s0, w0)\n  ⊣ (s0 = c0 →(w1 → w0))\n  ⊣ w1\n  ⊣ d(s0, c0)\n} = {\n  syl(c0 ∈ c1, w0, ∃(s0, s0 = c0))\n  bj-elisset(s0, c0, c1)\n  bj-exlimmpi(s0, s0 = c0, w0, w1)\n}","parent":["syl","bj-elisset","bj-exlimmpi"],"children":[]},{"name":"bj-vtoclg1fv","content":"Version of ~ bj-vtoclg1f with a disjoint variable condition on ` x , V ` . This removes dependency on ~ df-sb and ~ df-clab . Prefer its use over ~ bj-vtoclg1f when sufficient (in particular when ` V ` is substituted for ` _V ` ). (Contributed by BJ, 14-Sep-2019.) (Proof modification is discouraged.)","origin":"thm bj-vtoclg1fv(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wi(wcel(c0, c1), w0)\n  -| wnf(s0, w0)\n  -| wi(wceq(cv(s0), c0), wi(w1, w0))\n  -| w1\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  syl(wcel(c0, c1), w0, wex(s0, wceq(cv(s0), c0)))\n  bj-elissetv(s0, c0, c1)\n  bj-exlimmpi(s0, wceq(cv(s0), c0), w0, w1)\n}","pretty":"thm bj-vtoclg1fv(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ (c0 ∈ c1 → w0)\n  ⊣ F/(s0, w0)\n  ⊣ (s0 = c0 →(w1 → w0))\n  ⊣ w1\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  syl(c0 ∈ c1, w0, ∃(s0, s0 = c0))\n  bj-elissetv(s0, c0, c1)\n  bj-exlimmpi(s0, s0 = c0, w0, w1)\n}","parent":["syl","bj-elissetv","bj-exlimmpi"],"children":[]},{"name":"bj-vtoclg","content":"A version of ~ vtoclg with an additional disjoint variable condition (which is removable if we allow use of ~ df-clab , see ~ bj-vtoclg1f ), which requires fewer axioms (i.e., removes dependency on ~ ax-6 , ~ ax-7 , ~ ax-9 , ~ ax-12 , ~ ax-ext , ~ df-clab , ~ df-cleq , ~ df-v ). (Contributed by BJ, 2-Jul-2022.) (Proof modification is discouraged.)","origin":"thm bj-vtoclg(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wi(wcel(c0, c1), w0)\n  -| wi(wceq(cv(s0), c0), wi(w1, w0))\n  -| w1\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsw(s0, w0)\n} = {\n  syl(wcel(c0, c1), w0, wex(s0, wceq(cv(s0), c0)))\n  bj-elissetv(s0, c0, c1)\n  bj-exlimvmpi(s0, wceq(cv(s0), c0), w0, w1)\n}","pretty":"thm bj-vtoclg(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ (c0 ∈ c1 → w0)\n  ⊣ (s0 = c0 →(w1 → w0))\n  ⊣ w1\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, w0)\n} = {\n  syl(c0 ∈ c1, w0, ∃(s0, s0 = c0))\n  bj-elissetv(s0, c0, c1)\n  bj-exlimvmpi(s0, s0 = c0, w0, w1)\n}","parent":["syl","bj-elissetv","bj-exlimvmpi"],"children":["bj-zfauscl"]},{"name":"bj-rabbida2","content":"Version of ~ rabbidva2 with disjoint variable condition replaced by nonfreeness hypothesis. (Contributed by BJ, 27-Apr-2019.)","origin":"thm bj-rabbida2(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wceq(crab(s0, c0, w1), crab(s0, c1, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wb(wa(wcel(cv(s0), c0), w1), wa(wcel(cv(s0), c1), w2)))\n} = {\n  3eqtr4g(crab(s0, c0, w1), crab(s0, c1, w2), cab(s0, wa(wcel(cv(s0), c0), w1)), cab(s0, wa(wcel(cv(s0), c1), w2)), w0)\n  abbid(s0, w0, wa(wcel(cv(s0), c0), w1), wa(wcel(cv(s0), c1), w2))\n  df-rab(s0, c0, w1)\n  df-rab(s0, c1, w2)\n}","pretty":"thm bj-rabbida2(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → { s0 ∈ c0 | w1 } = { s0 ∈ c1 | w2 })\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →((s0 ∈ c0 ∧ w1)↔(s0 ∈ c1 ∧ w2)))\n} = {\n  3eqtr4g({ s0 ∈ c0 | w1 }, { s0 ∈ c1 | w2 }, { s0 |(s0 ∈ c0 ∧ w1)}, { s0 |(s0 ∈ c1 ∧ w2)}, w0)\n  abbid(s0, w0, (s0 ∈ c0 ∧ w1), (s0 ∈ c1 ∧ w2))\n  df-rab(s0, c0, w1)\n  df-rab(s0, c1, w2)\n}","parent":["3eqtr4g","abbid","df-rab"],"children":["bj-rabeqd"]},{"name":"bj-rabbida","content":"Version of ~ rabbidva with disjoint variable condition replaced by nonfreeness hypothesis. (Contributed by BJ, 27-Apr-2019.)","origin":"thm bj-rabbida(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wceq(crab(s0, c0, w1), crab(s0, c0, w2)))\n  -| wnf(s0, w0)\n  -| wi(wa(w0, wcel(cv(s0), c0)), wb(w1, w2))\n} = {\n  sylib(w0, wceq(crab(s0, c0, w1), crab(s0, c0, w2)), wral(s0, c0, wb(w1, w2)))\n  ralrimi(s0, c0, w0, wb(w1, w2))\n  ex(w0, wcel(cv(s0), c0), wb(w1, w2))\n  rabbi(s0, c0, w1, w2)\n}","pretty":"thm bj-rabbida(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → { s0 ∈ c0 | w1 } = { s0 ∈ c0 | w2 })\n  ⊣ F/(s0, w0)\n  ⊣ ((w0 ∧ s0 ∈ c0)→(w1 ↔ w2))\n} = {\n  sylib(w0, { s0 ∈ c0 | w1 } = { s0 ∈ c0 | w2 }, ∀(s0 ∈ c0,(w1 ↔ w2)))\n  ralrimi(s0, c0, w0, (w1 ↔ w2))\n  ex(w0, s0 ∈ c0, (w1 ↔ w2))\n  rabbi(s0, c0, w1, w2)\n}","parent":["sylib","ralrimi","ex","rabbi"],"children":["bj-rabbid","bj-rabeqbida"]},{"name":"bj-rabbid","content":"Version of ~ rabbidv with disjoint variable condition replaced by nonfreeness hypothesis. (Contributed by BJ, 27-Apr-2019.)","origin":"thm bj-rabbid(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wceq(crab(s0, c0, w1), crab(s0, c0, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wb(w1, w2))\n} = {\n  bj-rabbida(s0, c0, w0, w1, w2)\n  adantr(w0, wcel(cv(s0), c0), wb(w1, w2))\n}","pretty":"thm bj-rabbid(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → { s0 ∈ c0 | w1 } = { s0 ∈ c0 | w2 })\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  bj-rabbida(s0, c0, w0, w1, w2)\n  adantr(w0, s0 ∈ c0, (w1 ↔ w2))\n}","parent":["bj-rabbida","adantr"],"children":["bj-rabeqbid","bj-seex"]},{"name":"bj-rabeqd","content":"Deduction form of ~ rabeq . Note that contrary to ~ rabeq it has no disjoint variable condition. (Contributed by BJ, 27-Apr-2019.)","origin":"thm bj-rabeqd(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wi(w0, wceq(crab(s0, c0, w1), crab(s0, c1, w1)))\n  -| wnf(s0, w0)\n  -| wi(w0, wceq(c0, c1))\n} = {\n  bj-rabbida2(s0, c0, c1, w0, w1, w1)\n  syl(w0, wb(wa(wcel(cv(s0), c0), w1), wa(wcel(cv(s0), c1), w1)), wceq(c0, c1))\n  anbi1d(wceq(c0, c1), wcel(cv(s0), c0), w1, wcel(cv(s0), c1))\n  eleq2(c0, c1, cv(s0))\n}","pretty":"thm bj-rabeqd(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ (w0 → { s0 ∈ c0 | w1 } = { s0 ∈ c1 | w1 })\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → c0 = c1)\n} = {\n  bj-rabbida2(s0, c0, c1, w0, w1, w1)\n  syl(w0, ((s0 ∈ c0 ∧ w1)↔(s0 ∈ c1 ∧ w1)), c0 = c1)\n  anbi1d(c0 = c1, s0 ∈ c0, w1, s0 ∈ c1)\n  eleq2(c0, c1, s0)\n}","parent":["bj-rabbida2","syl","anbi1d","eleq2"],"children":["bj-rabeqbid","bj-rabeqbida","bj-inrab2"]},{"name":"bj-rabeqbid","content":"Version of ~ rabeqbidv with two disjoint variable conditions removed and the third replaced by a nonfreeness hypothesis. (Contributed by BJ, 27-Apr-2019.)","origin":"thm bj-rabeqbid(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wceq(crab(s0, c0, w1), crab(s0, c1, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wceq(c0, c1))\n  -| wi(w0, wb(w1, w2))\n} = {\n  eqtrd(crab(s0, c0, w1), crab(s0, c1, w2), crab(s0, c1, w1), w0)\n  bj-rabeqd(s0, c0, c1, w0, w1)\n  bj-rabbid(s0, c1, w0, w1, w2)\n}","pretty":"thm bj-rabeqbid(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → { s0 ∈ c0 | w1 } = { s0 ∈ c1 | w2 })\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → c0 = c1)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  eqtrd({ s0 ∈ c0 | w1 }, { s0 ∈ c1 | w2 }, { s0 ∈ c1 | w1 }, w0)\n  bj-rabeqd(s0, c0, c1, w0, w1)\n  bj-rabbid(s0, c1, w0, w1, w2)\n}","parent":["eqtrd","bj-rabeqd","bj-rabbid"],"children":[]},{"name":"bj-rabeqbida","content":"Version of ~ rabeqbidva with two disjoint variable conditions removed and the third replaced by a nonfreeness hypothesis. (Contributed by BJ, 27-Apr-2019.)","origin":"thm bj-rabeqbida(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wceq(crab(s0, c0, w1), crab(s0, c1, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wceq(c0, c1))\n  -| wi(wa(w0, wcel(cv(s0), c0)), wb(w1, w2))\n} = {\n  eqtrd(crab(s0, c0, w1), crab(s0, c1, w2), crab(s0, c0, w2), w0)\n  bj-rabbida(s0, c0, w0, w1, w2)\n  bj-rabeqd(s0, c0, c1, w0, w2)\n}","pretty":"thm bj-rabeqbida(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → { s0 ∈ c0 | w1 } = { s0 ∈ c1 | w2 })\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → c0 = c1)\n  ⊣ ((w0 ∧ s0 ∈ c0)→(w1 ↔ w2))\n} = {\n  eqtrd({ s0 ∈ c0 | w1 }, { s0 ∈ c1 | w2 }, { s0 ∈ c0 | w2 }, w0)\n  bj-rabbida(s0, c0, w0, w1, w2)\n  bj-rabeqd(s0, c0, c1, w0, w2)\n}","parent":["eqtrd","bj-rabbida","bj-rabeqd"],"children":[]},{"name":"bj-seex","content":"Version of ~ seex with a disjoint variable condition replaced by a nonfreeness hypothesis (for the sake of illustration). (Contributed by BJ, 27-Apr-2019.)","origin":"thm bj-seex(setvar s0, class c0, class c1, class c2) {\n  |- wi(wa(wse(c0, c1), wcel(c2, c1)), wcel(crab(s0, c1, wbr(cv(s0), c0, c2)), universe))\n  -| wnfc(s0, c2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  sylanb(wse(c0, c1), wcel(c2, c1), wcel(crab(s0, c1, wbr(cv(s0), c0, c2)), universe), wral(hs0, c1, wcel(crab(s0, c1, wbr(cv(s0), c0, cv(hs0))), universe)))\n  df-se(hs0, s0, c0, c1)\n  rspccva(hs0, c1, c2, wcel(crab(s0, c1, wbr(cv(s0), c0, cv(hs0))), universe), wcel(crab(s0, c1, wbr(cv(s0), c0, c2)), universe))\n  eleq1d(crab(s0, c1, wbr(cv(s0), c0, cv(hs0))), universe, crab(s0, c1, wbr(cv(s0), c0, c2)), wceq(cv(hs0), c2))\n  bj-rabbid(s0, c1, wceq(cv(hs0), c2), wbr(cv(s0), c0, cv(hs0)), wbr(cv(s0), c0, c2))\n  nfeq2(s0, cv(hs0), c2)\n  breq2(cv(hs0), c2, cv(s0), c0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.w(wcel(crab(s0, c1, wbr(cv(s0), c0, c2)), universe))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm bj-seex(setvar s0, class c0, class c1, class c2) {\n  ⊢ ((c0[Se]c1 ∧ c2 ∈ c1)→ { s0 ∈ c1 | s0[c0]c2 } ∈ 𝕌)\n  ⊣ F/(s0, c2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  sylanb(c0[Se]c1, c2 ∈ c1, { s0 ∈ c1 | s0[c0]c2 } ∈ 𝕌, ∀(hs0 ∈ c1, { s0 ∈ c1 | s0[c0]hs0 } ∈ 𝕌))\n  df-se(hs0, s0, c0, c1)\n  rspccva(hs0, c1, c2, { s0 ∈ c1 | s0[c0]hs0 } ∈ 𝕌, { s0 ∈ c1 | s0[c0]c2 } ∈ 𝕌)\n  eleq1d({ s0 ∈ c1 | s0[c0]hs0 }, universe, { s0 ∈ c1 | s0[c0]c2 }, hs0 = c2)\n  bj-rabbid(s0, c1, hs0 = c2, s0[c0]hs0, s0[c0]c2)\n  nfeq2(s0, hs0, c2)\n  breq2(hs0, c2, s0, c0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.w({ s0 ∈ c1 | s0[c0]c2 } ∈ 𝕌)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["sylanb","df-se","rspccva","eleq1d","bj-rabbid","nfeq2","breq2","diff.hs0.c","diff.hs0.w","diff.cv.s","diffss.ex","diff.hs0.s"],"children":[]},{"name":"bj-nfcf","content":"Version of ~ df-nfc with a disjoint variable condition replaced with a nonfreeness hypothesis. (Contributed by BJ, 2-May-2019.)","origin":"thm bj-nfcf(setvar s0, setvar s1, class c0) {\n  |- wb(wnfc(s0, c0), wal(s1, wnf(s0, wcel(cv(s1), c0))))\n  -| wnfc(s1, c0)\n  -| diffss(s0, s1)\n} = {\n  bitri(wnfc(s0, c0), wal(s1, wnf(s0, wcel(cv(s1), c0))), wal(hs0, wnf(s0, wcel(cv(hs0), c0))))\n  df-nfc(s0, hs0, c0)\n  bitri(wal(hs0, wnf(s0, wcel(cv(hs0), c0))), wal(s1, wnf(s0, wcel(cv(s1), c0))), wal(s1, wsb(s1, hs0, wnf(s0, wcel(cv(hs0), c0)))))\n  sb8(hs0, s1, wnf(s0, wcel(cv(hs0), c0)))\n  nfnf(s1, s0, wcel(cv(hs0), c0))\n  nfcri(s1, hs0, c0)\n  albii(s1, wsb(s1, hs0, wnf(s0, wcel(cv(hs0), c0))), wnf(s0, wcel(cv(s1), c0)))\n  bitri(wsb(s1, hs0, wnf(s0, wcel(cv(hs0), c0))), wnf(s0, wcel(cv(s1), c0)), wnf(s0, wsb(s1, hs0, wcel(cv(hs0), c0))))\n  bj-sbnf(s1, hs0, s0, wcel(cv(hs0), c0))\n  nfbii(s0, wsb(s1, hs0, wcel(cv(hs0), c0)), wcel(cv(s1), c0))\n  clelsb3(s1, hs0, c0)\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s1, s0)\n  diff.hs0.s(s0)\n}","pretty":"thm bj-nfcf(setvar s0, setvar s1, class c0) {\n  ⊢ (F/(s0, c0)↔ ∀(s1, F/(s0, s1 ∈ c0)))\n  ⊣ F/(s1, c0)\n  ⊣ d(s0, s1)\n} = {\n  bitri(F/(s0, c0), ∀(s1, F/(s0, s1 ∈ c0)), ∀(hs0, F/(s0, hs0 ∈ c0)))\n  df-nfc(s0, hs0, c0)\n  bitri(∀(hs0, F/(s0, hs0 ∈ c0)), ∀(s1, F/(s0, s1 ∈ c0)), ∀(s1,[s1 / hs0]F/(s0, hs0 ∈ c0)))\n  sb8(hs0, s1, F/(s0, hs0 ∈ c0))\n  nfnf(s1, s0, hs0 ∈ c0)\n  nfcri(s1, hs0, c0)\n  albii(s1, [s1 / hs0]F/(s0, hs0 ∈ c0), F/(s0, s1 ∈ c0))\n  bitri([s1 / hs0]F/(s0, hs0 ∈ c0), F/(s0, s1 ∈ c0), F/(s0,[s1 / hs0]hs0 ∈ c0))\n  bj-sbnf(s1, hs0, s0, hs0 ∈ c0)\n  nfbii(s0, [s1 / hs0]hs0 ∈ c0, s1 ∈ c0)\n  clelsb3(s1, hs0, c0)\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s1, s0)\n  diff.hs0.s(s0)\n}","parent":["bitri","df-nfc","sb8","nfnf","nfcri","albii","bj-sbnf","nfbii","clelsb3","diffss.ex","diff.hs0.c","diff.hs0.s"],"children":[]},{"name":"bj-axsep2","content":"Remove dependency on ~ ax-12 and ~ ax-13 from ~ axsep2 while shortening its proof. (Contributed by BJ, 6-Oct-2019.) (Proof modification is discouraged.)","origin":"thm bj-axsep2(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s0, w0)\n} = {\n  bj-chvarvv(hs0, s2, wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)))))\n  exbidv(s0, wceq(cv(hs0), cv(s2)), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0))))\n  albidv(s1, wceq(cv(hs0), cv(s2)), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))\n  bibi2d(wceq(cv(hs0), cv(s2)), wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0), wa(wcel(cv(s1), cv(s2)), w0))\n  anbi1d(wceq(cv(hs0), cv(s2)), wcel(cv(s1), cv(hs0)), w0, wcel(cv(s1), cv(s2)))\n  elequ2(hs0, s2, s1)\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.s(s2)\n  diff.hs0.w(wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))))\n  diff.wceq.s(s0, cv(hs0), cv(s2))\n  diff.cv.s(s0, hs0)\n  diff.cv.s(s0, s2)\n  diff.wceq.s(s1, cv(hs0), cv(s2))\n  diff.cv.s(s1, hs0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","pretty":"thm bj-axsep2(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, w0)\n} = {\n  bj-chvarvv(hs0, s2, ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))), ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)))))\n  exbidv(s0, hs0 = s2, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0))), ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0))))\n  albidv(s1, hs0 = s2, (s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)), (s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))\n  bibi2d(hs0 = s2, s1 ∈ s0, (s1 ∈ hs0 ∧ w0), (s1 ∈ s2 ∧ w0))\n  anbi1d(hs0 = s2, s1 ∈ hs0, w0, s1 ∈ s2)\n  elequ2(hs0, s2, s1)\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.s(s2)\n  diff.hs0.w(∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))))\n  diff.wceq.s(s0, hs0, s2)\n  diff.cv.s(s0, hs0)\n  diff.cv.s(s0, s2)\n  diff.wceq.s(s1, hs0, s2)\n  diff.cv.s(s1, hs0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","parent":["bj-chvarvv","exbidv","albidv","bibi2d","anbi1d","elequ2","ax-sep","diff.hs0.s","diff.hs0.w","diff.wceq.s","diff.cv.s","diffss.ex"],"children":[]},{"name":"bj-zfauscl","content":"General version of ~ zfauscl , removing dependency on ~ ax-12 and ~ df-clab (and ~ df-tru , ~ df-sb , ~ df-v ). Remark: the comment in ~ zfauscl is misleading: the essential use of ~ ax-ext is the one via ~ eleq2 and not the one via ~ vtocl , since the latter can be proved without ~ ax-ext (see ~ bj-vtoclg ). (Contributed by BJ, 2-Jul-2022.) (Proof modification is discouraged.)","origin":"thm bj-zfauscl(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wi(wcel(c0, c1), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsw(s0, w0)\n} = {\n  bj-vtoclg(hs0, c0, c1, wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)))))\n  eximdv(s0, wceq(cv(hs0), c0), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0))))\n  alimdv(s1, wceq(cv(hs0), c0), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))\n  biimpd(wceq(cv(hs0), c0), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))\n  bibi2d(wceq(cv(hs0), c0), wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0), wa(wcel(cv(s1), c0), w0))\n  anbi1d(wceq(cv(hs0), c0), wcel(cv(s1), cv(hs0)), w0, wcel(cv(s1), c0))\n  eleq2(cv(hs0), c0, cv(s1))\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.w(wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diff.wceq.s(s1, cv(hs0), c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","pretty":"thm bj-zfauscl(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (c0 ∈ c1 → ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s0, w0)\n} = {\n  bj-vtoclg(hs0, c0, c1, ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))), ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)))))\n  eximdv(s0, hs0 = c0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0))), ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0))))\n  alimdv(s1, hs0 = c0, (s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)), (s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))\n  biimpd(hs0 = c0, (s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)), (s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))\n  bibi2d(hs0 = c0, s1 ∈ s0, (s1 ∈ hs0 ∧ w0), (s1 ∈ c0 ∧ w0))\n  anbi1d(hs0 = c0, s1 ∈ hs0, w0, s1 ∈ c0)\n  eleq2(hs0, c0, s1)\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.w(∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diff.wceq.s(s1, hs0, c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","parent":["bj-vtoclg","eximdv","alimdv","biimpd","bibi2d","anbi1d","eleq2","ax-sep","diff.hs0.c","diff.hs0.w","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":[]}]}