{"index":63,"title":"Axiom scheme ax-11 (Quantifier Commutation)","content":"","blocks":[{"name":"ax-11","content":"Axiom of Quantifier Commutation. This axiom says universal quantifiers can be swapped. Axiom scheme C6' in [Megill] p. 448 (p. 16 of the preprint). Also appears as Lemma 12 of [Monk2] p. 109 and Axiom C5-3 of [Monk2] p. 113. This axiom scheme is logically redundant (see ~ ax11w ) but is used as an auxiliary axiom scheme to achieve metalogical completeness. (Contributed by NM, 12-Mar-1993.)","origin":"axiom ax-11(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wal(s1, w0)), wal(s1, wal(s0, w0)))\n}","pretty":"axiom ax-11(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, ∀(s1, w0))→ ∀(s1, ∀(s0, w0)))\n}","parent":[],"children":["alcoms","alcom","hbal","hbald","nfald","hbae","hbaltg","bj-hbalt","bj-nnflemaa","hbae-o","axc711","axc5c711","ax12indalem","ax12inda2ALT","pm11.71","axc5c4c711","axc11next","hbalg","hbalgVD","hbexgVD"]},{"name":"alcoms","content":"Swap quantifiers in an antecedent. (Contributed by NM, 11-May-1993.)","origin":"thm alcoms(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, wal(s1, w0)), w1)\n  -| wi(wal(s1, wal(s0, w0)), w1)\n} = {\n  syl(wal(s0, wal(s1, w0)), w1, wal(s1, wal(s0, w0)))\n  ax-11(s0, s1, w0)\n}","pretty":"thm alcoms(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, ∀(s1, w0))→ w1)\n  ⊣ (∀(s1, ∀(s0, w0))→ w1)\n} = {\n  syl(∀(s0, ∀(s1, w0)), w1, ∀(s1, ∀(s0, w0)))\n  ax-11(s0, s1, w0)\n}","parent":["syl","ax-11"],"children":["cbv2h","mo3","mo3OLD","bj-nfalt","bj-cbv3ta","bj-cbv2hv","wl-equsal1i","wl-mo3t","axc11n-16","axc11next"]},{"name":"alcom","content":"Theorem 19.5 of [Margaris] p. 89. (Contributed by NM, 30-Jun-1993.)","origin":"thm alcom(setvar s0, setvar s1, wff w0) {\n  |- wb(wal(s0, wal(s1, w0)), wal(s1, wal(s0, w0)))\n} = {\n  impbii(wal(s0, wal(s1, w0)), wal(s1, wal(s0, w0)))\n  ax-11(s0, s1, w0)\n  ax-11(s1, s0, w0)\n}","pretty":"thm alcom(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, ∀(s1, w0))↔ ∀(s1, ∀(s0, w0)))\n} = {\n  impbii(∀(s0, ∀(s1, w0)), ∀(s1, ∀(s0, w0)))\n  ax-11(s0, s1, w0)\n  ax-11(s1, s0, w0)\n}","parent":["impbii","ax-11"],"children":["alrot3","excom","nfa2","sbnf2","sbcom2","sbcom2OLD","sbal1","sbal2","sbal2OLD","nexmoOLD","2mo2","ralcomf","ralcom","unissb","dfiin2g","dftr5","cotrg","cnvsym","dffun2","fun11","aceq1","isch2","moel","dfon2lem8","bj-hbaeb","bj-ralcom4","wl-sbcom2d","wl-sbalnae","wl-2spsbbi","wl-dfralflem","cocossss","cossssid3","trcoss2","dford4","elmapintrab","undmrnresiss","cnvssco","elintima","relexp0eq","dfhe3","dffrege115","hbexg","hbexgVD","dfich2ai"]},{"name":"alrot3","content":"Theorem *11.21 in [WhiteheadRussell] p. 160. (Contributed by Andrew Salmon, 24-May-2011.)","origin":"thm alrot3(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wb(wal(s0, wal(s1, wal(s2, w0))), wal(s1, wal(s2, wal(s0, w0))))\n} = {\n  bitri(wal(s0, wal(s1, wal(s2, w0))), wal(s1, wal(s2, wal(s0, w0))), wal(s1, wal(s0, wal(s2, w0))))\n  alcom(s0, s1, wal(s2, w0))\n  albii(s1, wal(s0, wal(s2, w0)), wal(s2, wal(s0, w0)))\n  alcom(s0, s2, w0)\n}","pretty":"thm alrot3(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (∀(s0, ∀(s1, ∀(s2, w0)))↔ ∀(s1, ∀(s2, ∀(s0, w0))))\n} = {\n  bitri(∀(s0, ∀(s1, ∀(s2, w0))), ∀(s1, ∀(s2, ∀(s0, w0))), ∀(s1, ∀(s0, ∀(s2, w0))))\n  alcom(s0, s1, ∀(s2, w0))\n  albii(s1, ∀(s0, ∀(s2, w0)), ∀(s2, ∀(s0, w0)))\n  alcom(s0, s2, w0)\n}","parent":["bitri","alcom","albii"],"children":["alrot4","nfnid","raliunxp","dff13","cosscnvssid3","undmrnresiss","ntrneikb","ntrneixb"]},{"name":"alrot4","content":"Rotate four universal quantifiers twice. (Contributed by NM, 2-Feb-2005.) (Proof shortened by Fan Zheng, 6-Jun-2016.)","origin":"thm alrot4(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  |- wb(wal(s0, wal(s1, wal(s2, wal(s3, w0)))), wal(s2, wal(s3, wal(s0, wal(s1, w0)))))\n} = {\n  bitri(wal(s0, wal(s1, wal(s2, wal(s3, w0)))), wal(s2, wal(s3, wal(s0, wal(s1, w0)))), wal(s0, wal(s2, wal(s3, wal(s1, w0)))))\n  albii(s0, wal(s1, wal(s2, wal(s3, w0))), wal(s2, wal(s3, wal(s1, w0))))\n  alrot3(s1, s2, s3, w0)\n  alrot3(s0, s2, s3, wal(s1, w0))\n}","pretty":"thm alrot4(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  ⊢ (∀(s0, ∀(s1, ∀(s2, ∀(s3, w0))))↔ ∀(s2, ∀(s3, ∀(s0, ∀(s1, w0)))))\n} = {\n  bitri(∀(s0, ∀(s1, ∀(s2, ∀(s3, w0)))), ∀(s2, ∀(s3, ∀(s0, ∀(s1, w0)))), ∀(s0, ∀(s2, ∀(s3, ∀(s1, w0)))))\n  albii(s0, ∀(s1, ∀(s2, ∀(s3, w0))), ∀(s2, ∀(s3, ∀(s1, w0))))\n  alrot3(s1, s2, s3, w0)\n  alrot3(s0, s2, s3, ∀(s1, w0))\n}","parent":["bitri","albii","alrot3"],"children":["2mo","fun11"]},{"name":"excom","content":"Theorem 19.11 of [Margaris] p. 89. (Contributed by NM, 5-Aug-1993.) Remove dependencies on ~ ax-5 , ~ ax-6 , ~ ax-7 , ~ ax-10 , ~ ax-12 . (Revised by Wolf Lammen, 8-Jan-2018.) (Proof shortened by Wolf Lammen, 22-Aug-2020.)","origin":"thm excom(setvar s0, setvar s1, wff w0) {\n  |- wb(wex(s0, wex(s1, w0)), wex(s1, wex(s0, w0)))\n} = {\n  3bitr4i(wex(s0, wex(s1, w0)), wex(s1, wex(s0, w0)), wn(wal(s0, wal(s1, wn(w0)))), wn(wal(s1, wal(s0, wn(w0)))))\n  notbii(wal(s0, wal(s1, wn(w0))), wal(s1, wal(s0, wn(w0))))\n  alcom(s0, s1, wn(w0))\n  2exnaln(s0, s1, w0)\n  2exnaln(s1, s0, w0)\n}","pretty":"thm excom(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0, ∃(s1, w0))↔ ∃(s1, ∃(s0, w0)))\n} = {\n  3bitr4i(∃(s0, ∃(s1, w0)), ∃(s1, ∃(s0, w0)), ¬ ∀(s0, ∀(s1, ¬ w0)), ¬ ∀(s1, ∀(s0, ¬ w0)))\n  notbii(∀(s0, ∀(s1, ¬ w0)), ∀(s1, ∀(s0, ¬ w0)))\n  alcom(s0, s1, ¬ w0)\n  2exnaln(s0, s1, w0)\n  2exnaln(s1, s0, w0)\n}","parent":["3bitr4i","notbii","alcom","2exnaln"],"children":["excomim","excom13","exrot3","ee4anv","2sb8ev","2sb8evOLD","sbel2x","2sb8e","2euex","2eu4","rexcomf","rexcom","gencbvex","euind","sbccomlem","opelopabsbALT","elvvv","dmuni","dm0rn0","dmcosseq","elresOLD","rnco","coass","oprabid","dfoprab2","uniuni","opabex3d","opabex3","frxp","domen","xpassen","scott0","dfac5lem1","dfac5lem4","cflem","ltexprlem1","ltexprlem4","fsumcom2","fprodcom2","gsumval3eu","dprd2d2","cnvoprabOLD","eldm3","dfdm5","dfrn5","elfuns","dfiota3","brimg","funpartlem","bj-rexcom4","bj-19.12","bj-nnflemee","bj-restuni","sbccom2lem","diblsmopel","dicelval3","dihjatcclem4","pm11.6","ax6e2ndeq","e2ebind","ax6e2ndeqVD","e2ebindVD","e2ebindALT","ax6e2ndeqALT","ichexmpl1","elsprel","eliunxp2"]},{"name":"excomim","content":"One direction of Theorem 19.11 of [Margaris] p. 89. (Contributed by NM, 5-Aug-1993.) (Revised by Mario Carneiro, 24-Sep-2016.) Remove dependencies on ~ ax-5 , ~ ax-6 , ~ ax-7 , ~ ax-10 , ~ ax-12 . (Revised by Wolf Lammen, 8-Jan-2018.)","origin":"thm excomim(setvar s0, setvar s1, wff w0) {\n  |- wi(wex(s0, wex(s1, w0)), wex(s1, wex(s0, w0)))\n} = {\n  biimpi(wex(s0, wex(s1, w0)), wex(s1, wex(s0, w0)))\n  excom(s0, s1, w0)\n}","pretty":"thm excomim(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0, ∃(s1, w0))→ ∃(s1, ∃(s0, w0)))\n} = {\n  biimpi(∃(s0, ∃(s1, w0)), ∃(s1, ∃(s0, w0)))\n  excom(s0, s1, w0)\n}","parent":["biimpi","excom"],"children":["2euswap","relopabi","ax6e2eq","ax6e2nd","ax6e2eqVD","ax6e2ndVD","ax6e2ndALT"]},{"name":"excom13","content":"Swap 1st and 3rd existential quantifiers. (Contributed by NM, 9-Mar-1995.)","origin":"thm excom13(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wb(wex(s0, wex(s1, wex(s2, w0))), wex(s2, wex(s1, wex(s0, w0))))\n} = {\n  3bitri(wex(s0, wex(s1, wex(s2, w0))), wex(s2, wex(s1, wex(s0, w0))), wex(s1, wex(s0, wex(s2, w0))), wex(s1, wex(s2, wex(s0, w0))))\n  excom(s0, s1, wex(s2, w0))\n  exbii(s1, wex(s0, wex(s2, w0)), wex(s2, wex(s0, w0)))\n  excom(s0, s2, w0)\n  excom(s1, s2, wex(s0, w0))\n}","pretty":"thm excom13(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (∃(s0, ∃(s1, ∃(s2, w0)))↔ ∃(s2, ∃(s1, ∃(s0, w0))))\n} = {\n  3bitri(∃(s0, ∃(s1, ∃(s2, w0))), ∃(s2, ∃(s1, ∃(s0, w0))), ∃(s1, ∃(s0, ∃(s2, w0))), ∃(s1, ∃(s2, ∃(s0, w0))))\n  excom(s0, s1, ∃(s2, w0))\n  exbii(s1, ∃(s0, ∃(s2, w0)), ∃(s2, ∃(s0, w0)))\n  excom(s0, s2, w0)\n  excom(s1, s2, ∃(s0, w0))\n}","parent":["3bitri","excom","exbii"],"children":["exrot3","exrot4","euotd","elfuns"]},{"name":"exrot3","content":"Rotate existential quantifiers. (Contributed by NM, 17-Mar-1995.)","origin":"thm exrot3(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wb(wex(s0, wex(s1, wex(s2, w0))), wex(s1, wex(s2, wex(s0, w0))))\n} = {\n  bitri(wex(s0, wex(s1, wex(s2, w0))), wex(s1, wex(s2, wex(s0, w0))), wex(s2, wex(s1, wex(s0, w0))))\n  excom13(s0, s1, s2, w0)\n  excom(s2, s1, wex(s0, w0))\n}","pretty":"thm exrot3(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (∃(s0, ∃(s1, ∃(s2, w0)))↔ ∃(s1, ∃(s2, ∃(s0, w0))))\n} = {\n  bitri(∃(s0, ∃(s1, ∃(s2, w0))), ∃(s1, ∃(s2, ∃(s0, w0))), ∃(s2, ∃(s1, ∃(s0, w0))))\n  excom13(s0, s1, s2, w0)\n  excom(s2, s1, ∃(s0, w0))\n}","parent":["bitri","excom13","excom"],"children":["opabn0","dmoprab","rnoprab","xpassen","cnvoprabOLD","elima4","brimg","ellines","rnxrn"]},{"name":"exrot4","content":"Rotate existential quantifiers twice. (Contributed by NM, 9-Mar-1995.)","origin":"thm exrot4(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  |- wb(wex(s0, wex(s1, wex(s2, wex(s3, w0)))), wex(s2, wex(s3, wex(s0, wex(s1, w0)))))\n} = {\n  bitri(wex(s0, wex(s1, wex(s2, wex(s3, w0)))), wex(s2, wex(s3, wex(s0, wex(s1, w0)))), wex(s0, wex(s3, wex(s2, wex(s1, w0)))))\n  exbii(s0, wex(s1, wex(s2, wex(s3, w0))), wex(s3, wex(s2, wex(s1, w0))))\n  excom13(s1, s2, s3, w0)\n  excom13(s0, s3, s2, wex(s1, w0))\n}","pretty":"thm exrot4(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  ⊢ (∃(s0, ∃(s1, ∃(s2, ∃(s3, w0))))↔ ∃(s2, ∃(s3, ∃(s0, ∃(s1, w0)))))\n} = {\n  bitri(∃(s0, ∃(s1, ∃(s2, ∃(s3, w0)))), ∃(s2, ∃(s3, ∃(s0, ∃(s1, w0)))), ∃(s0, ∃(s3, ∃(s2, ∃(s1, w0)))))\n  exbii(s0, ∃(s1, ∃(s2, ∃(s3, w0))), ∃(s3, ∃(s2, ∃(s1, w0))))\n  excom13(s1, s2, s3, w0)\n  excom13(s0, s3, s2, ∃(s1, w0))\n}","parent":["bitri","exbii","excom13"],"children":["elvvv","dfoprab2","xpassen","5oalem7","elfuns"]},{"name":"hbal","content":"If ` x ` is not free in ` ph ` , it is not free in ` A. y ph ` . (Contributed by NM, 12-Mar-1993.)","origin":"thm hbal(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, w0), wal(s1, wal(s0, w0)))\n  -| wi(w0, wal(s1, w0))\n} = {\n  syl(wal(s0, w0), wal(s1, wal(s0, w0)), wal(s0, wal(s1, w0)))\n  alimi(s0, w0, wal(s1, w0))\n  ax-11(s0, s1, w0)\n}","pretty":"thm hbal(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, w0)→ ∀(s1, ∀(s0, w0)))\n  ⊣ (w0 → ∀(s1, w0))\n} = {\n  syl(∀(s0, w0), ∀(s1, ∀(s0, w0)), ∀(s0, ∀(s1, w0)))\n  alimi(s0, w0, ∀(s1, w0))\n  ax-11(s0, s1, w0)\n}","parent":["syl","alimi","ax-11"],"children":["nfal","cbv3v","cbv3","cbvalv","hbral","wl-nfalv"]},{"name":"hbald","content":"Deduction form of bound-variable hypothesis builder ~ hbal . (Contributed by NM, 2-Jan-2002.)","origin":"thm hbald(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wi(wal(s0, w1), wal(s1, wal(s0, w1))))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w0, wi(w1, wal(s1, w1)))\n} = {\n  syl6(w0, wal(s0, w1), wal(s1, wal(s0, w1)), wal(s0, wal(s1, w1)))\n  alimdh(s0, w0, w1, wal(s1, w1))\n  ax-11(s0, s1, w1)\n}","pretty":"thm hbald(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 →(∀(s0, w1)→ ∀(s1, ∀(s0, w1))))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w0 →(w1 → ∀(s1, w1)))\n} = {\n  syl6(w0, ∀(s0, w1), ∀(s1, ∀(s0, w1)), ∀(s0, ∀(s1, w1)))\n  alimdh(s0, w0, w1, ∀(s1, w1))\n  ax-11(s0, s1, w1)\n}","parent":["syl6","alimdh","ax-11"],"children":["dvelimf-o"]},{"name":"nfa2","content":"Lemma 24 of [Monk2] p. 114. (Contributed by Mario Carneiro, 24-Sep-2016.) Remove dependency on ~ ax-12 . (Revised by Wolf Lammen, 18-Oct-2021.)","origin":"thm nfa2(setvar s0, setvar s1, wff w0) {\n  |- wnf(s0, wal(s1, wal(s0, w0)))\n} = {\n  nfxfr(s0, wal(s1, wal(s0, w0)), wal(s0, wal(s1, w0)))\n  alcom(s1, s0, w0)\n  nfa1(s0, wal(s1, w0))\n}","pretty":"thm nfa2(setvar s0, setvar s1, wff w0) {\n  ⊢ F/(s0, ∀(s1, ∀(s0, w0)))\n} = {\n  nfxfr(s0, ∀(s1, ∀(s0, w0)), ∀(s0, ∀(s1, w0)))\n  alcom(s1, s0, w0)\n  nfa1(s0, ∀(s1, w0))\n}","parent":["nfxfr","alcom","nfa1"],"children":["cbv1h","csbie2t","copsex2t","fnoprabg","bj-hbext","bj-nfext","bj-cbv1hv","ax11-pm","pm14.123b","hbexg","dfich2bi"]}]}