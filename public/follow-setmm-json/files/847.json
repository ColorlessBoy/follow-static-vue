{"index":847,"title":"Substitution (without distinct variables) - misc additions","content":"","blocks":[{"name":"sbceqbidf","content":"Equality theorem for class substitution. (Contributed by Thierry Arnoux, 4-Sep-2018.)","origin":"thm sbceqbidf(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wsbc(s0, c0, w1), wsbc(s0, c1, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wceq(c0, c1))\n  -| wi(w0, wb(w1, w2))\n} = {\n  3bitr4g(w0, wsbc(s0, c0, w1), wsbc(s0, c1, w2), wcel(c0, cab(s0, w1)), wcel(c1, cab(s0, w2)))\n  eleq12d(c0, cab(s0, w1), c1, cab(s0, w2), w0)\n  abbid(s0, w0, w1, w2)\n  df-sbc(s0, c0, w1)\n  df-sbc(s0, c1, w2)\n}","pretty":"thm sbceqbidf(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →([c0 / s0]w1 ↔[c1 / s0]w2))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → c0 = c1)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  3bitr4g(w0, [c0 / s0]w1, [c1 / s0]w2, c0 ∈ { s0 | w1 }, c1 ∈ { s0 | w2 })\n  eleq12d(c0, { s0 | w1 }, c1, { s0 | w2 }, w0)\n  abbid(s0, w0, w1, w2)\n  df-sbc(s0, c0, w1)\n  df-sbc(s0, c1, w2)\n}","parent":["3bitr4g","eleq12d","abbid","df-sbc"],"children":[]},{"name":"sbcies","content":"A special version of class substitution commonly used for structures. (Contributed by Thierry Arnoux, 14-Mar-2019.)","origin":"thm sbcies(setvar s0, setvar s1, class c0, class c1, class c2, wff w0, wff w1) {\n  |- wi(wceq(cv(s0), c0), wb(wsbc(s1, cfv(c1, cv(s0)), w0), w1))\n  -| wceq(c2, cfv(c1, c0))\n  -| wi(wceq(cv(s1), c2), wb(w1, w0))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsw(s1, w1)\n} = {\n  sbcied(s1, cfv(c1, cv(s0)), universe, wceq(cv(s0), c0), w0, w1)\n  fvexd(c1, cv(s0), wceq(cv(s0), c0))\n  bicomd(wa(wceq(cv(s0), c0), wceq(cv(s1), cfv(c1, cv(s0)))), w0, w1)\n  syl(wa(wceq(cv(s0), c0), wceq(cv(s1), cfv(c1, cv(s0)))), wb(w1, w0), wceq(cv(s1), c2))\n  eqtr4d(cv(s1), c2, cfv(c1, cv(s0)), wa(wceq(cv(s0), c0), wceq(cv(s1), cfv(c1, cv(s0)))))\n  simpr(wceq(cv(s0), c0), wceq(cv(s1), cfv(c1, cv(s0))))\n  adantr(wceq(cv(s0), c0), wceq(cv(s1), cfv(c1, cv(s0))), wceq(c2, cfv(c1, cv(s0))))\n  syl6reqr(c2, cfv(c1, cv(s0)), cfv(c1, c0), wceq(cv(s0), c0))\n  fveq2(cv(s0), c0, c1)\n  diff.cfv.s(s1, c1, cv(s0))\n  diff.wceq.s(s1, cv(s0), c0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm sbcies(setvar s0, setvar s1, class c0, class c1, class c2, wff w0, wff w1) {\n  ⊢ (s0 = c0 →([(c1 ` s0)/ s1]w0 ↔ w1))\n  ⊣ c2 =(c1 ` c0)\n  ⊣ (s1 = c2 →(w1 ↔ w0))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, w1)\n} = {\n  sbcied(s1, (c1 ` s0), universe, s0 = c0, w0, w1)\n  fvexd(c1, s0, s0 = c0)\n  bicomd((s0 = c0 ∧ s1 =(c1 ` s0)), w0, w1)\n  syl((s0 = c0 ∧ s1 =(c1 ` s0)), (w1 ↔ w0), s1 = c2)\n  eqtr4d(s1, c2, (c1 ` s0), (s0 = c0 ∧ s1 =(c1 ` s0)))\n  simpr(s0 = c0, s1 =(c1 ` s0))\n  adantr(s0 = c0, s1 =(c1 ` s0), c2 =(c1 ` s0))\n  syl6reqr(c2, (c1 ` s0), (c1 ` c0), s0 = c0)\n  fveq2(s0, c0, c1)\n  diff.cfv.s(s1, c1, s0)\n  diff.wceq.s(s1, s0, c0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["sbcied","fvexd","bicomd","syl","eqtr4d","simpr","adantr","syl6reqr","fveq2","diff.cfv.s","diff.wceq.s","diff.cv.s","diffss.ex"],"children":[]}]}