{"index":1218,"title":"Preparatory theorems","content":"","blocks":[{"name":"diff.weldisj.s","content":"","origin":"axiom diff.weldisj.s(setvar sBase, class c0) {\n  |- diffsw(sBase, weldisj(c0))\n  -| diffsc(sBase, c0)\n}","pretty":"axiom diff.weldisj.s(setvar sBase, class c0) {\n  ⊢ d(sBase, ElDisj(c0))\n  ⊣ d(sBase, c0)\n}","parent":[],"children":[]},{"name":"diff.weldisj.c","content":"","origin":"axiom diff.weldisj.c(class cBase, class c0) {\n  |- diffcw(cBase, weldisj(c0))\n  -| diffcc(cBase, c0)\n}","pretty":"axiom diff.weldisj.c(class cBase, class c0) {\n  ⊢ d(cBase, ElDisj(c0))\n  ⊣ d(cBase, c0)\n}","parent":[],"children":[]},{"name":"diff.weldisj.w","content":"","origin":"axiom diff.weldisj.w(wff wBase, class c0) {\n  |- diffww(wBase, weldisj(c0))\n  -| diffcw(c0, wBase)\n}","pretty":"axiom diff.weldisj.w(wff wBase, class c0) {\n  ⊢ d(wBase, ElDisj(c0))\n  ⊣ d(c0, wBase)\n}","parent":[],"children":[]},{"name":"el2v1","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. (Contributed by Peter Mazsa, 23-Oct-2018.)","origin":"thm el2v1(setvar s0, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(wa(wcel(cv(s0), universe), w0), w1)\n} = {\n  mpan(w0, w1, wcel(cv(s0), universe))\n  vex(s0)\n}","pretty":"thm el2v1(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ ((s0 ∈ 𝕌 ∧ w0)→ w1)\n} = {\n  mpan(w0, w1, s0 ∈ 𝕌)\n  vex(s0)\n}","parent":["mpan","vex"],"children":["el3v12","el3v13","exan3","exanres3","ecin0","eldm1cossres2","brcosscnv","eqvrelqsel"]},{"name":"el3v","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. Inference forms (with ` |- A e. _V ` , ` |- B e. _V ` and ` |- C e. _V ` hypotheses) of the general theorems (proving ` |- ( ( A e. V /\\ B e. W /\\ C e. X ) -> ` assertions) may be superfluous. (Contributed by Peter Mazsa, 13-Oct-2018.)","origin":"thm el3v(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- w0\n  -| wi(w3a(wcel(cv(s0), universe), wcel(cv(s1), universe), wcel(cv(s2), universe)), w0)\n} = {\n  mp3an(w0, wcel(cv(s0), universe), wcel(cv(s1), universe), wcel(cv(s2), universe))\n  vex(s0)\n  vex(s1)\n  vex(s2)\n}","pretty":"thm el3v(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ w0\n  ⊣ ((s0 ∈ 𝕌 ∧ s1 ∈ 𝕌 ∧ s2 ∈ 𝕌)→ w0)\n} = {\n  mp3an(w0, s0 ∈ 𝕌, s1 ∈ 𝕌, s2 ∈ 𝕌)\n  vex(s0)\n  vex(s1)\n  vex(s2)\n}","parent":["mp3an","vex"],"children":["dfxrn2"]},{"name":"el3v1","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. (Contributed by Peter Mazsa, 16-Oct-2020.)","origin":"thm el3v1(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wa(w0, w1), w2)\n  -| wi(w3a(wcel(cv(s0), universe), w0, w1), w2)\n} = {\n  mp3an1(w0, w1, w2, wcel(cv(s0), universe))\n  vex(s0)\n}","pretty":"thm el3v1(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ ((w0 ∧ w1)→ w2)\n  ⊣ ((s0 ∈ 𝕌 ∧ w0 ∧ w1)→ w2)\n} = {\n  mp3an1(w0, w1, w2, s0 ∈ 𝕌)\n  vex(s0)\n}","parent":["mp3an1","vex"],"children":["el3v12","br1cossxrnres"]},{"name":"el3v2","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. (Contributed by Peter Mazsa, 16-Oct-2020.)","origin":"thm el3v2(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wa(w0, w1), w2)\n  -| wi(w3a(w0, wcel(cv(s0), universe), w1), w2)\n} = {\n  mp3an2(w0, w1, w2, wcel(cv(s0), universe))\n  vex(s0)\n}","pretty":"thm el3v2(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ ((w0 ∧ w1)→ w2)\n  ⊣ ((w0 ∧ s0 ∈ 𝕌 ∧ w1)→ w2)\n} = {\n  mp3an2(w0, w1, w2, s0 ∈ 𝕌)\n  vex(s0)\n}","parent":["mp3an2","vex"],"children":[]},{"name":"el3v3","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. (Contributed by Peter Mazsa, 16-Oct-2020.)","origin":"thm el3v3(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wa(w0, w1), w2)\n  -| wi(w3a(w0, w1, wcel(cv(s0), universe)), w2)\n} = {\n  mp3an3(w0, w1, w2, wcel(cv(s0), universe))\n  vex(s0)\n}","pretty":"thm el3v3(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ ((w0 ∧ w1)→ w2)\n  ⊣ ((w0 ∧ w1 ∧ s0 ∈ 𝕌)→ w2)\n} = {\n  mp3an3(w0, w1, w2, s0 ∈ 𝕌)\n  vex(s0)\n}","parent":["mp3an3","vex"],"children":["el3v13","el3v23"]},{"name":"el3v12","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. (Contributed by Peter Mazsa, 11-Jul-2021.)","origin":"thm el3v12(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(w3a(wcel(cv(s0), universe), wcel(cv(s1), universe), w0), w1)\n} = {\n  el2v1(s1, w0, w1)\n  el3v1(s0, wcel(cv(s1), universe), w0, w1)\n}","pretty":"thm el3v12(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ ((s0 ∈ 𝕌 ∧ s1 ∈ 𝕌 ∧ w0)→ w1)\n} = {\n  el2v1(s1, w0, w1)\n  el3v1(s0, s1 ∈ 𝕌, w0, w1)\n}","parent":["el2v1","el3v1"],"children":[]},{"name":"el3v13","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. (Contributed by Peter Mazsa, 11-Jul-2021.)","origin":"thm el3v13(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(w3a(wcel(cv(s0), universe), w0, wcel(cv(s1), universe)), w1)\n} = {\n  el2v1(s0, w0, w1)\n  el3v3(s1, wcel(cv(s0), universe), w0, w1)\n}","pretty":"thm el3v13(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ ((s0 ∈ 𝕌 ∧ w0 ∧ s1 ∈ 𝕌)→ w1)\n} = {\n  el2v1(s0, w0, w1)\n  el3v3(s1, s0 ∈ 𝕌, w0, w1)\n}","parent":["el2v1","el3v3"],"children":[]},{"name":"el3v23","content":"New way ( ~ elv , and the theorems beginning with \"el2v\" or \"el3v\") to shorten some proofs. (Contributed by Peter Mazsa, 11-Jul-2021.)","origin":"thm el3v23(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(w3a(w0, wcel(cv(s0), universe), wcel(cv(s1), universe)), w1)\n} = {\n  elvd(s0, w0, w1)\n  el3v3(s1, w0, wcel(cv(s0), universe), w1)\n}","pretty":"thm el3v23(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ ((w0 ∧ s0 ∈ 𝕌 ∧ s1 ∈ 𝕌)→ w1)\n} = {\n  elvd(s0, w0, w1)\n  el3v3(s1, w0, s0 ∈ 𝕌, w1)\n}","parent":["elvd","el3v3"],"children":["brxrn2"]},{"name":"an2anr","content":"Double commutation in conjunction. (Contributed by Peter Mazsa, 27-Jun-2019.)","origin":"thm an2anr(wff w0, wff w1, wff w2, wff w3) {\n  |- wb(wa(wa(w0, w1), wa(w2, w3)), wa(wa(w1, w0), wa(w3, w2)))\n} = {\n  anbi12i(wa(w0, w1), wa(w2, w3), wa(w1, w0), wa(w3, w2))\n  ancom(w0, w1)\n  ancom(w2, w3)\n}","pretty":"thm an2anr(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (((w0 ∧ w1)∧(w2 ∧ w3))↔((w1 ∧ w0)∧(w3 ∧ w2)))\n} = {\n  anbi12i((w0 ∧ w1), (w2 ∧ w3), (w1 ∧ w0), (w3 ∧ w2))\n  ancom(w0, w1)\n  ancom(w2, w3)\n}","parent":["anbi12i","ancom"],"children":["br1cossinres","br1cossxrnres"]},{"name":"anan","content":"Multiple commutations in conjunction. (Contributed by Peter Mazsa, 7-Mar-2020.)","origin":"thm anan(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wb(wa(wa(wa(w0, w1), w2), wa(wa(w0, w3), w4)), wa(wa(w1, w3), wa(w0, wa(w2, w4))))\n} = {\n  3bitri(wa(wa(wa(w0, w1), w2), wa(wa(w0, w3), w4)), wa(wa(w1, w3), wa(w0, wa(w2, w4))), wa(wa(wa(w0, w1), wa(w0, w3)), wa(w2, w4)), wa(wa(wa(w1, w3), w0), wa(w2, w4)))\n  an4(wa(w0, w1), w2, wa(w0, w3), w4)\n  anbi1i(wa(wa(w0, w1), wa(w0, w3)), wa(w2, w4), wa(wa(w1, w3), w0))\n  bitr3i(wa(wa(w0, w1), wa(w0, w3)), wa(wa(w1, w3), w0), wa(w0, wa(w1, w3)))\n  anandi(w0, w1, w3)\n  ancom(w0, wa(w1, w3))\n  anass(wa(w1, w3), w0, wa(w2, w4))\n}","pretty":"thm anan(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ ((((w0 ∧ w1)∧ w2)∧((w0 ∧ w3)∧ w4))↔((w1 ∧ w3)∧(w0 ∧(w2 ∧ w4))))\n} = {\n  3bitri((((w0 ∧ w1)∧ w2)∧((w0 ∧ w3)∧ w4)), ((w1 ∧ w3)∧(w0 ∧(w2 ∧ w4))), (((w0 ∧ w1)∧(w0 ∧ w3))∧(w2 ∧ w4)), (((w1 ∧ w3)∧ w0)∧(w2 ∧ w4)))\n  an4((w0 ∧ w1), w2, (w0 ∧ w3), w4)\n  anbi1i(((w0 ∧ w1)∧(w0 ∧ w3)), (w2 ∧ w4), ((w1 ∧ w3)∧ w0))\n  bitr3i(((w0 ∧ w1)∧(w0 ∧ w3)), ((w1 ∧ w3)∧ w0), (w0 ∧(w1 ∧ w3)))\n  anandi(w0, w1, w3)\n  ancom(w0, (w1 ∧ w3))\n  anass((w1 ∧ w3), w0, (w2 ∧ w4))\n}","parent":["3bitri","an4","anbi1i","bitr3i","anandi","ancom","anass"],"children":["inxpxrn"]},{"name":"triantru3","content":"A wff is equivalent to its conjunctions with truths. (Contributed by Peter Mazsa, 30-Nov-2018.)","origin":"thm triantru3(wff w0, wff w1, wff w2) {\n  |- wb(w0, w3a(w1, w2, w0))\n  -| w1\n  -| w2\n} = {\n  3bitr4i(w0, w3a(w1, w2, w0), wa(w2, w0), wa(w1, wa(w2, w0)))\n  biantrur(wa(w2, w0), w1)\n  biantrur(w0, w2)\n  3anass(w1, w2, w0)\n}","pretty":"thm triantru3(wff w0, wff w1, wff w2) {\n  ⊢ (w0 ↔(w1 ∧ w2 ∧ w0))\n  ⊣ w1\n  ⊣ w2\n} = {\n  3bitr4i(w0, (w1 ∧ w2 ∧ w0), (w2 ∧ w0), (w1 ∧(w2 ∧ w0)))\n  biantrur((w2 ∧ w0), w1)\n  biantrur(w0, w2)\n  3anass(w1, w2, w0)\n}","parent":["3bitr4i","biantrur","3anass"],"children":["eqvrelcoss","eqvrelcoss3"]},{"name":"eqeltr","content":"Substitution of equal classes into elementhood relation. (Contributed by Peter Mazsa, 22-Jul-2017.)","origin":"thm eqeltr(class c0, class c1, class c2) {\n  |- wi(wa(wceq(c0, c1), wcel(c1, c2)), wcel(c0, c2))\n} = {\n  biimpar(wceq(c0, c1), wcel(c1, c2), wcel(c0, c2))\n  eleq1(c0, c1, c2)\n}","pretty":"thm eqeltr(class c0, class c1, class c2) {\n  ⊢ ((c0 = c1 ∧ c1 ∈ c2)→ c0 ∈ c2)\n} = {\n  biimpar(c0 = c1, c1 ∈ c2, c0 ∈ c2)\n  eleq1(c0, c1, c2)\n}","parent":["biimpar","eleq1"],"children":["eqelb"]},{"name":"eqelb","content":"Substitution of equal classes into elementhood relation. (Contributed by Peter Mazsa, 17-Jul-2019.)","origin":"thm eqelb(class c0, class c1, class c2) {\n  |- wb(wa(wceq(c0, c1), wcel(c0, c2)), wa(wceq(c0, c1), wcel(c1, c2)))\n} = {\n  impbii(wa(wceq(c0, c1), wcel(c0, c2)), wa(wceq(c0, c1), wcel(c1, c2)))\n  3imtr3i(wa(wceq(c0, c1), wcel(c0, c2)), wa(wceq(c0, c1), wcel(c1, c2)), wa(wceq(c1, c0), wcel(c0, c2)), wa(wceq(c1, c0), wcel(c1, c2)))\n  jca(wa(wceq(c1, c0), wcel(c0, c2)), wceq(c1, c0), wcel(c1, c2))\n  simpl(wceq(c1, c0), wcel(c0, c2))\n  eqeltr(c1, c0, c2)\n  anbi1i(wceq(c1, c0), wcel(c0, c2), wceq(c0, c1))\n  anbi1i(wceq(c1, c0), wcel(c1, c2), wceq(c0, c1))\n  eqcom(c1, c0)\n  jca(wa(wceq(c0, c1), wcel(c1, c2)), wceq(c0, c1), wcel(c0, c2))\n  simpl(wceq(c0, c1), wcel(c1, c2))\n  eqeltr(c0, c1, c2)\n}","pretty":"thm eqelb(class c0, class c1, class c2) {\n  ⊢ ((c0 = c1 ∧ c0 ∈ c2)↔(c0 = c1 ∧ c1 ∈ c2))\n} = {\n  impbii((c0 = c1 ∧ c0 ∈ c2), (c0 = c1 ∧ c1 ∈ c2))\n  3imtr3i((c0 = c1 ∧ c0 ∈ c2), (c0 = c1 ∧ c1 ∈ c2), (c1 = c0 ∧ c0 ∈ c2), (c1 = c0 ∧ c1 ∈ c2))\n  jca((c1 = c0 ∧ c0 ∈ c2), c1 = c0, c1 ∈ c2)\n  simpl(c1 = c0, c0 ∈ c2)\n  eqeltr(c1, c0, c2)\n  anbi1i(c1 = c0, c0 ∈ c2, c0 = c1)\n  anbi1i(c1 = c0, c1 ∈ c2, c0 = c1)\n  eqcom(c1, c0)\n  jca((c0 = c1 ∧ c1 ∈ c2), c0 = c1, c0 ∈ c2)\n  simpl(c0 = c1, c1 ∈ c2)\n  eqeltr(c0, c1, c2)\n}","parent":["impbii","3imtr3i","jca","simpl","eqeltr","anbi1i","eqcom"],"children":["inxpxrn"]},{"name":"eqeqan2d","content":"Implication of introducing a new equality. (Contributed by Peter Mazsa, 17-Apr-2019.)","origin":"thm eqeqan2d(class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(wa(wceq(c0, c1), w0), wb(wceq(c0, c2), wceq(c1, c3)))\n  -| wi(w0, wceq(c2, c3))\n} = {\n  sylan2(wceq(c0, c1), w0, wb(wceq(c0, c2), wceq(c1, c3)), wceq(c2, c3))\n  eqeq12(c0, c1, c2, c3)\n}","pretty":"thm eqeqan2d(class c0, class c1, class c2, class c3, wff w0) {\n  ⊢ ((c0 = c1 ∧ w0)→(c0 = c2 ↔ c1 = c3))\n  ⊣ (w0 → c2 = c3)\n} = {\n  sylan2(c0 = c1, w0, (c0 = c2 ↔ c1 = c3), c2 = c3)\n  eqeq12(c0, c1, c2, c3)\n}","parent":["sylan2","eqeq12"],"children":[]},{"name":"ineqcom","content":"Two ways of saying that two classes are disjoint (when ` C = (/) ` : ` ( ( A i^i B ) = (/) <-> ( B i^i A ) = (/) ) ` ). (Contributed by Peter Mazsa, 22-Mar-2017.)","origin":"thm ineqcom(class c0, class c1, class c2) {\n  |- wb(wceq(cin(c0, c1), c2), wceq(cin(c1, c0), c2))\n} = {\n  eqeq1i(cin(c0, c1), c2, cin(c1, c0))\n  incom(c0, c1)\n}","pretty":"thm ineqcom(class c0, class c1, class c2) {\n  ⊢ ((c0 ⋂ c1)= c2 ↔(c1 ⋂ c0)= c2)\n} = {\n  eqeq1i((c0 ⋂ c1), c2, (c1 ⋂ c0))\n  incom(c0, c1)\n}","parent":["eqeq1i","incom"],"children":["ineqcomi"]},{"name":"ineqcomi","content":"Disjointness inference (when ` C = (/) ` ), inference form of ~ ineqcom . (Contributed by Peter Mazsa, 26-Mar-2017.)","origin":"thm ineqcomi(class c0, class c1, class c2) {\n  |- wceq(cin(c0, c1), c2)\n  -| wceq(cin(c1, c0), c2)\n} = {\n  mpbi(wceq(cin(c0, c1), c2), wceq(cin(c1, c0), c2))\n  ineqcom(c1, c0, c2)\n}","pretty":"thm ineqcomi(class c0, class c1, class c2) {\n  ⊢ (c0 ⋂ c1)= c2\n  ⊣ (c1 ⋂ c0)= c2\n} = {\n  mpbi((c0 ⋂ c1)= c2, (c1 ⋂ c0)= c2)\n  ineqcom(c1, c0, c2)\n}","parent":["mpbi","ineqcom"],"children":["inres2"]},{"name":"inres2","content":"Two ways of expressing the restriction of an intersection. (Contributed by Peter Mazsa, 5-Jun-2021.)","origin":"thm inres2(class c0, class c1, class c2) {\n  |- wceq(cin(cres(c0, c1), c2), cres(cin(c0, c2), c1))\n} = {\n  eqtr4i(cin(cres(c0, c1), c2), cres(cin(c0, c2), c1), cres(cin(c2, c0), c1))\n  ineqcomi(cres(c0, c1), c2, cres(cin(c2, c0), c1))\n  inres(c2, c0, c1)\n  reseq1i(cin(c0, c2), c1, cin(c2, c0))\n  incom(c0, c2)\n}","pretty":"thm inres2(class c0, class c1, class c2) {\n  ⊢ ((c0 |` c1)⋂ c2)=((c0 ⋂ c2)|` c1)\n} = {\n  eqtr4i(((c0 |` c1)⋂ c2), ((c0 ⋂ c2)|` c1), ((c2 ⋂ c0)|` c1))\n  ineqcomi((c0 |` c1), c2, ((c2 ⋂ c0)|` c1))\n  inres(c2, c0, c1)\n  reseq1i((c0 ⋂ c2), c1, (c2 ⋂ c0))\n  incom(c0, c2)\n}","parent":["eqtr4i","ineqcomi","inres","reseq1i","incom"],"children":["xrnres"]},{"name":"coideq","content":"Equality theorem for composition of two classes. (Contributed by Peter Mazsa, 23-Sep-2021.)","origin":"thm coideq(class c0, class c1) {\n  |- wi(wceq(c0, c1), wceq(ccom(c0, c0), ccom(c1, c1)))\n} = {\n  eqtrd(ccom(c0, c0), ccom(c1, c1), ccom(c1, c0), wceq(c0, c1))\n  coeq1(c0, c1, c0)\n  coeq2(c0, c1, c1)\n}","pretty":"thm coideq(class c0, class c1) {\n  ⊢ (c0 = c1 →(c0 ∘ c0)=(c1 ∘ c1))\n} = {\n  eqtrd((c0 ∘ c0), (c1 ∘ c1), (c1 ∘ c0), c0 = c1)\n  coeq1(c0, c1, c0)\n  coeq2(c0, c1, c1)\n}","parent":["eqtrd","coeq1","coeq2"],"children":["eltrrels2","trreleq","eleqvrels2"]},{"name":"nexmo1","content":"If there is no case where wff is true, it is true for at most one case. (Contributed by Peter Mazsa, 27-Sep-2021.)","origin":"thm nexmo1(setvar s0, wff w0) {\n  |- wi(wn(wex(s0, w0)), wmo(s0, w0))\n} = {\n  sylibr(wn(wex(s0, w0)), wmo(s0, w0), wi(wex(s0, w0), weu(s0, w0)))\n  pm2.21(wex(s0, w0), weu(s0, w0))\n  moeu(s0, w0)\n}","pretty":"thm nexmo1(setvar s0, wff w0) {\n  ⊢ (¬ ∃(s0, w0)→ ∃*(s0, w0))\n} = {\n  sylibr(¬ ∃(s0, w0), ∃*(s0, w0), (∃(s0, w0)→ ∃!(s0, w0)))\n  pm2.21(∃(s0, w0), ∃!(s0, w0))\n  moeu(s0, w0)\n}","parent":["sylibr","pm2.21","moeu"],"children":[]},{"name":"3albii","content":"Inference adding three universal quantifiers to both sides of an equivalence. (Contributed by Peter Mazsa, 10-Aug-2018.)","origin":"thm 3albii(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  |- wb(wal(s0, wal(s1, wal(s2, w0))), wal(s0, wal(s1, wal(s2, w1))))\n  -| wb(w0, w1)\n} = {\n  albii(s0, wal(s1, wal(s2, w0)), wal(s1, wal(s2, w1)))\n  2albii(s1, s2, w0, w1)\n}","pretty":"thm 3albii(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  ⊢ (∀(s0, ∀(s1, ∀(s2, w0)))↔ ∀(s0, ∀(s1, ∀(s2, w1))))\n  ⊣ (w0 ↔ w1)\n} = {\n  albii(s0, ∀(s1, ∀(s2, w0)), ∀(s1, ∀(s2, w1)))\n  2albii(s1, s2, w0, w1)\n}","parent":["albii","2albii"],"children":["cosscnvssid3","dfeldisj3"]},{"name":"3ralbii","content":"Inference adding three restricted universal quantifiers to both sides of an equivalence. (Contributed by Peter Mazsa, 25-Jul-2019.)","origin":"thm 3ralbii(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, wff w0, wff w1) {\n  |- wb(wral(s0, c0, wral(s1, c1, wral(s2, c2, w0))), wral(s0, c0, wral(s1, c1, wral(s2, c2, w1))))\n  -| wb(w0, w1)\n} = {\n  ralbii(s0, c0, wral(s1, c1, wral(s2, c2, w0)), wral(s1, c1, wral(s2, c2, w1)))\n  2ralbii(s1, s2, c1, c2, w0, w1)\n}","pretty":"thm 3ralbii(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, wff w0, wff w1) {\n  ⊢ (∀(s0 ∈ c0, ∀(s1 ∈ c1, ∀(s2 ∈ c2, w0)))↔ ∀(s0 ∈ c0, ∀(s1 ∈ c1, ∀(s2 ∈ c2, w1))))\n  ⊣ (w0 ↔ w1)\n} = {\n  ralbii(s0, c0, ∀(s1 ∈ c1, ∀(s2 ∈ c2, w0)), ∀(s1 ∈ c1, ∀(s2 ∈ c2, w1)))\n  2ralbii(s1, s2, c1, c2, w0, w1)\n}","parent":["ralbii","2ralbii"],"children":[]},{"name":"ssrabi","content":"Inference of restricted abstraction subclass from implication. (Contributed by Peter Mazsa, 26-Oct-2022.)","origin":"thm ssrabi(setvar s0, class c0, wff w0, wff w1) {\n  |- wss(crab(s0, c0, w0), crab(s0, c0, w1))\n  -| wi(w0, w1)\n} = {\n  ss2rabi(s0, c0, w0, w1)\n  a1i(wcel(cv(s0), c0), wi(w0, w1))\n}","pretty":"thm ssrabi(setvar s0, class c0, wff w0, wff w1) {\n  ⊢ { s0 ∈ c0 | w0 } ⊆ { s0 ∈ c0 | w1 }\n  ⊣ (w0 → w1)\n} = {\n  ss2rabi(s0, c0, w0, w1)\n  a1i(s0 ∈ c0, (w0 → w1))\n}","parent":["ss2rabi","a1i"],"children":["refrelsredund4"]},{"name":"rabbieq","content":"Equivalent wff's correspond to restricted class abstractions which are equal with the same class. (Contributed by Peter Mazsa, 8-Jul-2019.)","origin":"thm rabbieq(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wceq(c0, crab(s0, c1, w0))\n  -| wceq(c0, crab(s0, c1, w1))\n  -| wb(w1, w0)\n} = {\n  eqtri(c0, crab(s0, c1, w0), crab(s0, c1, w1))\n  rabbii(s0, c1, w1, w0)\n}","pretty":"thm rabbieq(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ c0 = { s0 ∈ c1 | w0 }\n  ⊣ c0 = { s0 ∈ c1 | w1 }\n  ⊣ (w1 ↔ w0)\n} = {\n  eqtri(c0, { s0 ∈ c1 | w0 }, { s0 ∈ c1 | w1 })\n  rabbii(s0, c1, w1, w0)\n}","parent":["eqtri","rabbii"],"children":["dfrefrels3","dfcnvrefrels3","dfsymrels3","refsymrels3","dftrrels3","dfeqvrels3","dfdisjs3","dfdisjs4"]},{"name":"rabimbieq","content":"Restricted equivalent wff's correspond to restricted class abstractions which are equal with the same class. (Contributed by Peter Mazsa, 22-Jul-2021.)","origin":"thm rabimbieq(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wceq(c0, crab(s0, c1, w0))\n  -| wceq(c0, crab(s0, c1, w1))\n  -| wi(wcel(cv(s0), c1), wb(w1, w0))\n} = {\n  eqtri(c0, crab(s0, c1, w0), crab(s0, c1, w1))\n  rabbiia(s0, c1, w1, w0)\n}","pretty":"thm rabimbieq(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ c0 = { s0 ∈ c1 | w0 }\n  ⊣ c0 = { s0 ∈ c1 | w1 }\n  ⊣ (s0 ∈ c1 →(w1 ↔ w0))\n} = {\n  eqtri(c0, { s0 ∈ c1 | w0 }, { s0 ∈ c1 | w1 })\n  rabbiia(s0, c1, w1, w0)\n}","parent":["eqtri","rabbiia"],"children":["abeqinbi","dfsymrels4","dfsymrels5","dffunsALTV2","dffunsALTV3","dffunsALTV4","dfdisjs2","dfdisjs5"]},{"name":"abeqin","content":"Intersection with class abstraction. (Contributed by Peter Mazsa, 21-Jul-2021.)","origin":"thm abeqin(setvar s0, class c0, class c1, class c2, wff w0) {\n  |- wceq(c0, crab(s0, c1, w0))\n  -| wceq(c0, cin(c2, c1))\n  -| wceq(c2, cab(s0, w0))\n  -| diffsc(s0, c1)\n} = {\n  3eqtr4i(c0, crab(s0, c1, w0), cin(c2, c1), cin(cab(s0, w0), c1))\n  ineq1i(c2, c1, cab(s0, w0))\n  dfrab2(s0, c1, w0)\n}","pretty":"thm abeqin(setvar s0, class c0, class c1, class c2, wff w0) {\n  ⊢ c0 = { s0 ∈ c1 | w0 }\n  ⊣ c0 =(c2 ⋂ c1)\n  ⊣ c2 = { s0 | w0 }\n  ⊣ d(s0, c1)\n} = {\n  3eqtr4i(c0, { s0 ∈ c1 | w0 }, (c2 ⋂ c1), ({ s0 | w0 } ⋂ c1))\n  ineq1i(c2, c1, { s0 | w0 })\n  dfrab2(s0, c1, w0)\n}","parent":["3eqtr4i","ineq1i","dfrab2"],"children":["abeqinbi","dfcnvrefrels3","dffunsALTV","dfdisjs"]},{"name":"abeqinbi","content":"Intersection with class abstraction and equivalent wff's. (Contributed by Peter Mazsa, 21-Jul-2021.)","origin":"thm abeqinbi(setvar s0, class c0, class c1, class c2, wff w0, wff w1) {\n  |- wceq(c0, crab(s0, c1, w0))\n  -| wceq(c0, cin(c2, c1))\n  -| wceq(c2, cab(s0, w1))\n  -| wi(wcel(cv(s0), c1), wb(w1, w0))\n  -| diffsc(s0, c1)\n} = {\n  rabimbieq(s0, c0, c1, w0, w1)\n  abeqin(s0, c0, c1, c2, w1)\n}","pretty":"thm abeqinbi(setvar s0, class c0, class c1, class c2, wff w0, wff w1) {\n  ⊢ c0 = { s0 ∈ c1 | w0 }\n  ⊣ c0 =(c2 ⋂ c1)\n  ⊣ c2 = { s0 | w1 }\n  ⊣ (s0 ∈ c1 →(w1 ↔ w0))\n  ⊣ d(s0, c1)\n} = {\n  rabimbieq(s0, c0, c1, w0, w1)\n  abeqin(s0, c0, c1, c2, w1)\n}","parent":["rabimbieq","abeqin"],"children":["dfrefrels2","dfcnvrefrels2","dfsymrels2","dftrrels2"]},{"name":"rabeqel","content":"Class element of a restricted class abstraction. (Contributed by Peter Mazsa, 24-Jul-2021.)","origin":"thm rabeqel(setvar s0, class c0, class c1, class c2, wff w0, wff w1) {\n  |- wb(wcel(c0, c1), wa(w0, wcel(c0, c2)))\n  -| wceq(c1, crab(s0, c2, w1))\n  -| wi(wceq(cv(s0), c0), wb(w1, w0))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsw(s0, w0)\n} = {\n  biancomi(wcel(c0, c1), w0, wcel(c0, c2))\n  elrab2(s0, c0, c1, c2, w0, w1)\n}","pretty":"thm rabeqel(setvar s0, class c0, class c1, class c2, wff w0, wff w1) {\n  ⊢ (c0 ∈ c1 ↔(w0 ∧ c0 ∈ c2))\n  ⊣ c1 = { s0 ∈ c2 | w1 }\n  ⊣ (s0 = c0 →(w1 ↔ w0))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, w0)\n} = {\n  biancomi(c0 ∈ c1, w0, c0 ∈ c2)\n  elrab2(s0, c0, c1, c2, w0, w1)\n}","parent":["biancomi","elrab2"],"children":["elrefrels2","elrefrels3","elcnvrefrels2","elcnvrefrels3","elsymrels2","elsymrels3","elsymrels4","elsymrels5","elrefsymrels2","eltrrels2","eltrrels3","eleqvrels2","eleqvrels3","elfunsALTV","eldisjs"]},{"name":"eqrelf","content":"The equality connective between relations. (Contributed by Peter Mazsa, 25-Jun-2019.)","origin":"thm eqrelf(setvar s0, setvar s1, class c0, class c1) {\n  |- wi(wa(wrel(c0), wrel(c1)), wb(wceq(c0, c1), wal(s0, wal(s1, wb(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1))))))\n  -| wnfc(s0, c0)\n  -| wnfc(s0, c1)\n  -| wnfc(s1, c0)\n  -| wnfc(s1, c1)\n  -| diffss(s0, s1)\n} = {\n  syl6bbr(wa(wrel(c0), wrel(c1)), wceq(c0, c1), wal(s0, wal(s1, wb(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)))), wal(hs0, wal(hs1, wb(wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), c1)))))\n  eqrel(hs0, hs1, c0, c1)\n  cbval2(s0, s1, hs0, hs1, wb(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)), wb(wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), c1)))\n  nfv(hs0, wb(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)))\n  nfv(hs1, wb(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)))\n  nfbi(s0, wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), c1))\n  nfel2(s0, cop(cv(hs0), cv(hs1)), c0)\n  nfel2(s0, cop(cv(hs0), cv(hs1)), c1)\n  nfbi(s1, wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), c1))\n  nfel2(s1, cop(cv(hs0), cv(hs1)), c0)\n  nfel2(s1, cop(cv(hs0), cv(hs1)), c1)\n  bibi12d(wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs1))), wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1), wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), c1))\n  eleq1d(cop(cv(s0), cv(s1)), c0, cop(cv(hs0), cv(hs1)), wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs1))))\n  eleq1d(cop(cv(s0), cv(s1)), c1, cop(cv(hs0), cv(hs1)), wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs1))))\n  opeq12(cv(s0), cv(hs0), cv(s1), cv(hs1))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.w(wb(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)))\n  diff.hs1.w(wb(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)))\n  diff.cop.s(s0, cv(hs0), cv(hs1))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cop.s(s1, cv(hs0), cv(hs1))\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.cv.s(s1, hs1)\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n}","pretty":"thm eqrelf(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ ((Rel(c0)∧ Rel(c1))→(c0 = c1 ↔ ∀(s0, ∀(s1,(< s0, s1 > ∈ c0 ↔ < s0, s1 > ∈ c1)))))\n  ⊣ F/(s0, c0)\n  ⊣ F/(s0, c1)\n  ⊣ F/(s1, c0)\n  ⊣ F/(s1, c1)\n  ⊣ d(s0, s1)\n} = {\n  syl6bbr((Rel(c0)∧ Rel(c1)), c0 = c1, ∀(s0, ∀(s1,(< s0, s1 > ∈ c0 ↔ < s0, s1 > ∈ c1))), ∀(hs0, ∀(hs1,(< hs0, hs1 > ∈ c0 ↔ < hs0, hs1 > ∈ c1))))\n  eqrel(hs0, hs1, c0, c1)\n  cbval2(s0, s1, hs0, hs1, (< s0, s1 > ∈ c0 ↔ < s0, s1 > ∈ c1), (< hs0, hs1 > ∈ c0 ↔ < hs0, hs1 > ∈ c1))\n  nfv(hs0, (< s0, s1 > ∈ c0 ↔ < s0, s1 > ∈ c1))\n  nfv(hs1, (< s0, s1 > ∈ c0 ↔ < s0, s1 > ∈ c1))\n  nfbi(s0, < hs0, hs1 > ∈ c0, < hs0, hs1 > ∈ c1)\n  nfel2(s0, < hs0, hs1 >, c0)\n  nfel2(s0, < hs0, hs1 >, c1)\n  nfbi(s1, < hs0, hs1 > ∈ c0, < hs0, hs1 > ∈ c1)\n  nfel2(s1, < hs0, hs1 >, c0)\n  nfel2(s1, < hs0, hs1 >, c1)\n  bibi12d((s0 = hs0 ∧ s1 = hs1), < s0, s1 > ∈ c0, < s0, s1 > ∈ c1, < hs0, hs1 > ∈ c0, < hs0, hs1 > ∈ c1)\n  eleq1d(< s0, s1 >, c0, < hs0, hs1 >, (s0 = hs0 ∧ s1 = hs1))\n  eleq1d(< s0, s1 >, c1, < hs0, hs1 >, (s0 = hs0 ∧ s1 = hs1))\n  opeq12(s0, hs0, s1, hs1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.w((< s0, s1 > ∈ c0 ↔ < s0, s1 > ∈ c1))\n  diff.hs1.w((< s0, s1 > ∈ c0 ↔ < s0, s1 > ∈ c1))\n  diff.cop.s(s0, hs0, hs1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cop.s(s1, hs0, hs1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.cv.s(s1, hs1)\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n}","parent":["syl6bbr","eqrel","cbval2","nfv","nfbi","nfel2","bibi12d","eleq1d","opeq12","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs0.w","diff.hs1.w","diff.cop.s","diff.cv.s","diffss.ex","diff.hs1.s"],"children":["vvdifopab"]},{"name":"releleccnv","content":"Elementhood in a converse ` R ` -coset when ` R ` is a relation. (Contributed by Peter Mazsa, 9-Dec-2018.)","origin":"thm releleccnv(class c0, class c1, class c2) {\n  |- wi(wrel(c0), wb(wcel(c1, cec(c2, ccnv(c0))), wbr(c1, c0, c2)))\n} = {\n  syl5bb(wrel(c0), wcel(c1, cec(c2, ccnv(c0))), wbr(c1, c0, c2), wbr(c2, ccnv(c0), c1))\n  ax-mp(wb(wcel(c1, cec(c2, ccnv(c0))), wbr(c2, ccnv(c0), c1)), wrel(ccnv(c0)))\n  relcnv(c0)\n  relelec(ccnv(c0), c1, c2)\n  relbrcnvg(c0, c2, c1)\n}","pretty":"thm releleccnv(class c0, class c1, class c2) {\n  ⊢ (Rel(c0)→(c1 ∈[c2]`' c0 ↔ c1[c0]c2))\n} = {\n  syl5bb(Rel(c0), c1 ∈[c2]`' c0, c1[c0]c2, c2[`' c0]c1)\n  ax-mp((c1 ∈[c2]`' c0 ↔ c2[`' c0]c1), Rel(`' c0))\n  relcnv(c0)\n  relelec(`' c0, c1, c2)\n  relbrcnvg(c0, c2, c1)\n}","parent":["syl5bb","ax-mp","relcnv","relelec","relbrcnvg"],"children":["releccnveq"]},{"name":"releccnveq","content":"Equality of converse ` R ` -coset and converse ` S ` -coset when ` R ` and ` S ` are relations. (Contributed by Peter Mazsa, 27-Jul-2019.)","origin":"thm releccnveq(setvar s0, class c0, class c1, class c2, class c3) {\n  |- wi(wa(wrel(c0), wrel(c1)), wb(wceq(cec(c2, ccnv(c0)), cec(c3, ccnv(c1))), wal(s0, wb(wbr(cv(s0), c0, c2), wbr(cv(s0), c1, c3)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  syl5bb(wa(wrel(c0), wrel(c1)), wceq(cec(c2, ccnv(c0)), cec(c3, ccnv(c1))), wal(s0, wb(wbr(cv(s0), c0, c2), wbr(cv(s0), c1, c3))), wal(s0, wb(wcel(cv(s0), cec(c2, ccnv(c0))), wcel(cv(s0), cec(c3, ccnv(c1))))))\n  dfcleq(s0, cec(c2, ccnv(c0)), cec(c3, ccnv(c1)))\n  albidv(s0, wa(wrel(c0), wrel(c1)), wb(wcel(cv(s0), cec(c2, ccnv(c0))), wcel(cv(s0), cec(c3, ccnv(c1)))), wb(wbr(cv(s0), c0, c2), wbr(cv(s0), c1, c3)))\n  bi2bian9(wrel(c0), wrel(c1), wcel(cv(s0), cec(c2, ccnv(c0))), wcel(cv(s0), cec(c3, ccnv(c1))), wbr(cv(s0), c0, c2), wbr(cv(s0), c1, c3))\n  releleccnv(c0, cv(s0), c2)\n  releleccnv(c1, cv(s0), c3)\n  diff.cec.s(s0, c2, ccnv(c0))\n  diff.ccnv.s(s0, c0)\n  diff.cec.s(s0, c3, ccnv(c1))\n  diff.ccnv.s(s0, c1)\n  diff.wa.s(s0, wrel(c0), wrel(c1))\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s0, c1)\n}","pretty":"thm releccnveq(setvar s0, class c0, class c1, class c2, class c3) {\n  ⊢ ((Rel(c0)∧ Rel(c1))→([c2]`' c0 =[c3]`' c1 ↔ ∀(s0,(s0[c0]c2 ↔ s0[c1]c3))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n} = {\n  syl5bb((Rel(c0)∧ Rel(c1)), [c2]`' c0 =[c3]`' c1, ∀(s0,(s0[c0]c2 ↔ s0[c1]c3)), ∀(s0,(s0 ∈[c2]`' c0 ↔ s0 ∈[c3]`' c1)))\n  dfcleq(s0, [c2]`' c0, [c3]`' c1)\n  albidv(s0, (Rel(c0)∧ Rel(c1)), (s0 ∈[c2]`' c0 ↔ s0 ∈[c3]`' c1), (s0[c0]c2 ↔ s0[c1]c3))\n  bi2bian9(Rel(c0), Rel(c1), s0 ∈[c2]`' c0, s0 ∈[c3]`' c1, s0[c0]c2, s0[c1]c3)\n  releleccnv(c0, s0, c2)\n  releleccnv(c1, s0, c3)\n  diff.cec.s(s0, c2, `' c0)\n  diff.ccnv.s(s0, c0)\n  diff.cec.s(s0, c3, `' c1)\n  diff.ccnv.s(s0, c1)\n  diff.wa.s(s0, Rel(c0), Rel(c1))\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s0, c1)\n}","parent":["syl5bb","dfcleq","albidv","bi2bian9","releleccnv","diff.cec.s","diff.ccnv.s","diff.wa.s","diff.wrel.s"],"children":["extssr"]},{"name":"opelvvdif","content":"Negated elementhood of ordered pair. (Contributed by Peter Mazsa, 14-Jan-2019.)","origin":"thm opelvvdif(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wcel(cop(c0, c2), cdif(cxp(universe, universe), c4)), wn(wcel(cop(c0, c2), c4))))\n} = {\n  syl6rbbr(wa(wcel(c0, c1), wcel(c2, c3)), wcel(cop(c0, c2), cdif(cxp(universe, universe), c4)), wn(wcel(cop(c0, c2), c4)), wa(wcel(cop(c0, c2), cxp(universe, universe)), wn(wcel(cop(c0, c2), c4))))\n  biantrurd(wa(wcel(c0, c1), wcel(c2, c3)), wn(wcel(cop(c0, c2), c4)), wcel(cop(c0, c2), cxp(universe, universe)))\n  opelvvg(c0, c1, c2, c3)\n  eldif(cop(c0, c2), cxp(universe, universe), c4)\n}","pretty":"thm opelvvdif(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(< c0, c2 > ∈((𝕌 × 𝕌)\\ c4)↔ ¬ < c0, c2 > ∈ c4))\n} = {\n  syl6rbbr((c0 ∈ c1 ∧ c2 ∈ c3), < c0, c2 > ∈((𝕌 × 𝕌)\\ c4), ¬ < c0, c2 > ∈ c4, (< c0, c2 > ∈(𝕌 × 𝕌)∧ ¬ < c0, c2 > ∈ c4))\n  biantrurd((c0 ∈ c1 ∧ c2 ∈ c3), ¬ < c0, c2 > ∈ c4, < c0, c2 > ∈(𝕌 × 𝕌))\n  opelvvg(c0, c1, c2, c3)\n  eldif(< c0, c2 >, (𝕌 × 𝕌), c4)\n}","parent":["syl6rbbr","biantrurd","opelvvg","eldif"],"children":["vvdifopab","brvvdif"]},{"name":"vvdifopab","content":"Ordered-pair class abstraction defined by a negation. (Contributed by Peter Mazsa, 25-Jun-2019.)","origin":"thm vvdifopab(setvar s0, setvar s1, wff w0) {\n  |- wceq(cdif(cxp(universe, universe), copab(s0, s1, w0)), copab(s0, s1, wn(w0)))\n  -| diffss(s0, s1)\n} = {\n  mpbir(wceq(cdif(cxp(universe, universe), copab(s0, s1, w0)), copab(s0, s1, wn(w0))), wal(s0, wal(s1, wb(wcel(cop(cv(s0), cv(s1)), cdif(cxp(universe, universe), copab(s0, s1, w0))), wcel(cop(cv(s0), cv(s1)), copab(s0, s1, wn(w0)))))))\n  gen2(s0, s1, wb(wcel(cop(cv(s0), cv(s1)), cdif(cxp(universe, universe), copab(s0, s1, w0))), wcel(cop(cv(s0), cv(s1)), copab(s0, s1, wn(w0)))))\n  3bitr4i(wcel(cop(cv(s0), cv(s1)), cdif(cxp(universe, universe), copab(s0, s1, w0))), wcel(cop(cv(s0), cv(s1)), copab(s0, s1, wn(w0))), wn(wcel(cop(cv(s0), cv(s1)), copab(s0, s1, w0))), wn(w0))\n  notbii(wcel(cop(cv(s0), cv(s1)), copab(s0, s1, w0)), w0)\n  opabid(s0, s1, w0)\n  el2v(s0, s1, wb(wcel(cop(cv(s0), cv(s1)), cdif(cxp(universe, universe), copab(s0, s1, w0))), wn(wcel(cop(cv(s0), cv(s1)), copab(s0, s1, w0)))))\n  opelvvdif(cv(s0), universe, cv(s1), universe, copab(s0, s1, w0))\n  opabid(s0, s1, wn(w0))\n  mp2an(wb(wceq(cdif(cxp(universe, universe), copab(s0, s1, w0)), copab(s0, s1, wn(w0))), wal(s0, wal(s1, wb(wcel(cop(cv(s0), cv(s1)), cdif(cxp(universe, universe), copab(s0, s1, w0))), wcel(cop(cv(s0), cv(s1)), copab(s0, s1, wn(w0))))))), wrel(cdif(cxp(universe, universe), copab(s0, s1, w0))), wrel(copab(s0, s1, wn(w0))))\n  ax-mp(wrel(cdif(cxp(universe, universe), copab(s0, s1, w0))), wrel(cxp(universe, universe)))\n  relxp(universe, universe)\n  reldif(cxp(universe, universe), copab(s0, s1, w0))\n  relopab(s0, s1, wn(w0))\n  eqrelf(s0, s1, cdif(cxp(universe, universe), copab(s0, s1, w0)), copab(s0, s1, wn(w0)))\n  nfdif(s0, cxp(universe, universe), copab(s0, s1, w0))\n  nfcv(s0, cxp(universe, universe))\n  nfopab1(s0, s1, w0)\n  nfopab1(s0, s1, wn(w0))\n  nfdif(s1, cxp(universe, universe), copab(s0, s1, w0))\n  nfcv(s1, cxp(universe, universe))\n  nfopab2(s1, s0, w0)\n  nfopab2(s1, s0, wn(w0))\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.cxp.s(s1, universe, universe)\n  diff.universe.s(s1)\n}","pretty":"thm vvdifopab(setvar s0, setvar s1, wff w0) {\n  ⊢ ((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })= { < s0, s1 > | ¬ w0 }\n  ⊣ d(s0, s1)\n} = {\n  mpbir(((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })= { < s0, s1 > | ¬ w0 }, ∀(s0, ∀(s1,(< s0, s1 > ∈((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })↔ < s0, s1 > ∈ { < s0, s1 > | ¬ w0 }))))\n  gen2(s0, s1, (< s0, s1 > ∈((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })↔ < s0, s1 > ∈ { < s0, s1 > | ¬ w0 }))\n  3bitr4i(< s0, s1 > ∈((𝕌 × 𝕌)\\ { < s0, s1 > | w0 }), < s0, s1 > ∈ { < s0, s1 > | ¬ w0 }, ¬ < s0, s1 > ∈ { < s0, s1 > | w0 }, ¬ w0)\n  notbii(< s0, s1 > ∈ { < s0, s1 > | w0 }, w0)\n  opabid(s0, s1, w0)\n  el2v(s0, s1, (< s0, s1 > ∈((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })↔ ¬ < s0, s1 > ∈ { < s0, s1 > | w0 }))\n  opelvvdif(s0, universe, s1, universe, { < s0, s1 > | w0 })\n  opabid(s0, s1, ¬ w0)\n  mp2an((((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })= { < s0, s1 > | ¬ w0 } ↔ ∀(s0, ∀(s1,(< s0, s1 > ∈((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })↔ < s0, s1 > ∈ { < s0, s1 > | ¬ w0 })))), Rel(((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })), Rel({ < s0, s1 > | ¬ w0 }))\n  ax-mp(Rel(((𝕌 × 𝕌)\\ { < s0, s1 > | w0 })), Rel((𝕌 × 𝕌)))\n  relxp(universe, universe)\n  reldif((𝕌 × 𝕌), { < s0, s1 > | w0 })\n  relopab(s0, s1, ¬ w0)\n  eqrelf(s0, s1, ((𝕌 × 𝕌)\\ { < s0, s1 > | w0 }), { < s0, s1 > | ¬ w0 })\n  nfdif(s0, (𝕌 × 𝕌), { < s0, s1 > | w0 })\n  nfcv(s0, (𝕌 × 𝕌))\n  nfopab1(s0, s1, w0)\n  nfopab1(s0, s1, ¬ w0)\n  nfdif(s1, (𝕌 × 𝕌), { < s0, s1 > | w0 })\n  nfcv(s1, (𝕌 × 𝕌))\n  nfopab2(s1, s0, w0)\n  nfopab2(s1, s0, ¬ w0)\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.cxp.s(s1, universe, universe)\n  diff.universe.s(s1)\n}","parent":["mpbir","gen2","3bitr4i","notbii","opabid","el2v","opelvvdif","mp2an","ax-mp","relxp","reldif","relopab","eqrelf","nfdif","nfcv","nfopab1","nfopab2","diff.cxp.s","diff.universe.s"],"children":["dfssr2"]},{"name":"brvdif","content":"Binary relation with universal complement is the negation of the relation. (Contributed by Peter Mazsa, 1-Jul-2018.)","origin":"thm brvdif(class c0, class c1, class c2) {\n  |- wb(wbr(c0, cdif(universe, c1), c2), wn(wbr(c0, c1, c2)))\n} = {\n  mpbiran(wbr(c0, cdif(universe, c1), c2), wn(wbr(c0, c1, c2)), wbr(c0, universe, c2))\n  brv(c0, c2)\n  brdif(c0, universe, c1, c2)\n}","pretty":"thm brvdif(class c0, class c1, class c2) {\n  ⊢ (c0[(𝕌 \\ c1)]c2 ↔ ¬ c0[c1]c2)\n} = {\n  mpbiran(c0[(𝕌 \\ c1)]c2, ¬ c0[c1]c2, c0[𝕌]c2)\n  brv(c0, c2)\n  brdif(c0, universe, c1, c2)\n}","parent":["mpbiran","brv","brdif"],"children":["brvdif2","brvbrvvdif","dfssr2"]},{"name":"brvdif2","content":"Binary relation with universal complement. (Contributed by Peter Mazsa, 14-Jul-2018.)","origin":"thm brvdif2(class c0, class c1, class c2) {\n  |- wb(wbr(c0, cdif(universe, c1), c2), wn(wcel(cop(c0, c2), c1)))\n} = {\n  xchbinx(wbr(c0, cdif(universe, c1), c2), wcel(cop(c0, c2), c1), wbr(c0, c1, c2))\n  brvdif(c0, c1, c2)\n  df-br(c0, c1, c2)\n}","pretty":"thm brvdif2(class c0, class c1, class c2) {\n  ⊢ (c0[(𝕌 \\ c1)]c2 ↔ ¬ < c0, c2 > ∈ c1)\n} = {\n  xchbinx(c0[(𝕌 \\ c1)]c2, < c0, c2 > ∈ c1, c0[c1]c2)\n  brvdif(c0, c1, c2)\n  df-br(c0, c1, c2)\n}","parent":["xchbinx","brvdif","df-br"],"children":[]},{"name":"brvvdif","content":"Binary relation with the complement under the universal class of ordered pairs. (Contributed by Peter Mazsa, 9-Nov-2018.)","origin":"thm brvvdif(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wbr(c0, cdif(cxp(universe, universe), c4), c2), wn(wbr(c0, c4, c2))))\n} = {\n  3bitr4g(wa(wcel(c0, c1), wcel(c2, c3)), wbr(c0, cdif(cxp(universe, universe), c4), c2), wn(wbr(c0, c4, c2)), wcel(cop(c0, c2), cdif(cxp(universe, universe), c4)), wn(wcel(cop(c0, c2), c4)))\n  opelvvdif(c0, c1, c2, c3, c4)\n  df-br(c0, cdif(cxp(universe, universe), c4), c2)\n  notbii(wbr(c0, c4, c2), wcel(cop(c0, c2), c4))\n  df-br(c0, c4, c2)\n}","pretty":"thm brvvdif(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(c0[((𝕌 × 𝕌)\\ c4)]c2 ↔ ¬ c0[c4]c2))\n} = {\n  3bitr4g((c0 ∈ c1 ∧ c2 ∈ c3), c0[((𝕌 × 𝕌)\\ c4)]c2, ¬ c0[c4]c2, < c0, c2 > ∈((𝕌 × 𝕌)\\ c4), ¬ < c0, c2 > ∈ c4)\n  opelvvdif(c0, c1, c2, c3, c4)\n  df-br(c0, ((𝕌 × 𝕌)\\ c4), c2)\n  notbii(c0[c4]c2, < c0, c2 > ∈ c4)\n  df-br(c0, c4, c2)\n}","parent":["3bitr4g","opelvvdif","df-br","notbii"],"children":["brvbrvvdif"]},{"name":"brvbrvvdif","content":"Binary relation with the complement under the universal class of ordered pairs is the same as with universal complement. (Contributed by Peter Mazsa, 28-Nov-2018.)","origin":"thm brvbrvvdif(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wbr(c0, cdif(cxp(universe, universe), c4), c2), wbr(c0, cdif(universe, c4), c2)))\n} = {\n  syl6bbr(wa(wcel(c0, c1), wcel(c2, c3)), wbr(c0, cdif(cxp(universe, universe), c4), c2), wbr(c0, cdif(universe, c4), c2), wn(wbr(c0, c4, c2)))\n  brvvdif(c0, c1, c2, c3, c4)\n  brvdif(c0, c4, c2)\n}","pretty":"thm brvbrvvdif(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(c0[((𝕌 × 𝕌)\\ c4)]c2 ↔ c0[(𝕌 \\ c4)]c2))\n} = {\n  syl6bbr((c0 ∈ c1 ∧ c2 ∈ c3), c0[((𝕌 × 𝕌)\\ c4)]c2, c0[(𝕌 \\ c4)]c2, ¬ c0[c4]c2)\n  brvvdif(c0, c1, c2, c3, c4)\n  brvdif(c0, c4, c2)\n}","parent":["syl6bbr","brvvdif","brvdif"],"children":[]},{"name":"brcnvep","content":"The converse of the binary epsilon relation. (Contributed by Peter Mazsa, 30-Jan-2018.)","origin":"thm brcnvep(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wbr(c0, ccnv(cep), c2), wcel(c2, c0)))\n} = {\n  syl5bb(wcel(c0, c1), wbr(c0, ccnv(cep), c2), wcel(c2, c0), wbr(c2, cep, c0))\n  relbrcnv(c0, cep, c2)\n  rele()\n  epelg(c0, c1, c2)\n}","pretty":"thm brcnvep(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c0[`' ∈]c2 ↔ c2 ∈ c0))\n} = {\n  syl5bb(c0 ∈ c1, c0[`' ∈]c2, c2 ∈ c0, c2[∈]c0)\n  relbrcnv(c0, cep, c2)\n  rele()\n  epelg(c0, c1, c2)\n}","parent":["syl5bb","relbrcnv","rele","epelg"],"children":["brcnvepres","eccnvepres","eleccnvep","cnvepres","rnxrncnvepres","dfcoels","br1cossincnvepres","br1cossxrncnvepres","dfeldisj5"]},{"name":"elecALTV","content":"Elementhood in the ` R ` -coset of ` A ` . Theorem 72 of [Suppes] p. 82. (I think we should replace ~ elecg with this original form of Suppes. Peter Mazsa) (Contributed by Mario Carneiro, 9-Jul-2014.)","origin":"thm elecALTV(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wcel(c2, cec(c0, c4)), wbr(c0, c4, c2)))\n} = {\n  3bitr4g(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c2, cec(c0, c4)), wbr(c0, c4, c2), wcel(c2, cima(c4, csn(c0))), wcel(cop(c0, c2), c4))\n  elimasng(c0, c1, c2, c3, c4)\n  eleq2i(c2, cec(c0, c4), cima(c4, csn(c0)))\n  df-ec(c0, c4)\n  df-br(c0, c4, c2)\n}","pretty":"thm elecALTV(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(c2 ∈[c0]c4 ↔ c0[c4]c2))\n} = {\n  3bitr4g((c0 ∈ c1 ∧ c2 ∈ c3), c2 ∈[c0]c4, c0[c4]c2, c2 ∈(c4 \" { c0 }), < c0, c2 > ∈ c4)\n  elimasng(c0, c1, c2, c3, c4)\n  eleq2i(c2, [c0]c4, (c4 \" { c0 }))\n  df-ec(c0, c4)\n  df-br(c0, c4, c2)\n}","parent":["3bitr4g","elimasng","eleq2i","df-ec","df-br"],"children":["eldm4","exan3","exanres3","ecin0","dfcoss2","eldm1cossres2","eqvrelth","eqvreldisj","eqvrelqsel","erim2"]},{"name":"brcnvepres","content":"Restricted converse epsilon binary relation. (Contributed by Peter Mazsa, 10-Feb-2018.)","origin":"thm brcnvepres(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wbr(c0, cres(ccnv(cep), c4), c2), wa(wcel(c0, c4), wcel(c2, c0))))\n} = {\n  sylan9bbr(wcel(c0, c1), wcel(c2, c3), wbr(c0, cres(ccnv(cep), c4), c2), wa(wcel(c0, c4), wcel(c2, c0)), wa(wcel(c0, c4), wbr(c0, ccnv(cep), c2)))\n  brres(c2, c3, c0, ccnv(cep), c4)\n  anbi2d(wcel(c0, c1), wcel(c0, c4), wbr(c0, ccnv(cep), c2), wcel(c2, c0))\n  brcnvep(c0, c1, c2)\n}","pretty":"thm brcnvepres(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(c0[(`' ∈ |` c4)]c2 ↔(c0 ∈ c4 ∧ c2 ∈ c0)))\n} = {\n  sylan9bbr(c0 ∈ c1, c2 ∈ c3, c0[(`' ∈ |` c4)]c2, (c0 ∈ c4 ∧ c2 ∈ c0), (c0 ∈ c4 ∧ c0[`' ∈]c2))\n  brres(c2, c3, c0, `' ∈, c4)\n  anbi2d(c0 ∈ c1, c0 ∈ c4, c0[`' ∈]c2, c2 ∈ c0)\n  brcnvep(c0, c1, c2)\n}","parent":["sylan9bbr","brres","anbi2d","brcnvep"],"children":["dfeldisj3","dfeldisj4"]},{"name":"brres2","content":"Binary relation on a restriction. (Contributed by Peter Mazsa, 2-Jan-2019.) (Revised by Peter Mazsa, 16-Dec-2021.)","origin":"thm brres2(class c0, class c1, class c2, class c3) {\n  |- wb(wbr(c0, cres(c1, c2), c3), wbr(c0, cin(c1, cxp(c2, crn(cres(c1, c2)))), c3))\n} = {\n  3bitr4i(wbr(c0, cres(c1, c2), c3), wbr(c0, cin(c1, cxp(c2, crn(cres(c1, c2)))), c3), wa(wcel(c3, crn(cres(c1, c2))), wbr(c0, cres(c1, c2), c3)), wa(wcel(c3, crn(cres(c1, c2))), wa(wcel(c0, c2), wbr(c0, c1, c3))))\n  pm5.32i(wcel(c3, crn(cres(c1, c2))), wbr(c0, cres(c1, c2), c3), wa(wcel(c0, c2), wbr(c0, c1, c3)))\n  brres(c3, crn(cres(c1, c2)), c0, c1, c2)\n  pm4.71ri(wbr(c0, cres(c1, c2), c3), wcel(c3, crn(cres(c1, c2))))\n  relelrni(c0, cres(c1, c2), c3)\n  relres(c1, c2)\n  3bitr2i(wbr(c0, cin(c1, cxp(c2, crn(cres(c1, c2)))), c3), wa(wcel(c3, crn(cres(c1, c2))), wa(wcel(c0, c2), wbr(c0, c1, c3))), wa(wa(wcel(c0, c2), wcel(c3, crn(cres(c1, c2)))), wbr(c0, c1, c3)), w3a(wcel(c0, c2), wcel(c3, crn(cres(c1, c2))), wbr(c0, c1, c3)))\n  brinxp2(c0, c1, c2, crn(cres(c1, c2)), c3)\n  df-3an(wcel(c0, c2), wcel(c3, crn(cres(c1, c2))), wbr(c0, c1, c3))\n  3anan12(wcel(c0, c2), wcel(c3, crn(cres(c1, c2))), wbr(c0, c1, c3))\n}","pretty":"thm brres2(class c0, class c1, class c2, class c3) {\n  ⊢ (c0[(c1 |` c2)]c3 ↔ c0[(c1 ⋂(c2 × ran((c1 |` c2))))]c3)\n} = {\n  3bitr4i(c0[(c1 |` c2)]c3, c0[(c1 ⋂(c2 × ran((c1 |` c2))))]c3, (c3 ∈ ran((c1 |` c2))∧ c0[(c1 |` c2)]c3), (c3 ∈ ran((c1 |` c2))∧(c0 ∈ c2 ∧ c0[c1]c3)))\n  pm5.32i(c3 ∈ ran((c1 |` c2)), c0[(c1 |` c2)]c3, (c0 ∈ c2 ∧ c0[c1]c3))\n  brres(c3, ran((c1 |` c2)), c0, c1, c2)\n  pm4.71ri(c0[(c1 |` c2)]c3, c3 ∈ ran((c1 |` c2)))\n  relelrni(c0, (c1 |` c2), c3)\n  relres(c1, c2)\n  3bitr2i(c0[(c1 ⋂(c2 × ran((c1 |` c2))))]c3, (c3 ∈ ran((c1 |` c2))∧(c0 ∈ c2 ∧ c0[c1]c3)), ((c0 ∈ c2 ∧ c3 ∈ ran((c1 |` c2)))∧ c0[c1]c3), (c0 ∈ c2 ∧ c3 ∈ ran((c1 |` c2))∧ c0[c1]c3))\n  brinxp2(c0, c1, c2, ran((c1 |` c2)), c3)\n  df-3an(c0 ∈ c2, c3 ∈ ran((c1 |` c2)), c0[c1]c3)\n  3anan12(c0 ∈ c2, c3 ∈ ran((c1 |` c2)), c0[c1]c3)\n}","parent":["3bitr4i","pm5.32i","brres","pm4.71ri","relelrni","relres","3bitr2i","brinxp2","df-3an","3anan12"],"children":["brinxprnres"]},{"name":"eldmres","content":"Elementhood in the domain of a restriction. (Contributed by Peter Mazsa, 9-Jan-2019.)","origin":"thm eldmres(setvar s0, class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, cdm(cres(c2, c3))), wa(wcel(c0, c3), wex(s0, wbr(c0, c2, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  syl6bb(wcel(c0, c1), wcel(c0, cdm(cres(c2, c3))), wa(wcel(c0, c3), wex(s0, wbr(c0, c2, cv(s0)))), wex(s0, wbr(c0, cres(c2, c3), cv(s0))))\n  eldmg(s0, c0, c1, cres(c2, c3))\n  bitri(wex(s0, wbr(c0, cres(c2, c3), cv(s0))), wa(wcel(c0, c3), wex(s0, wbr(c0, c2, cv(s0)))), wex(s0, wa(wcel(c0, c3), wbr(c0, c2, cv(s0)))))\n  exbii(s0, wbr(c0, cres(c2, c3), cv(s0)), wa(wcel(c0, c3), wbr(c0, c2, cv(s0))))\n  elv(s0, wb(wbr(c0, cres(c2, c3), cv(s0)), wa(wcel(c0, c3), wbr(c0, c2, cv(s0)))))\n  brres(cv(s0), universe, c0, c2, c3)\n  19.42v(s0, wcel(c0, c3), wbr(c0, c2, cv(s0)))\n  diff.cres.s(s0, c2, c3)\n  diff.wcel.s(s0, c0, c3)\n}","pretty":"thm eldmres(setvar s0, class c0, class c1, class c2, class c3) {\n  ⊢ (c0 ∈ c1 →(c0 ∈ dom((c2 |` c3))↔(c0 ∈ c3 ∧ ∃(s0, c0[c2]s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n} = {\n  syl6bb(c0 ∈ c1, c0 ∈ dom((c2 |` c3)), (c0 ∈ c3 ∧ ∃(s0, c0[c2]s0)), ∃(s0, c0[(c2 |` c3)]s0))\n  eldmg(s0, c0, c1, (c2 |` c3))\n  bitri(∃(s0, c0[(c2 |` c3)]s0), (c0 ∈ c3 ∧ ∃(s0, c0[c2]s0)), ∃(s0,(c0 ∈ c3 ∧ c0[c2]s0)))\n  exbii(s0, c0[(c2 |` c3)]s0, (c0 ∈ c3 ∧ c0[c2]s0))\n  elv(s0, (c0[(c2 |` c3)]s0 ↔(c0 ∈ c3 ∧ c0[c2]s0)))\n  brres(s0, universe, c0, c2, c3)\n  19.42v(s0, c0 ∈ c3, c0[c2]s0)\n  diff.cres.s(s0, c2, c3)\n  diff.wcel.s(s0, c0, c3)\n}","parent":["syl6bb","eldmg","bitri","exbii","elv","brres","19.42v","diff.cres.s","diff.wcel.s"],"children":["eldmres2"]},{"name":"eldm4","content":"Elementhood in a domain. (Contributed by Peter Mazsa, 24-Oct-2018.)","origin":"thm eldm4(setvar s0, class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, cdm(c2)), wex(s0, wcel(cv(s0), cec(c0, c2)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  bitr4d(wcel(c0, c1), wcel(c0, cdm(c2)), wex(s0, wcel(cv(s0), cec(c0, c2))), wex(s0, wbr(c0, c2, cv(s0))))\n  eldmg(s0, c0, c1, c2)\n  exbidv(s0, wcel(c0, c1), wcel(cv(s0), cec(c0, c2)), wbr(c0, c2, cv(s0)))\n  elvd(s0, wcel(c0, c1), wb(wcel(cv(s0), cec(c0, c2)), wbr(c0, c2, cv(s0))))\n  elecALTV(c0, c1, cv(s0), universe, c2)\n  diff.wcel.s(s0, c0, c1)\n}","pretty":"thm eldm4(setvar s0, class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c0 ∈ dom(c2)↔ ∃(s0, s0 ∈[c0]c2)))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n} = {\n  bitr4d(c0 ∈ c1, c0 ∈ dom(c2), ∃(s0, s0 ∈[c0]c2), ∃(s0, c0[c2]s0))\n  eldmg(s0, c0, c1, c2)\n  exbidv(s0, c0 ∈ c1, s0 ∈[c0]c2, c0[c2]s0)\n  elvd(s0, c0 ∈ c1, (s0 ∈[c0]c2 ↔ c0[c2]s0))\n  elecALTV(c0, c1, s0, universe, c2)\n  diff.wcel.s(s0, c0, c1)\n}","parent":["bitr4d","eldmg","exbidv","elvd","elecALTV","diff.wcel.s"],"children":["eldmres2"]},{"name":"eldmres2","content":"Elementhood in the domain of a restriction. (Contributed by Peter Mazsa, 21-Aug-2020.)","origin":"thm eldmres2(setvar s0, class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, cdm(cres(c2, c3))), wa(wcel(c0, c3), wex(s0, wcel(cv(s0), cec(c0, c2))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  bitrd(wcel(c0, c1), wcel(c0, cdm(cres(c2, c3))), wa(wcel(c0, c3), wex(s0, wcel(cv(s0), cec(c0, c2)))), wa(wcel(c0, c3), wex(s0, wbr(c0, c2, cv(s0)))))\n  eldmres(s0, c0, c1, c2, c3)\n  anbi2d(wcel(c0, c1), wcel(c0, c3), wex(s0, wbr(c0, c2, cv(s0))), wex(s0, wcel(cv(s0), cec(c0, c2))))\n  bitr3d(wcel(c0, c1), wex(s0, wbr(c0, c2, cv(s0))), wex(s0, wcel(cv(s0), cec(c0, c2))), wcel(c0, cdm(c2)))\n  eldmg(s0, c0, c1, c2)\n  eldm4(s0, c0, c1, c2)\n}","pretty":"thm eldmres2(setvar s0, class c0, class c1, class c2, class c3) {\n  ⊢ (c0 ∈ c1 →(c0 ∈ dom((c2 |` c3))↔(c0 ∈ c3 ∧ ∃(s0, s0 ∈[c0]c2))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n} = {\n  bitrd(c0 ∈ c1, c0 ∈ dom((c2 |` c3)), (c0 ∈ c3 ∧ ∃(s0, s0 ∈[c0]c2)), (c0 ∈ c3 ∧ ∃(s0, c0[c2]s0)))\n  eldmres(s0, c0, c1, c2, c3)\n  anbi2d(c0 ∈ c1, c0 ∈ c3, ∃(s0, c0[c2]s0), ∃(s0, s0 ∈[c0]c2))\n  bitr3d(c0 ∈ c1, ∃(s0, c0[c2]s0), ∃(s0, s0 ∈[c0]c2), c0 ∈ dom(c2))\n  eldmg(s0, c0, c1, c2)\n  eldm4(s0, c0, c1, c2)\n}","parent":["bitrd","eldmres","anbi2d","bitr3d","eldmg","eldm4"],"children":["eldmqsres"]},{"name":"eceq1i","content":"Equality theorem for ` C ` -coset of ` A ` and ` C ` -coset of ` B ` , inference version. (Contributed by Peter Mazsa, 11-May-2021.)","origin":"thm eceq1i(class c0, class c1, class c2) {\n  |- wceq(cec(c0, c1), cec(c2, c1))\n  -| wceq(c0, c2)\n} = {\n  ax-mp(wceq(cec(c0, c1), cec(c2, c1)), wceq(c0, c2))\n  eceq1(c0, c2, c1)\n}","pretty":"thm eceq1i(class c0, class c1, class c2) {\n  ⊢ [c0]c1 =[c2]c1\n  ⊣ c0 = c2\n} = {\n  ax-mp([c0]c1 =[c2]c1, c0 = c2)\n  eceq1(c0, c2, c1)\n}","parent":["ax-mp","eceq1"],"children":[]},{"name":"elecres","content":"Elementhood in the restricted coset of ` B ` . (Contributed by Peter Mazsa, 21-Sep-2018.)","origin":"thm elecres(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, cec(c2, cres(c3, c4))), wa(wcel(c2, c4), wbr(c2, c3, c0))))\n} = {\n  syl5bb(wcel(c0, c1), wcel(c0, cec(c2, cres(c3, c4))), wa(wcel(c2, c4), wbr(c2, c3, c0)), wbr(c2, cres(c3, c4), c0))\n  ax-mp(wb(wcel(c0, cec(c2, cres(c3, c4))), wbr(c2, cres(c3, c4), c0)), wrel(cres(c3, c4)))\n  relres(c3, c4)\n  relelec(cres(c3, c4), c0, c2)\n  brres(c0, c1, c2, c3, c4)\n}","pretty":"thm elecres(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 →(c0 ∈[c2](c3 |` c4)↔(c2 ∈ c4 ∧ c2[c3]c0)))\n} = {\n  syl5bb(c0 ∈ c1, c0 ∈[c2](c3 |` c4), (c2 ∈ c4 ∧ c2[c3]c0), c2[(c3 |` c4)]c0)\n  ax-mp((c0 ∈[c2](c3 |` c4)↔ c2[(c3 |` c4)]c0), Rel((c3 |` c4)))\n  relres(c3, c4)\n  relelec((c3 |` c4), c0, c2)\n  brres(c0, c1, c2, c3, c4)\n}","parent":["syl5bb","ax-mp","relres","relelec","brres"],"children":["ecres","ecres2"]},{"name":"ecres","content":"Restricted coset of ` B ` . (Contributed by Peter Mazsa, 9-Dec-2018.)","origin":"thm ecres(setvar s0, class c0, class c1, class c2) {\n  |- wceq(cec(c0, cres(c1, c2)), cab(s0, wa(wcel(c0, c2), wbr(c0, c1, cv(s0)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  abbi2i(s0, cec(c0, cres(c1, c2)), wa(wcel(c0, c2), wbr(c0, c1, cv(s0))))\n  elv(s0, wb(wcel(cv(s0), cec(c0, cres(c1, c2))), wa(wcel(c0, c2), wbr(c0, c1, cv(s0)))))\n  elecres(cv(s0), universe, c0, c1, c2)\n  diff.cec.s(s0, c0, cres(c1, c2))\n  diff.cres.s(s0, c1, c2)\n}","pretty":"thm ecres(setvar s0, class c0, class c1, class c2) {\n  ⊢ [c0](c1 |` c2)= { s0 |(c0 ∈ c2 ∧ c0[c1]s0)}\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n} = {\n  abbi2i(s0, [c0](c1 |` c2), (c0 ∈ c2 ∧ c0[c1]s0))\n  elv(s0, (s0 ∈[c0](c1 |` c2)↔(c0 ∈ c2 ∧ c0[c1]s0)))\n  elecres(s0, universe, c0, c1, c2)\n  diff.cec.s(s0, c0, (c1 |` c2))\n  diff.cres.s(s0, c1, c2)\n}","parent":["abbi2i","elv","elecres","diff.cec.s","diff.cres.s"],"children":["eccnvepres"]},{"name":"ecres2","content":"The restricted coset of ` B ` when ` B ` is an element of the restriction. (Contributed by Peter Mazsa, 16-Oct-2018.)","origin":"thm ecres2(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wceq(cec(c0, cres(c2, c1)), cec(c0, c2)))\n} = {\n  eqtr4d(cec(c0, cres(c2, c1)), cec(c0, c2), cab(hs0, wbr(c0, c2, cv(hs0))), wcel(c0, c1))\n  abbi2dv(hs0, cec(c0, cres(c2, c1)), wcel(c0, c1), wbr(c0, c2, cv(hs0)))\n  baib(wcel(c0, c1), wcel(cv(hs0), cec(c0, cres(c2, c1))), wbr(c0, c2, cv(hs0)))\n  elv(hs0, wb(wcel(cv(hs0), cec(c0, cres(c2, c1))), wa(wcel(c0, c1), wbr(c0, c2, cv(hs0)))))\n  elecres(cv(hs0), universe, c0, c2, c1)\n  dfec2(hs0, c0, c1, c2)\n  diff.hs0.c(cec(c0, cres(c2, c1)))\n  diff.hs0.w(wcel(c0, c1))\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","pretty":"thm ecres2(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →[c0](c2 |` c1)=[c0]c2)\n} = {\n  eqtr4d([c0](c2 |` c1), [c0]c2, { hs0 | c0[c2]hs0 }, c0 ∈ c1)\n  abbi2dv(hs0, [c0](c2 |` c1), c0 ∈ c1, c0[c2]hs0)\n  baib(c0 ∈ c1, hs0 ∈[c0](c2 |` c1), c0[c2]hs0)\n  elv(hs0, (hs0 ∈[c0](c2 |` c1)↔(c0 ∈ c1 ∧ c0[c2]hs0)))\n  elecres(hs0, universe, c0, c2, c1)\n  dfec2(hs0, c0, c1, c2)\n  diff.hs0.c([c0](c2 |` c1))\n  diff.hs0.w(c0 ∈ c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","parent":["eqtr4d","abbi2dv","baib","elv","elecres","dfec2","diff.hs0.c","diff.hs0.w"],"children":["eccnvepres2","eldmqsres","qsresid","ecex2"]},{"name":"eccnvepres","content":"Restricted converse epsilon coset of ` B ` . (Contributed by Peter Mazsa, 11-Feb-2018.) (Revised by Peter Mazsa, 21-Oct-2021.)","origin":"thm eccnvepres(setvar s0, class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wceq(cec(c0, cres(ccnv(cep), c2)), crab(s0, c0, wcel(c0, c2))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  3eqtr4g(cec(c0, cres(ccnv(cep), c2)), crab(s0, c0, wcel(c0, c2)), cab(s0, wa(wcel(c0, c2), wbr(c0, ccnv(cep), cv(s0)))), cab(s0, wa(wcel(cv(s0), c0), wcel(c0, c2))), wcel(c0, c1))\n  abbidv(s0, wcel(c0, c1), wa(wcel(c0, c2), wbr(c0, ccnv(cep), cv(s0))), wa(wcel(cv(s0), c0), wcel(c0, c2)))\n  anbi1cd(wcel(c0, c1), wcel(c0, c2), wbr(c0, ccnv(cep), cv(s0)), wcel(cv(s0), c0))\n  brcnvep(c0, c1, cv(s0))\n  ecres(s0, c0, ccnv(cep), c2)\n  df-rab(s0, c0, wcel(c0, c2))\n  diff.wcel.s(s0, c0, c1)\n  diff.ccnv.s(s0, cep)\n  diff.cep.s(s0)\n}","pretty":"thm eccnvepres(setvar s0, class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →[c0](`' ∈ |` c2)= { s0 ∈ c0 | c0 ∈ c2 })\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n} = {\n  3eqtr4g([c0](`' ∈ |` c2), { s0 ∈ c0 | c0 ∈ c2 }, { s0 |(c0 ∈ c2 ∧ c0[`' ∈]s0)}, { s0 |(s0 ∈ c0 ∧ c0 ∈ c2)}, c0 ∈ c1)\n  abbidv(s0, c0 ∈ c1, (c0 ∈ c2 ∧ c0[`' ∈]s0), (s0 ∈ c0 ∧ c0 ∈ c2))\n  anbi1cd(c0 ∈ c1, c0 ∈ c2, c0[`' ∈]s0, s0 ∈ c0)\n  brcnvep(c0, c1, s0)\n  ecres(s0, c0, `' ∈, c2)\n  df-rab(s0, c0, c0 ∈ c2)\n  diff.wcel.s(s0, c0, c1)\n  diff.ccnv.s(s0, cep)\n  diff.cep.s(s0)\n}","parent":["3eqtr4g","abbidv","anbi1cd","brcnvep","ecres","df-rab","diff.wcel.s","diff.ccnv.s","diff.cep.s"],"children":[]},{"name":"eleccnvep","content":"Elementhood in the converse epsilon coset of ` A ` is elementhood in ` A ` . (Contributed by Peter Mazsa, 27-Jan-2019.)","origin":"thm eleccnvep(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wcel(c2, cec(c0, ccnv(cep))), wcel(c2, c0)))\n} = {\n  syl5bb(wcel(c0, c1), wcel(c2, cec(c0, ccnv(cep))), wcel(c2, c0), wbr(c0, ccnv(cep), c2))\n  ax-mp(wb(wcel(c2, cec(c0, ccnv(cep))), wbr(c0, ccnv(cep), c2)), wrel(ccnv(cep)))\n  relcnv(cep)\n  relelec(ccnv(cep), c2, c0)\n  brcnvep(c0, c1, c2)\n}","pretty":"thm eleccnvep(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c2 ∈[c0]`' ∈ ↔ c2 ∈ c0))\n} = {\n  syl5bb(c0 ∈ c1, c2 ∈[c0]`' ∈, c2 ∈ c0, c0[`' ∈]c2)\n  ax-mp((c2 ∈[c0]`' ∈ ↔ c0[`' ∈]c2), Rel(`' ∈))\n  relcnv(cep)\n  relelec(`' ∈, c2, c0)\n  brcnvep(c0, c1, c2)\n}","parent":["syl5bb","ax-mp","relcnv","relelec","brcnvep"],"children":["eccnvep"]},{"name":"eccnvep","content":"The converse epsilon coset of a set is the set. (Contributed by Peter Mazsa, 27-Jan-2019.)","origin":"thm eccnvep(class c0, class c1) {\n  |- wi(wcel(c0, c1), wceq(cec(c0, ccnv(cep)), c0))\n} = {\n  eqrdv(hs0, cec(c0, ccnv(cep)), c0, wcel(c0, c1))\n  eleccnvep(c0, c1, cv(hs0))\n  diff.hs0.c(cec(c0, ccnv(cep)))\n  diff.hs0.c(c0)\n  diff.hs0.w(wcel(c0, c1))\n}","pretty":"thm eccnvep(class c0, class c1) {\n  ⊢ (c0 ∈ c1 →[c0]`' ∈ = c0)\n} = {\n  eqrdv(hs0, [c0]`' ∈, c0, c0 ∈ c1)\n  eleccnvep(c0, c1, hs0)\n  diff.hs0.c([c0]`' ∈)\n  diff.hs0.c(c0)\n  diff.hs0.w(c0 ∈ c1)\n}","parent":["eqrdv","eleccnvep","diff.hs0.c","diff.hs0.w"],"children":["extep","eccnvepres2","dfeldisj5"]},{"name":"extep","content":"Property of epsilon relation, see also ~ extid , ~ extssr and the comment of ~ df-ssr . (Contributed by Peter Mazsa, 10-Jul-2019.)","origin":"thm extep(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wceq(cec(c0, ccnv(cep)), cec(c2, ccnv(cep))), wceq(c0, c2)))\n} = {\n  eqeqan12d(cec(c0, ccnv(cep)), cec(c2, ccnv(cep)), c0, c2, wcel(c0, c1), wcel(c2, c3))\n  eccnvep(c0, c1)\n  eccnvep(c2, c3)\n}","pretty":"thm extep(class c0, class c1, class c2, class c3) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→([c0]`' ∈ =[c2]`' ∈ ↔ c0 = c2))\n} = {\n  eqeqan12d([c0]`' ∈, [c2]`' ∈, c0, c2, c0 ∈ c1, c2 ∈ c3)\n  eccnvep(c0, c1)\n  eccnvep(c2, c3)\n}","parent":["eqeqan12d","eccnvep"],"children":[]},{"name":"eccnvepres2","content":"The restricted converse epsilon coset of an element of the restriction is the element itself. (Contributed by Peter Mazsa, 16-Jul-2019.)","origin":"thm eccnvepres2(class c0, class c1) {\n  |- wi(wcel(c0, c1), wceq(cec(c0, cres(ccnv(cep), c1)), c0))\n} = {\n  eqtrd(cec(c0, cres(ccnv(cep), c1)), c0, cec(c0, ccnv(cep)), wcel(c0, c1))\n  ecres2(c0, c1, ccnv(cep))\n  eccnvep(c0, c1)\n}","pretty":"thm eccnvepres2(class c0, class c1) {\n  ⊢ (c0 ∈ c1 →[c0](`' ∈ |` c1)= c0)\n} = {\n  eqtrd([c0](`' ∈ |` c1), c0, [c0]`' ∈, c0 ∈ c1)\n  ecres2(c0, c1, `' ∈)\n  eccnvep(c0, c1)\n}","parent":["eqtrd","ecres2","eccnvep"],"children":["eccnvepres3"]},{"name":"eccnvepres3","content":"Condition for a restricted converse epsilon coset of a set to be the set itself. (Contributed by Peter Mazsa, 11-May-2021.)","origin":"thm eccnvepres3(class c0, class c1) {\n  |- wi(wcel(c0, cdm(cres(ccnv(cep), c1))), wceq(cec(c0, cres(ccnv(cep), c1)), c0))\n} = {\n  syl5eqr(cec(c0, cres(ccnv(cep), c1)), c0, cec(c0, cres(ccnv(cep), cdm(cres(ccnv(cep), c1)))), wcel(c0, cdm(cres(ccnv(cep), c1))))\n  eceq2i(c0, cres(ccnv(cep), cdm(cres(ccnv(cep), c1))), cres(ccnv(cep), c1))\n  resdmres(ccnv(cep), c1)\n  eccnvepres2(c0, cdm(cres(ccnv(cep), c1)))\n}","pretty":"thm eccnvepres3(class c0, class c1) {\n  ⊢ (c0 ∈ dom((`' ∈ |` c1))→[c0](`' ∈ |` c1)= c0)\n} = {\n  syl5eqr([c0](`' ∈ |` c1), c0, [c0](`' ∈ |` dom((`' ∈ |` c1))), c0 ∈ dom((`' ∈ |` c1)))\n  eceq2i(c0, (`' ∈ |` dom((`' ∈ |` c1))), (`' ∈ |` c1))\n  resdmres(`' ∈, c1)\n  eccnvepres2(c0, dom((`' ∈ |` c1)))\n}","parent":["syl5eqr","eceq2i","resdmres","eccnvepres2"],"children":[]},{"name":"eldmqsres","content":"Elementhood in a restricted domain quotient set. (Contributed by Peter Mazsa, 21-Aug-2020.)","origin":"thm eldmqsres(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, cqs(cdm(cres(c2, c3)), cres(c2, c3))), wrex(s0, c3, wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n} = {\n  syl6bb(wcel(c0, c1), wcel(c0, cqs(cdm(cres(c2, c3)), cres(c2, c3))), wrex(s0, c3, wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2)))), wrex(s0, cdm(cres(c2, c3)), wceq(c0, cec(cv(s0), cres(c2, c3)))))\n  elqsg(s0, c0, c1, cdm(cres(c2, c3)), cres(c2, c3))\n  rexbii2(s0, cdm(cres(c2, c3)), c3, wceq(c0, cec(cv(s0), cres(c2, c3))), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2))))\n  bitri(wa(wcel(cv(s0), cdm(cres(c2, c3))), wceq(c0, cec(cv(s0), cres(c2, c3)))), wa(wcel(cv(s0), c3), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2)))), wa(wa(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2)))), wceq(c0, cec(cv(s0), cres(c2, c3)))))\n  anbi1i(wcel(cv(s0), cdm(cres(c2, c3))), wceq(c0, cec(cv(s0), cres(c2, c3))), wa(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2)))))\n  elv(s0, wb(wcel(cv(s0), cdm(cres(c2, c3))), wa(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2))))))\n  eldmres2(s1, cv(s0), universe, c2, c3)\n  3bitr4i(wa(wa(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2)))), wceq(c0, cec(cv(s0), cres(c2, c3)))), wa(wcel(cv(s0), c3), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2)))), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wa(wcel(cv(s0), c3), wceq(c0, cec(cv(s0), cres(c2, c3))))), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wa(wcel(cv(s0), c3), wceq(c0, cec(cv(s0), c2)))))\n  anbi2i(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wa(wcel(cv(s0), c3), wceq(c0, cec(cv(s0), cres(c2, c3)))), wa(wcel(cv(s0), c3), wceq(c0, cec(cv(s0), c2))))\n  pm5.32i(wcel(cv(s0), c3), wceq(c0, cec(cv(s0), cres(c2, c3))), wceq(c0, cec(cv(s0), c2)))\n  eqeq2d(c0, cec(cv(s0), cres(c2, c3)), cec(cv(s0), c2), wcel(cv(s0), c3))\n  ecres2(cv(s0), c3, c2)\n  3bitr3i(wa(wa(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2)))), wceq(c0, cec(cv(s0), cres(c2, c3)))), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wa(wcel(cv(s0), c3), wceq(c0, cec(cv(s0), cres(c2, c3))))), w3a(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), cres(c2, c3)))), w3a(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wcel(cv(s0), c3), wceq(c0, cec(cv(s0), cres(c2, c3)))))\n  3ancoma(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), cres(c2, c3))))\n  df-3an(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), cres(c2, c3))))\n  3anass(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wcel(cv(s0), c3), wceq(c0, cec(cv(s0), cres(c2, c3))))\n  an12(wcel(cv(s0), c3), wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2)))\n  diff.cdm.s(s0, cres(c2, c3))\n  diff.cres.s(s0, c2, c3)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.universe.s(s1)\n}","pretty":"thm eldmqsres(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  ⊢ (c0 ∈ c1 →(c0 ∈(dom((c2 |` c3))/.(c2 |` c3))↔ ∃(s0 ∈ c3,(∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n  ⊣ d(s1, c2)\n  ⊣ d(s1, c3)\n} = {\n  syl6bb(c0 ∈ c1, c0 ∈(dom((c2 |` c3))/.(c2 |` c3)), ∃(s0 ∈ c3,(∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2)), ∃(s0 ∈ dom((c2 |` c3)), c0 =[s0](c2 |` c3)))\n  elqsg(s0, c0, c1, dom((c2 |` c3)), (c2 |` c3))\n  rexbii2(s0, dom((c2 |` c3)), c3, c0 =[s0](c2 |` c3), (∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2))\n  bitri((s0 ∈ dom((c2 |` c3))∧ c0 =[s0](c2 |` c3)), (s0 ∈ c3 ∧(∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2)), ((s0 ∈ c3 ∧ ∃(s1, s1 ∈[s0]c2))∧ c0 =[s0](c2 |` c3)))\n  anbi1i(s0 ∈ dom((c2 |` c3)), c0 =[s0](c2 |` c3), (s0 ∈ c3 ∧ ∃(s1, s1 ∈[s0]c2)))\n  elv(s0, (s0 ∈ dom((c2 |` c3))↔(s0 ∈ c3 ∧ ∃(s1, s1 ∈[s0]c2))))\n  eldmres2(s1, s0, universe, c2, c3)\n  3bitr4i(((s0 ∈ c3 ∧ ∃(s1, s1 ∈[s0]c2))∧ c0 =[s0](c2 |` c3)), (s0 ∈ c3 ∧(∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2)), (∃(s1, s1 ∈[s0]c2)∧(s0 ∈ c3 ∧ c0 =[s0](c2 |` c3))), (∃(s1, s1 ∈[s0]c2)∧(s0 ∈ c3 ∧ c0 =[s0]c2)))\n  anbi2i(∃(s1, s1 ∈[s0]c2), (s0 ∈ c3 ∧ c0 =[s0](c2 |` c3)), (s0 ∈ c3 ∧ c0 =[s0]c2))\n  pm5.32i(s0 ∈ c3, c0 =[s0](c2 |` c3), c0 =[s0]c2)\n  eqeq2d(c0, [s0](c2 |` c3), [s0]c2, s0 ∈ c3)\n  ecres2(s0, c3, c2)\n  3bitr3i(((s0 ∈ c3 ∧ ∃(s1, s1 ∈[s0]c2))∧ c0 =[s0](c2 |` c3)), (∃(s1, s1 ∈[s0]c2)∧(s0 ∈ c3 ∧ c0 =[s0](c2 |` c3))), (s0 ∈ c3 ∧ ∃(s1, s1 ∈[s0]c2)∧ c0 =[s0](c2 |` c3)), (∃(s1, s1 ∈[s0]c2)∧ s0 ∈ c3 ∧ c0 =[s0](c2 |` c3)))\n  3ancoma(s0 ∈ c3, ∃(s1, s1 ∈[s0]c2), c0 =[s0](c2 |` c3))\n  df-3an(s0 ∈ c3, ∃(s1, s1 ∈[s0]c2), c0 =[s0](c2 |` c3))\n  3anass(∃(s1, s1 ∈[s0]c2), s0 ∈ c3, c0 =[s0](c2 |` c3))\n  an12(s0 ∈ c3, ∃(s1, s1 ∈[s0]c2), c0 =[s0]c2)\n  diff.cdm.s(s0, (c2 |` c3))\n  diff.cres.s(s0, c2, c3)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.universe.s(s1)\n}","parent":["syl6bb","elqsg","rexbii2","bitri","anbi1i","elv","eldmres2","3bitr4i","anbi2i","pm5.32i","eqeq2d","ecres2","3bitr3i","3ancoma","df-3an","3anass","an12","diff.cdm.s","diff.cres.s","diff.cv.s","diffss.ex","diff.universe.s"],"children":["eldmqsres2"]},{"name":"eldmqsres2","content":"Elementhood in a restricted domain quotient set. (Contributed by Peter Mazsa, 22-Aug-2020.)","origin":"thm eldmqsres2(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, cqs(cdm(cres(c2, c3)), cres(c2, c3))), wrex(s0, c3, wrex(s1, cec(cv(s0), c2), wceq(c0, cec(cv(s0), c2))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n} = {\n  syl6bbr(wcel(c0, c1), wcel(c0, cqs(cdm(cres(c2, c3)), cres(c2, c3))), wrex(s0, c3, wrex(s1, cec(cv(s0), c2), wceq(c0, cec(cv(s0), c2)))), wrex(s0, c3, wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2)))))\n  eldmqsres(s0, s1, c0, c1, c2, c3)\n  rexbii(s0, c3, wrex(s1, cec(cv(s0), c2), wceq(c0, cec(cv(s0), c2))), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2))))\n  bitri(wrex(s1, cec(cv(s0), c2), wceq(c0, cec(cv(s0), c2))), wa(wex(s1, wcel(cv(s1), cec(cv(s0), c2))), wceq(c0, cec(cv(s0), c2))), wex(s1, wa(wcel(cv(s1), cec(cv(s0), c2)), wceq(c0, cec(cv(s0), c2)))))\n  df-rex(s1, cec(cv(s0), c2), wceq(c0, cec(cv(s0), c2)))\n  19.41v(s1, wcel(cv(s1), cec(cv(s0), c2)), wceq(c0, cec(cv(s0), c2)))\n  diff.wceq.s(s1, c0, cec(cv(s0), c2))\n  diff.cec.s(s1, cv(s0), c2)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm eldmqsres2(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  ⊢ (c0 ∈ c1 →(c0 ∈(dom((c2 |` c3))/.(c2 |` c3))↔ ∃(s0 ∈ c3, ∃(s1 ∈[s0]c2, c0 =[s0]c2))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c2)\n  ⊣ d(s1, c3)\n} = {\n  syl6bbr(c0 ∈ c1, c0 ∈(dom((c2 |` c3))/.(c2 |` c3)), ∃(s0 ∈ c3, ∃(s1 ∈[s0]c2, c0 =[s0]c2)), ∃(s0 ∈ c3,(∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2)))\n  eldmqsres(s0, s1, c0, c1, c2, c3)\n  rexbii(s0, c3, ∃(s1 ∈[s0]c2, c0 =[s0]c2), (∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2))\n  bitri(∃(s1 ∈[s0]c2, c0 =[s0]c2), (∃(s1, s1 ∈[s0]c2)∧ c0 =[s0]c2), ∃(s1,(s1 ∈[s0]c2 ∧ c0 =[s0]c2)))\n  df-rex(s1, [s0]c2, c0 =[s0]c2)\n  19.41v(s1, s1 ∈[s0]c2, c0 =[s0]c2)\n  diff.wceq.s(s1, c0, [s0]c2)\n  diff.cec.s(s1, s0, c2)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["syl6bbr","eldmqsres","rexbii","bitri","df-rex","19.41v","diff.wceq.s","diff.cec.s","diff.cv.s","diffss.ex"],"children":["releldmqs"]},{"name":"qsss1","content":"Subclass theorem for quotient sets. (Contributed by Peter Mazsa, 12-Sep-2020.)","origin":"thm qsss1(class c0, class c1, class c2) {\n  |- wi(wss(c0, c1), wss(cqs(c0, c2), cqs(c1, c2)))\n} = {\n  3sstr4g(cqs(c0, c2), cqs(c1, c2), cab(hs0, wrex(hs1, c0, wceq(cv(hs0), cec(cv(hs1), c2)))), cab(hs0, wrex(hs1, c1, wceq(cv(hs0), cec(cv(hs1), c2)))), wss(c0, c1))\n  ss2abdv(hs0, wss(c0, c1), wrex(hs1, c0, wceq(cv(hs0), cec(cv(hs1), c2))), wrex(hs1, c1, wceq(cv(hs0), cec(cv(hs1), c2))))\n  ssrexv(hs1, c0, c1, wceq(cv(hs0), cec(cv(hs1), c2)))\n  df-qs(hs0, hs1, c0, c2)\n  df-qs(hs0, hs1, c1, c2)\n  diff.hs0.w(wss(c0, c1))\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c2)\n  diff.hs0.c(c2)\n  diff.hs0.c(c1)\n}","pretty":"thm qsss1(class c0, class c1, class c2) {\n  ⊢ (c0 ⊆ c1 →(c0 /. c2)⊆(c1 /. c2))\n} = {\n  3sstr4g((c0 /. c2), (c1 /. c2), { hs0 | ∃(hs1 ∈ c0, hs0 =[hs1]c2)}, { hs0 | ∃(hs1 ∈ c1, hs0 =[hs1]c2)}, c0 ⊆ c1)\n  ss2abdv(hs0, c0 ⊆ c1, ∃(hs1 ∈ c0, hs0 =[hs1]c2), ∃(hs1 ∈ c1, hs0 =[hs1]c2))\n  ssrexv(hs1, c0, c1, hs0 =[hs1]c2)\n  df-qs(hs0, hs1, c0, c2)\n  df-qs(hs0, hs1, c1, c2)\n  diff.hs0.w(c0 ⊆ c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c2)\n  diff.hs0.c(c2)\n  diff.hs0.c(c1)\n}","parent":["3sstr4g","ss2abdv","ssrexv","df-qs","diff.hs0.w","diff.hs1.c","diff.hs0.s","diff.hs0.c"],"children":[]},{"name":"qseq1i","content":"Equality theorem for quotient set, inference form. (Contributed by Peter Mazsa, 3-Jun-2021.)","origin":"thm qseq1i(class c0, class c1, class c2) {\n  |- wceq(cqs(c0, c1), cqs(c2, c1))\n  -| wceq(c0, c2)\n} = {\n  ax-mp(wceq(cqs(c0, c1), cqs(c2, c1)), wceq(c0, c2))\n  qseq1(c0, c2, c1)\n}","pretty":"thm qseq1i(class c0, class c1, class c2) {\n  ⊢ (c0 /. c1)=(c2 /. c1)\n  ⊣ c0 = c2\n} = {\n  ax-mp((c0 /. c1)=(c2 /. c1), c0 = c2)\n  qseq1(c0, c2, c1)\n}","parent":["ax-mp","qseq1"],"children":["dmqscoelseq"]},{"name":"qseq1d","content":"Equality theorem for quotient set, deduction form. (Contributed by Peter Mazsa, 27-May-2021.)","origin":"thm qseq1d(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(cqs(c0, c1), cqs(c2, c1)))\n  -| wi(w0, wceq(c0, c2))\n} = {\n  syl(w0, wceq(cqs(c0, c1), cqs(c2, c1)), wceq(c0, c2))\n  qseq1(c0, c2, c1)\n}","pretty":"thm qseq1d(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 /. c1)=(c2 /. c1))\n  ⊣ (w0 → c0 = c2)\n} = {\n  syl(w0, (c0 /. c1)=(c2 /. c1), c0 = c2)\n  qseq1(c0, c2, c1)\n}","parent":["syl","qseq1"],"children":["n0el3"]},{"name":"brinxprnres","content":"Binary relation on a restriction. (Contributed by Peter Mazsa, 2-Jan-2019.)","origin":"thm brinxprnres(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wb(wbr(c2, cin(c3, cxp(c4, crn(cres(c3, c4)))), c0), wa(wcel(c2, c4), wbr(c2, c3, c0))))\n} = {\n  syl5bbr(wcel(c0, c1), wbr(c2, cin(c3, cxp(c4, crn(cres(c3, c4)))), c0), wa(wcel(c2, c4), wbr(c2, c3, c0)), wbr(c2, cres(c3, c4), c0))\n  brres2(c2, c3, c4, c0)\n  brres(c0, c1, c2, c3, c4)\n}","pretty":"thm brinxprnres(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 →(c2[(c3 ⋂(c4 × ran((c3 |` c4))))]c0 ↔(c2 ∈ c4 ∧ c2[c3]c0)))\n} = {\n  syl5bbr(c0 ∈ c1, c2[(c3 ⋂(c4 × ran((c3 |` c4))))]c0, (c2 ∈ c4 ∧ c2[c3]c0), c2[(c3 |` c4)]c0)\n  brres2(c2, c3, c4, c0)\n  brres(c0, c1, c2, c3, c4)\n}","parent":["syl5bbr","brres2","brres"],"children":["inxprnres"]},{"name":"inxprnres","content":"Restriction of a class as a class of ordered pairs. (Contributed by Peter Mazsa, 2-Jan-2019.)","origin":"thm inxprnres(setvar s0, setvar s1, class c0, class c1) {\n  |- wceq(cin(c0, cxp(c1, crn(cres(c0, c1)))), copab(s0, s1, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1)))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  eqrelriiv(hs0, hs1, cin(c0, cxp(c1, crn(cres(c0, c1)))), copab(s0, s1, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1)))))\n  ax-mp(wrel(cin(c0, cxp(c1, crn(cres(c0, c1))))), wrel(cxp(c1, crn(cres(c0, c1)))))\n  relxp(c1, crn(cres(c0, c1)))\n  relin2(cxp(c1, crn(cres(c0, c1))), c0)\n  relopab(s0, s1, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1))))\n  3bitr2ri(wcel(cop(cv(hs0), cv(hs1)), cin(c0, cxp(c1, crn(cres(c0, c1))))), wcel(cop(cv(hs0), cv(hs1)), copab(s0, s1, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1))))), wa(wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(hs1))), wbr(cv(hs0), cin(c0, cxp(c1, crn(cres(c0, c1)))), cv(hs1)))\n  el2v(hs0, hs1, wb(wcel(cop(cv(hs0), cv(hs1)), copab(s0, s1, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1))))), wa(wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(hs1)))))\n  opelopabg(s0, s1, cv(hs0), universe, cv(hs1), universe, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1))), wa(wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(hs1))), wa(wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(s1))))\n  anbi12d(wceq(cv(s0), cv(hs0)), wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1)), wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(s1)))\n  eleq1w(s0, hs0, c1)\n  breq1(cv(s0), cv(hs0), c0, cv(s1))\n  anbi2d(wceq(cv(s1), cv(hs1)), wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(s1)), wbr(cv(hs0), c0, cv(hs1)))\n  breq2(cv(s1), cv(hs1), cv(hs0), c0)\n  elv(hs1, wb(wbr(cv(hs0), cin(c0, cxp(c1, crn(cres(c0, c1)))), cv(hs1)), wa(wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(hs1)))))\n  brinxprnres(cv(hs1), universe, cv(hs0), c0, c1)\n  df-br(cv(hs0), cin(c0, cxp(c1, crn(cres(c0, c1)))), cv(hs1))\n  diff.hs0.s(hs1)\n  diff.hs0.c(cin(c0, cxp(c1, crn(cres(c0, c1)))))\n  diff.hs0.c(copab(s0, s1, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1)))))\n  diff.hs1.c(cin(c0, cxp(c1, crn(cres(c0, c1)))))\n  diff.hs1.c(copab(s0, s1, wa(wcel(cv(s0), c1), wbr(cv(s0), c0, cv(s1)))))\n  diff.wa.s(s0, wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(hs1)))\n  diff.wcel.s(s0, cv(hs0), c1)\n  diff.wbr.s(s0, cv(hs0), c0, cv(hs1))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.wa.s(s1, wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(hs1)))\n  diff.wcel.s(s1, cv(hs0), c1)\n  diff.wbr.s(s1, cv(hs0), c0, cv(hs1))\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.cv.s(s1, hs1)\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n}","pretty":"thm inxprnres(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ (c0 ⋂(c1 × ran((c0 |` c1))))= { < s0, s1 > |(s0 ∈ c1 ∧ s0[c0]s1)}\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  eqrelriiv(hs0, hs1, (c0 ⋂(c1 × ran((c0 |` c1)))), { < s0, s1 > |(s0 ∈ c1 ∧ s0[c0]s1)})\n  ax-mp(Rel((c0 ⋂(c1 × ran((c0 |` c1))))), Rel((c1 × ran((c0 |` c1)))))\n  relxp(c1, ran((c0 |` c1)))\n  relin2((c1 × ran((c0 |` c1))), c0)\n  relopab(s0, s1, (s0 ∈ c1 ∧ s0[c0]s1))\n  3bitr2ri(< hs0, hs1 > ∈(c0 ⋂(c1 × ran((c0 |` c1)))), < hs0, hs1 > ∈ { < s0, s1 > |(s0 ∈ c1 ∧ s0[c0]s1)}, (hs0 ∈ c1 ∧ hs0[c0]hs1), hs0[(c0 ⋂(c1 × ran((c0 |` c1))))]hs1)\n  el2v(hs0, hs1, (< hs0, hs1 > ∈ { < s0, s1 > |(s0 ∈ c1 ∧ s0[c0]s1)} ↔(hs0 ∈ c1 ∧ hs0[c0]hs1)))\n  opelopabg(s0, s1, hs0, universe, hs1, universe, (s0 ∈ c1 ∧ s0[c0]s1), (hs0 ∈ c1 ∧ hs0[c0]hs1), (hs0 ∈ c1 ∧ hs0[c0]s1))\n  anbi12d(s0 = hs0, s0 ∈ c1, s0[c0]s1, hs0 ∈ c1, hs0[c0]s1)\n  eleq1w(s0, hs0, c1)\n  breq1(s0, hs0, c0, s1)\n  anbi2d(s1 = hs1, hs0 ∈ c1, hs0[c0]s1, hs0[c0]hs1)\n  breq2(s1, hs1, hs0, c0)\n  elv(hs1, (hs0[(c0 ⋂(c1 × ran((c0 |` c1))))]hs1 ↔(hs0 ∈ c1 ∧ hs0[c0]hs1)))\n  brinxprnres(hs1, universe, hs0, c0, c1)\n  df-br(hs0, (c0 ⋂(c1 × ran((c0 |` c1)))), hs1)\n  diff.hs0.s(hs1)\n  diff.hs0.c((c0 ⋂(c1 × ran((c0 |` c1)))))\n  diff.hs0.c({ < s0, s1 > |(s0 ∈ c1 ∧ s0[c0]s1)})\n  diff.hs1.c((c0 ⋂(c1 × ran((c0 |` c1)))))\n  diff.hs1.c({ < s0, s1 > |(s0 ∈ c1 ∧ s0[c0]s1)})\n  diff.wa.s(s0, hs0 ∈ c1, hs0[c0]hs1)\n  diff.wcel.s(s0, hs0, c1)\n  diff.wbr.s(s0, hs0, c0, hs1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.wa.s(s1, hs0 ∈ c1, hs0[c0]hs1)\n  diff.wcel.s(s1, hs0, c1)\n  diff.wbr.s(s1, hs0, c0, hs1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.cv.s(s1, hs1)\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n}","parent":["eqrelriiv","ax-mp","relxp","relin2","relopab","3bitr2ri","el2v","opelopabg","anbi12d","eleq1w","breq1","anbi2d","breq2","elv","brinxprnres","df-br","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wa.s","diff.wcel.s","diff.wbr.s","diff.cv.s","diffss.ex","diff.hs1.s"],"children":["dfres4"]},{"name":"dfres4","content":"Alternate definition of the restriction of a class. (Contributed by Peter Mazsa, 2-Jan-2019.)","origin":"thm dfres4(class c0, class c1) {\n  |- wceq(cres(c0, c1), cin(c0, cxp(c1, crn(cres(c0, c1)))))\n} = {\n  eqtr4i(cres(c0, c1), cin(c0, cxp(c1, crn(cres(c0, c1)))), copab(hs0, hs1, wa(wcel(cv(hs0), c1), wbr(cv(hs0), c0, cv(hs1)))))\n  dfres2(hs0, hs1, c0, c1)\n  inxprnres(hs0, hs1, c0, c1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n}","pretty":"thm dfres4(class c0, class c1) {\n  ⊢ (c0 |` c1)=(c0 ⋂(c1 × ran((c0 |` c1))))\n} = {\n  eqtr4i((c0 |` c1), (c0 ⋂(c1 × ran((c0 |` c1)))), { < hs0, hs1 > |(hs0 ∈ c1 ∧ hs0[c0]hs1)})\n  dfres2(hs0, hs1, c0, c1)\n  inxprnres(hs0, hs1, c0, c1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n}","parent":["eqtr4i","dfres2","inxprnres","diff.hs0.s","diff.hs0.c","diff.hs1.c"],"children":["xrnres4","xrnresex"]},{"name":"exan3","content":"Equivalent expressions with existential quantification. (Contributed by Peter Mazsa, 10-Sep-2021.)","origin":"thm exan3(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wex(s0, wa(wcel(c0, cec(cv(s0), c4)), wcel(c2, cec(cv(s0), c4)))), wex(s0, wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c4, c2)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  exbidv(s0, wa(wcel(c0, c1), wcel(c2, c3)), wa(wcel(c0, cec(cv(s0), c4)), wcel(c2, cec(cv(s0), c4))), wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c4, c2)))\n  bi2anan9(wcel(c0, c1), wcel(c2, c3), wcel(c0, cec(cv(s0), c4)), wcel(c2, cec(cv(s0), c4)), wbr(cv(s0), c4, c0), wbr(cv(s0), c4, c2))\n  el2v1(s0, wcel(c0, c1), wb(wcel(c0, cec(cv(s0), c4)), wbr(cv(s0), c4, c0)))\n  elecALTV(cv(s0), universe, c0, c1, c4)\n  el2v1(s0, wcel(c2, c3), wb(wcel(c2, cec(cv(s0), c4)), wbr(cv(s0), c4, c2)))\n  elecALTV(cv(s0), universe, c2, c3, c4)\n  diff.wa.s(s0, wcel(c0, c1), wcel(c2, c3))\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","pretty":"thm exan3(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(∃(s0,(c0 ∈[s0]c4 ∧ c2 ∈[s0]c4))↔ ∃(s0,(s0[c4]c0 ∧ s0[c4]c2))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n} = {\n  exbidv(s0, (c0 ∈ c1 ∧ c2 ∈ c3), (c0 ∈[s0]c4 ∧ c2 ∈[s0]c4), (s0[c4]c0 ∧ s0[c4]c2))\n  bi2anan9(c0 ∈ c1, c2 ∈ c3, c0 ∈[s0]c4, c2 ∈[s0]c4, s0[c4]c0, s0[c4]c2)\n  el2v1(s0, c0 ∈ c1, (c0 ∈[s0]c4 ↔ s0[c4]c0))\n  elecALTV(s0, universe, c0, c1, c4)\n  el2v1(s0, c2 ∈ c3, (c2 ∈[s0]c4 ↔ s0[c4]c2))\n  elecALTV(s0, universe, c2, c3, c4)\n  diff.wa.s(s0, c0 ∈ c1, c2 ∈ c3)\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","parent":["exbidv","bi2anan9","el2v1","elecALTV","diff.wa.s","diff.wcel.s"],"children":["brcoss2"]},{"name":"exanres","content":"Equivalent expressions with existential quantification. (Contributed by Peter Mazsa, 2-May-2021.)","origin":"thm exanres(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wex(s0, wa(wbr(cv(s0), cres(c4, c5), c0), wbr(cv(s0), cres(c6, c5), c2))), wrex(s0, c5, wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  syl6bbr(wa(wcel(c0, c1), wcel(c2, c3)), wex(s0, wa(wbr(cv(s0), cres(c4, c5), c0), wbr(cv(s0), cres(c6, c5), c2))), wrex(s0, c5, wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2))), wex(s0, wa(wcel(cv(s0), c5), wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2)))))\n  exbidv(s0, wa(wcel(c0, c1), wcel(c2, c3)), wa(wbr(cv(s0), cres(c4, c5), c0), wbr(cv(s0), cres(c6, c5), c2)), wa(wcel(cv(s0), c5), wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2))))\n  syl6bbr(wa(wcel(c0, c1), wcel(c2, c3)), wa(wbr(cv(s0), cres(c4, c5), c0), wbr(cv(s0), cres(c6, c5), c2)), wa(wcel(cv(s0), c5), wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2))), wa(wa(wcel(cv(s0), c5), wbr(cv(s0), c4, c0)), wa(wcel(cv(s0), c5), wbr(cv(s0), c6, c2))))\n  bi2anan9(wcel(c0, c1), wcel(c2, c3), wbr(cv(s0), cres(c4, c5), c0), wbr(cv(s0), cres(c6, c5), c2), wa(wcel(cv(s0), c5), wbr(cv(s0), c4, c0)), wa(wcel(cv(s0), c5), wbr(cv(s0), c6, c2)))\n  brres(c0, c1, cv(s0), c4, c5)\n  brres(c2, c3, cv(s0), c6, c5)\n  anandi(wcel(cv(s0), c5), wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2))\n  df-rex(s0, c5, wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2)))\n  diff.wa.s(s0, wcel(c0, c1), wcel(c2, c3))\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","pretty":"thm exanres(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(∃(s0,(s0[(c4 |` c5)]c0 ∧ s0[(c6 |` c5)]c2))↔ ∃(s0 ∈ c5,(s0[c4]c0 ∧ s0[c6]c2))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n} = {\n  syl6bbr((c0 ∈ c1 ∧ c2 ∈ c3), ∃(s0,(s0[(c4 |` c5)]c0 ∧ s0[(c6 |` c5)]c2)), ∃(s0 ∈ c5,(s0[c4]c0 ∧ s0[c6]c2)), ∃(s0,(s0 ∈ c5 ∧(s0[c4]c0 ∧ s0[c6]c2))))\n  exbidv(s0, (c0 ∈ c1 ∧ c2 ∈ c3), (s0[(c4 |` c5)]c0 ∧ s0[(c6 |` c5)]c2), (s0 ∈ c5 ∧(s0[c4]c0 ∧ s0[c6]c2)))\n  syl6bbr((c0 ∈ c1 ∧ c2 ∈ c3), (s0[(c4 |` c5)]c0 ∧ s0[(c6 |` c5)]c2), (s0 ∈ c5 ∧(s0[c4]c0 ∧ s0[c6]c2)), ((s0 ∈ c5 ∧ s0[c4]c0)∧(s0 ∈ c5 ∧ s0[c6]c2)))\n  bi2anan9(c0 ∈ c1, c2 ∈ c3, s0[(c4 |` c5)]c0, s0[(c6 |` c5)]c2, (s0 ∈ c5 ∧ s0[c4]c0), (s0 ∈ c5 ∧ s0[c6]c2))\n  brres(c0, c1, s0, c4, c5)\n  brres(c2, c3, s0, c6, c5)\n  anandi(s0 ∈ c5, s0[c4]c0, s0[c6]c2)\n  df-rex(s0, c5, (s0[c4]c0 ∧ s0[c6]c2))\n  diff.wa.s(s0, c0 ∈ c1, c2 ∈ c3)\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","parent":["syl6bbr","exbidv","bi2anan9","brres","anandi","df-rex","diff.wa.s","diff.wcel.s"],"children":["exanres2","br1cossres"]},{"name":"exanres3","content":"Equivalent expressions with restricted existential quantification. (Contributed by Peter Mazsa, 10-Sep-2021.)","origin":"thm exanres3(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wrex(s0, c4, wa(wcel(c0, cec(cv(s0), c5)), wcel(c2, cec(cv(s0), c6)))), wrex(s0, c4, wa(wbr(cv(s0), c5, c0), wbr(cv(s0), c6, c2)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  rexbidv(s0, c4, wa(wcel(c0, c1), wcel(c2, c3)), wa(wcel(c0, cec(cv(s0), c5)), wcel(c2, cec(cv(s0), c6))), wa(wbr(cv(s0), c5, c0), wbr(cv(s0), c6, c2)))\n  bi2anan9(wcel(c0, c1), wcel(c2, c3), wcel(c0, cec(cv(s0), c5)), wcel(c2, cec(cv(s0), c6)), wbr(cv(s0), c5, c0), wbr(cv(s0), c6, c2))\n  el2v1(s0, wcel(c0, c1), wb(wcel(c0, cec(cv(s0), c5)), wbr(cv(s0), c5, c0)))\n  elecALTV(cv(s0), universe, c0, c1, c5)\n  el2v1(s0, wcel(c2, c3), wb(wcel(c2, cec(cv(s0), c6)), wbr(cv(s0), c6, c2)))\n  elecALTV(cv(s0), universe, c2, c3, c6)\n  diff.wa.s(s0, wcel(c0, c1), wcel(c2, c3))\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","pretty":"thm exanres3(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(∃(s0 ∈ c4,(c0 ∈[s0]c5 ∧ c2 ∈[s0]c6))↔ ∃(s0 ∈ c4,(s0[c5]c0 ∧ s0[c6]c2))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n} = {\n  rexbidv(s0, c4, (c0 ∈ c1 ∧ c2 ∈ c3), (c0 ∈[s0]c5 ∧ c2 ∈[s0]c6), (s0[c5]c0 ∧ s0[c6]c2))\n  bi2anan9(c0 ∈ c1, c2 ∈ c3, c0 ∈[s0]c5, c2 ∈[s0]c6, s0[c5]c0, s0[c6]c2)\n  el2v1(s0, c0 ∈ c1, (c0 ∈[s0]c5 ↔ s0[c5]c0))\n  elecALTV(s0, universe, c0, c1, c5)\n  el2v1(s0, c2 ∈ c3, (c2 ∈[s0]c6 ↔ s0[c6]c2))\n  elecALTV(s0, universe, c2, c3, c6)\n  diff.wa.s(s0, c0 ∈ c1, c2 ∈ c3)\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","parent":["rexbidv","bi2anan9","el2v1","elecALTV","diff.wa.s","diff.wcel.s"],"children":["exanres2","br1cossres2"]},{"name":"exanres2","content":"Equivalent expressions with existential quantification. (Contributed by Peter Mazsa, 10-Sep-2021.)","origin":"thm exanres2(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wex(s0, wa(wbr(cv(s0), cres(c4, c5), c0), wbr(cv(s0), cres(c6, c5), c2))), wrex(s0, c5, wa(wcel(c0, cec(cv(s0), c4)), wcel(c2, cec(cv(s0), c6))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  bitr4d(wa(wcel(c0, c1), wcel(c2, c3)), wex(s0, wa(wbr(cv(s0), cres(c4, c5), c0), wbr(cv(s0), cres(c6, c5), c2))), wrex(s0, c5, wa(wcel(c0, cec(cv(s0), c4)), wcel(c2, cec(cv(s0), c6)))), wrex(s0, c5, wa(wbr(cv(s0), c4, c0), wbr(cv(s0), c6, c2))))\n  exanres(s0, c0, c1, c2, c3, c4, c5, c6)\n  exanres3(s0, c0, c1, c2, c3, c5, c4, c6)\n}","pretty":"thm exanres2(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(∃(s0,(s0[(c4 |` c5)]c0 ∧ s0[(c6 |` c5)]c2))↔ ∃(s0 ∈ c5,(c0 ∈[s0]c4 ∧ c2 ∈[s0]c6))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n} = {\n  bitr4d((c0 ∈ c1 ∧ c2 ∈ c3), ∃(s0,(s0[(c4 |` c5)]c0 ∧ s0[(c6 |` c5)]c2)), ∃(s0 ∈ c5,(c0 ∈[s0]c4 ∧ c2 ∈[s0]c6)), ∃(s0 ∈ c5,(s0[c4]c0 ∧ s0[c6]c2)))\n  exanres(s0, c0, c1, c2, c3, c4, c5, c6)\n  exanres3(s0, c0, c1, c2, c3, c5, c4, c6)\n}","parent":["bitr4d","exanres","exanres3"],"children":[]},{"name":"cnvepres","content":"Restricted converse epsilon relation as a class of ordered pairs. (Contributed by Peter Mazsa, 10-Feb-2018.)","origin":"thm cnvepres(setvar s0, setvar s1, class c0) {\n  |- wceq(cres(ccnv(cep), c0), copab(s0, s1, wa(wcel(cv(s0), c0), wcel(cv(s1), cv(s0)))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  eqtri(cres(ccnv(cep), c0), copab(s0, s1, wa(wcel(cv(s0), c0), wcel(cv(s1), cv(s0)))), copab(s0, s1, wa(wcel(cv(s0), c0), wbr(cv(s0), ccnv(cep), cv(s1)))))\n  dfres2(s0, s1, ccnv(cep), c0)\n  opabbii(s0, s1, wa(wcel(cv(s0), c0), wbr(cv(s0), ccnv(cep), cv(s1))), wa(wcel(cv(s0), c0), wcel(cv(s1), cv(s0))))\n  anbi2i(wcel(cv(s0), c0), wbr(cv(s0), ccnv(cep), cv(s1)), wcel(cv(s1), cv(s0)))\n  elv(s0, wb(wbr(cv(s0), ccnv(cep), cv(s1)), wcel(cv(s1), cv(s0))))\n  brcnvep(cv(s0), universe, cv(s1))\n  diff.ccnv.s(s0, cep)\n  diff.cep.s(s0)\n  diff.ccnv.s(s1, cep)\n  diff.cep.s(s1)\n}","pretty":"thm cnvepres(setvar s0, setvar s1, class c0) {\n  ⊢ (`' ∈ |` c0)= { < s0, s1 > |(s0 ∈ c0 ∧ s1 ∈ s0)}\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  eqtri((`' ∈ |` c0), { < s0, s1 > |(s0 ∈ c0 ∧ s1 ∈ s0)}, { < s0, s1 > |(s0 ∈ c0 ∧ s0[`' ∈]s1)})\n  dfres2(s0, s1, `' ∈, c0)\n  opabbii(s0, s1, (s0 ∈ c0 ∧ s0[`' ∈]s1), (s0 ∈ c0 ∧ s1 ∈ s0))\n  anbi2i(s0 ∈ c0, s0[`' ∈]s1, s1 ∈ s0)\n  elv(s0, (s0[`' ∈]s1 ↔ s1 ∈ s0))\n  brcnvep(s0, universe, s1)\n  diff.ccnv.s(s0, cep)\n  diff.cep.s(s0)\n  diff.ccnv.s(s1, cep)\n  diff.cep.s(s1)\n}","parent":["eqtri","dfres2","opabbii","anbi2i","elv","brcnvep","diff.ccnv.s","diff.cep.s"],"children":["rncnvepres","n0el2","cnvepresex"]},{"name":"ssrel3","content":"Subclass relation in another form when the subclass is a relation. (Contributed by Peter Mazsa, 16-Feb-2019.)","origin":"thm ssrel3(setvar s0, setvar s1, class c0, class c1) {\n  |- wi(wrel(c0), wb(wss(c0, c1), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1)))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  syl6bbr(wrel(c0), wss(c0, c1), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1))))), wal(s0, wal(s1, wi(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)))))\n  ssrel(s0, s1, c0, c1)\n  2albii(s0, s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1))), wi(wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1)))\n  imbi12i(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1)), wcel(cop(cv(s0), cv(s1)), c0), wcel(cop(cv(s0), cv(s1)), c1))\n  df-br(cv(s0), c0, cv(s1))\n  df-br(cv(s0), c1, cv(s1))\n}","pretty":"thm ssrel3(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ (Rel(c0)→(c0 ⊆ c1 ↔ ∀(s0, ∀(s1,(s0[c0]s1 → s0[c1]s1)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  syl6bbr(Rel(c0), c0 ⊆ c1, ∀(s0, ∀(s1,(s0[c0]s1 → s0[c1]s1))), ∀(s0, ∀(s1,(< s0, s1 > ∈ c0 → < s0, s1 > ∈ c1))))\n  ssrel(s0, s1, c0, c1)\n  2albii(s0, s1, (s0[c0]s1 → s0[c1]s1), (< s0, s1 > ∈ c0 → < s0, s1 > ∈ c1))\n  imbi12i(s0[c0]s1, s0[c1]s1, < s0, s1 > ∈ c0, < s0, s1 > ∈ c1)\n  df-br(s0, c0, s1)\n  df-br(s0, c1, s1)\n}","parent":["syl6bbr","ssrel","2albii","imbi12i","df-br"],"children":["eqrel2","inxpss","inxpss2","cocossss"]},{"name":"eqrel2","content":"Equality of relations. (Contributed by Peter Mazsa, 8-Mar-2019.)","origin":"thm eqrel2(setvar s0, setvar s1, class c0, class c1) {\n  |- wi(wa(wrel(c0), wrel(c1)), wb(wceq(c0, c1), wal(s0, wal(s1, wb(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1)))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  3bitr4g(wa(wrel(c0), wrel(c1)), wceq(c0, c1), wal(s0, wal(s1, wb(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1))))), wa(wss(c0, c1), wss(c1, c0)), wa(wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1))))), wal(s0, wal(s1, wi(wbr(cv(s0), c1, cv(s1)), wbr(cv(s0), c0, cv(s1)))))))\n  bi2anan9(wrel(c0), wrel(c1), wss(c0, c1), wss(c1, c0), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1))))), wal(s0, wal(s1, wi(wbr(cv(s0), c1, cv(s1)), wbr(cv(s0), c0, cv(s1))))))\n  ssrel3(s0, s1, c0, c1)\n  ssrel3(s0, s1, c1, c0)\n  eqss(c0, c1)\n  2albiim(s0, s1, wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c1, cv(s1)))\n}","pretty":"thm eqrel2(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ ((Rel(c0)∧ Rel(c1))→(c0 = c1 ↔ ∀(s0, ∀(s1,(s0[c0]s1 ↔ s0[c1]s1)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  3bitr4g((Rel(c0)∧ Rel(c1)), c0 = c1, ∀(s0, ∀(s1,(s0[c0]s1 ↔ s0[c1]s1))), (c0 ⊆ c1 ∧ c1 ⊆ c0), (∀(s0, ∀(s1,(s0[c0]s1 → s0[c1]s1)))∧ ∀(s0, ∀(s1,(s0[c1]s1 → s0[c0]s1)))))\n  bi2anan9(Rel(c0), Rel(c1), c0 ⊆ c1, c1 ⊆ c0, ∀(s0, ∀(s1,(s0[c0]s1 → s0[c1]s1))), ∀(s0, ∀(s1,(s0[c1]s1 → s0[c0]s1))))\n  ssrel3(s0, s1, c0, c1)\n  ssrel3(s0, s1, c1, c0)\n  eqss(c0, c1)\n  2albiim(s0, s1, s0[c0]s1, s0[c1]s1)\n}","parent":["3bitr4g","bi2anan9","ssrel3","eqss","2albiim"],"children":[]},{"name":"rncnv","content":"Range of converse is the domain. (Contributed by Peter Mazsa, 12-Feb-2018.)","origin":"thm rncnv(class c0) {\n  |- wceq(crn(ccnv(c0)), cdm(c0))\n} = {\n  eqcomi(crn(ccnv(c0)), cdm(c0))\n  dfdm4(c0)\n}","pretty":"thm rncnv(class c0) {\n  ⊢ ran(`' c0)= dom(c0)\n} = {\n  eqcomi(ran(`' c0), dom(c0))\n  dfdm4(c0)\n}","parent":["eqcomi","dfdm4"],"children":["dmcoss3","symrelim","symrefref2"]},{"name":"dfdm6","content":"Alternate definition of domain. (Contributed by Peter Mazsa, 2-Mar-2018.)","origin":"thm dfdm6(setvar s0, class c0) {\n  |- wceq(cdm(c0), cab(s0, wne(cec(cv(s0), c0), emptycls)))\n  -| diffsc(s0, c0)\n} = {\n  abbi2i(s0, cdm(c0), wne(cec(cv(s0), c0), emptycls))\n  ecdmn0(cv(s0), c0)\n  diff.cdm.s(s0, c0)\n}","pretty":"thm dfdm6(setvar s0, class c0) {\n  ⊢ dom(c0)= { s0 |[s0]c0 ≠ ∅ }\n  ⊣ d(s0, c0)\n} = {\n  abbi2i(s0, dom(c0), [s0]c0 ≠ ∅)\n  ecdmn0(s0, c0)\n  diff.cdm.s(s0, c0)\n}","parent":["abbi2i","ecdmn0","diff.cdm.s"],"children":["dfrn6"]},{"name":"dfrn6","content":"Alternate definition of range. (Contributed by Peter Mazsa, 1-Aug-2018.)","origin":"thm dfrn6(setvar s0, class c0) {\n  |- wceq(crn(c0), cab(s0, wne(cec(cv(s0), ccnv(c0)), emptycls)))\n  -| diffsc(s0, c0)\n} = {\n  eqtri(crn(c0), cab(s0, wne(cec(cv(s0), ccnv(c0)), emptycls)), cdm(ccnv(c0)))\n  df-rn(c0)\n  dfdm6(s0, ccnv(c0))\n  diff.ccnv.s(s0, c0)\n}","pretty":"thm dfrn6(setvar s0, class c0) {\n  ⊢ ran(c0)= { s0 |[s0]`' c0 ≠ ∅ }\n  ⊣ d(s0, c0)\n} = {\n  eqtri(ran(c0), { s0 |[s0]`' c0 ≠ ∅ }, dom(`' c0))\n  df-rn(c0)\n  dfdm6(s0, `' c0)\n  diff.ccnv.s(s0, c0)\n}","parent":["eqtri","df-rn","dfdm6","diff.ccnv.s"],"children":["rnxrn"]},{"name":"rncnvepres","content":"The range of the restricted converse epsilon is the union of the restriction. (Contributed by Peter Mazsa, 11-Feb-2018.) (Revised by Peter Mazsa, 26-Sep-2021.)","origin":"thm rncnvepres(class c0) {\n  |- wceq(crn(cres(ccnv(cep), c0)), cuni(c0))\n} = {\n  3eqtr4i(crn(cres(ccnv(cep), c0)), cuni(c0), crn(copab(hs0, hs1, wa(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0))))), cab(hs1, wex(hs0, wa(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0))))))\n  rnopab(hs0, hs1, wa(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0))))\n  rneqi(cres(ccnv(cep), c0), copab(hs0, hs1, wa(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0)))))\n  cnvepres(hs0, hs1, c0)\n  eqtri(cuni(c0), cab(hs1, wex(hs0, wa(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0))))), cab(hs1, wrex(hs0, c0, wcel(cv(hs1), cv(hs0)))))\n  dfuni2(hs1, hs0, c0)\n  abbii(hs1, wrex(hs0, c0, wcel(cv(hs1), cv(hs0))), wex(hs0, wa(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0)))))\n  df-rex(hs0, c0, wcel(cv(hs1), cv(hs0)))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c0)\n  diff.hs1.s(hs0)\n}","pretty":"thm rncnvepres(class c0) {\n  ⊢ ran((`' ∈ |` c0))= ⋃ c0\n} = {\n  3eqtr4i(ran((`' ∈ |` c0)), ⋃ c0, ran({ < hs0, hs1 > |(hs0 ∈ c0 ∧ hs1 ∈ hs0)}), { hs1 | ∃(hs0,(hs0 ∈ c0 ∧ hs1 ∈ hs0))})\n  rnopab(hs0, hs1, (hs0 ∈ c0 ∧ hs1 ∈ hs0))\n  rneqi((`' ∈ |` c0), { < hs0, hs1 > |(hs0 ∈ c0 ∧ hs1 ∈ hs0)})\n  cnvepres(hs0, hs1, c0)\n  eqtri(⋃ c0, { hs1 | ∃(hs0,(hs0 ∈ c0 ∧ hs1 ∈ hs0))}, { hs1 | ∃(hs0 ∈ c0, hs1 ∈ hs0)})\n  dfuni2(hs1, hs0, c0)\n  abbii(hs1, ∃(hs0 ∈ c0, hs1 ∈ hs0), ∃(hs0,(hs0 ∈ c0 ∧ hs1 ∈ hs0)))\n  df-rex(hs0, c0, hs1 ∈ hs0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c0)\n  diff.hs1.s(hs0)\n}","parent":["3eqtr4i","rnopab","rneqi","cnvepres","eqtri","dfuni2","abbii","df-rex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs1.s"],"children":["dm1cosscnvepres"]},{"name":"dmecd","content":"Equality of the coset of ` B ` and the coset of ` C ` implies equivalence of domain elementhood (equivalence is not necessary as opposed to ~ ereldm ). (Contributed by Peter Mazsa, 9-Oct-2018.)","origin":"thm dmecd(class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(w0, wb(wcel(c0, c1), wcel(c2, c1)))\n  -| wi(w0, wceq(cdm(c3), c1))\n  -| wi(w0, wceq(cec(c0, c3), cec(c2, c3)))\n} = {\n  3bitr3d(w0, wcel(c0, c1), wcel(c2, c1), wcel(c0, cdm(c3)), wcel(c2, cdm(c3)))\n  3bitr4g(w0, wcel(c0, cdm(c3)), wcel(c2, cdm(c3)), wne(cec(c0, c3), emptycls), wne(cec(c2, c3), emptycls))\n  neeq1d(cec(c0, c3), emptycls, cec(c2, c3), w0)\n  ecdmn0(c0, c3)\n  ecdmn0(c2, c3)\n  eleq2d(c0, cdm(c3), c1, w0)\n  eleq2d(c2, cdm(c3), c1, w0)\n}","pretty":"thm dmecd(class c0, class c1, class c2, class c3, wff w0) {\n  ⊢ (w0 →(c0 ∈ c1 ↔ c2 ∈ c1))\n  ⊣ (w0 → dom(c3)= c1)\n  ⊣ (w0 →[c0]c3 =[c2]c3)\n} = {\n  3bitr3d(w0, c0 ∈ c1, c2 ∈ c1, c0 ∈ dom(c3), c2 ∈ dom(c3))\n  3bitr4g(w0, c0 ∈ dom(c3), c2 ∈ dom(c3), [c0]c3 ≠ ∅, [c2]c3 ≠ ∅)\n  neeq1d([c0]c3, emptycls, [c2]c3, w0)\n  ecdmn0(c0, c3)\n  ecdmn0(c2, c3)\n  eleq2d(c0, dom(c3), c1, w0)\n  eleq2d(c2, dom(c3), c1, w0)\n}","parent":["3bitr3d","3bitr4g","neeq1d","ecdmn0","eleq2d"],"children":["dmec2d"]},{"name":"dmec2d","content":"Equality of the coset of ` B ` and the coset of ` C ` implies equivalence of domain elementhood (equivalence is not necessary as opposed to ~ ereldm ). (Contributed by Peter Mazsa, 12-Oct-2018.)","origin":"thm dmec2d(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wb(wcel(c0, cdm(c1)), wcel(c2, cdm(c1))))\n  -| wi(w0, wceq(cec(c0, c1), cec(c2, c1)))\n} = {\n  dmecd(c0, cdm(c1), c2, c1, w0)\n  eqidd(cdm(c1), w0)\n}","pretty":"thm dmec2d(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 ∈ dom(c1)↔ c2 ∈ dom(c1)))\n  ⊣ (w0 →[c0]c1 =[c2]c1)\n} = {\n  dmecd(c0, dom(c1), c2, c1, w0)\n  eqidd(dom(c1), w0)\n}","parent":["dmecd","eqidd"],"children":["eqvrelth"]},{"name":"brid","content":"Property of the identity binary relation. (Contributed by Peter Mazsa, 18-Dec-2021.)","origin":"thm brid(class c0, class c1) {\n  |- wb(wbr(c0, cid, c1), wbr(c1, cid, c0))\n} = {\n  bitr3i(wbr(c0, cid, c1), wbr(c1, cid, c0), wbr(c0, ccnv(cid), c1))\n  breqi(c0, ccnv(cid), c1, cid)\n  cnvi()\n  relbrcnv(c0, cid, c1)\n  reli()\n}","pretty":"thm brid(class c0, class c1) {\n  ⊢ (c0[=]c1 ↔ c1[=]c0)\n} = {\n  bitr3i(c0[=]c1, c1[=]c0, c0[`' =]c1)\n  breqi(c0, `' =, c1, cid)\n  cnvi()\n  relbrcnv(c0, cid, c1)\n  reli()\n}","parent":["bitr3i","breqi","cnvi","relbrcnv","reli"],"children":["ideq2"]},{"name":"ideq2","content":"For sets, the identity binary relation is the same as equality. (Contributed by Peter Mazsa, 24-Jun-2020.) (Revised by Peter Mazsa, 18-Dec-2021.)","origin":"thm ideq2(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wbr(c0, cid, c2), wceq(c0, c2)))\n} = {\n  syl5bb(wcel(c0, c1), wbr(c0, cid, c2), wceq(c0, c2), wbr(c2, cid, c0))\n  brid(c0, c2)\n  syl6bb(wcel(c0, c1), wbr(c2, cid, c0), wceq(c0, c2), wceq(c2, c0))\n  ideqg(c0, c1, c2)\n  eqcom(c2, c0)\n}","pretty":"thm ideq2(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c0[=]c2 ↔ c0 = c2))\n} = {\n  syl5bb(c0 ∈ c1, c0[=]c2, c0 = c2, c2[=]c0)\n  brid(c0, c2)\n  syl6bb(c0 ∈ c1, c2[=]c0, c0 = c2, c2 = c0)\n  ideqg(c0, c1, c2)\n  eqcom(c2, c0)\n}","parent":["syl5bb","brid","syl6bb","ideqg","eqcom"],"children":["br1cossinidres","br1cossxrnidres"]},{"name":"idresssidinxp","content":"Condition for the identity restriction to be a subclass of identity intersection with a Cartesian product. (Contributed by Peter Mazsa, 19-Jul-2018.)","origin":"thm idresssidinxp(class c0, class c1) {\n  |- wi(wss(c0, c1), wss(cres(cid, c0), cin(cid, cxp(c0, c1))))\n} = {\n  ssind(cres(cid, c0), cid, cxp(c0, c1), wss(c0, c1))\n  a1i(wss(c0, c1), wss(cres(cid, c0), cid))\n  resss(cid, c0)\n  syl5ss(cres(cid, c0), cxp(c0, c1), cxp(c0, c0), wss(c0, c1))\n  idssxp(c0)\n  xpss2(c0, c1, c0)\n}","pretty":"thm idresssidinxp(class c0, class c1) {\n  ⊢ (c0 ⊆ c1 →(= |` c0)⊆(= ⋂(c0 × c1)))\n} = {\n  ssind((= |` c0), cid, (c0 × c1), c0 ⊆ c1)\n  a1i(c0 ⊆ c1, (= |` c0)⊆ =)\n  resss(cid, c0)\n  syl5ss((= |` c0), (c0 × c1), (c0 × c0), c0 ⊆ c1)\n  idssxp(c0)\n  xpss2(c0, c1, c0)\n}","parent":["ssind","a1i","resss","syl5ss","idssxp","xpss2"],"children":["idreseqidinxp"]},{"name":"idreseqidinxp","content":"Condition for the identity restriction to be equal to the identity intersection with a Cartesian product. (Contributed by Peter Mazsa, 19-Jul-2018.)","origin":"thm idreseqidinxp(class c0, class c1) {\n  |- wi(wss(c0, c1), wceq(cin(cid, cxp(c0, c1)), cres(cid, c0)))\n} = {\n  eqssd(cin(cid, cxp(c0, c1)), cres(cid, c0), wss(c0, c1))\n  a1i(wss(c0, c1), wss(cin(cid, cxp(c0, c1)), cres(cid, c0)))\n  inxpssres(cid, c0, c1)\n  idresssidinxp(c0, c1)\n}","pretty":"thm idreseqidinxp(class c0, class c1) {\n  ⊢ (c0 ⊆ c1 →(= ⋂(c0 × c1))=(= |` c0))\n} = {\n  eqssd((= ⋂(c0 × c1)), (= |` c0), c0 ⊆ c1)\n  a1i(c0 ⊆ c1, (= ⋂(c0 × c1))⊆(= |` c0))\n  inxpssres(cid, c0, c1)\n  idresssidinxp(c0, c1)\n}","parent":["eqssd","a1i","inxpssres","idresssidinxp"],"children":["symrefref2"]},{"name":"extid","content":"Property of identity relation, see also ~ extep , ~ extssr and the comment of ~ df-ssr . (Contributed by Peter Mazsa, 5-Jul-2019.)","origin":"thm extid(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wceq(cec(c0, ccnv(cid)), cec(c2, ccnv(cid))), wceq(c0, c2)))\n} = {\n  syl5bb(wcel(c0, c1), wceq(cec(c0, ccnv(cid)), cec(c2, ccnv(cid))), wceq(c0, c2), wceq(csn(c0), csn(c2)))\n  eqeq12i(cec(c0, ccnv(cid)), cec(c2, ccnv(cid)), csn(c0), csn(c2))\n  eqtri(cec(c0, ccnv(cid)), csn(c0), cec(c0, cid))\n  eceq2i(c0, ccnv(cid), cid)\n  ecidsn(c0)\n  eqtri(cec(c2, ccnv(cid)), csn(c2), cec(c2, cid))\n  eceq2i(c2, ccnv(cid), cid)\n  cnvi()\n  ecidsn(c2)\n  sneqbg(c0, c1, c2)\n}","pretty":"thm extid(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →([c0]`' = =[c2]`' = ↔ c0 = c2))\n} = {\n  syl5bb(c0 ∈ c1, [c0]`' = =[c2]`' =, c0 = c2, { c0 } = { c2 })\n  eqeq12i([c0]`' =, [c2]`' =, { c0 }, { c2 })\n  eqtri([c0]`' =, { c0 }, [c0]=)\n  eceq2i(c0, `' =, cid)\n  ecidsn(c0)\n  eqtri([c2]`' =, { c2 }, [c2]=)\n  eceq2i(c2, `' =, cid)\n  cnvi()\n  ecidsn(c2)\n  sneqbg(c0, c1, c2)\n}","parent":["syl5bb","eqeq12i","eqtri","eceq2i","ecidsn","cnvi","sneqbg"],"children":[]},{"name":"inxpss","content":"Two ways to say that an intersection with a Cartesian product is a subclass. (Contributed by Peter Mazsa, 16-Jul-2019.)","origin":"thm inxpss(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  |- wb(wss(cin(c0, cxp(c1, c2)), c3), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n} = {\n  3bitr4i(wss(cin(c0, cxp(c1, c2)), c3), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))), wal(s0, wal(s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), c3, cv(s1))))), wal(s0, wal(s1, wi(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))))))\n  2albii(s0, s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), c3, cv(s1))), wi(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))))\n  bitri(wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), c3, cv(s1))), wi(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))), wi(wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1))), wbr(cv(s0), c3, cv(s1))))\n  imbi1i(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), c3, cv(s1)), wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1))))\n  brinxp2(cv(s0), c0, c1, c2, cv(s1))\n  impexp(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))\n  ax-mp(wb(wss(cin(c0, cxp(c1, c2)), c3), wal(s0, wal(s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), c3, cv(s1)))))), wrel(cin(c0, cxp(c1, c2))))\n  relinxp(c0, c1, c2)\n  ssrel3(s0, s1, cin(c0, cxp(c1, c2)), c3)\n  r2al(s0, s1, c1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))\n  diff.cin.s(s0, c0, cxp(c1, c2))\n  diff.cxp.s(s0, c1, c2)\n  diff.cin.s(s1, c0, cxp(c1, c2))\n  diff.cxp.s(s1, c1, c2)\n}","pretty":"thm inxpss(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  ⊢ ((c0 ⋂(c1 × c2))⊆ c3 ↔ ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0[c3]s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, c2)\n  ⊣ d(s1, c3)\n} = {\n  3bitr4i((c0 ⋂(c1 × c2))⊆ c3, ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0[c3]s1))), ∀(s0, ∀(s1,(s0[(c0 ⋂(c1 × c2))]s1 → s0[c3]s1))), ∀(s0, ∀(s1,((s0 ∈ c1 ∧ s1 ∈ c2)→(s0[c0]s1 → s0[c3]s1)))))\n  2albii(s0, s1, (s0[(c0 ⋂(c1 × c2))]s1 → s0[c3]s1), ((s0 ∈ c1 ∧ s1 ∈ c2)→(s0[c0]s1 → s0[c3]s1)))\n  bitri((s0[(c0 ⋂(c1 × c2))]s1 → s0[c3]s1), ((s0 ∈ c1 ∧ s1 ∈ c2)→(s0[c0]s1 → s0[c3]s1)), (((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c0]s1)→ s0[c3]s1))\n  imbi1i(s0[(c0 ⋂(c1 × c2))]s1, s0[c3]s1, ((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c0]s1))\n  brinxp2(s0, c0, c1, c2, s1)\n  impexp((s0 ∈ c1 ∧ s1 ∈ c2), s0[c0]s1, s0[c3]s1)\n  ax-mp(((c0 ⋂(c1 × c2))⊆ c3 ↔ ∀(s0, ∀(s1,(s0[(c0 ⋂(c1 × c2))]s1 → s0[c3]s1)))), Rel((c0 ⋂(c1 × c2))))\n  relinxp(c0, c1, c2)\n  ssrel3(s0, s1, (c0 ⋂(c1 × c2)), c3)\n  r2al(s0, s1, c1, c2, (s0[c0]s1 → s0[c3]s1))\n  diff.cin.s(s0, c0, (c1 × c2))\n  diff.cxp.s(s0, c1, c2)\n  diff.cin.s(s1, c0, (c1 × c2))\n  diff.cxp.s(s1, c1, c2)\n}","parent":["3bitr4i","2albii","bitri","imbi1i","brinxp2","impexp","ax-mp","relinxp","ssrel3","r2al","diff.cin.s","diff.cxp.s"],"children":["idinxpss"]},{"name":"idinxpss","content":"Two ways to say that an intersection of the identity relation with a Cartesian product is a subclass. (Contributed by Peter Mazsa, 16-Jul-2019.)","origin":"thm idinxpss(setvar s0, setvar s1, class c0, class c1, class c2) {\n  |- wb(wss(cin(cid, cxp(c0, c1)), c2), wral(s0, c0, wral(s1, c1, wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c2, cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n} = {\n  bitri(wss(cin(cid, cxp(c0, c1)), c2), wral(s0, c0, wral(s1, c1, wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c2, cv(s1))))), wral(s0, c0, wral(s1, c1, wi(wbr(cv(s0), cid, cv(s1)), wbr(cv(s0), c2, cv(s1))))))\n  inxpss(s0, s1, cid, c0, c1, c2)\n  2ralbii(s0, s1, c0, c1, wi(wbr(cv(s0), cid, cv(s1)), wbr(cv(s0), c2, cv(s1))), wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c2, cv(s1))))\n  imbi1i(wbr(cv(s0), cid, cv(s1)), wbr(cv(s0), c2, cv(s1)), wceq(cv(s0), cv(s1)))\n  elv(s1, wb(wbr(cv(s0), cid, cv(s1)), wceq(cv(s0), cv(s1))))\n  ideqg(cv(s1), universe, cv(s0))\n  diff.cid.s(s0)\n  diff.cid.s(s1)\n}","pretty":"thm idinxpss(setvar s0, setvar s1, class c0, class c1, class c2) {\n  ⊢ ((= ⋂(c0 × c1))⊆ c2 ↔ ∀(s0 ∈ c0, ∀(s1 ∈ c1,(s0 = s1 → s0[c2]s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, c2)\n} = {\n  bitri((= ⋂(c0 × c1))⊆ c2, ∀(s0 ∈ c0, ∀(s1 ∈ c1,(s0 = s1 → s0[c2]s1))), ∀(s0 ∈ c0, ∀(s1 ∈ c1,(s0[=]s1 → s0[c2]s1))))\n  inxpss(s0, s1, cid, c0, c1, c2)\n  2ralbii(s0, s1, c0, c1, (s0[=]s1 → s0[c2]s1), (s0 = s1 → s0[c2]s1))\n  imbi1i(s0[=]s1, s0[c2]s1, s0 = s1)\n  elv(s1, (s0[=]s1 ↔ s0 = s1))\n  ideqg(s1, universe, s0)\n  diff.cid.s(s0)\n  diff.cid.s(s1)\n}","parent":["bitri","inxpss","2ralbii","imbi1i","elv","ideqg","diff.cid.s"],"children":["refrelcoss2","dfrefrels3","dfrefrel3","symrefref3"]},{"name":"inxpss3","content":"Two ways to say that an intersection with a Cartesian product is a subclass (see also ~ inxpss ). (Contributed by Peter Mazsa, 8-Mar-2019.)","origin":"thm inxpss3(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  |- wb(wal(s0, wal(s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), cin(c3, cxp(c1, c2)), cv(s1))))), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c1)\n} = {\n  bitr4i(wal(s0, wal(s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), cin(c3, cxp(c1, c2)), cv(s1))))), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))), wal(s0, wal(s1, wi(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))))))\n  2albii(s0, s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), cin(c3, cxp(c1, c2)), cv(s1))), wi(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))))\n  bitr4i(wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), cin(c3, cxp(c1, c2)), cv(s1))), wi(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))), wi(wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1))), wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c3, cv(s1)))))\n  imbi12i(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), cin(c3, cxp(c1, c2)), cv(s1)), wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1))), wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c3, cv(s1))))\n  brinxp2(cv(s0), c0, c1, c2, cv(s1))\n  brinxp2(cv(s0), c3, c1, c2, cv(s1))\n  imdistan(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1)))\n  r2al(s0, s1, c1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))\n}","pretty":"thm inxpss3(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  ⊢ (∀(s0, ∀(s1,(s0[(c0 ⋂(c1 × c2))]s1 → s0[(c3 ⋂(c1 × c2))]s1)))↔ ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0[c3]s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c1)\n} = {\n  bitr4i(∀(s0, ∀(s1,(s0[(c0 ⋂(c1 × c2))]s1 → s0[(c3 ⋂(c1 × c2))]s1))), ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0[c3]s1))), ∀(s0, ∀(s1,((s0 ∈ c1 ∧ s1 ∈ c2)→(s0[c0]s1 → s0[c3]s1)))))\n  2albii(s0, s1, (s0[(c0 ⋂(c1 × c2))]s1 → s0[(c3 ⋂(c1 × c2))]s1), ((s0 ∈ c1 ∧ s1 ∈ c2)→(s0[c0]s1 → s0[c3]s1)))\n  bitr4i((s0[(c0 ⋂(c1 × c2))]s1 → s0[(c3 ⋂(c1 × c2))]s1), ((s0 ∈ c1 ∧ s1 ∈ c2)→(s0[c0]s1 → s0[c3]s1)), (((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c0]s1)→((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c3]s1)))\n  imbi12i(s0[(c0 ⋂(c1 × c2))]s1, s0[(c3 ⋂(c1 × c2))]s1, ((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c0]s1), ((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c3]s1))\n  brinxp2(s0, c0, c1, c2, s1)\n  brinxp2(s0, c3, c1, c2, s1)\n  imdistan((s0 ∈ c1 ∧ s1 ∈ c2), s0[c0]s1, s0[c3]s1)\n  r2al(s0, s1, c1, c2, (s0[c0]s1 → s0[c3]s1))\n}","parent":["bitr4i","2albii","imbi12i","brinxp2","imdistan","r2al"],"children":["inxpss2"]},{"name":"inxpss2","content":"Two ways to say that intersections with Cartesian products are in a subclass relation. (Contributed by Peter Mazsa, 8-Mar-2019.)","origin":"thm inxpss2(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  |- wb(wss(cin(c0, cxp(c1, c2)), cin(c3, cxp(c1, c2))), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n} = {\n  bitri(wss(cin(c0, cxp(c1, c2)), cin(c3, cxp(c1, c2))), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), c3, cv(s1))))), wal(s0, wal(s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), cin(c3, cxp(c1, c2)), cv(s1))))))\n  ax-mp(wb(wss(cin(c0, cxp(c1, c2)), cin(c3, cxp(c1, c2))), wal(s0, wal(s1, wi(wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wbr(cv(s0), cin(c3, cxp(c1, c2)), cv(s1)))))), wrel(cin(c0, cxp(c1, c2))))\n  relinxp(c0, c1, c2)\n  ssrel3(s0, s1, cin(c0, cxp(c1, c2)), cin(c3, cxp(c1, c2)))\n  inxpss3(s0, s1, c0, c1, c2, c3)\n  diff.cin.s(s0, c0, cxp(c1, c2))\n  diff.cin.s(s0, c3, cxp(c1, c2))\n  diff.cxp.s(s0, c1, c2)\n  diff.cin.s(s1, c0, cxp(c1, c2))\n  diff.cin.s(s1, c3, cxp(c1, c2))\n  diff.cxp.s(s1, c1, c2)\n}","pretty":"thm inxpss2(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  ⊢ ((c0 ⋂(c1 × c2))⊆(c3 ⋂(c1 × c2))↔ ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0[c3]s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, c2)\n  ⊣ d(s1, c3)\n} = {\n  bitri((c0 ⋂(c1 × c2))⊆(c3 ⋂(c1 × c2)), ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0[c3]s1))), ∀(s0, ∀(s1,(s0[(c0 ⋂(c1 × c2))]s1 → s0[(c3 ⋂(c1 × c2))]s1))))\n  ax-mp(((c0 ⋂(c1 × c2))⊆(c3 ⋂(c1 × c2))↔ ∀(s0, ∀(s1,(s0[(c0 ⋂(c1 × c2))]s1 → s0[(c3 ⋂(c1 × c2))]s1)))), Rel((c0 ⋂(c1 × c2))))\n  relinxp(c0, c1, c2)\n  ssrel3(s0, s1, (c0 ⋂(c1 × c2)), (c3 ⋂(c1 × c2)))\n  inxpss3(s0, s1, c0, c1, c2, c3)\n  diff.cin.s(s0, c0, (c1 × c2))\n  diff.cin.s(s0, c3, (c1 × c2))\n  diff.cxp.s(s0, c1, c2)\n  diff.cin.s(s1, c0, (c1 × c2))\n  diff.cin.s(s1, c3, (c1 × c2))\n  diff.cxp.s(s1, c1, c2)\n}","parent":["bitri","ax-mp","relinxp","ssrel3","inxpss3","diff.cin.s","diff.cxp.s"],"children":["inxpssidinxp","idinxpssinxp"]},{"name":"inxpssidinxp","content":"Two ways to say that intersections with Cartesian products are in a subclass relation, special case of ~ inxpss2 . (Contributed by Peter Mazsa, 4-Jul-2019.)","origin":"thm inxpssidinxp(setvar s0, setvar s1, class c0, class c1, class c2) {\n  |- wb(wss(cin(c0, cxp(c1, c2)), cin(cid, cxp(c1, c2))), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wceq(cv(s0), cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n} = {\n  bitri(wss(cin(c0, cxp(c1, c2)), cin(cid, cxp(c1, c2))), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wceq(cv(s0), cv(s1))))), wral(s0, c1, wral(s1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), cid, cv(s1))))))\n  inxpss2(s0, s1, c0, c1, c2, cid)\n  2ralbii(s0, s1, c1, c2, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), cid, cv(s1))), wi(wbr(cv(s0), c0, cv(s1)), wceq(cv(s0), cv(s1))))\n  imbi2i(wbr(cv(s0), c0, cv(s1)), wbr(cv(s0), cid, cv(s1)), wceq(cv(s0), cv(s1)))\n  elv(s1, wb(wbr(cv(s0), cid, cv(s1)), wceq(cv(s0), cv(s1))))\n  ideqg(cv(s1), universe, cv(s0))\n  diff.cid.s(s0)\n  diff.cid.s(s1)\n}","pretty":"thm inxpssidinxp(setvar s0, setvar s1, class c0, class c1, class c2) {\n  ⊢ ((c0 ⋂(c1 × c2))⊆(= ⋂(c1 × c2))↔ ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0 = s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, c2)\n} = {\n  bitri((c0 ⋂(c1 × c2))⊆(= ⋂(c1 × c2)), ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0 = s1))), ∀(s0 ∈ c1, ∀(s1 ∈ c2,(s0[c0]s1 → s0[=]s1))))\n  inxpss2(s0, s1, c0, c1, c2, cid)\n  2ralbii(s0, s1, c1, c2, (s0[c0]s1 → s0[=]s1), (s0[c0]s1 → s0 = s1))\n  imbi2i(s0[c0]s1, s0[=]s1, s0 = s1)\n  elv(s1, (s0[=]s1 ↔ s0 = s1))\n  ideqg(s1, universe, s0)\n  diff.cid.s(s0)\n  diff.cid.s(s1)\n}","parent":["bitri","inxpss2","2ralbii","imbi2i","elv","ideqg","diff.cid.s"],"children":["dfcnvrefrels3","dfcnvrefrel3"]},{"name":"idinxpssinxp","content":"Two ways to say that intersections with Cartesian products are in a subclass relation, special case of ~ inxpss2 . (Contributed by Peter Mazsa, 6-Mar-2019.)","origin":"thm idinxpssinxp(setvar s0, setvar s1, class c0, class c1, class c2) {\n  |- wb(wss(cin(cid, cxp(c0, c1)), cin(c2, cxp(c0, c1))), wral(s0, c0, wral(s1, c1, wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c2, cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n} = {\n  bitri(wss(cin(cid, cxp(c0, c1)), cin(c2, cxp(c0, c1))), wral(s0, c0, wral(s1, c1, wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c2, cv(s1))))), wral(s0, c0, wral(s1, c1, wi(wbr(cv(s0), cid, cv(s1)), wbr(cv(s0), c2, cv(s1))))))\n  inxpss2(s0, s1, cid, c0, c1, c2)\n  2ralbii(s0, s1, c0, c1, wi(wbr(cv(s0), cid, cv(s1)), wbr(cv(s0), c2, cv(s1))), wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c2, cv(s1))))\n  imbi1i(wbr(cv(s0), cid, cv(s1)), wbr(cv(s0), c2, cv(s1)), wceq(cv(s0), cv(s1)))\n  elv(s1, wb(wbr(cv(s0), cid, cv(s1)), wceq(cv(s0), cv(s1))))\n  ideqg(cv(s1), universe, cv(s0))\n  diff.cid.s(s0)\n  diff.cid.s(s1)\n}","pretty":"thm idinxpssinxp(setvar s0, setvar s1, class c0, class c1, class c2) {\n  ⊢ ((= ⋂(c0 × c1))⊆(c2 ⋂(c0 × c1))↔ ∀(s0 ∈ c0, ∀(s1 ∈ c1,(s0 = s1 → s0[c2]s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, c2)\n} = {\n  bitri((= ⋂(c0 × c1))⊆(c2 ⋂(c0 × c1)), ∀(s0 ∈ c0, ∀(s1 ∈ c1,(s0 = s1 → s0[c2]s1))), ∀(s0 ∈ c0, ∀(s1 ∈ c1,(s0[=]s1 → s0[c2]s1))))\n  inxpss2(s0, s1, cid, c0, c1, c2)\n  2ralbii(s0, s1, c0, c1, (s0[=]s1 → s0[c2]s1), (s0 = s1 → s0[c2]s1))\n  imbi1i(s0[=]s1, s0[c2]s1, s0 = s1)\n  elv(s1, (s0[=]s1 ↔ s0 = s1))\n  ideqg(s1, universe, s0)\n  diff.cid.s(s0)\n  diff.cid.s(s1)\n}","parent":["bitri","inxpss2","2ralbii","imbi1i","elv","ideqg","diff.cid.s"],"children":["idinxpssinxp4"]},{"name":"idinxpssinxp2","content":"Identity intersection with a square Cartesian product in subclass relation with an intersection with the same Cartesian product. (Contributed by Peter Mazsa, 4-Mar-2019.) (Proof modification is discouraged.)","origin":"thm idinxpssinxp2(setvar s0, class c0, class c1) {\n  |- wb(wss(cin(cid, cxp(c0, c0)), cin(c1, cxp(c0, c0))), wral(s0, c0, wbr(cv(s0), c1, cv(s0))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  bitri(wss(cin(cid, cxp(c0, c0)), cin(c1, cxp(c0, c0))), wral(s0, c0, wbr(cv(s0), c1, cv(s0))), wral(s0, c0, wa(wcel(cv(s0), c0), wbr(cv(s0), c1, cv(s0)))))\n  3bitri(wss(cin(cid, cxp(c0, c0)), cin(c1, cxp(c0, c0))), wral(s0, c0, wa(wcel(cv(s0), c0), wbr(cv(s0), c1, cv(s0)))), wss(cres(cid, c0), cin(c1, cxp(c0, c0))), wral(s0, c0, wbr(cv(s0), cin(c1, cxp(c0, c0)), cv(s0))))\n  sseq1i(cin(cid, cxp(c0, c0)), cin(c1, cxp(c0, c0)), cres(cid, c0))\n  idinxpres(c0)\n  idrefALT(s0, c0, cin(c1, cxp(c0, c0)))\n  ralbii(s0, c0, wbr(cv(s0), cin(c1, cxp(c0, c0)), cv(s0)), wa(wcel(cv(s0), c0), wbr(cv(s0), c1, cv(s0))))\n  bitr4i(wbr(cv(s0), cin(c1, cxp(c0, c0)), cv(s0)), wa(wcel(cv(s0), c0), wbr(cv(s0), c1, cv(s0))), wa(wa(wcel(cv(s0), c0), wcel(cv(s0), c0)), wbr(cv(s0), c1, cv(s0))))\n  brinxp2(cv(s0), c1, c0, c0, cv(s0))\n  anbi1i(wcel(cv(s0), c0), wbr(cv(s0), c1, cv(s0)), wa(wcel(cv(s0), c0), wcel(cv(s0), c0)))\n  pm4.24(wcel(cv(s0), c0))\n  ralanid(s0, c0, wbr(cv(s0), c1, cv(s0)))\n  diff.cin.s(s0, c1, cxp(c0, c0))\n  diff.cxp.s(s0, c0, c0)\n}","pretty":"thm idinxpssinxp2(setvar s0, class c0, class c1) {\n  ⊢ ((= ⋂(c0 × c0))⊆(c1 ⋂(c0 × c0))↔ ∀(s0 ∈ c0, s0[c1]s0))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  bitri((= ⋂(c0 × c0))⊆(c1 ⋂(c0 × c0)), ∀(s0 ∈ c0, s0[c1]s0), ∀(s0 ∈ c0,(s0 ∈ c0 ∧ s0[c1]s0)))\n  3bitri((= ⋂(c0 × c0))⊆(c1 ⋂(c0 × c0)), ∀(s0 ∈ c0,(s0 ∈ c0 ∧ s0[c1]s0)), (= |` c0)⊆(c1 ⋂(c0 × c0)), ∀(s0 ∈ c0, s0[(c1 ⋂(c0 × c0))]s0))\n  sseq1i((= ⋂(c0 × c0)), (c1 ⋂(c0 × c0)), (= |` c0))\n  idinxpres(c0)\n  idrefALT(s0, c0, (c1 ⋂(c0 × c0)))\n  ralbii(s0, c0, s0[(c1 ⋂(c0 × c0))]s0, (s0 ∈ c0 ∧ s0[c1]s0))\n  bitr4i(s0[(c1 ⋂(c0 × c0))]s0, (s0 ∈ c0 ∧ s0[c1]s0), ((s0 ∈ c0 ∧ s0 ∈ c0)∧ s0[c1]s0))\n  brinxp2(s0, c1, c0, c0, s0)\n  anbi1i(s0 ∈ c0, s0[c1]s0, (s0 ∈ c0 ∧ s0 ∈ c0))\n  pm4.24(s0 ∈ c0)\n  ralanid(s0, c0, s0[c1]s0)\n  diff.cin.s(s0, c1, (c0 × c0))\n  diff.cxp.s(s0, c0, c0)\n}","parent":["bitri","3bitri","sseq1i","idinxpres","idrefALT","ralbii","bitr4i","brinxp2","anbi1i","pm4.24","ralanid","diff.cin.s","diff.cxp.s"],"children":["idinxpssinxp3","idinxpssinxp4"]},{"name":"idinxpssinxp3","content":"Identity intersection with a square Cartesian product in subclass relation with an intersection with the same Cartesian product. (Contributed by Peter Mazsa, 16-Mar-2019.) (Proof modification is discouraged.)","origin":"thm idinxpssinxp3(class c0, class c1) {\n  |- wb(wss(cin(cid, cxp(c0, c0)), cin(c1, cxp(c0, c0))), wss(cres(cid, c0), c1))\n} = {\n  bitr4i(wss(cin(cid, cxp(c0, c0)), cin(c1, cxp(c0, c0))), wss(cres(cid, c0), c1), wral(hs0, c0, wbr(cv(hs0), c1, cv(hs0))))\n  idinxpssinxp2(hs0, c0, c1)\n  idrefALT(hs0, c0, c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","pretty":"thm idinxpssinxp3(class c0, class c1) {\n  ⊢ ((= ⋂(c0 × c0))⊆(c1 ⋂(c0 × c0))↔(= |` c0)⊆ c1)\n} = {\n  bitr4i((= ⋂(c0 × c0))⊆(c1 ⋂(c0 × c0)), (= |` c0)⊆ c1, ∀(hs0 ∈ c0, hs0[c1]hs0))\n  idinxpssinxp2(hs0, c0, c1)\n  idrefALT(hs0, c0, c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","parent":["bitr4i","idinxpssinxp2","idrefALT","diff.hs0.c"],"children":[]},{"name":"idinxpssinxp4","content":"Identity intersection with a square Cartesian product in subclass relation with an intersection with the same Cartesian product (see also ~ idinxpssinxp2 ). (Contributed by Peter Mazsa, 8-Mar-2019.)","origin":"thm idinxpssinxp4(setvar s0, setvar s1, class c0, class c1) {\n  |- wb(wral(s0, c0, wral(s1, c0, wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c1, cv(s1))))), wral(s0, c0, wbr(cv(s0), c1, cv(s0))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  bitr3i(wral(s0, c0, wral(s1, c0, wi(wceq(cv(s0), cv(s1)), wbr(cv(s0), c1, cv(s1))))), wral(s0, c0, wbr(cv(s0), c1, cv(s0))), wss(cin(cid, cxp(c0, c0)), cin(c1, cxp(c0, c0))))\n  idinxpssinxp(s0, s1, c0, c0, c1)\n  idinxpssinxp2(s0, c0, c1)\n}","pretty":"thm idinxpssinxp4(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ (∀(s0 ∈ c0, ∀(s1 ∈ c0,(s0 = s1 → s0[c1]s1)))↔ ∀(s0 ∈ c0, s0[c1]s0))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  bitr3i(∀(s0 ∈ c0, ∀(s1 ∈ c0,(s0 = s1 → s0[c1]s1))), ∀(s0 ∈ c0, s0[c1]s0), (= ⋂(c0 × c0))⊆(c1 ⋂(c0 × c0)))\n  idinxpssinxp(s0, s1, c0, c0, c1)\n  idinxpssinxp2(s0, c0, c1)\n}","parent":["bitr3i","idinxpssinxp","idinxpssinxp2"],"children":["refrelcoss3"]},{"name":"relcnveq3","content":"Two ways of saying a relation is symmetric. (Contributed by FL, 31-Aug-2009.)","origin":"thm relcnveq3(setvar s0, setvar s1, class c0) {\n  |- wi(wrel(c0), wb(wceq(c0, ccnv(c0)), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0)))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  syl5bb(wrel(c0), wceq(c0, ccnv(c0)), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wa(wss(c0, ccnv(c0)), wss(ccnv(c0), c0)))\n  eqss(c0, ccnv(c0))\n  impbid(wrel(c0), wa(wss(c0, ccnv(c0)), wss(ccnv(c0), c0)), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))))\n  com12(wrel(c0), wa(wss(c0, ccnv(c0)), wss(ccnv(c0), c0)), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))))\n  adantl(wss(c0, ccnv(c0)), wss(ccnv(c0), c0), wi(wrel(c0), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0)))))))\n  a1d(wss(ccnv(c0), c0), wrel(c0), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))))\n  biimpi(wss(ccnv(c0), c0), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))))\n  jca2(wrel(c0), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wss(c0, ccnv(c0)), wss(ccnv(c0), c0))\n  sylbi(wrel(c0), wi(wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wss(c0, ccnv(c0))), wceq(ccnv(ccnv(c0)), c0))\n  dfrel2(c0)\n  com12(wceq(ccnv(ccnv(c0)), c0), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wss(c0, ccnv(c0)))\n  sylbir(wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wi(wceq(ccnv(ccnv(c0)), c0), wss(c0, ccnv(c0))), wss(ccnv(c0), c0))\n  syl5ibcom(wss(ccnv(c0), c0), wceq(ccnv(ccnv(c0)), c0), wss(c0, ccnv(c0)), wss(ccnv(ccnv(c0)), ccnv(c0)))\n  cnvss(ccnv(c0), c0)\n  sseq1(ccnv(ccnv(c0)), c0, ccnv(c0))\n  biimpri(wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wss(ccnv(c0), c0))\n  cnvsym(s0, s1, c0)\n}","pretty":"thm relcnveq3(setvar s0, setvar s1, class c0) {\n  ⊢ (Rel(c0)→(c0 = `' c0 ↔ ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  syl5bb(Rel(c0), c0 = `' c0, ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))), (c0 ⊆ `' c0 ∧ `' c0 ⊆ c0))\n  eqss(c0, `' c0)\n  impbid(Rel(c0), (c0 ⊆ `' c0 ∧ `' c0 ⊆ c0), ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))))\n  com12(Rel(c0), (c0 ⊆ `' c0 ∧ `' c0 ⊆ c0), ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))))\n  adantl(c0 ⊆ `' c0, `' c0 ⊆ c0, (Rel(c0)→ ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0)))))\n  a1d(`' c0 ⊆ c0, Rel(c0), ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))))\n  biimpi(`' c0 ⊆ c0, ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))))\n  jca2(Rel(c0), ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))), c0 ⊆ `' c0, `' c0 ⊆ c0)\n  sylbi(Rel(c0), (∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0)))→ c0 ⊆ `' c0), `' `' c0 = c0)\n  dfrel2(c0)\n  com12(`' `' c0 = c0, ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))), c0 ⊆ `' c0)\n  sylbir(∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))), (`' `' c0 = c0 → c0 ⊆ `' c0), `' c0 ⊆ c0)\n  syl5ibcom(`' c0 ⊆ c0, `' `' c0 = c0, c0 ⊆ `' c0, `' `' c0 ⊆ `' c0)\n  cnvss(`' c0, c0)\n  sseq1(`' `' c0, c0, `' c0)\n  biimpri(∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))), `' c0 ⊆ c0)\n  cnvsym(s0, s1, c0)\n}","parent":["syl5bb","eqss","impbid","com12","adantl","a1d","biimpi","jca2","sylbi","dfrel2","sylbir","syl5ibcom","cnvss","sseq1","biimpri","cnvsym"],"children":["relcnveq"]},{"name":"relcnveq","content":"Two ways of saying a relation is symmetric. (Contributed by Peter Mazsa, 23-Aug-2018.)","origin":"thm relcnveq(class c0) {\n  |- wi(wrel(c0), wb(wss(ccnv(c0), c0), wceq(ccnv(c0), c0)))\n} = {\n  syl5rbbr(wrel(c0), wss(ccnv(c0), c0), wceq(ccnv(c0), c0), wceq(c0, ccnv(c0)))\n  eqcom(c0, ccnv(c0))\n  syl6bbr(wrel(c0), wceq(c0, ccnv(c0)), wss(ccnv(c0), c0), wal(hs0, wal(hs1, wi(wbr(cv(hs0), c0, cv(hs1)), wbr(cv(hs1), c0, cv(hs0))))))\n  relcnveq3(hs0, hs1, c0)\n  cnvsym(hs0, hs1, c0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c0)\n}","pretty":"thm relcnveq(class c0) {\n  ⊢ (Rel(c0)→(`' c0 ⊆ c0 ↔ `' c0 = c0))\n} = {\n  syl5rbbr(Rel(c0), `' c0 ⊆ c0, `' c0 = c0, c0 = `' c0)\n  eqcom(c0, `' c0)\n  syl6bbr(Rel(c0), c0 = `' c0, `' c0 ⊆ c0, ∀(hs0, ∀(hs1,(hs0[c0]hs1 → hs1[c0]hs0))))\n  relcnveq3(hs0, hs1, c0)\n  cnvsym(hs0, hs1, c0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c0)\n}","parent":["syl5rbbr","eqcom","syl6bbr","relcnveq3","cnvsym","diff.hs0.s","diff.hs0.c","diff.hs1.c"],"children":["relcnveq4","cnvcosseq","dfsymrel4"]},{"name":"relcnveq2","content":"Two ways of saying a relation is symmetric. (Contributed by Peter Mazsa, 28-Apr-2019.)","origin":"thm relcnveq2(setvar s0, setvar s1, class c0) {\n  |- wi(wrel(c0), wb(wceq(ccnv(c0), c0), wal(s0, wal(s1, wb(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0)))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  3bitr4g(wrel(c0), wceq(ccnv(c0), c0), wal(s0, wal(s1, wb(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wa(wss(ccnv(c0), c0), wss(c0, ccnv(c0))), wa(wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wal(s0, wal(s1, wi(wbr(cv(s1), c0, cv(s0)), wbr(cv(s0), c0, cv(s1)))))))\n  anbi12d(wrel(c0), wss(ccnv(c0), c0), wss(c0, ccnv(c0)), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wal(s0, wal(s1, wi(wbr(cv(s1), c0, cv(s0)), wbr(cv(s0), c0, cv(s1))))))\n  a1i(wrel(c0), wb(wss(ccnv(c0), c0), wal(s0, wal(s1, wi(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0)))))))\n  cnvsym(s0, s1, c0)\n  bitrd(wrel(c0), wss(c0, ccnv(c0)), wal(s0, wal(s1, wi(wbr(cv(s1), c0, cv(s0)), wbr(cv(s0), c0, cv(s1))))), wal(s0, wal(s1, wi(wbr(cv(s0), ccnv(c0), cv(s1)), wbr(cv(s1), ccnv(c0), cv(s0))))))\n  syl5rbbr(wrel(c0), wss(c0, ccnv(c0)), wal(s0, wal(s1, wi(wbr(cv(s0), ccnv(c0), cv(s1)), wbr(cv(s1), ccnv(c0), cv(s0))))), wss(ccnv(ccnv(c0)), ccnv(c0)))\n  cnvsym(s0, s1, ccnv(c0))\n  sseq1d(ccnv(ccnv(c0)), ccnv(c0), c0, wrel(c0))\n  biimpi(wrel(c0), wceq(ccnv(ccnv(c0)), c0))\n  dfrel2(c0)\n  2albidv(s0, s1, wrel(c0), wi(wbr(cv(s0), ccnv(c0), cv(s1)), wbr(cv(s1), ccnv(c0), cv(s0))), wi(wbr(cv(s1), c0, cv(s0)), wbr(cv(s0), c0, cv(s1))))\n  imbi12d(wrel(c0), wbr(cv(s0), ccnv(c0), cv(s1)), wbr(cv(s1), ccnv(c0), cv(s0)), wbr(cv(s1), c0, cv(s0)), wbr(cv(s0), c0, cv(s1)))\n  relbrcnvg(c0, cv(s0), cv(s1))\n  relbrcnvg(c0, cv(s1), cv(s0))\n  eqss(ccnv(c0), c0)\n  2albiim(s0, s1, wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0)))\n  diff.ccnv.s(s0, c0)\n  diff.ccnv.s(s1, c0)\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s1, c0)\n}","pretty":"thm relcnveq2(setvar s0, setvar s1, class c0) {\n  ⊢ (Rel(c0)→(`' c0 = c0 ↔ ∀(s0, ∀(s1,(s0[c0]s1 ↔ s1[c0]s0)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  3bitr4g(Rel(c0), `' c0 = c0, ∀(s0, ∀(s1,(s0[c0]s1 ↔ s1[c0]s0))), (`' c0 ⊆ c0 ∧ c0 ⊆ `' c0), (∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0)))∧ ∀(s0, ∀(s1,(s1[c0]s0 → s0[c0]s1)))))\n  anbi12d(Rel(c0), `' c0 ⊆ c0, c0 ⊆ `' c0, ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0))), ∀(s0, ∀(s1,(s1[c0]s0 → s0[c0]s1))))\n  a1i(Rel(c0), (`' c0 ⊆ c0 ↔ ∀(s0, ∀(s1,(s0[c0]s1 → s1[c0]s0)))))\n  cnvsym(s0, s1, c0)\n  bitrd(Rel(c0), c0 ⊆ `' c0, ∀(s0, ∀(s1,(s1[c0]s0 → s0[c0]s1))), ∀(s0, ∀(s1,(s0[`' c0]s1 → s1[`' c0]s0))))\n  syl5rbbr(Rel(c0), c0 ⊆ `' c0, ∀(s0, ∀(s1,(s0[`' c0]s1 → s1[`' c0]s0))), `' `' c0 ⊆ `' c0)\n  cnvsym(s0, s1, `' c0)\n  sseq1d(`' `' c0, `' c0, c0, Rel(c0))\n  biimpi(Rel(c0), `' `' c0 = c0)\n  dfrel2(c0)\n  2albidv(s0, s1, Rel(c0), (s0[`' c0]s1 → s1[`' c0]s0), (s1[c0]s0 → s0[c0]s1))\n  imbi12d(Rel(c0), s0[`' c0]s1, s1[`' c0]s0, s1[c0]s0, s0[c0]s1)\n  relbrcnvg(c0, s0, s1)\n  relbrcnvg(c0, s1, s0)\n  eqss(`' c0, c0)\n  2albiim(s0, s1, s0[c0]s1, s1[c0]s0)\n  diff.ccnv.s(s0, c0)\n  diff.ccnv.s(s1, c0)\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s1, c0)\n}","parent":["3bitr4g","anbi12d","a1i","cnvsym","bitrd","syl5rbbr","sseq1d","biimpi","dfrel2","2albidv","imbi12d","relbrcnvg","eqss","2albiim","diff.ccnv.s","diff.wrel.s"],"children":["relcnveq4"]},{"name":"relcnveq4","content":"Two ways of saying a relation is symmetric. (Contributed by Peter Mazsa, 28-Apr-2019.)","origin":"thm relcnveq4(setvar s0, setvar s1, class c0) {\n  |- wi(wrel(c0), wb(wss(ccnv(c0), c0), wal(s0, wal(s1, wb(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0)))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  bitrd(wrel(c0), wss(ccnv(c0), c0), wal(s0, wal(s1, wb(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s0))))), wceq(ccnv(c0), c0))\n  relcnveq(c0)\n  relcnveq2(s0, s1, c0)\n}","pretty":"thm relcnveq4(setvar s0, setvar s1, class c0) {\n  ⊢ (Rel(c0)→(`' c0 ⊆ c0 ↔ ∀(s0, ∀(s1,(s0[c0]s1 ↔ s1[c0]s0)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  bitrd(Rel(c0), `' c0 ⊆ c0, ∀(s0, ∀(s1,(s0[c0]s1 ↔ s1[c0]s0))), `' c0 = c0)\n  relcnveq(c0)\n  relcnveq2(s0, s1, c0)\n}","parent":["bitrd","relcnveq","relcnveq2"],"children":["dfsymrel5"]},{"name":"qsresid","content":"Simplification of a special quotient set. (Contributed by Peter Mazsa, 2-Sep-2020.)","origin":"thm qsresid(class c0, class c1) {\n  |- wceq(cqs(c0, cres(c1, c0)), cqs(c0, c1))\n} = {\n  3eqtr4i(cqs(c0, cres(c1, c0)), cqs(c0, c1), cab(hs0, wrex(hs1, c0, wceq(cv(hs0), cec(cv(hs1), cres(c1, c0))))), cab(hs0, wrex(hs1, c0, wceq(cv(hs0), cec(cv(hs1), c1)))))\n  abbii(hs0, wrex(hs1, c0, wceq(cv(hs0), cec(cv(hs1), cres(c1, c0)))), wrex(hs1, c0, wceq(cv(hs0), cec(cv(hs1), c1))))\n  rexbiia(hs1, c0, wceq(cv(hs0), cec(cv(hs1), cres(c1, c0))), wceq(cv(hs0), cec(cv(hs1), c1)))\n  eqeq2d(cv(hs0), cec(cv(hs1), cres(c1, c0)), cec(cv(hs1), c1), wcel(cv(hs1), c0))\n  ecres2(cv(hs1), c0, c1)\n  df-qs(hs0, hs1, c0, cres(c1, c0))\n  df-qs(hs0, hs1, c0, c1)\n  diff.hs0.s(hs1)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.c(cres(c1, c0))\n  diff.hs0.c(cres(c1, c0))\n  diff.hs1.c(c1)\n  diff.hs0.c(c1)\n}","pretty":"thm qsresid(class c0, class c1) {\n  ⊢ (c0 /.(c1 |` c0))=(c0 /. c1)\n} = {\n  3eqtr4i((c0 /.(c1 |` c0)), (c0 /. c1), { hs0 | ∃(hs1 ∈ c0, hs0 =[hs1](c1 |` c0))}, { hs0 | ∃(hs1 ∈ c0, hs0 =[hs1]c1)})\n  abbii(hs0, ∃(hs1 ∈ c0, hs0 =[hs1](c1 |` c0)), ∃(hs1 ∈ c0, hs0 =[hs1]c1))\n  rexbiia(hs1, c0, hs0 =[hs1](c1 |` c0), hs0 =[hs1]c1)\n  eqeq2d(hs0, [hs1](c1 |` c0), [hs1]c1, hs1 ∈ c0)\n  ecres2(hs1, c0, c1)\n  df-qs(hs0, hs1, c0, (c1 |` c0))\n  df-qs(hs0, hs1, c0, c1)\n  diff.hs0.s(hs1)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.c((c1 |` c0))\n  diff.hs0.c((c1 |` c0))\n  diff.hs1.c(c1)\n  diff.hs0.c(c1)\n}","parent":["3eqtr4i","abbii","rexbiia","eqeq2d","ecres2","df-qs","diff.hs0.s","diff.hs1.c","diff.hs0.c"],"children":["n0el3"]},{"name":"nel02","content":"The empty set has no elements. (Contributed by Peter Mazsa, 4-Jan-2018.)","origin":"thm nel02(class c0, class c1) {\n  |- wi(wceq(c0, emptycls), wn(wcel(c1, c0)))\n} = {\n  mtbiri(wceq(c0, emptycls), wcel(c1, c0), wcel(c1, emptycls))\n  noel(c1)\n  eleq2(c0, emptycls, c1)\n}","pretty":"thm nel02(class c0, class c1) {\n  ⊢ (c0 = ∅ → ¬ c1 ∈ c0)\n} = {\n  mtbiri(c0 = ∅, c1 ∈ c0, c1 ∈ ∅)\n  noel(c1)\n  eleq2(c0, emptycls, c1)\n}","parent":["mtbiri","noel","eleq2"],"children":[]},{"name":"n0elqs","content":"Two ways of expressing that the empty set is not an element of a quotient set. (Contributed by Peter Mazsa, 5-Dec-2019.)","origin":"thm n0elqs(class c0, class c1) {\n  |- wb(wn(wcel(emptycls, cqs(c0, c1))), wss(c0, cdm(c1)))\n} = {\n  3bitr4ri(wn(wcel(emptycls, cqs(c0, c1))), wss(c0, cdm(c1)), wral(hs0, c0, wcel(cv(hs0), cdm(c1))), wral(hs0, c0, wne(cec(cv(hs0), c1), emptycls)))\n  ralbii(hs0, c0, wcel(cv(hs0), cdm(c1)), wne(cec(cv(hs0), c1), emptycls))\n  ecdmn0(cv(hs0), c1)\n  dfss3(hs0, c0, cdm(c1))\n  3bitr4ri(wn(wcel(emptycls, cqs(c0, c1))), wral(hs0, c0, wne(cec(cv(hs0), c1), emptycls)), wn(wrex(hs0, c0, wn(wne(cec(cv(hs0), c1), emptycls)))), wn(wrex(hs0, c0, wceq(cec(cv(hs0), c1), emptycls))))\n  notbii(wrex(hs0, c0, wn(wne(cec(cv(hs0), c1), emptycls))), wrex(hs0, c0, wceq(cec(cv(hs0), c1), emptycls)))\n  rexbii(hs0, c0, wn(wne(cec(cv(hs0), c1), emptycls)), wceq(cec(cv(hs0), c1), emptycls))\n  nne(cec(cv(hs0), c1), emptycls)\n  dfral2(hs0, c0, wne(cec(cv(hs0), c1), emptycls))\n  notbii(wcel(emptycls, cqs(c0, c1)), wrex(hs0, c0, wceq(cec(cv(hs0), c1), emptycls)))\n  bitri(wcel(emptycls, cqs(c0, c1)), wrex(hs0, c0, wceq(cec(cv(hs0), c1), emptycls)), wrex(hs0, c0, wceq(emptycls, cec(cv(hs0), c1))))\n  elqs(hs0, emptycls, c0, c1)\n  0ex()\n  rexbii(hs0, c0, wceq(emptycls, cec(cv(hs0), c1)), wceq(cec(cv(hs0), c1), emptycls))\n  eqcom(emptycls, cec(cv(hs0), c1))\n  diff.hs0.c(c0)\n  diff.hs0.c(cdm(c1))\n  diff.hs0.c(emptycls)\n  diff.hs0.c(c1)\n}","pretty":"thm n0elqs(class c0, class c1) {\n  ⊢ (¬ ∅ ∈(c0 /. c1)↔ c0 ⊆ dom(c1))\n} = {\n  3bitr4ri(¬ ∅ ∈(c0 /. c1), c0 ⊆ dom(c1), ∀(hs0 ∈ c0, hs0 ∈ dom(c1)), ∀(hs0 ∈ c0,[hs0]c1 ≠ ∅))\n  ralbii(hs0, c0, hs0 ∈ dom(c1), [hs0]c1 ≠ ∅)\n  ecdmn0(hs0, c1)\n  dfss3(hs0, c0, dom(c1))\n  3bitr4ri(¬ ∅ ∈(c0 /. c1), ∀(hs0 ∈ c0,[hs0]c1 ≠ ∅), ¬ ∃(hs0 ∈ c0, ¬[hs0]c1 ≠ ∅), ¬ ∃(hs0 ∈ c0,[hs0]c1 = ∅))\n  notbii(∃(hs0 ∈ c0, ¬[hs0]c1 ≠ ∅), ∃(hs0 ∈ c0,[hs0]c1 = ∅))\n  rexbii(hs0, c0, ¬[hs0]c1 ≠ ∅, [hs0]c1 = ∅)\n  nne([hs0]c1, emptycls)\n  dfral2(hs0, c0, [hs0]c1 ≠ ∅)\n  notbii(∅ ∈(c0 /. c1), ∃(hs0 ∈ c0,[hs0]c1 = ∅))\n  bitri(∅ ∈(c0 /. c1), ∃(hs0 ∈ c0,[hs0]c1 = ∅), ∃(hs0 ∈ c0, ∅ =[hs0]c1))\n  elqs(hs0, emptycls, c0, c1)\n  0ex()\n  rexbii(hs0, c0, ∅ =[hs0]c1, [hs0]c1 = ∅)\n  eqcom(emptycls, [hs0]c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(dom(c1))\n  diff.hs0.c(emptycls)\n  diff.hs0.c(c1)\n}","parent":["3bitr4ri","ralbii","ecdmn0","dfss3","notbii","rexbii","nne","dfral2","bitri","elqs","0ex","eqcom","diff.hs0.c"],"children":["n0elqs2","n0eldmqs"]},{"name":"n0elqs2","content":"Two ways of expressing that the empty set is not an element of a quotient set. (Contributed by Peter Mazsa, 25-Jul-2021.)","origin":"thm n0elqs2(class c0, class c1) {\n  |- wb(wn(wcel(emptycls, cqs(c0, c1))), wceq(cdm(cres(c1, c0)), c0))\n} = {\n  bitri(wn(wcel(emptycls, cqs(c0, c1))), wceq(cdm(cres(c1, c0)), c0), wss(c0, cdm(c1)))\n  n0elqs(c0, c1)\n  ssdmres(c0, c1)\n}","pretty":"thm n0elqs2(class c0, class c1) {\n  ⊢ (¬ ∅ ∈(c0 /. c1)↔ dom((c1 |` c0))= c0)\n} = {\n  bitri(¬ ∅ ∈(c0 /. c1), dom((c1 |` c0))= c0, c0 ⊆ dom(c1))\n  n0elqs(c0, c1)\n  ssdmres(c0, c1)\n}","parent":["bitri","n0elqs","ssdmres"],"children":[]},{"name":"ecex2","content":"Condition for a coset to be a set. (Contributed by Peter Mazsa, 4-May-2019.)","origin":"thm ecex2(class c0, class c1, class c2, class c3) {\n  |- wi(wcel(cres(c0, c1), c2), wi(wcel(c3, c1), wcel(cec(c3, c0), universe)))\n} = {\n  syl5ibcom(wcel(cres(c0, c1), c2), wcel(c3, c1), wcel(cec(c3, c0), universe), wcel(cec(c3, cres(c0, c1)), universe))\n  ecexg(cres(c0, c1), c2, c3)\n  eleq1d(cec(c3, cres(c0, c1)), universe, cec(c3, c0), wcel(c3, c1))\n  ecres2(c3, c1, c0)\n}","pretty":"thm ecex2(class c0, class c1, class c2, class c3) {\n  ⊢ ((c0 |` c1)∈ c2 →(c3 ∈ c1 →[c3]c0 ∈ 𝕌))\n} = {\n  syl5ibcom((c0 |` c1)∈ c2, c3 ∈ c1, [c3]c0 ∈ 𝕌, [c3](c0 |` c1)∈ 𝕌)\n  ecexg((c0 |` c1), c2, c3)\n  eleq1d([c3](c0 |` c1), universe, [c3]c0, c3 ∈ c1)\n  ecres2(c3, c1, c0)\n}","parent":["syl5ibcom","ecexg","eleq1d","ecres2"],"children":["uniqsALTV"]},{"name":"uniqsALTV","content":"The union of a quotient set, like ~ uniqs but with a weaker antecedent: only the restricion of ` R ` by ` A ` needs to be a set, not ` R ` itself, see e.g. ~ cnvepima . (Contributed by Peter Mazsa, 20-Jun-2019.)","origin":"thm uniqsALTV(class c0, class c1, class c2) {\n  |- wi(wcel(cres(c0, c1), c2), wceq(cuni(cqs(c1, c0)), cima(c0, c1)))\n} = {\n  3eqtr4g(cuni(cqs(c1, c0)), cima(c0, c1), cuni(cab(hs0, wrex(hs1, c1, wceq(cv(hs0), cec(cv(hs1), c0))))), ciun(hs1, c1, cec(cv(hs1), c0)), wcel(cres(c0, c1), c2))\n  eqcomd(cuni(cab(hs0, wrex(hs1, c1, wceq(cv(hs0), cec(cv(hs1), c0))))), ciun(hs1, c1, cec(cv(hs1), c0)), wcel(cres(c0, c1), c2))\n  syl(wcel(cres(c0, c1), c2), wceq(ciun(hs1, c1, cec(cv(hs1), c0)), cuni(cab(hs0, wrex(hs1, c1, wceq(cv(hs0), cec(cv(hs1), c0)))))), wral(hs1, c1, wcel(cec(cv(hs1), c0), universe)))\n  ralrimiv(hs1, c1, wcel(cres(c0, c1), c2), wcel(cec(cv(hs1), c0), universe))\n  ecex2(c0, c1, c2, cv(hs1))\n  dfiun2g(hs1, hs0, c1, cec(cv(hs1), c0), universe)\n  unieqi(cqs(c1, c0), cab(hs0, wrex(hs1, c1, wceq(cv(hs0), cec(cv(hs1), c0)))))\n  df-qs(hs0, hs1, c1, c0)\n  3eqtr2ri(cima(c0, c1), ciun(hs1, c1, cec(cv(hs1), c0)), ciun(hs1, c1, cima(c0, csn(cv(hs1)))), cima(c0, ciun(hs1, c1, csn(cv(hs1)))))\n  iuneq2i(hs1, c1, cec(cv(hs1), c0), cima(c0, csn(cv(hs1))))\n  a1i(wcel(cv(hs1), c1), wceq(cec(cv(hs1), c0), cima(c0, csn(cv(hs1)))))\n  df-ec(cv(hs1), c0)\n  imaiun(hs1, c0, c1, csn(cv(hs1)))\n  imaeq2i(c0, ciun(hs1, c1, csn(cv(hs1))), c1)\n  iunid(hs1, c1)\n  diff.hs1.w(wcel(cres(c0, c1), c2))\n  diff.hs1.s(hs0)\n  diff.hs0.c(c1)\n  diff.hs0.c(cec(cv(hs1), c0))\n  diff.hs0.s(hs1)\n  diff.hs1.c(c1)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n}","pretty":"thm uniqsALTV(class c0, class c1, class c2) {\n  ⊢ ((c0 |` c1)∈ c2 → ⋃(c1 /. c0)=(c0 \" c1))\n} = {\n  3eqtr4g(⋃(c1 /. c0), (c0 \" c1), ⋃ { hs0 | ∃(hs1 ∈ c1, hs0 =[hs1]c0)}, ⋃(hs1 ∈ c1,[hs1]c0), (c0 |` c1)∈ c2)\n  eqcomd(⋃ { hs0 | ∃(hs1 ∈ c1, hs0 =[hs1]c0)}, ⋃(hs1 ∈ c1,[hs1]c0), (c0 |` c1)∈ c2)\n  syl((c0 |` c1)∈ c2, ⋃(hs1 ∈ c1,[hs1]c0)= ⋃ { hs0 | ∃(hs1 ∈ c1, hs0 =[hs1]c0)}, ∀(hs1 ∈ c1,[hs1]c0 ∈ 𝕌))\n  ralrimiv(hs1, c1, (c0 |` c1)∈ c2, [hs1]c0 ∈ 𝕌)\n  ecex2(c0, c1, c2, hs1)\n  dfiun2g(hs1, hs0, c1, [hs1]c0, universe)\n  unieqi((c1 /. c0), { hs0 | ∃(hs1 ∈ c1, hs0 =[hs1]c0)})\n  df-qs(hs0, hs1, c1, c0)\n  3eqtr2ri((c0 \" c1), ⋃(hs1 ∈ c1,[hs1]c0), ⋃(hs1 ∈ c1,(c0 \" { hs1 })), (c0 \" ⋃(hs1 ∈ c1, { hs1 })))\n  iuneq2i(hs1, c1, [hs1]c0, (c0 \" { hs1 }))\n  a1i(hs1 ∈ c1, [hs1]c0 =(c0 \" { hs1 }))\n  df-ec(hs1, c0)\n  imaiun(hs1, c0, c1, { hs1 })\n  imaeq2i(c0, ⋃(hs1 ∈ c1, { hs1 }), c1)\n  iunid(hs1, c1)\n  diff.hs1.w((c0 |` c1)∈ c2)\n  diff.hs1.s(hs0)\n  diff.hs0.c(c1)\n  diff.hs0.c([hs1]c0)\n  diff.hs0.s(hs1)\n  diff.hs1.c(c1)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n}","parent":["3eqtr4g","eqcomd","syl","ralrimiv","ecex2","dfiun2g","unieqi","df-qs","3eqtr2ri","iuneq2i","a1i","df-ec","imaiun","imaeq2i","iunid","diff.hs1.w","diff.hs1.s","diff.hs0.c","diff.hs0.s","diff.hs1.c"],"children":["imaexALTV","rnresequniqs","cnvepima"]},{"name":"imaexALTV","content":"Existence of an image of a class. Theorem 3.17 of [Monk1] p. 39. (cf. ~ imaexg ) with weakened antecedent: only the restricion of ` A ` by a set needs to be a set, not ` A ` itself, see e.g. ~ cnvepimaex . (Contributed by Peter Mazsa, 22-Feb-2023.) (Proof modification is discouraged.)","origin":"thm imaexALTV(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wo(wcel(c0, c1), wa(wcel(cres(c0, c2), c3), wcel(c2, c4))), wcel(cima(c0, c2), universe))\n} = {\n  jaoi(wcel(c0, c1), wa(wcel(cres(c0, c2), c3), wcel(c2, c4)), wcel(cima(c0, c2), universe))\n  sylancr(wcel(c0, c1), wcel(cima(c0, c2), universe), wss(cima(c0, c2), crn(c0)), wcel(crn(c0), universe))\n  imassrn(c0, c2)\n  rnexg(c0, c1)\n  ssexg(cima(c0, c2), crn(c0), universe)\n  imp(wcel(cres(c0, c2), c3), wcel(c2, c4), wcel(cima(c0, c2), universe))\n  syl5ib(wcel(cres(c0, c2), c3), wcel(c2, c4), wcel(cima(c0, c2), universe), wcel(cuni(cqs(c2, c0)), universe))\n  syl(wcel(c2, c4), wcel(cuni(cqs(c2, c0)), universe), wcel(cqs(c2, c0), universe))\n  qsexg(c2, c4, c0)\n  uniexg(cqs(c2, c0), universe)\n  eleq1d(cuni(cqs(c2, c0)), universe, cima(c0, c2), wcel(cres(c0, c2), c3))\n  uniqsALTV(c0, c2, c3)\n}","pretty":"thm imaexALTV(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∨((c0 |` c2)∈ c3 ∧ c2 ∈ c4))→(c0 \" c2)∈ 𝕌)\n} = {\n  jaoi(c0 ∈ c1, ((c0 |` c2)∈ c3 ∧ c2 ∈ c4), (c0 \" c2)∈ 𝕌)\n  sylancr(c0 ∈ c1, (c0 \" c2)∈ 𝕌, (c0 \" c2)⊆ ran(c0), ran(c0)∈ 𝕌)\n  imassrn(c0, c2)\n  rnexg(c0, c1)\n  ssexg((c0 \" c2), ran(c0), universe)\n  imp((c0 |` c2)∈ c3, c2 ∈ c4, (c0 \" c2)∈ 𝕌)\n  syl5ib((c0 |` c2)∈ c3, c2 ∈ c4, (c0 \" c2)∈ 𝕌, ⋃(c2 /. c0)∈ 𝕌)\n  syl(c2 ∈ c4, ⋃(c2 /. c0)∈ 𝕌, (c2 /. c0)∈ 𝕌)\n  qsexg(c2, c4, c0)\n  uniexg((c2 /. c0), universe)\n  eleq1d(⋃(c2 /. c0), universe, (c0 \" c2), (c0 |` c2)∈ c3)\n  uniqsALTV(c0, c2, c3)\n}","parent":["jaoi","sylancr","imassrn","rnexg","ssexg","imp","syl5ib","syl","qsexg","uniexg","eleq1d","uniqsALTV"],"children":["ecexALTV","cnvepimaex"]},{"name":"ecexALTV","content":"Existence of a coset, like ~ ecexg but with a weaker antecedent: only the restricion of ` R ` by the singleton of ` A ` needs to be a set, not ` R ` itself, see e.g. ~ eccnvepex . (Contributed by Peter Mazsa, 22-Feb-2023.)","origin":"thm ecexALTV(class c0, class c1, class c2) {\n  |- wi(wcel(cres(c0, csn(c1)), c2), wcel(cec(c1, c0), universe))\n} = {\n  syl5eqel(cec(c1, c0), universe, cima(c0, csn(c1)), wcel(cres(c0, csn(c1)), c2))\n  df-ec(c1, c0)\n  mpan2(wcel(cres(c0, csn(c1)), c2), wcel(cima(c0, csn(c1)), universe), wcel(csn(c1), universe))\n  snex(c1)\n  olcs(wa(wcel(cres(c0, csn(c1)), c2), wcel(csn(c1), universe)), wcel(cima(c0, csn(c1)), universe), wcel(c0, universe))\n  imaexALTV(c0, universe, csn(c1), c2, universe)\n}","pretty":"thm ecexALTV(class c0, class c1, class c2) {\n  ⊢ ((c0 |` { c1 })∈ c2 →[c1]c0 ∈ 𝕌)\n} = {\n  syl5eqel([c1]c0, universe, (c0 \" { c1 }), (c0 |` { c1 })∈ c2)\n  df-ec(c1, c0)\n  mpan2((c0 |` { c1 })∈ c2, (c0 \" { c1 })∈ 𝕌, { c1 } ∈ 𝕌)\n  snex(c1)\n  olcs(((c0 |` { c1 })∈ c2 ∧ { c1 } ∈ 𝕌), (c0 \" { c1 })∈ 𝕌, c0 ∈ 𝕌)\n  imaexALTV(c0, universe, { c1 }, c2, universe)\n}","parent":["syl5eqel","df-ec","mpan2","snex","olcs","imaexALTV"],"children":["eccnvepex"]},{"name":"rnresequniqs","content":"The range of a restriction is equal to the union of the quotient set. (Contributed by Peter Mazsa, 19-May-2018.)","origin":"thm rnresequniqs(class c0, class c1, class c2) {\n  |- wi(wcel(cres(c0, c1), c2), wceq(crn(cres(c0, c1)), cuni(cqs(c1, c0))))\n} = {\n  syl6req(crn(cres(c0, c1)), cuni(cqs(c1, c0)), cima(c0, c1), wcel(cres(c0, c1), c2))\n  uniqsALTV(c0, c1, c2)\n  df-ima(c0, c1)\n}","pretty":"thm rnresequniqs(class c0, class c1, class c2) {\n  ⊢ ((c0 |` c1)∈ c2 → ran((c0 |` c1))= ⋃(c1 /. c0))\n} = {\n  syl6req(ran((c0 |` c1)), ⋃(c1 /. c0), (c0 \" c1), (c0 |` c1)∈ c2)\n  uniqsALTV(c0, c1, c2)\n  df-ima(c0, c1)\n}","parent":["syl6req","uniqsALTV","df-ima"],"children":["unidmqs"]},{"name":"n0el2","content":"Two ways of expressing that the empty set is not an element of a class. (Contributed by Peter Mazsa, 31-Jan-2018.)","origin":"thm n0el2(class c0) {\n  |- wb(wn(wcel(emptycls, c0)), wceq(cdm(cres(ccnv(cep), c0)), c0))\n} = {\n  3bitr4i(wn(wcel(emptycls, c0)), wceq(cdm(cres(ccnv(cep), c0)), c0), wral(hs1, c0, wex(hs0, wcel(cv(hs0), cv(hs1)))), wceq(cdm(copab(hs1, hs0, wa(wcel(cv(hs1), c0), wcel(cv(hs0), cv(hs1))))), c0))\n  dmopab3(hs1, hs0, c0, wcel(cv(hs0), cv(hs1)))\n  n0el(hs1, hs0, c0)\n  eqeq1i(cdm(cres(ccnv(cep), c0)), c0, cdm(copab(hs1, hs0, wa(wcel(cv(hs1), c0), wcel(cv(hs0), cv(hs1))))))\n  dmeqi(cres(ccnv(cep), c0), copab(hs1, hs0, wa(wcel(cv(hs1), c0), wcel(cv(hs0), cv(hs1)))))\n  cnvepres(hs1, hs0, c0)\n  diff.hs1.s(hs0)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n}","pretty":"thm n0el2(class c0) {\n  ⊢ (¬ ∅ ∈ c0 ↔ dom((`' ∈ |` c0))= c0)\n} = {\n  3bitr4i(¬ ∅ ∈ c0, dom((`' ∈ |` c0))= c0, ∀(hs1 ∈ c0, ∃(hs0, hs0 ∈ hs1)), dom({ < hs1, hs0 > |(hs1 ∈ c0 ∧ hs0 ∈ hs1)})= c0)\n  dmopab3(hs1, hs0, c0, hs0 ∈ hs1)\n  n0el(hs1, hs0, c0)\n  eqeq1i(dom((`' ∈ |` c0)), c0, dom({ < hs1, hs0 > |(hs1 ∈ c0 ∧ hs0 ∈ hs1)}))\n  dmeqi((`' ∈ |` c0), { < hs1, hs0 > |(hs1 ∈ c0 ∧ hs0 ∈ hs1)})\n  cnvepres(hs1, hs0, c0)\n  diff.hs1.s(hs0)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n}","parent":["3bitr4i","dmopab3","n0el","eqeq1i","dmeqi","cnvepres","diff.hs1.s","diff.hs1.c","diff.hs0.c"],"children":["n0el3"]},{"name":"cnvepresex","content":"Sethood condition for the restricted converse epsilon relation. (Contributed by Peter Mazsa, 24-Sep-2018.)","origin":"thm cnvepresex(class c0, class c1) {\n  |- wi(wcel(c0, c1), wcel(cres(ccnv(cep), c0), universe))\n} = {\n  syl5eqel(cres(ccnv(cep), c0), universe, copab(hs0, hs1, wa(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0)))), wcel(c0, c1))\n  cnvepres(hs0, hs1, c0)\n  opabex3d(hs0, hs1, c0, wcel(c0, c1), wcel(cv(hs1), cv(hs0)))\n  elex(c0, c1)\n  a1i(wa(wcel(c0, c1), wcel(cv(hs0), c0)), wcel(cab(hs1, wcel(cv(hs1), cv(hs0))), universe))\n  eqeltri(cab(hs1, wcel(cv(hs1), cv(hs0))), universe, cv(hs0))\n  abid2(hs1, cv(hs0))\n  vex(hs0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c0)\n  diff.hs0.w(wcel(c0, c1))\n  diff.hs1.c(cv(hs0))\n}","pretty":"thm cnvepresex(class c0, class c1) {\n  ⊢ (c0 ∈ c1 →(`' ∈ |` c0)∈ 𝕌)\n} = {\n  syl5eqel((`' ∈ |` c0), universe, { < hs0, hs1 > |(hs0 ∈ c0 ∧ hs1 ∈ hs0)}, c0 ∈ c1)\n  cnvepres(hs0, hs1, c0)\n  opabex3d(hs0, hs1, c0, c0 ∈ c1, hs1 ∈ hs0)\n  elex(c0, c1)\n  a1i((c0 ∈ c1 ∧ hs0 ∈ c0), { hs1 | hs1 ∈ hs0 } ∈ 𝕌)\n  eqeltri({ hs1 | hs1 ∈ hs0 }, universe, hs0)\n  abid2(hs1, hs0)\n  vex(hs0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs1.c(c0)\n  diff.hs0.w(c0 ∈ c1)\n  diff.hs1.c(hs0)\n}","parent":["syl5eqel","cnvepres","opabex3d","elex","a1i","eqeltri","abid2","vex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs0.w"],"children":["eccnvepex","cnvepimaex","cnvepima","xrncnvepresex","1cosscnvepresex","cnvepresdmqss","eleldisjseldisj"]},{"name":"eccnvepex","content":"The converse epsilon coset exists. (Contributed by Peter Mazsa, 22-Mar-2023.)","origin":"thm eccnvepex(class c0) {\n  |- wcel(cec(c0, ccnv(cep)), universe)\n} = {\n  mp2b(wcel(cec(c0, ccnv(cep)), universe), wcel(csn(c0), universe), wcel(cres(ccnv(cep), csn(c0)), universe))\n  snex(c0)\n  cnvepresex(csn(c0), universe)\n  ecexALTV(ccnv(cep), c0, universe)\n}","pretty":"thm eccnvepex(class c0) {\n  ⊢ [c0]`' ∈ ∈ 𝕌\n} = {\n  mp2b([c0]`' ∈ ∈ 𝕌, { c0 } ∈ 𝕌, (`' ∈ |` { c0 })∈ 𝕌)\n  snex(c0)\n  cnvepresex({ c0 }, universe)\n  ecexALTV(`' ∈, c0, universe)\n}","parent":["mp2b","snex","cnvepresex","ecexALTV"],"children":[]},{"name":"cnvepimaex","content":"The image of converse epsilon exists, proof via ~ imaexALTV (see also ~ cnvepima and ~ uniexg for alternate way). (Contributed by Peter Mazsa, 22-Mar-2023.)","origin":"thm cnvepimaex(class c0, class c1) {\n  |- wi(wcel(c0, c1), wcel(cima(ccnv(cep), c0), universe))\n} = {\n  mpancom(wcel(c0, c1), wcel(cima(ccnv(cep), c0), universe), wcel(cres(ccnv(cep), c0), universe))\n  cnvepresex(c0, c1)\n  olcs(wa(wcel(cres(ccnv(cep), c0), universe), wcel(c0, c1)), wcel(cima(ccnv(cep), c0), universe), wcel(ccnv(cep), universe))\n  imaexALTV(ccnv(cep), universe, c0, universe, c1)\n}","pretty":"thm cnvepimaex(class c0, class c1) {\n  ⊢ (c0 ∈ c1 →(`' ∈ \" c0)∈ 𝕌)\n} = {\n  mpancom(c0 ∈ c1, (`' ∈ \" c0)∈ 𝕌, (`' ∈ |` c0)∈ 𝕌)\n  cnvepresex(c0, c1)\n  olcs(((`' ∈ |` c0)∈ 𝕌 ∧ c0 ∈ c1), (`' ∈ \" c0)∈ 𝕌, `' ∈ ∈ 𝕌)\n  imaexALTV(`' ∈, universe, c0, universe, c1)\n}","parent":["mpancom","cnvepresex","olcs","imaexALTV"],"children":[]},{"name":"cnvepima","content":"The image of converse epsilon. (Contributed by Peter Mazsa, 22-Mar-2023.)","origin":"thm cnvepima(class c0, class c1) {\n  |- wi(wcel(c0, c1), wceq(cima(ccnv(cep), c0), cuni(c0)))\n} = {\n  syl5reqr(cima(ccnv(cep), c0), cuni(c0), cuni(cqs(c0, ccnv(cep))), wcel(c0, c1))\n  unieqi(cqs(c0, ccnv(cep)), c0)\n  qsid(c0)\n  syl(wcel(c0, c1), wceq(cuni(cqs(c0, ccnv(cep))), cima(ccnv(cep), c0)), wcel(cres(ccnv(cep), c0), universe))\n  cnvepresex(c0, c1)\n  uniqsALTV(ccnv(cep), c0, universe)\n}","pretty":"thm cnvepima(class c0, class c1) {\n  ⊢ (c0 ∈ c1 →(`' ∈ \" c0)= ⋃ c0)\n} = {\n  syl5reqr((`' ∈ \" c0), ⋃ c0, ⋃(c0 /. `' ∈), c0 ∈ c1)\n  unieqi((c0 /. `' ∈), c0)\n  qsid(c0)\n  syl(c0 ∈ c1, ⋃(c0 /. `' ∈)=(`' ∈ \" c0), (`' ∈ |` c0)∈ 𝕌)\n  cnvepresex(c0, c1)\n  uniqsALTV(`' ∈, c0, universe)\n}","parent":["syl5reqr","unieqi","qsid","syl","cnvepresex","uniqsALTV"],"children":[]},{"name":"inex2ALTV","content":"Sufficient condition for an intersection relation to be a set, see also ~ inex1g . (Contributed by Peter Mazsa, 19-Dec-2018.)","origin":"thm inex2ALTV(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wcel(cin(c2, c0), universe))\n} = {\n  syl5eqel(cin(c2, c0), universe, cin(c0, c2), wcel(c0, c1))\n  incom(c2, c0)\n  inex1g(c0, c1, c2)\n}","pretty":"thm inex2ALTV(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c2 ⋂ c0)∈ 𝕌)\n} = {\n  syl5eqel((c2 ⋂ c0), universe, (c0 ⋂ c2), c0 ∈ c1)\n  incom(c2, c0)\n  inex1g(c0, c1, c2)\n}","parent":["syl5eqel","incom","inex1g"],"children":["inex3","inxpex","dfcnvrefrels2","dfcnvrefrels3"]},{"name":"inex3","content":"Sufficient condition for the intersection relation to be a set. (Contributed by Peter Mazsa, 24-Nov-2019.)","origin":"thm inex3(class c0, class c1, class c2, class c3) {\n  |- wi(wo(wcel(c0, c1), wcel(c2, c3)), wcel(cin(c0, c2), universe))\n} = {\n  jaoi(wcel(c0, c1), wcel(c2, c3), wcel(cin(c0, c2), universe))\n  inex1g(c0, c1, c2)\n  inex2ALTV(c2, c3, c0)\n}","pretty":"thm inex3(class c0, class c1, class c2, class c3) {\n  ⊢ ((c0 ∈ c1 ∨ c2 ∈ c3)→(c0 ⋂ c2)∈ 𝕌)\n} = {\n  jaoi(c0 ∈ c1, c2 ∈ c3, (c0 ⋂ c2)∈ 𝕌)\n  inex1g(c0, c1, c2)\n  inex2ALTV(c2, c3, c0)\n}","parent":["jaoi","inex1g","inex2ALTV"],"children":[]},{"name":"inxpex","content":"Sufficient condition for an intersection with a Cartesian product to be a set. (Contributed by Peter Mazsa, 10-May-2019.)","origin":"thm inxpex(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wo(wcel(c0, c1), wa(wcel(c2, c3), wcel(c4, c5))), wcel(cin(c0, cxp(c2, c4)), universe))\n} = {\n  jaoi(wcel(c0, c1), wa(wcel(c2, c3), wcel(c4, c5)), wcel(cin(c0, cxp(c2, c4)), universe))\n  inex1g(c0, c1, cxp(c2, c4))\n  syl(wa(wcel(c2, c3), wcel(c4, c5)), wcel(cin(c0, cxp(c2, c4)), universe), wcel(cxp(c2, c4), universe))\n  xpexg(c2, c3, c4, c5)\n  inex2ALTV(cxp(c2, c4), universe, c0)\n}","pretty":"thm inxpex(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ ((c0 ∈ c1 ∨(c2 ∈ c3 ∧ c4 ∈ c5))→(c0 ⋂(c2 × c4))∈ 𝕌)\n} = {\n  jaoi(c0 ∈ c1, (c2 ∈ c3 ∧ c4 ∈ c5), (c0 ⋂(c2 × c4))∈ 𝕌)\n  inex1g(c0, c1, (c2 × c4))\n  syl((c2 ∈ c3 ∧ c4 ∈ c5), (c0 ⋂(c2 × c4))∈ 𝕌, (c2 × c4)∈ 𝕌)\n  xpexg(c2, c3, c4, c5)\n  inex2ALTV((c2 × c4), universe, c0)\n}","parent":["jaoi","inex1g","syl","xpexg","inex2ALTV"],"children":["xrninxpex"]},{"name":"eqres","content":"Converting a class constant definition by restriction (like ~ df-ers or ~~? df-parts ) into a binary relation. (Contributed by Peter Mazsa, 1-Oct-2018.)","origin":"thm eqres(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wb(wbr(c2, c3, c0), wa(wcel(c2, c4), wbr(c2, c5, c0))))\n  -| wceq(c3, cres(c5, c4))\n} = {\n  syl5bb(wcel(c0, c1), wbr(c2, c3, c0), wa(wcel(c2, c4), wbr(c2, c5, c0)), wbr(c2, cres(c5, c4), c0))\n  breqi(c2, c3, c0, cres(c5, c4))\n  brres(c0, c1, c2, c5, c4)\n}","pretty":"thm eqres(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 →(c2[c3]c0 ↔(c2 ∈ c4 ∧ c2[c5]c0)))\n  ⊣ c3 =(c5 |` c4)\n} = {\n  syl5bb(c0 ∈ c1, c2[c3]c0, (c2 ∈ c4 ∧ c2[c5]c0), c2[(c5 |` c4)]c0)\n  breqi(c2, c3, c0, (c5 |` c4))\n  brres(c0, c1, c2, c5, c4)\n}","parent":["syl5bb","breqi","brres"],"children":["brers"]},{"name":"brrabga","content":"The law of concretion for operation class abstraction. (Contributed by Peter Mazsa, 24-Oct-2022.)","origin":"thm brrabga(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0, wff w1) {\n  |- wi(w3a(wcel(c0, c1), wcel(c2, c3), wcel(c4, c5)), wb(wbr(cop(c0, c2), c6, c4), w0))\n  -| wi(w3a(wceq(cv(s0), c0), wceq(cv(s1), c2), wceq(cv(s2), c4)), wb(w1, w0))\n  -| wceq(c6, coprab(s0, s1, s2, w1))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c4)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c4)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c2)\n  -| diffsc(s2, c4)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n  -| diffsw(s2, w0)\n} = {\n  syl5bb(w3a(wcel(c0, c1), wcel(c2, c3), wcel(c4, c5)), wbr(cop(c0, c2), c6, c4), w0, wcel(cop(cop(c0, c2), c4), coprab(s0, s1, s2, w1)))\n  bitri(wbr(cop(c0, c2), c6, c4), wcel(cop(cop(c0, c2), c4), coprab(s0, s1, s2, w1)), wcel(cop(cop(c0, c2), c4), c6))\n  df-br(cop(c0, c2), c6, c4)\n  eleq2i(cop(cop(c0, c2), c4), c6, coprab(s0, s1, s2, w1))\n  eloprabga(s0, s1, s2, c0, c1, c2, c3, c4, c5, w1, w0)\n}","pretty":"thm brrabga(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0, wff w1) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3 ∧ c4 ∈ c5)→(< c0, c2 >[c6]c4 ↔ w0))\n  ⊣ ((s0 = c0 ∧ s1 = c2 ∧ s2 = c4)→(w1 ↔ w0))\n  ⊣ c6 = { < < s0, s1 >, s2 > | w1 }\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c4)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c2)\n  ⊣ d(s1, c4)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c2)\n  ⊣ d(s2, c4)\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n  ⊣ d(s2, w0)\n} = {\n  syl5bb((c0 ∈ c1 ∧ c2 ∈ c3 ∧ c4 ∈ c5), < c0, c2 >[c6]c4, w0, < < c0, c2 >, c4 > ∈ { < < s0, s1 >, s2 > | w1 })\n  bitri(< c0, c2 >[c6]c4, < < c0, c2 >, c4 > ∈ { < < s0, s1 >, s2 > | w1 }, < < c0, c2 >, c4 > ∈ c6)\n  df-br(< c0, c2 >, c6, c4)\n  eleq2i(< < c0, c2 >, c4 >, c6, { < < s0, s1 >, s2 > | w1 })\n  eloprabga(s0, s1, s2, c0, c1, c2, c3, c4, c5, w1, w0)\n}","parent":["syl5bb","bitri","df-br","eleq2i","eloprabga"],"children":["brcnvrabga"]},{"name":"brcnvrabga","content":"The law of concretion for the converse of operation class abstraction. (Contributed by Peter Mazsa, 25-Oct-2022.)","origin":"thm brcnvrabga(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0, wff w1) {\n  |- wi(w3a(wcel(c0, c1), wcel(c2, c3), wcel(c4, c5)), wb(wbr(c0, c6, cop(c2, c4)), w0))\n  -| wi(w3a(wceq(cv(s0), c0), wceq(cv(s1), c2), wceq(cv(s2), c4)), wb(w1, w0))\n  -| wceq(c6, ccnv(coprab(s1, s2, s0, w1)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c4)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c4)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c2)\n  -| diffsc(s2, c4)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n  -| diffsw(s2, w0)\n} = {\n  syl5bbr(w3a(wcel(c0, c1), wcel(c2, c3), wcel(c4, c5)), wbr(c0, c6, cop(c2, c4)), w0, wbr(cop(c2, c4), ccnv(c6), c0))\n  relbrcnv(cop(c2, c4), c6, c0)\n  mpbir(wrel(c6), wrel(ccnv(coprab(s1, s2, s0, w1))))\n  relcnv(coprab(s1, s2, s0, w1))\n  releqi(c6, ccnv(coprab(s1, s2, s0, w1)))\n  3comr(wcel(c0, c1), wcel(c2, c3), wcel(c4, c5), wb(wbr(cop(c2, c4), ccnv(c6), c0), w0))\n  brrabga(s1, s2, s0, c2, c3, c4, c5, c0, c1, ccnv(c6), w0, w1)\n  3coml(wceq(cv(s1), c2), wceq(cv(s2), c4), wceq(cv(s0), c0), wb(w1, w0))\n  eqtri(ccnv(c6), coprab(s1, s2, s0, w1), ccnv(ccnv(coprab(s1, s2, s0, w1))))\n  cnveqi(c6, ccnv(coprab(s1, s2, s0, w1)))\n  mpbi(wceq(ccnv(ccnv(coprab(s1, s2, s0, w1))), coprab(s1, s2, s0, w1)), wrel(coprab(s1, s2, s0, w1)))\n  reloprab(s1, s2, s0, w1)\n  dfrel2(coprab(s1, s2, s0, w1))\n  diffss.ex(s1, s0)\n  diffss.ex(s2, s0)\n}","pretty":"thm brcnvrabga(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0, wff w1) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3 ∧ c4 ∈ c5)→(c0[c6]< c2, c4 > ↔ w0))\n  ⊣ ((s0 = c0 ∧ s1 = c2 ∧ s2 = c4)→(w1 ↔ w0))\n  ⊣ c6 = `' { < < s1, s2 >, s0 > | w1 }\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c4)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c2)\n  ⊣ d(s1, c4)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c2)\n  ⊣ d(s2, c4)\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n  ⊣ d(s2, w0)\n} = {\n  syl5bbr((c0 ∈ c1 ∧ c2 ∈ c3 ∧ c4 ∈ c5), c0[c6]< c2, c4 >, w0, < c2, c4 >[`' c6]c0)\n  relbrcnv(< c2, c4 >, c6, c0)\n  mpbir(Rel(c6), Rel(`' { < < s1, s2 >, s0 > | w1 }))\n  relcnv({ < < s1, s2 >, s0 > | w1 })\n  releqi(c6, `' { < < s1, s2 >, s0 > | w1 })\n  3comr(c0 ∈ c1, c2 ∈ c3, c4 ∈ c5, (< c2, c4 >[`' c6]c0 ↔ w0))\n  brrabga(s1, s2, s0, c2, c3, c4, c5, c0, c1, `' c6, w0, w1)\n  3coml(s1 = c2, s2 = c4, s0 = c0, (w1 ↔ w0))\n  eqtri(`' c6, { < < s1, s2 >, s0 > | w1 }, `' `' { < < s1, s2 >, s0 > | w1 })\n  cnveqi(c6, `' { < < s1, s2 >, s0 > | w1 })\n  mpbi(`' `' { < < s1, s2 >, s0 > | w1 } = { < < s1, s2 >, s0 > | w1 }, Rel({ < < s1, s2 >, s0 > | w1 }))\n  reloprab(s1, s2, s0, w1)\n  dfrel2({ < < s1, s2 >, s0 > | w1 })\n  diffss.ex(s1, s0)\n  diffss.ex(s2, s0)\n}","parent":["syl5bbr","relbrcnv","mpbir","relcnv","releqi","3comr","brrabga","3coml","eqtri","cnveqi","mpbi","reloprab","dfrel2","diffss.ex"],"children":["brredunds"]},{"name":"opideq","content":"Equality conditions for ordered pairs ` <. A , A >. ` and ` <. B , B >. ` . (Contributed by Peter Mazsa, 22-Jul-2019.) (Revised by Thierry Arnoux, 16-Feb-2022.)","origin":"thm opideq(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wceq(cop(c0, c0), cop(c2, c2)), wceq(c0, c2)))\n} = {\n  syl6bb(wcel(c0, c1), wceq(cop(c0, c0), cop(c2, c2)), wceq(c0, c2), wa(wceq(c0, c2), wceq(c0, c2)))\n  anidms(wcel(c0, c1), wb(wceq(cop(c0, c0), cop(c2, c2)), wa(wceq(c0, c2), wceq(c0, c2))))\n  opthg(c0, c1, c0, c1, c2, c2)\n  anidm(wceq(c0, c2))\n}","pretty":"thm opideq(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(< c0, c0 > = < c2, c2 > ↔ c0 = c2))\n} = {\n  syl6bb(c0 ∈ c1, < c0, c0 > = < c2, c2 >, c0 = c2, (c0 = c2 ∧ c0 = c2))\n  anidms(c0 ∈ c1, (< c0, c0 > = < c2, c2 > ↔(c0 = c2 ∧ c0 = c2)))\n  opthg(c0, c1, c0, c1, c2, c2)\n  anidm(c0 = c2)\n}","parent":["syl6bb","anidms","opthg","anidm"],"children":[]},{"name":"iss2","content":"A subclass of the identity relation is the intersection of identity relation with Cartesian product of the domain and range of the class. (Contributed by Peter Mazsa, 22-Jul-2019.)","origin":"thm iss2(class c0) {\n  |- wb(wss(c0, cid), wceq(c0, cin(cid, cxp(cdm(c0), crn(c0)))))\n} = {\n  impbii(wss(c0, cid), wceq(c0, cin(cid, cxp(cdm(c0), crn(c0)))))\n  mpbird(wss(c0, cid), wceq(c0, cin(cid, cxp(cdm(c0), crn(c0)))), wal(hs0, wal(hs1, wb(wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), cin(cid, cxp(cdm(c0), crn(c0))))))))\n  alrimivv(hs0, hs1, wss(c0, cid), wb(wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), cin(cid, cxp(cdm(c0), crn(c0))))))\n  syl6bbr(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), cin(cid, cxp(cdm(c0), crn(c0)))), wa(wcel(cop(cv(hs0), cv(hs1)), cid), wa(wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0)))))\n  impbid(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wa(wcel(cop(cv(hs0), cv(hs1)), cid), wa(wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0)))))\n  syl6ibr(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wa(wcel(cop(cv(hs0), cv(hs1)), cid), wa(wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0)))), wa(wa(wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cv(hs0), cdm(c0))), wa(wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cv(hs1), crn(c0)))))\n  jcad(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wa(wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cv(hs0), cdm(c0))), wa(wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cv(hs1), crn(c0))))\n  jca2(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cv(hs0), cdm(c0)))\n  opeldm(cv(hs0), cv(hs1), c0)\n  jca2(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cv(hs1), crn(c0)))\n  opelrn(cv(hs0), cv(hs1), c0)\n  anandi(wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0)))\n  impd(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), cid), wa(wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0))), wcel(cop(cv(hs0), cv(hs1)), c0))\n  syl5bi(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), cid), wi(wa(wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0))), wcel(cop(cv(hs0), cv(hs1)), c0)), wceq(cv(hs0), cv(hs1)))\n  ex(wss(c0, cid), wceq(cv(hs0), cv(hs1)), wi(wa(wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0))), wcel(cop(cv(hs0), cv(hs1)), c0)))\n  adantrd(wa(wss(c0, cid), wceq(cv(hs0), cv(hs1))), wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0)), wcel(cop(cv(hs0), cv(hs1)), c0))\n  imp(wss(c0, cid), wceq(cv(hs0), cv(hs1)), wi(wcel(cv(hs0), cdm(c0)), wcel(cop(cv(hs0), cv(hs1)), c0)))\n  syl5ibcom(wss(c0, cid), wceq(cv(hs0), cv(hs1)), wi(wcel(cv(hs0), cdm(c0)), wcel(cop(cv(hs0), cv(hs1)), c0)), wi(wcel(cv(hs0), cdm(c0)), wcel(cop(cv(hs0), cv(hs0)), c0)))\n  syl5bi(wss(c0, cid), wcel(cv(hs0), cdm(c0)), wcel(cop(cv(hs0), cv(hs0)), c0), wex(hs1, wcel(cop(cv(hs0), cv(hs1)), c0)))\n  eldm2(hs1, cv(hs0), c0)\n  vex(hs0)\n  exlimdv(hs1, wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs0)), c0))\n  sylcom(wss(c0, cid), wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs0)), c0), wcel(cop(cv(hs0), cv(hs1)), cid))\n  ssel(c0, cid, cop(cv(hs0), cv(hs1)))\n  syl5bi(wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), cid), wcel(cop(cv(hs0), cv(hs0)), c0), wceq(cv(hs0), cv(hs1)))\n  bitr3i(wcel(cop(cv(hs0), cv(hs1)), cid), wceq(cv(hs0), cv(hs1)), wbr(cv(hs0), cid, cv(hs1)))\n  df-br(cv(hs0), cid, cv(hs1))\n  ideq(cv(hs0), cv(hs1))\n  vex(hs1)\n  biimprcd(wcel(cop(cv(hs0), cv(hs1)), c0), wceq(cv(hs0), cv(hs1)), wcel(cop(cv(hs0), cv(hs0)), c0))\n  imbi2d(wceq(cv(hs0), cv(hs1)), wcel(cv(hs0), cdm(c0)), wcel(cop(cv(hs0), cv(hs0)), c0), wcel(cop(cv(hs0), cv(hs1)), c0))\n  eleq1d(cop(cv(hs0), cv(hs0)), c0, cop(cv(hs0), cv(hs1)), wceq(cv(hs0), cv(hs1)))\n  opeq2(cv(hs0), cv(hs1), cv(hs0))\n  biancomi(wcel(cop(cv(hs0), cv(hs1)), cin(cid, cxp(cdm(c0), crn(c0)))), wcel(cop(cv(hs0), cv(hs1)), cid), wa(wcel(cv(hs0), cdm(c0)), wcel(cv(hs1), crn(c0))))\n  opelinxp(cv(hs0), cv(hs1), cid, cdm(c0), crn(c0))\n  sylancl(wss(c0, cid), wb(wceq(c0, cin(cid, cxp(cdm(c0), crn(c0)))), wal(hs0, wal(hs1, wb(wcel(cop(cv(hs0), cv(hs1)), c0), wcel(cop(cv(hs0), cv(hs1)), cin(cid, cxp(cdm(c0), crn(c0)))))))), wrel(c0), wrel(cin(cid, cxp(cdm(c0), crn(c0)))))\n  mpi(wss(c0, cid), wrel(c0), wrel(cid))\n  reli()\n  relss(c0, cid)\n  relinxp(cid, cdm(c0), crn(c0))\n  eqrel(hs0, hs1, c0, cin(cid, cxp(cdm(c0), crn(c0))))\n  mpbiri(wceq(c0, cin(cid, cxp(cdm(c0), crn(c0)))), wss(c0, cid), wss(cin(cid, cxp(cdm(c0), crn(c0))), cid))\n  inss1(cid, cxp(cdm(c0), crn(c0)))\n  sseq1(c0, cin(cid, cxp(cdm(c0), crn(c0))), cid)\n  diff.hs0.w(wss(c0, cid))\n  diff.hs1.w(wss(c0, cid))\n  diff.hs1.c(cv(hs0))\n  diff.hs1.c(c0)\n  diff.hs1.w(wcel(cop(cv(hs0), cv(hs0)), c0))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(cin(cid, cxp(cdm(c0), crn(c0))))\n  diff.hs1.c(cin(cid, cxp(cdm(c0), crn(c0))))\n}","pretty":"thm iss2(class c0) {\n  ⊢ (c0 ⊆ = ↔ c0 =(= ⋂(dom(c0)× ran(c0))))\n} = {\n  impbii(c0 ⊆ =, c0 =(= ⋂(dom(c0)× ran(c0))))\n  mpbird(c0 ⊆ =, c0 =(= ⋂(dom(c0)× ran(c0))), ∀(hs0, ∀(hs1,(< hs0, hs1 > ∈ c0 ↔ < hs0, hs1 > ∈(= ⋂(dom(c0)× ran(c0)))))))\n  alrimivv(hs0, hs1, c0 ⊆ =, (< hs0, hs1 > ∈ c0 ↔ < hs0, hs1 > ∈(= ⋂(dom(c0)× ran(c0)))))\n  syl6bbr(c0 ⊆ =, < hs0, hs1 > ∈ c0, < hs0, hs1 > ∈(= ⋂(dom(c0)× ran(c0))), (< hs0, hs1 > ∈ = ∧(hs0 ∈ dom(c0)∧ hs1 ∈ ran(c0))))\n  impbid(c0 ⊆ =, < hs0, hs1 > ∈ c0, (< hs0, hs1 > ∈ = ∧(hs0 ∈ dom(c0)∧ hs1 ∈ ran(c0))))\n  syl6ibr(c0 ⊆ =, < hs0, hs1 > ∈ c0, (< hs0, hs1 > ∈ = ∧(hs0 ∈ dom(c0)∧ hs1 ∈ ran(c0))), ((< hs0, hs1 > ∈ = ∧ hs0 ∈ dom(c0))∧(< hs0, hs1 > ∈ = ∧ hs1 ∈ ran(c0))))\n  jcad(c0 ⊆ =, < hs0, hs1 > ∈ c0, (< hs0, hs1 > ∈ = ∧ hs0 ∈ dom(c0)), (< hs0, hs1 > ∈ = ∧ hs1 ∈ ran(c0)))\n  jca2(c0 ⊆ =, < hs0, hs1 > ∈ c0, < hs0, hs1 > ∈ =, hs0 ∈ dom(c0))\n  opeldm(hs0, hs1, c0)\n  jca2(c0 ⊆ =, < hs0, hs1 > ∈ c0, < hs0, hs1 > ∈ =, hs1 ∈ ran(c0))\n  opelrn(hs0, hs1, c0)\n  anandi(< hs0, hs1 > ∈ =, hs0 ∈ dom(c0), hs1 ∈ ran(c0))\n  impd(c0 ⊆ =, < hs0, hs1 > ∈ =, (hs0 ∈ dom(c0)∧ hs1 ∈ ran(c0)), < hs0, hs1 > ∈ c0)\n  syl5bi(c0 ⊆ =, < hs0, hs1 > ∈ =, ((hs0 ∈ dom(c0)∧ hs1 ∈ ran(c0))→ < hs0, hs1 > ∈ c0), hs0 = hs1)\n  ex(c0 ⊆ =, hs0 = hs1, ((hs0 ∈ dom(c0)∧ hs1 ∈ ran(c0))→ < hs0, hs1 > ∈ c0))\n  adantrd((c0 ⊆ = ∧ hs0 = hs1), hs0 ∈ dom(c0), hs1 ∈ ran(c0), < hs0, hs1 > ∈ c0)\n  imp(c0 ⊆ =, hs0 = hs1, (hs0 ∈ dom(c0)→ < hs0, hs1 > ∈ c0))\n  syl5ibcom(c0 ⊆ =, hs0 = hs1, (hs0 ∈ dom(c0)→ < hs0, hs1 > ∈ c0), (hs0 ∈ dom(c0)→ < hs0, hs0 > ∈ c0))\n  syl5bi(c0 ⊆ =, hs0 ∈ dom(c0), < hs0, hs0 > ∈ c0, ∃(hs1, < hs0, hs1 > ∈ c0))\n  eldm2(hs1, hs0, c0)\n  vex(hs0)\n  exlimdv(hs1, c0 ⊆ =, < hs0, hs1 > ∈ c0, < hs0, hs0 > ∈ c0)\n  sylcom(c0 ⊆ =, < hs0, hs1 > ∈ c0, < hs0, hs0 > ∈ c0, < hs0, hs1 > ∈ =)\n  ssel(c0, cid, < hs0, hs1 >)\n  syl5bi(< hs0, hs1 > ∈ c0, < hs0, hs1 > ∈ =, < hs0, hs0 > ∈ c0, hs0 = hs1)\n  bitr3i(< hs0, hs1 > ∈ =, hs0 = hs1, hs0[=]hs1)\n  df-br(hs0, cid, hs1)\n  ideq(hs0, hs1)\n  vex(hs1)\n  biimprcd(< hs0, hs1 > ∈ c0, hs0 = hs1, < hs0, hs0 > ∈ c0)\n  imbi2d(hs0 = hs1, hs0 ∈ dom(c0), < hs0, hs0 > ∈ c0, < hs0, hs1 > ∈ c0)\n  eleq1d(< hs0, hs0 >, c0, < hs0, hs1 >, hs0 = hs1)\n  opeq2(hs0, hs1, hs0)\n  biancomi(< hs0, hs1 > ∈(= ⋂(dom(c0)× ran(c0))), < hs0, hs1 > ∈ =, (hs0 ∈ dom(c0)∧ hs1 ∈ ran(c0)))\n  opelinxp(hs0, hs1, cid, dom(c0), ran(c0))\n  sylancl(c0 ⊆ =, (c0 =(= ⋂(dom(c0)× ran(c0)))↔ ∀(hs0, ∀(hs1,(< hs0, hs1 > ∈ c0 ↔ < hs0, hs1 > ∈(= ⋂(dom(c0)× ran(c0))))))), Rel(c0), Rel((= ⋂(dom(c0)× ran(c0)))))\n  mpi(c0 ⊆ =, Rel(c0), Rel(=))\n  reli()\n  relss(c0, cid)\n  relinxp(cid, dom(c0), ran(c0))\n  eqrel(hs0, hs1, c0, (= ⋂(dom(c0)× ran(c0))))\n  mpbiri(c0 =(= ⋂(dom(c0)× ran(c0))), c0 ⊆ =, (= ⋂(dom(c0)× ran(c0)))⊆ =)\n  inss1(cid, (dom(c0)× ran(c0)))\n  sseq1(c0, (= ⋂(dom(c0)× ran(c0))), cid)\n  diff.hs0.w(c0 ⊆ =)\n  diff.hs1.w(c0 ⊆ =)\n  diff.hs1.c(hs0)\n  diff.hs1.c(c0)\n  diff.hs1.w(< hs0, hs0 > ∈ c0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c((= ⋂(dom(c0)× ran(c0))))\n  diff.hs1.c((= ⋂(dom(c0)× ran(c0))))\n}","parent":["impbii","mpbird","alrimivv","syl6bbr","impbid","syl6ibr","jcad","jca2","opeldm","opelrn","anandi","impd","syl5bi","ex","adantrd","imp","syl5ibcom","eldm2","vex","exlimdv","sylcom","ssel","bitr3i","df-br","ideq","biimprcd","imbi2d","eleq1d","opeq2","biancomi","opelinxp","sylancl","mpi","reli","relss","relinxp","eqrel","mpbiri","inss1","sseq1","diff.hs0.w","diff.hs1.w","diff.hs1.c","diff.hs0.s","diff.hs0.c"],"children":["cossssid"]},{"name":"eldmcnv","content":"Elementhood in a domain of a converse. (Contributed by Peter Mazsa, 25-May-2018.)","origin":"thm eldmcnv(setvar s0, class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, cdm(ccnv(c2))), wex(s0, wbr(cv(s0), c2, c0))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  bitrd(wcel(c0, c1), wcel(c0, cdm(ccnv(c2))), wex(s0, wbr(cv(s0), c2, c0)), wex(s0, wbr(c0, ccnv(c2), cv(s0))))\n  eldmg(s0, c0, c1, ccnv(c2))\n  exbidv(s0, wcel(c0, c1), wbr(c0, ccnv(c2), cv(s0)), wbr(cv(s0), c2, c0))\n  elvd(s0, wcel(c0, c1), wb(wbr(c0, ccnv(c2), cv(s0)), wbr(cv(s0), c2, c0)))\n  brcnvg(c0, c1, cv(s0), universe, c2)\n  diff.ccnv.s(s0, c2)\n  diff.wcel.s(s0, c0, c1)\n}","pretty":"thm eldmcnv(setvar s0, class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c0 ∈ dom(`' c2)↔ ∃(s0, s0[c2]c0)))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n} = {\n  bitrd(c0 ∈ c1, c0 ∈ dom(`' c2), ∃(s0, s0[c2]c0), ∃(s0, c0[`' c2]s0))\n  eldmg(s0, c0, c1, `' c2)\n  exbidv(s0, c0 ∈ c1, c0[`' c2]s0, s0[c2]c0)\n  elvd(s0, c0 ∈ c1, (c0[`' c2]s0 ↔ s0[c2]c0))\n  brcnvg(c0, c1, s0, universe, c2)\n  diff.ccnv.s(s0, c2)\n  diff.wcel.s(s0, c0, c1)\n}","parent":["bitrd","eldmg","exbidv","elvd","brcnvg","diff.ccnv.s","diff.wcel.s"],"children":["eldmcoss"]},{"name":"dfrel5","content":"Alternate definition of the relation predicate. (Contributed by Peter Mazsa, 6-Nov-2018.)","origin":"thm dfrel5(class c0) {\n  |- wb(wrel(c0), wceq(cres(c0, cdm(c0)), c0))\n} = {\n  bitr4i(wrel(c0), wceq(cres(c0, cdm(c0)), c0), wceq(ccnv(ccnv(c0)), c0))\n  dfrel2(c0)\n  eqeq1i(cres(c0, cdm(c0)), c0, ccnv(ccnv(c0)))\n  resdm2(c0)\n}","pretty":"thm dfrel5(class c0) {\n  ⊢ (Rel(c0)↔(c0 |` dom(c0))= c0)\n} = {\n  bitr4i(Rel(c0), (c0 |` dom(c0))= c0, `' `' c0 = c0)\n  dfrel2(c0)\n  eqeq1i((c0 |` dom(c0)), c0, `' `' c0)\n  resdm2(c0)\n}","parent":["bitr4i","dfrel2","eqeq1i","resdm2"],"children":["dfrel6","cnvresrn","elrels5"]},{"name":"dfrel6","content":"Alternate definition of the relation predicate. (Contributed by Peter Mazsa, 14-Mar-2019.)","origin":"thm dfrel6(class c0) {\n  |- wb(wrel(c0), wceq(cin(c0, cxp(cdm(c0), crn(c0))), c0))\n} = {\n  bitri(wrel(c0), wceq(cin(c0, cxp(cdm(c0), crn(c0))), c0), wceq(cres(c0, cdm(c0)), c0))\n  dfrel5(c0)\n  eqeq1i(cres(c0, cdm(c0)), c0, cin(c0, cxp(cdm(c0), crn(c0))))\n  dfres3(c0, cdm(c0))\n}","pretty":"thm dfrel6(class c0) {\n  ⊢ (Rel(c0)↔(c0 ⋂(dom(c0)× ran(c0)))= c0)\n} = {\n  bitri(Rel(c0), (c0 ⋂(dom(c0)× ran(c0)))= c0, (c0 |` dom(c0))= c0)\n  dfrel5(c0)\n  eqeq1i((c0 |` dom(c0)), c0, (c0 ⋂(dom(c0)× ran(c0))))\n  dfres3(c0, dom(c0))\n}","parent":["bitri","dfrel5","eqeq1i","dfres3"],"children":["elrels6","dfrefrel2","dfcnvrefrel2","dfsymrel2","dftrrel2"]},{"name":"cnvresrn","content":"Converse restricted to range is converse. (Contributed by Peter Mazsa, 3-Sep-2021.)","origin":"thm cnvresrn(class c0) {\n  |- wceq(cres(ccnv(c0), crn(c0)), ccnv(c0))\n} = {\n  eqtri(cres(ccnv(c0), crn(c0)), ccnv(c0), cres(ccnv(c0), cdm(ccnv(c0))))\n  reseq2i(ccnv(c0), crn(c0), cdm(ccnv(c0)))\n  df-rn(c0)\n  mpbi(wceq(cres(ccnv(c0), cdm(ccnv(c0))), ccnv(c0)), wrel(ccnv(c0)))\n  relcnv(c0)\n  dfrel5(ccnv(c0))\n}","pretty":"thm cnvresrn(class c0) {\n  ⊢ (`' c0 |` ran(c0))= `' c0\n} = {\n  eqtri((`' c0 |` ran(c0)), `' c0, (`' c0 |` dom(`' c0)))\n  reseq2i(`' c0, ran(c0), dom(`' c0))\n  df-rn(c0)\n  mpbi((`' c0 |` dom(`' c0))= `' c0, Rel(`' c0))\n  relcnv(c0)\n  dfrel5(`' c0)\n}","parent":["eqtri","reseq2i","df-rn","mpbi","relcnv","dfrel5"],"children":["alrmomorn"]},{"name":"ecin0","content":"Two ways of saying that the coset of ` A ` and the coset of ` B ` have no elements in common. (Contributed by Peter Mazsa, 1-Dec-2018.)","origin":"thm ecin0(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wceq(cin(cec(c0, c4), cec(c2, c4)), emptycls), wal(s0, wi(wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0)))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n} = {\n  syl5bb(wa(wcel(c0, c1), wcel(c2, c3)), wceq(cin(cec(c0, c4), cec(c2, c4)), emptycls), wal(s0, wi(wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0))))), wal(s0, wi(wcel(cv(s0), cec(c0, c4)), wn(wcel(cv(s0), cec(c2, c4))))))\n  disj1(s0, cec(c0, c4), cec(c2, c4))\n  albidv(s0, wa(wcel(c0, c1), wcel(c2, c3)), wi(wcel(cv(s0), cec(c0, c4)), wn(wcel(cv(s0), cec(c2, c4)))), wi(wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0)))))\n  imbi12d(wa(wcel(c0, c1), wcel(c2, c3)), wcel(cv(s0), cec(c0, c4)), wn(wcel(cv(s0), cec(c2, c4))), wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0))))\n  adantr(wcel(c0, c1), wcel(c2, c3), wb(wcel(cv(s0), cec(c0, c4)), wbr(c0, c4, cv(s0))))\n  el2v1(s0, wcel(c0, c1), wb(wcel(cv(s0), cec(c0, c4)), wbr(c0, c4, cv(s0))))\n  elecg(cv(s0), universe, c0, c1, c4)\n  notbid(wa(wcel(c0, c1), wcel(c2, c3)), wcel(cv(s0), cec(c2, c4)), wbr(c2, c4, cv(s0)))\n  adantl(wcel(c0, c1), wcel(c2, c3), wb(wcel(cv(s0), cec(c2, c4)), wbr(c2, c4, cv(s0))))\n  elvd(s0, wcel(c2, c3), wb(wcel(cv(s0), cec(c2, c4)), wbr(c2, c4, cv(s0))))\n  elecALTV(c2, c3, cv(s0), universe, c4)\n  diff.cec.s(s0, c0, c4)\n  diff.cec.s(s0, c2, c4)\n  diff.wa.s(s0, wcel(c0, c1), wcel(c2, c3))\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","pretty":"thm ecin0(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(([c0]c4 ⋂[c2]c4)= ∅ ↔ ∀(s0,(c0[c4]s0 → ¬ c2[c4]s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n  ⊣ d(s0, c4)\n} = {\n  syl5bb((c0 ∈ c1 ∧ c2 ∈ c3), ([c0]c4 ⋂[c2]c4)= ∅, ∀(s0,(c0[c4]s0 → ¬ c2[c4]s0)), ∀(s0,(s0 ∈[c0]c4 → ¬ s0 ∈[c2]c4)))\n  disj1(s0, [c0]c4, [c2]c4)\n  albidv(s0, (c0 ∈ c1 ∧ c2 ∈ c3), (s0 ∈[c0]c4 → ¬ s0 ∈[c2]c4), (c0[c4]s0 → ¬ c2[c4]s0))\n  imbi12d((c0 ∈ c1 ∧ c2 ∈ c3), s0 ∈[c0]c4, ¬ s0 ∈[c2]c4, c0[c4]s0, ¬ c2[c4]s0)\n  adantr(c0 ∈ c1, c2 ∈ c3, (s0 ∈[c0]c4 ↔ c0[c4]s0))\n  el2v1(s0, c0 ∈ c1, (s0 ∈[c0]c4 ↔ c0[c4]s0))\n  elecg(s0, universe, c0, c1, c4)\n  notbid((c0 ∈ c1 ∧ c2 ∈ c3), s0 ∈[c2]c4, c2[c4]s0)\n  adantl(c0 ∈ c1, c2 ∈ c3, (s0 ∈[c2]c4 ↔ c2[c4]s0))\n  elvd(s0, c2 ∈ c3, (s0 ∈[c2]c4 ↔ c2[c4]s0))\n  elecALTV(c2, c3, s0, universe, c4)\n  diff.cec.s(s0, c0, c4)\n  diff.cec.s(s0, c2, c4)\n  diff.wa.s(s0, c0 ∈ c1, c2 ∈ c3)\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n}","parent":["syl5bb","disj1","albidv","imbi12d","adantr","el2v1","elecg","notbid","adantl","elvd","elecALTV","diff.cec.s","diff.wa.s","diff.wcel.s"],"children":["ecinn0"]},{"name":"ecinn0","content":"Two ways of saying that the coset of ` A ` and the coset of ` B ` have some elements in common. (Contributed by Peter Mazsa, 23-Jan-2019.)","origin":"thm ecinn0(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wne(cin(cec(c0, c4), cec(c2, c4)), emptycls), wex(s0, wa(wbr(c0, c4, cv(s0)), wbr(c2, c4, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n} = {\n  syl6bbr(wa(wcel(c0, c1), wcel(c2, c3)), wne(cin(cec(c0, c4), cec(c2, c4)), emptycls), wex(s0, wa(wbr(c0, c4, cv(s0)), wbr(c2, c4, cv(s0)))), wn(wal(s0, wi(wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0)))))))\n  necon3abid(cin(cec(c0, c4), cec(c2, c4)), emptycls, wa(wcel(c0, c1), wcel(c2, c3)), wal(s0, wi(wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0))))))\n  ecin0(s0, c0, c1, c2, c3, c4)\n  bitri(wex(s0, wa(wbr(c0, c4, cv(s0)), wbr(c2, c4, cv(s0)))), wn(wal(s0, wi(wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0)))))), wex(s0, wa(wbr(c0, c4, cv(s0)), wn(wn(wbr(c2, c4, cv(s0)))))))\n  exbii(s0, wa(wbr(c0, c4, cv(s0)), wbr(c2, c4, cv(s0))), wa(wbr(c0, c4, cv(s0)), wn(wn(wbr(c2, c4, cv(s0))))))\n  anbi2i(wbr(c0, c4, cv(s0)), wbr(c2, c4, cv(s0)), wn(wn(wbr(c2, c4, cv(s0)))))\n  notnotb(wbr(c2, c4, cv(s0)))\n  exanali(s0, wbr(c0, c4, cv(s0)), wn(wbr(c2, c4, cv(s0))))\n}","pretty":"thm ecinn0(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(([c0]c4 ⋂[c2]c4)≠ ∅ ↔ ∃(s0,(c0[c4]s0 ∧ c2[c4]s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c3)\n  ⊣ d(s0, c4)\n} = {\n  syl6bbr((c0 ∈ c1 ∧ c2 ∈ c3), ([c0]c4 ⋂[c2]c4)≠ ∅, ∃(s0,(c0[c4]s0 ∧ c2[c4]s0)), ¬ ∀(s0,(c0[c4]s0 → ¬ c2[c4]s0)))\n  necon3abid(([c0]c4 ⋂[c2]c4), emptycls, (c0 ∈ c1 ∧ c2 ∈ c3), ∀(s0,(c0[c4]s0 → ¬ c2[c4]s0)))\n  ecin0(s0, c0, c1, c2, c3, c4)\n  bitri(∃(s0,(c0[c4]s0 ∧ c2[c4]s0)), ¬ ∀(s0,(c0[c4]s0 → ¬ c2[c4]s0)), ∃(s0,(c0[c4]s0 ∧ ¬ ¬ c2[c4]s0)))\n  exbii(s0, (c0[c4]s0 ∧ c2[c4]s0), (c0[c4]s0 ∧ ¬ ¬ c2[c4]s0))\n  anbi2i(c0[c4]s0, c2[c4]s0, ¬ ¬ c2[c4]s0)\n  notnotb(c2[c4]s0)\n  exanali(s0, c0[c4]s0, ¬ c2[c4]s0)\n}","parent":["syl6bbr","necon3abid","ecin0","bitri","exbii","anbi2i","notnotb","exanali"],"children":["brcoss3","brcosscnv2"]},{"name":"ineleq","content":"Equivalence of restricted universal quantifications. (Contributed by Peter Mazsa, 29-May-2018.)","origin":"thm ineleq(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3) {\n  |- wb(wral(s0, c0, wral(s1, c1, wo(wceq(cv(s0), cv(s1)), wceq(cin(c2, c3), emptycls)))), wral(s0, c0, wal(s2, wral(s1, c1, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1)))))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s2, c1)\n  -| diffsc(s2, c2)\n  -| diffsc(s2, c3)\n} = {\n  ralbii(s0, c0, wral(s1, c1, wo(wceq(cv(s0), cv(s1)), wceq(cin(c2, c3), emptycls))), wal(s2, wral(s1, c1, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1))))))\n  bitri(wral(s1, c1, wo(wceq(cv(s0), cv(s1)), wceq(cin(c2, c3), emptycls))), wal(s2, wral(s1, c1, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1))))), wral(s1, c1, wal(s2, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1))))))\n  ralbii(s1, c1, wo(wceq(cv(s0), cv(s1)), wceq(cin(c2, c3), emptycls)), wal(s2, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1)))))\n  3bitri(wo(wceq(cv(s0), cv(s1)), wceq(cin(c2, c3), emptycls)), wal(s2, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1)))), wo(wceq(cin(c2, c3), emptycls), wceq(cv(s0), cv(s1))), wi(wn(wceq(cin(c2, c3), emptycls)), wceq(cv(s0), cv(s1))))\n  orcom(wceq(cv(s0), cv(s1)), wceq(cin(c2, c3), emptycls))\n  df-or(wceq(cin(c2, c3), emptycls), wceq(cv(s0), cv(s1)))\n  bitr4i(wi(wn(wceq(cin(c2, c3), emptycls)), wceq(cv(s0), cv(s1))), wal(s2, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1)))), wi(wex(s2, wa(wcel(cv(s2), c2), wcel(cv(s2), c3))), wceq(cv(s0), cv(s1))))\n  imbi1i(wn(wceq(cin(c2, c3), emptycls)), wceq(cv(s0), cv(s1)), wex(s2, wa(wcel(cv(s2), c2), wcel(cv(s2), c3))))\n  bitri(wn(wceq(cin(c2, c3), emptycls)), wex(s2, wa(wcel(cv(s2), c2), wcel(cv(s2), c3))), wex(s2, wcel(cv(s2), cin(c2, c3))))\n  neq0(s2, cin(c2, c3))\n  exbii(s2, wcel(cv(s2), cin(c2, c3)), wa(wcel(cv(s2), c2), wcel(cv(s2), c3)))\n  elin(cv(s2), c2, c3)\n  19.23v(s2, wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1)))\n  ralcom4(s1, s2, c1, wi(wa(wcel(cv(s2), c2), wcel(cv(s2), c3)), wceq(cv(s0), cv(s1))))\n  diff.cin.s(s2, c2, c3)\n  diff.wceq.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm ineleq(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3) {\n  ⊢ (∀(s0 ∈ c0, ∀(s1 ∈ c1,(s0 = s1 ∨(c2 ⋂ c3)= ∅)))↔ ∀(s0 ∈ c0, ∀(s2, ∀(s1 ∈ c1,((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1)))))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s2, c1)\n  ⊣ d(s2, c2)\n  ⊣ d(s2, c3)\n} = {\n  ralbii(s0, c0, ∀(s1 ∈ c1,(s0 = s1 ∨(c2 ⋂ c3)= ∅)), ∀(s2, ∀(s1 ∈ c1,((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1))))\n  bitri(∀(s1 ∈ c1,(s0 = s1 ∨(c2 ⋂ c3)= ∅)), ∀(s2, ∀(s1 ∈ c1,((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1))), ∀(s1 ∈ c1, ∀(s2,((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1))))\n  ralbii(s1, c1, (s0 = s1 ∨(c2 ⋂ c3)= ∅), ∀(s2,((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1)))\n  3bitri((s0 = s1 ∨(c2 ⋂ c3)= ∅), ∀(s2,((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1)), ((c2 ⋂ c3)= ∅ ∨ s0 = s1), (¬(c2 ⋂ c3)= ∅ → s0 = s1))\n  orcom(s0 = s1, (c2 ⋂ c3)= ∅)\n  df-or((c2 ⋂ c3)= ∅, s0 = s1)\n  bitr4i((¬(c2 ⋂ c3)= ∅ → s0 = s1), ∀(s2,((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1)), (∃(s2,(s2 ∈ c2 ∧ s2 ∈ c3))→ s0 = s1))\n  imbi1i(¬(c2 ⋂ c3)= ∅, s0 = s1, ∃(s2,(s2 ∈ c2 ∧ s2 ∈ c3)))\n  bitri(¬(c2 ⋂ c3)= ∅, ∃(s2,(s2 ∈ c2 ∧ s2 ∈ c3)), ∃(s2, s2 ∈(c2 ⋂ c3)))\n  neq0(s2, (c2 ⋂ c3))\n  exbii(s2, s2 ∈(c2 ⋂ c3), (s2 ∈ c2 ∧ s2 ∈ c3))\n  elin(s2, c2, c3)\n  19.23v(s2, (s2 ∈ c2 ∧ s2 ∈ c3), s0 = s1)\n  ralcom4(s1, s2, c1, ((s2 ∈ c2 ∧ s2 ∈ c3)→ s0 = s1))\n  diff.cin.s(s2, c2, c3)\n  diff.wceq.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["ralbii","bitri","3bitri","orcom","df-or","bitr4i","imbi1i","neq0","exbii","elin","19.23v","ralcom4","diff.cin.s","diff.wceq.s","diff.cv.s","diffss.ex"],"children":["inecmo"]},{"name":"inecmo","content":"Equivalence of a double restricted universal quantification and a restricted \"at most one\" inside a universal quantification. (Contributed by Peter Mazsa, 29-May-2018.)","origin":"thm inecmo(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3) {\n  |- wi(wrel(c0), wb(wral(s0, c1, wral(s1, c1, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(c2, c0), cec(c3, c0)), emptycls)))), wal(s2, wrmo(s0, c1, wbr(c2, c0, cv(s2))))))\n  -| wi(wceq(cv(s0), cv(s1)), wceq(c2, c3))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c3)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n  -| diffsc(s2, c2)\n  -| diffsc(s2, c3)\n} = {\n  syl6rbbr(wrel(c0), wral(s0, c1, wral(s1, c1, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(c2, c0), cec(c3, c0)), emptycls)))), wal(s2, wrmo(s0, c1, wbr(c2, c0, cv(s2)))), wal(s2, wral(s0, c1, wral(s1, c1, wi(wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1)))))))\n  albidv(s2, wrel(c0), wrmo(s0, c1, wbr(c2, c0, cv(s2))), wral(s0, c1, wral(s1, c1, wi(wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1))))))\n  syl6rbbr(wrel(c0), wrmo(s0, c1, wbr(c2, c0, cv(s2))), wral(s0, c1, wral(s1, c1, wi(wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1))))), wral(s0, c1, wral(s1, c1, wi(wa(wbr(c2, c0, cv(s2)), wbr(c3, c0, cv(s2))), wceq(cv(s0), cv(s1))))))\n  2ralbidv(s0, s1, c1, c1, wrel(c0), wi(wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1))), wi(wa(wbr(c2, c0, cv(s2)), wbr(c3, c0, cv(s2))), wceq(cv(s0), cv(s1))))\n  imbi1d(wrel(c0), wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1)), wa(wbr(c2, c0, cv(s2)), wbr(c3, c0, cv(s2))))\n  anbi12d(wrel(c0), wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0)), wbr(c2, c0, cv(s2)), wbr(c3, c0, cv(s2)))\n  relelec(c0, cv(s2), c2)\n  relelec(c0, cv(s2), c3)\n  rmo4(s0, s1, c1, wbr(c2, c0, cv(s2)), wbr(c3, c0, cv(s2)))\n  breq1d(c2, c0, cv(s2), c3, wceq(cv(s0), cv(s1)))\n  bitri(wral(s0, c1, wral(s1, c1, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(c2, c0), cec(c3, c0)), emptycls)))), wal(s2, wral(s0, c1, wral(s1, c1, wi(wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1)))))), wral(s0, c1, wal(s2, wral(s1, c1, wi(wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1)))))))\n  ineleq(s0, s1, s2, c1, c1, cec(c2, c0), cec(c3, c0))\n  ralcom4(s0, s2, c1, wral(s1, c1, wi(wa(wcel(cv(s2), cec(c2, c0)), wcel(cv(s2), cec(c3, c0))), wceq(cv(s0), cv(s1)))))\n  diff.wrel.s(s2, c0)\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s1, c0)\n  diff.wbr.s(s0, c3, c0, cv(s2))\n  diff.cv.s(s0, s2)\n  diff.wbr.s(s1, c2, c0, cv(s2))\n  diff.cv.s(s1, s2)\n  diff.cec.s(s2, c2, c0)\n  diff.cec.s(s2, c3, c0)\n}","pretty":"thm inecmo(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3) {\n  ⊢ (Rel(c0)→(∀(s0 ∈ c1, ∀(s1 ∈ c1,(s0 = s1 ∨([c2]c0 ⋂[c3]c0)= ∅)))↔ ∀(s2, ∃*(s0 ∈ c1, c2[c0]s2))))\n  ⊣ (s0 = s1 → c2 = c3)\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c3)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, c2)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c1)\n  ⊣ d(s2, c2)\n  ⊣ d(s2, c3)\n} = {\n  syl6rbbr(Rel(c0), ∀(s0 ∈ c1, ∀(s1 ∈ c1,(s0 = s1 ∨([c2]c0 ⋂[c3]c0)= ∅))), ∀(s2, ∃*(s0 ∈ c1, c2[c0]s2)), ∀(s2, ∀(s0 ∈ c1, ∀(s1 ∈ c1,((s2 ∈[c2]c0 ∧ s2 ∈[c3]c0)→ s0 = s1)))))\n  albidv(s2, Rel(c0), ∃*(s0 ∈ c1, c2[c0]s2), ∀(s0 ∈ c1, ∀(s1 ∈ c1,((s2 ∈[c2]c0 ∧ s2 ∈[c3]c0)→ s0 = s1))))\n  syl6rbbr(Rel(c0), ∃*(s0 ∈ c1, c2[c0]s2), ∀(s0 ∈ c1, ∀(s1 ∈ c1,((s2 ∈[c2]c0 ∧ s2 ∈[c3]c0)→ s0 = s1))), ∀(s0 ∈ c1, ∀(s1 ∈ c1,((c2[c0]s2 ∧ c3[c0]s2)→ s0 = s1))))\n  2ralbidv(s0, s1, c1, c1, Rel(c0), ((s2 ∈[c2]c0 ∧ s2 ∈[c3]c0)→ s0 = s1), ((c2[c0]s2 ∧ c3[c0]s2)→ s0 = s1))\n  imbi1d(Rel(c0), (s2 ∈[c2]c0 ∧ s2 ∈[c3]c0), s0 = s1, (c2[c0]s2 ∧ c3[c0]s2))\n  anbi12d(Rel(c0), s2 ∈[c2]c0, s2 ∈[c3]c0, c2[c0]s2, c3[c0]s2)\n  relelec(c0, s2, c2)\n  relelec(c0, s2, c3)\n  rmo4(s0, s1, c1, c2[c0]s2, c3[c0]s2)\n  breq1d(c2, c0, s2, c3, s0 = s1)\n  bitri(∀(s0 ∈ c1, ∀(s1 ∈ c1,(s0 = s1 ∨([c2]c0 ⋂[c3]c0)= ∅))), ∀(s2, ∀(s0 ∈ c1, ∀(s1 ∈ c1,((s2 ∈[c2]c0 ∧ s2 ∈[c3]c0)→ s0 = s1)))), ∀(s0 ∈ c1, ∀(s2, ∀(s1 ∈ c1,((s2 ∈[c2]c0 ∧ s2 ∈[c3]c0)→ s0 = s1)))))\n  ineleq(s0, s1, s2, c1, c1, [c2]c0, [c3]c0)\n  ralcom4(s0, s2, c1, ∀(s1 ∈ c1,((s2 ∈[c2]c0 ∧ s2 ∈[c3]c0)→ s0 = s1)))\n  diff.wrel.s(s2, c0)\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s1, c0)\n  diff.wbr.s(s0, c3, c0, s2)\n  diff.cv.s(s0, s2)\n  diff.wbr.s(s1, c2, c0, s2)\n  diff.cv.s(s1, s2)\n  diff.cec.s(s2, c2, c0)\n  diff.cec.s(s2, c3, c0)\n}","parent":["syl6rbbr","albidv","2ralbidv","imbi1d","anbi12d","relelec","rmo4","breq1d","bitri","ineleq","ralcom4","diff.wrel.s","diff.wbr.s","diff.cv.s","diff.cec.s"],"children":["inecmo2","ineccnvmo"]},{"name":"inecmo2","content":"Equivalence of a double restricted universal quantification and a restricted \"at most one\" inside a universal quantification. (Contributed by Peter Mazsa, 29-May-2018.) (Revised by Peter Mazsa, 2-Sep-2021.)","origin":"thm inecmo2(setvar s0, setvar s1, setvar s2, class c0, class c1) {\n  |- wb(wa(wral(s0, c0, wral(s1, c0, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), c1), cec(cv(s1), c1)), emptycls)))), wrel(c1)), wa(wal(s2, wrmo(s0, c0, wbr(cv(s0), c1, cv(s2)))), wrel(c1)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n} = {\n  pm5.32ri(wral(s0, c0, wral(s1, c0, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), c1), cec(cv(s1), c1)), emptycls)))), wrel(c1), wal(s2, wrmo(s0, c0, wbr(cv(s0), c1, cv(s2)))))\n  inecmo(s0, s1, s2, c1, c0, cv(s0), cv(s1))\n  id(wceq(cv(s0), cv(s1)))\n  diff.cv.s(s0, s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm inecmo2(setvar s0, setvar s1, setvar s2, class c0, class c1) {\n  ⊢ ((∀(s0 ∈ c0, ∀(s1 ∈ c0,(s0 = s1 ∨([s0]c1 ⋂[s1]c1)= ∅)))∧ Rel(c1))↔(∀(s2, ∃*(s0 ∈ c0, s0[c1]s2))∧ Rel(c1)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c1)\n} = {\n  pm5.32ri(∀(s0 ∈ c0, ∀(s1 ∈ c0,(s0 = s1 ∨([s0]c1 ⋂[s1]c1)= ∅))), Rel(c1), ∀(s2, ∃*(s0 ∈ c0, s0[c1]s2)))\n  inecmo(s0, s1, s2, c1, c0, s0, s1)\n  id(s0 = s1)\n  diff.cv.s(s0, s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["pm5.32ri","inecmo","id","diff.cv.s","diffss.ex"],"children":["inecmo3","dfeldisj5"]},{"name":"ineccnvmo","content":"Equivalence of a double restricted universal quantification and a restricted \"at most one\" inside a universal quantification. (Contributed by Peter Mazsa, 2-Sep-2021.)","origin":"thm ineccnvmo(setvar s0, setvar s1, setvar s2, class c0, class c1) {\n  |- wb(wral(s0, c0, wral(s1, c0, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), ccnv(c1)), cec(cv(s1), ccnv(c1))), emptycls)))), wal(s2, wrmo(s0, c0, wbr(cv(s2), c1, cv(s0)))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n} = {\n  bitri(wral(s0, c0, wral(s1, c0, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), ccnv(c1)), cec(cv(s1), ccnv(c1))), emptycls)))), wal(s2, wrmo(s0, c0, wbr(cv(s2), c1, cv(s0)))), wal(s2, wrmo(s0, c0, wbr(cv(s0), ccnv(c1), cv(s2)))))\n  ax-mp(wb(wral(s0, c0, wral(s1, c0, wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), ccnv(c1)), cec(cv(s1), ccnv(c1))), emptycls)))), wal(s2, wrmo(s0, c0, wbr(cv(s0), ccnv(c1), cv(s2))))), wrel(ccnv(c1)))\n  relcnv(c1)\n  inecmo(s0, s1, s2, ccnv(c1), c0, cv(s0), cv(s1))\n  id(wceq(cv(s0), cv(s1)))\n  albii(s2, wrmo(s0, c0, wbr(cv(s0), ccnv(c1), cv(s2))), wrmo(s0, c0, wbr(cv(s2), c1, cv(s0))))\n  rmobii(s0, c0, wbr(cv(s0), ccnv(c1), cv(s2)), wbr(cv(s2), c1, cv(s0)))\n  el2v(s0, s2, wb(wbr(cv(s0), ccnv(c1), cv(s2)), wbr(cv(s2), c1, cv(s0))))\n  brcnvg(cv(s0), universe, cv(s2), universe, c1)\n  diff.ccnv.s(s0, c1)\n  diff.cv.s(s0, s1)\n  diff.ccnv.s(s1, c1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.ccnv.s(s2, c1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm ineccnvmo(setvar s0, setvar s1, setvar s2, class c0, class c1) {\n  ⊢ (∀(s0 ∈ c0, ∀(s1 ∈ c0,(s0 = s1 ∨([s0]`' c1 ⋂[s1]`' c1)= ∅)))↔ ∀(s2, ∃*(s0 ∈ c0, s2[c1]s0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c1)\n} = {\n  bitri(∀(s0 ∈ c0, ∀(s1 ∈ c0,(s0 = s1 ∨([s0]`' c1 ⋂[s1]`' c1)= ∅))), ∀(s2, ∃*(s0 ∈ c0, s2[c1]s0)), ∀(s2, ∃*(s0 ∈ c0, s0[`' c1]s2)))\n  ax-mp((∀(s0 ∈ c0, ∀(s1 ∈ c0,(s0 = s1 ∨([s0]`' c1 ⋂[s1]`' c1)= ∅)))↔ ∀(s2, ∃*(s0 ∈ c0, s0[`' c1]s2))), Rel(`' c1))\n  relcnv(c1)\n  inecmo(s0, s1, s2, `' c1, c0, s0, s1)\n  id(s0 = s1)\n  albii(s2, ∃*(s0 ∈ c0, s0[`' c1]s2), ∃*(s0 ∈ c0, s2[c1]s0))\n  rmobii(s0, c0, s0[`' c1]s2, s2[c1]s0)\n  el2v(s0, s2, (s0[`' c1]s2 ↔ s2[c1]s0))\n  brcnvg(s0, universe, s2, universe, c1)\n  diff.ccnv.s(s0, c1)\n  diff.cv.s(s0, s1)\n  diff.ccnv.s(s1, c1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.ccnv.s(s2, c1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["bitri","ax-mp","relcnv","inecmo","id","albii","rmobii","el2v","brcnvg","diff.ccnv.s","diff.cv.s","diffss.ex"],"children":["ineccnvmo2"]},{"name":"alrmomorn","content":"Equivalence of an \"at most one\" and an \"at most one\" restricted to the range inside a universal quantification. (Contributed by Peter Mazsa, 3-Sep-2021.)","origin":"thm alrmomorn(setvar s0, setvar s1, class c0) {\n  |- wb(wal(s0, wrmo(s1, crn(c0), wbr(cv(s0), c0, cv(s1)))), wal(s0, wmo(s1, wbr(cv(s0), c0, cv(s1)))))\n} = {\n  albii(s0, wrmo(s1, crn(c0), wbr(cv(s0), c0, cv(s1))), wmo(s1, wbr(cv(s0), c0, cv(s1))))\n  bitri(wrmo(s1, crn(c0), wbr(cv(s0), c0, cv(s1))), wmo(s1, wbr(cv(s0), c0, cv(s1))), wmo(s1, wa(wcel(cv(s1), crn(c0)), wbr(cv(s0), c0, cv(s1)))))\n  df-rmo(s1, crn(c0), wbr(cv(s0), c0, cv(s1)))\n  mobii(s1, wa(wcel(cv(s1), crn(c0)), wbr(cv(s0), c0, cv(s1))), wbr(cv(s0), c0, cv(s1)))\n  3bitr3i(wa(wcel(cv(s1), crn(c0)), wbr(cv(s0), c0, cv(s1))), wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), cres(ccnv(c0), crn(c0)), cv(s0)), wbr(cv(s1), ccnv(c0), cv(s0)))\n  breqi(cv(s1), cres(ccnv(c0), crn(c0)), cv(s0), ccnv(c0))\n  cnvresrn(c0)\n  bitri(wbr(cv(s1), cres(ccnv(c0), crn(c0)), cv(s0)), wa(wcel(cv(s1), crn(c0)), wbr(cv(s0), c0, cv(s1))), wa(wcel(cv(s1), crn(c0)), wbr(cv(s1), ccnv(c0), cv(s0))))\n  elv(s0, wb(wbr(cv(s1), cres(ccnv(c0), crn(c0)), cv(s0)), wa(wcel(cv(s1), crn(c0)), wbr(cv(s1), ccnv(c0), cv(s0)))))\n  brres(cv(s0), universe, cv(s1), ccnv(c0), crn(c0))\n  anbi2i(wcel(cv(s1), crn(c0)), wbr(cv(s1), ccnv(c0), cv(s0)), wbr(cv(s0), c0, cv(s1)))\n  el2v(s1, s0, wb(wbr(cv(s1), ccnv(c0), cv(s0)), wbr(cv(s0), c0, cv(s1))))\n  brcnvg(cv(s1), universe, cv(s0), universe, c0)\n}","pretty":"thm alrmomorn(setvar s0, setvar s1, class c0) {\n  ⊢ (∀(s0, ∃*(s1 ∈ ran(c0), s0[c0]s1))↔ ∀(s0, ∃*(s1, s0[c0]s1)))\n} = {\n  albii(s0, ∃*(s1 ∈ ran(c0), s0[c0]s1), ∃*(s1, s0[c0]s1))\n  bitri(∃*(s1 ∈ ran(c0), s0[c0]s1), ∃*(s1, s0[c0]s1), ∃*(s1,(s1 ∈ ran(c0)∧ s0[c0]s1)))\n  df-rmo(s1, ran(c0), s0[c0]s1)\n  mobii(s1, (s1 ∈ ran(c0)∧ s0[c0]s1), s0[c0]s1)\n  3bitr3i((s1 ∈ ran(c0)∧ s0[c0]s1), s0[c0]s1, s1[(`' c0 |` ran(c0))]s0, s1[`' c0]s0)\n  breqi(s1, (`' c0 |` ran(c0)), s0, `' c0)\n  cnvresrn(c0)\n  bitri(s1[(`' c0 |` ran(c0))]s0, (s1 ∈ ran(c0)∧ s0[c0]s1), (s1 ∈ ran(c0)∧ s1[`' c0]s0))\n  elv(s0, (s1[(`' c0 |` ran(c0))]s0 ↔(s1 ∈ ran(c0)∧ s1[`' c0]s0)))\n  brres(s0, universe, s1, `' c0, ran(c0))\n  anbi2i(s1 ∈ ran(c0), s1[`' c0]s0, s0[c0]s1)\n  el2v(s1, s0, (s1[`' c0]s0 ↔ s0[c0]s1))\n  brcnvg(s1, universe, s0, universe, c0)\n}","parent":["albii","bitri","df-rmo","mobii","3bitr3i","breqi","cnvresrn","elv","brres","anbi2i","el2v","brcnvg"],"children":["ineccnvmo2"]},{"name":"alrmomodm","content":"Equivalence of an \"at most one\" and an \"at most one\" restricted to the domain inside a universal quantification. (Contributed by Peter Mazsa, 5-Sep-2021.)","origin":"thm alrmomodm(setvar s0, setvar s1, class c0) {\n  |- wi(wrel(c0), wb(wal(s0, wrmo(s1, cdm(c0), wbr(cv(s1), c0, cv(s0)))), wal(s0, wmo(s1, wbr(cv(s1), c0, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  albidv(s0, wrel(c0), wrmo(s1, cdm(c0), wbr(cv(s1), c0, cv(s0))), wmo(s1, wbr(cv(s1), c0, cv(s0))))\n  syl5bb(wrel(c0), wrmo(s1, cdm(c0), wbr(cv(s1), c0, cv(s0))), wmo(s1, wbr(cv(s1), c0, cv(s0))), wmo(s1, wa(wcel(cv(s1), cdm(c0)), wbr(cv(s1), c0, cv(s0)))))\n  df-rmo(s1, cdm(c0), wbr(cv(s1), c0, cv(s0)))\n  mobidv(s1, wrel(c0), wa(wcel(cv(s1), cdm(c0)), wbr(cv(s1), c0, cv(s0))), wbr(cv(s1), c0, cv(s0)))\n  syl5bbr(wrel(c0), wa(wcel(cv(s1), cdm(c0)), wbr(cv(s1), c0, cv(s0))), wbr(cv(s1), c0, cv(s0)), wbr(cv(s1), cres(c0, cdm(c0)), cv(s0)))\n  elv(s0, wb(wbr(cv(s1), cres(c0, cdm(c0)), cv(s0)), wa(wcel(cv(s1), cdm(c0)), wbr(cv(s1), c0, cv(s0)))))\n  brres(cv(s0), universe, cv(s1), c0, cdm(c0))\n  breqd(cv(s1), cres(c0, cdm(c0)), cv(s0), c0, wrel(c0))\n  resdm(c0)\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s1, c0)\n}","pretty":"thm alrmomodm(setvar s0, setvar s1, class c0) {\n  ⊢ (Rel(c0)→(∀(s0, ∃*(s1 ∈ dom(c0), s1[c0]s0))↔ ∀(s0, ∃*(s1, s1[c0]s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  albidv(s0, Rel(c0), ∃*(s1 ∈ dom(c0), s1[c0]s0), ∃*(s1, s1[c0]s0))\n  syl5bb(Rel(c0), ∃*(s1 ∈ dom(c0), s1[c0]s0), ∃*(s1, s1[c0]s0), ∃*(s1,(s1 ∈ dom(c0)∧ s1[c0]s0)))\n  df-rmo(s1, dom(c0), s1[c0]s0)\n  mobidv(s1, Rel(c0), (s1 ∈ dom(c0)∧ s1[c0]s0), s1[c0]s0)\n  syl5bbr(Rel(c0), (s1 ∈ dom(c0)∧ s1[c0]s0), s1[c0]s0, s1[(c0 |` dom(c0))]s0)\n  elv(s0, (s1[(c0 |` dom(c0))]s0 ↔(s1 ∈ dom(c0)∧ s1[c0]s0)))\n  brres(s0, universe, s1, c0, dom(c0))\n  breqd(s1, (c0 |` dom(c0)), s0, c0, Rel(c0))\n  resdm(c0)\n  diff.wrel.s(s0, c0)\n  diff.wrel.s(s1, c0)\n}","parent":["albidv","syl5bb","df-rmo","mobidv","syl5bbr","elv","brres","breqd","resdm","diff.wrel.s"],"children":["inecmo3"]},{"name":"ineccnvmo2","content":"Equivalence of a double universal quantification restricted to the range and an \"at most one\" inside a universal quantification. (Contributed by Peter Mazsa, 4-Sep-2021.)","origin":"thm ineccnvmo2(setvar s0, setvar s1, setvar s2, class c0) {\n  |- wb(wral(s0, crn(c0), wral(s1, crn(c0), wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), ccnv(c0)), cec(cv(s1), ccnv(c0))), emptycls)))), wal(s2, wmo(s0, wbr(cv(s2), c0, cv(s0)))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsc(s2, c0)\n} = {\n  bitri(wral(s0, crn(c0), wral(s1, crn(c0), wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), ccnv(c0)), cec(cv(s1), ccnv(c0))), emptycls)))), wal(s2, wmo(s0, wbr(cv(s2), c0, cv(s0)))), wal(s2, wrmo(s0, crn(c0), wbr(cv(s2), c0, cv(s0)))))\n  ineccnvmo(s0, s1, s2, crn(c0), c0)\n  alrmomorn(s2, s0, c0)\n  diff.crn.s(s0, c0)\n  diff.crn.s(s1, c0)\n  diff.crn.s(s2, c0)\n}","pretty":"thm ineccnvmo2(setvar s0, setvar s1, setvar s2, class c0) {\n  ⊢ (∀(s0 ∈ ran(c0), ∀(s1 ∈ ran(c0),(s0 = s1 ∨([s0]`' c0 ⋂[s1]`' c0)= ∅)))↔ ∀(s2, ∃*(s0, s2[c0]s0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s2, c0)\n} = {\n  bitri(∀(s0 ∈ ran(c0), ∀(s1 ∈ ran(c0),(s0 = s1 ∨([s0]`' c0 ⋂[s1]`' c0)= ∅))), ∀(s2, ∃*(s0, s2[c0]s0)), ∀(s2, ∃*(s0 ∈ ran(c0), s2[c0]s0)))\n  ineccnvmo(s0, s1, s2, ran(c0), c0)\n  alrmomorn(s2, s0, c0)\n  diff.crn.s(s0, c0)\n  diff.crn.s(s1, c0)\n  diff.crn.s(s2, c0)\n}","parent":["bitri","ineccnvmo","alrmomorn","diff.crn.s"],"children":["cossssid5","dffunsALTV5"]},{"name":"inecmo3","content":"Equivalence of a double universal quantification restricted to the domain and an \"at most one\" inside a universal quantification. (Contributed by Peter Mazsa, 5-Sep-2021.)","origin":"thm inecmo3(setvar s0, setvar s1, setvar s2, class c0) {\n  |- wb(wa(wral(s0, cdm(c0), wral(s1, cdm(c0), wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), c0), cec(cv(s1), c0)), emptycls)))), wrel(c0)), wa(wal(s2, wmo(s0, wbr(cv(s0), c0, cv(s2)))), wrel(c0)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsc(s2, c0)\n} = {\n  bitri(wa(wral(s0, cdm(c0), wral(s1, cdm(c0), wo(wceq(cv(s0), cv(s1)), wceq(cin(cec(cv(s0), c0), cec(cv(s1), c0)), emptycls)))), wrel(c0)), wa(wal(s2, wmo(s0, wbr(cv(s0), c0, cv(s2)))), wrel(c0)), wa(wal(s2, wrmo(s0, cdm(c0), wbr(cv(s0), c0, cv(s2)))), wrel(c0)))\n  inecmo2(s0, s1, s2, cdm(c0), c0)\n  pm5.32ri(wal(s2, wrmo(s0, cdm(c0), wbr(cv(s0), c0, cv(s2)))), wrel(c0), wal(s2, wmo(s0, wbr(cv(s0), c0, cv(s2)))))\n  alrmomodm(s2, s0, c0)\n  diff.cdm.s(s0, c0)\n  diff.cdm.s(s1, c0)\n  diff.cdm.s(s2, c0)\n}","pretty":"thm inecmo3(setvar s0, setvar s1, setvar s2, class c0) {\n  ⊢ ((∀(s0 ∈ dom(c0), ∀(s1 ∈ dom(c0),(s0 = s1 ∨([s0]c0 ⋂[s1]c0)= ∅)))∧ Rel(c0))↔(∀(s2, ∃*(s0, s0[c0]s2))∧ Rel(c0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s2, c0)\n} = {\n  bitri((∀(s0 ∈ dom(c0), ∀(s1 ∈ dom(c0),(s0 = s1 ∨([s0]c0 ⋂[s1]c0)= ∅)))∧ Rel(c0)), (∀(s2, ∃*(s0, s0[c0]s2))∧ Rel(c0)), (∀(s2, ∃*(s0 ∈ dom(c0), s0[c0]s2))∧ Rel(c0)))\n  inecmo2(s0, s1, s2, dom(c0), c0)\n  pm5.32ri(∀(s2, ∃*(s0 ∈ dom(c0), s0[c0]s2)), Rel(c0), ∀(s2, ∃*(s0, s0[c0]s2)))\n  alrmomodm(s2, s0, c0)\n  diff.cdm.s(s0, c0)\n  diff.cdm.s(s1, c0)\n  diff.cdm.s(s2, c0)\n}","parent":["bitri","inecmo2","pm5.32ri","alrmomodm","diff.cdm.s"],"children":["cosscnvssid5"]},{"name":"moantr","content":"Sufficient condition for transitivity of conjunctions inside existential quantifiers. (Contributed by Peter Mazsa, 2-Oct-2018.)","origin":"thm moantr(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wmo(s0, w0), wi(wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2))), wex(s0, wa(w1, w2))))\n} = {\n  mpbi(wi(wmo(s0, w0), wi(wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2))), wex(s0, wa(w1, w2)))), wi(wa(wmo(s0, w0), wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2)))), wex(s0, wa(w1, w2))))\n  syl(wa(wmo(s0, w0), wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2)))), wex(s0, wa(w1, w2)), wex(s0, w3a(w0, w1, w2)))\n  sylbi(wa(wmo(s0, w0), wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2)))), wex(s0, w3a(w0, w1, w2)), w3a(wmo(s0, w0), wex(s0, wa(w0, w1)), wex(s0, wa(w0, w2))))\n  bitr4i(wa(wmo(s0, w0), wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2)))), w3a(wmo(s0, w0), wex(s0, wa(w0, w1)), wex(s0, wa(w0, w2))), wa(wmo(s0, w0), wa(wex(s0, wa(w0, w1)), wex(s0, wa(w0, w2)))))\n  anbi2i(wmo(s0, w0), wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2))), wa(wex(s0, wa(w0, w1)), wex(s0, wa(w0, w2))))\n  anbi1i(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2)), wex(s0, wa(w0, w1)))\n  exancom(s0, w1, w0)\n  3anass(wmo(s0, w0), wex(s0, wa(w0, w1)), wex(s0, wa(w0, w2)))\n  mopick2(s0, w0, w1, w2)\n  sylbi(wex(s0, w3a(w0, w1, w2)), wex(s0, wa(w1, w2)), wex(s0, wa(w0, wa(w1, w2))))\n  exbii(s0, w3a(w0, w1, w2), wa(w0, wa(w1, w2)))\n  3anass(w0, w1, w2)\n  exsimpr(s0, w0, wa(w1, w2))\n  impexp(wmo(s0, w0), wa(wex(s0, wa(w1, w0)), wex(s0, wa(w0, w2))), wex(s0, wa(w1, w2)))\n}","pretty":"thm moantr(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∃*(s0, w0)→((∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2)))→ ∃(s0,(w1 ∧ w2))))\n} = {\n  mpbi((∃*(s0, w0)→((∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2)))→ ∃(s0,(w1 ∧ w2)))), ((∃*(s0, w0)∧(∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2))))→ ∃(s0,(w1 ∧ w2))))\n  syl((∃*(s0, w0)∧(∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2)))), ∃(s0,(w1 ∧ w2)), ∃(s0,(w0 ∧ w1 ∧ w2)))\n  sylbi((∃*(s0, w0)∧(∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2)))), ∃(s0,(w0 ∧ w1 ∧ w2)), (∃*(s0, w0)∧ ∃(s0,(w0 ∧ w1))∧ ∃(s0,(w0 ∧ w2))))\n  bitr4i((∃*(s0, w0)∧(∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2)))), (∃*(s0, w0)∧ ∃(s0,(w0 ∧ w1))∧ ∃(s0,(w0 ∧ w2))), (∃*(s0, w0)∧(∃(s0,(w0 ∧ w1))∧ ∃(s0,(w0 ∧ w2)))))\n  anbi2i(∃*(s0, w0), (∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2))), (∃(s0,(w0 ∧ w1))∧ ∃(s0,(w0 ∧ w2))))\n  anbi1i(∃(s0,(w1 ∧ w0)), ∃(s0,(w0 ∧ w2)), ∃(s0,(w0 ∧ w1)))\n  exancom(s0, w1, w0)\n  3anass(∃*(s0, w0), ∃(s0,(w0 ∧ w1)), ∃(s0,(w0 ∧ w2)))\n  mopick2(s0, w0, w1, w2)\n  sylbi(∃(s0,(w0 ∧ w1 ∧ w2)), ∃(s0,(w1 ∧ w2)), ∃(s0,(w0 ∧(w1 ∧ w2))))\n  exbii(s0, (w0 ∧ w1 ∧ w2), (w0 ∧(w1 ∧ w2)))\n  3anass(w0, w1, w2)\n  exsimpr(s0, w0, (w1 ∧ w2))\n  impexp(∃*(s0, w0), (∃(s0,(w1 ∧ w0))∧ ∃(s0,(w0 ∧ w2))), ∃(s0,(w1 ∧ w2)))\n}","parent":["mpbi","syl","sylbi","bitr4i","anbi2i","anbi1i","exancom","3anass","mopick2","exbii","exsimpr","impexp"],"children":["trcoss"]},{"name":"brabidga","content":"The law of concretion for a binary relation. Special case of ~ brabga . (Contributed by Peter Mazsa, 24-Nov-2018.)","origin":"thm brabidga(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wbr(cv(s0), c0, cv(s1)), w0)\n  -| wceq(c0, copab(s0, s1, w0))\n} = {\n  3bitri(wbr(cv(s0), c0, cv(s1)), w0, wbr(cv(s0), copab(s0, s1, w0), cv(s1)), wcel(cop(cv(s0), cv(s1)), copab(s0, s1, w0)))\n  breqi(cv(s0), c0, cv(s1), copab(s0, s1, w0))\n  df-br(cv(s0), copab(s0, s1, w0), cv(s1))\n  opabid(s0, s1, w0)\n}","pretty":"thm brabidga(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (s0[c0]s1 ↔ w0)\n  ⊣ c0 = { < s0, s1 > | w0 }\n} = {\n  3bitri(s0[c0]s1, w0, s0[{ < s0, s1 > | w0 }]s1, < s0, s1 > ∈ { < s0, s1 > | w0 })\n  breqi(s0, c0, s1, { < s0, s1 > | w0 })\n  df-br(s0, { < s0, s1 > | w0 }, s1)\n  opabid(s0, s1, w0)\n}","parent":["3bitri","breqi","df-br","opabid"],"children":["inxpxrn"]},{"name":"inxp2","content":"Intersection with a Cartesian product. (Contributed by Peter Mazsa, 18-Jul-2019.)","origin":"thm inxp2(setvar s0, setvar s1, class c0, class c1, class c2) {\n  |- wceq(cin(c0, cxp(c1, c2)), copab(s0, s1, wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1)))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n} = {\n  eqtri(cin(c0, cxp(c1, c2)), copab(s0, s1, wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1)))), copab(s0, s1, wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1))))\n  mpbi(wceq(cin(c0, cxp(c1, c2)), copab(s0, s1, wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)))), wrel(cin(c0, cxp(c1, c2))))\n  relinxp(c0, c1, c2)\n  dfrel4v(s0, s1, cin(c0, cxp(c1, c2)))\n  opabbii(s0, s1, wbr(cv(s0), cin(c0, cxp(c1, c2)), cv(s1)), wa(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wbr(cv(s0), c0, cv(s1))))\n  brinxp2(cv(s0), c0, c1, c2, cv(s1))\n  diff.cin.s(s0, c0, cxp(c1, c2))\n  diff.cxp.s(s0, c1, c2)\n  diff.cin.s(s1, c0, cxp(c1, c2))\n  diff.cxp.s(s1, c1, c2)\n}","pretty":"thm inxp2(setvar s0, setvar s1, class c0, class c1, class c2) {\n  ⊢ (c0 ⋂(c1 × c2))= { < s0, s1 > |((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c0]s1)}\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s1, c2)\n} = {\n  eqtri((c0 ⋂(c1 × c2)), { < s0, s1 > |((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c0]s1)}, { < s0, s1 > | s0[(c0 ⋂(c1 × c2))]s1 })\n  mpbi((c0 ⋂(c1 × c2))= { < s0, s1 > | s0[(c0 ⋂(c1 × c2))]s1 }, Rel((c0 ⋂(c1 × c2))))\n  relinxp(c0, c1, c2)\n  dfrel4v(s0, s1, (c0 ⋂(c1 × c2)))\n  opabbii(s0, s1, s0[(c0 ⋂(c1 × c2))]s1, ((s0 ∈ c1 ∧ s1 ∈ c2)∧ s0[c0]s1))\n  brinxp2(s0, c0, c1, c2, s1)\n  diff.cin.s(s0, c0, (c1 × c2))\n  diff.cxp.s(s0, c1, c2)\n  diff.cin.s(s1, c0, (c1 × c2))\n  diff.cxp.s(s1, c1, c2)\n}","parent":["eqtri","mpbi","relinxp","dfrel4v","opabbii","brinxp2","diff.cin.s","diff.cxp.s"],"children":["xrninxp","xrninxp2"]},{"name":"opabf","content":"A class abstraction of a collection of ordered pairs with a negated wff is the empty set. (Contributed by Peter Mazsa, 21-Oct-2019.) (Proof shortened by Thierry Arnoux, 18-Feb-2022.)","origin":"thm opabf(setvar s0, setvar s1, wff w0) {\n  |- wceq(copab(s0, s1, w0), emptycls)\n  -| wn(w0)\n} = {\n  mpbir(wceq(copab(s0, s1, w0), emptycls), wal(s0, wal(s1, wn(w0))))\n  gen2(s0, s1, wn(w0))\n  opab0(s0, s1, w0)\n}","pretty":"thm opabf(setvar s0, setvar s1, wff w0) {\n  ⊢ { < s0, s1 > | w0 } = ∅\n  ⊣ ¬ w0\n} = {\n  mpbir({ < s0, s1 > | w0 } = ∅, ∀(s0, ∀(s1, ¬ w0)))\n  gen2(s0, s1, ¬ w0)\n  opab0(s0, s1, w0)\n}","parent":["mpbir","gen2","opab0"],"children":["coss0"]},{"name":"ec0","content":"The empty-coset of a class is the empty set. (Contributed by Peter Mazsa, 19-May-2019.)","origin":"thm ec0(class c0) {\n  |- wceq(cec(c0, emptycls), emptycls)\n} = {\n  eqtri(cec(c0, emptycls), emptycls, cima(emptycls, csn(c0)))\n  df-ec(c0, emptycls)\n  0ima(csn(c0))\n}","pretty":"thm ec0(class c0) {\n  ⊢ [c0]∅ = ∅\n} = {\n  eqtri([c0]∅, emptycls, (∅ \" { c0 }))\n  df-ec(c0, emptycls)\n  0ima({ c0 })\n}","parent":["eqtri","df-ec","0ima"],"children":["coss0"]},{"name":"0qs","content":"Quotient set with the empty set. (Contributed by Peter Mazsa, 14-Sep-2019.)","origin":"thm 0qs(class c0) {\n  |- wceq(cqs(emptycls, c0), emptycls)\n} = {\n  eqtri(cqs(emptycls, c0), emptycls, cab(hs0, wrex(hs1, emptycls, wceq(cv(hs0), cec(cv(hs1), c0)))))\n  df-qs(hs0, hs1, emptycls, c0)\n  abf(hs0, wrex(hs1, emptycls, wceq(cv(hs0), cec(cv(hs1), c0))))\n  rex0(hs1, wceq(cv(hs0), cec(cv(hs1), c0)))\n  diff.hs0.s(hs1)\n  diff.hs1.c(emptycls)\n  diff.hs0.c(emptycls)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n}","pretty":"thm 0qs(class c0) {\n  ⊢ (∅ /. c0)= ∅\n} = {\n  eqtri((∅ /. c0), emptycls, { hs0 | ∃(hs1 ∈ ∅, hs0 =[hs1]c0)})\n  df-qs(hs0, hs1, emptycls, c0)\n  abf(hs0, ∃(hs1 ∈ ∅, hs0 =[hs1]c0))\n  rex0(hs1, hs0 =[hs1]c0)\n  diff.hs0.s(hs1)\n  diff.hs1.c(emptycls)\n  diff.hs0.c(emptycls)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n}","parent":["eqtri","df-qs","abf","rex0","diff.hs0.s","diff.hs1.c","diff.hs0.c"],"children":[]}]}