{"index":1119,"title":"Adding ax-6","content":"","blocks":[{"name":"bj-alequexv","content":"Version of ~ bj-alequex with DV(x,y), requiring fewer axioms. (Contributed by BJ, 9-Nov-2021.)","origin":"thm bj-alequexv(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wex(s0, w0))\n  -| diffss(s0, s1)\n} = {\n  mpi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wex(s0, w0), wex(s0, wceq(cv(s0), cv(s1))))\n  ax6ev(s0, s1)\n  exim(s0, wceq(cv(s0), cv(s1)), w0)\n}","pretty":"thm bj-alequexv(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0,(s0 = s1 → w0))→ ∃(s0, w0))\n  ⊣ d(s0, s1)\n} = {\n  mpi(∀(s0,(s0 = s1 → w0)), ∃(s0, w0), ∃(s0, s0 = s1))\n  ax6ev(s0, s1)\n  exim(s0, s0 = s1, w0)\n}","parent":["mpi","ax6ev","exim"],"children":["bj-spimvwt"]},{"name":"bj-spimvwt","content":"Closed form of ~ spimvw . See also ~ spimt . (Contributed by BJ, 8-Nov-2021.)","origin":"thm bj-spimvwt(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, wi(wceq(cv(s0), cv(s1)), wi(w0, w1))), wi(wal(s0, w0), w1))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w1)\n} = {\n  sylib(wal(s0, wi(wceq(cv(s0), cv(s1)), wi(w0, w1))), wi(wal(s0, w0), w1), wex(s0, wi(w0, w1)))\n  bj-alequexv(s0, s1, wi(w0, w1))\n  19.36v(s0, w0, w1)\n}","pretty":"thm bj-spimvwt(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0,(s0 = s1 →(w0 → w1)))→(∀(s0, w0)→ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w1)\n} = {\n  sylib(∀(s0,(s0 = s1 →(w0 → w1))), (∀(s0, w0)→ w1), ∃(s0,(w0 → w1)))\n  bj-alequexv(s0, s1, (w0 → w1))\n  19.36v(s0, w0, w1)\n}","parent":["sylib","bj-alequexv","19.36v"],"children":[]},{"name":"bj-spimevw","content":"Existential introduction, using implicit substitution. This is to ~ spimeh what ~ spimvw is to ~ spimw . (Contributed by BJ, 17-Mar-2020.)","origin":"thm bj-spimevw(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wex(s0, w1))\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w0)\n} = {\n  spimeh(s0, s1, w0, w1)\n  ax-5(s0, w0)\n}","pretty":"thm bj-spimevw(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → ∃(s0, w1))\n  ⊣ (s0 = s1 →(w0 → w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w0)\n} = {\n  spimeh(s0, s1, w0, w1)\n  ax-5(s0, w0)\n}","parent":["spimeh","ax-5"],"children":[]},{"name":"bj-spnfw","content":"Theorem close to a closed form of ~ spnfw . (Contributed by BJ, 12-May-2019.)","origin":"thm bj-spnfw(setvar s0, wff w0, wff w1) {\n  |- wi(wi(wex(s0, w0), w1), wi(wal(s0, w0), w1))\n} = {\n  imim1i(wex(s0, w0), w1, wal(s0, w0))\n  19.2(s0, w0)\n}","pretty":"thm bj-spnfw(setvar s0, wff w0, wff w1) {\n  ⊢ ((∃(s0, w0)→ w1)→(∀(s0, w0)→ w1))\n} = {\n  imim1i(∃(s0, w0), w1, ∀(s0, w0))\n  19.2(s0, w0)\n}","parent":["imim1i","19.2"],"children":[]},{"name":"bj-cbvexiw","content":"Change bound variable. This is to ~ cbvexvw what ~ cbvaliw is to ~ cbvalvw . [TODO: move after ~ cbvalivw ]. (Contributed by BJ, 17-Mar-2020.)","origin":"thm bj-cbvexiw(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wex(s0, w0), wex(s1, w1))\n  -| wi(wex(s0, wex(s1, w1)), wex(s1, w1))\n  -| wi(w0, wal(s1, w0))\n  -| wi(wceq(cv(s1), cv(s0)), wi(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  bj-exlime(s0, w0, wex(s1, w1))\n  spimeh(s1, s0, w0, w1)\n  diffss.ex(s1, s0)\n}","pretty":"thm bj-cbvexiw(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0, w0)→ ∃(s1, w1))\n  ⊣ (∃(s0, ∃(s1, w1))→ ∃(s1, w1))\n  ⊣ (w0 → ∀(s1, w0))\n  ⊣ (s1 = s0 →(w0 → w1))\n  ⊣ d(s0, s1)\n} = {\n  bj-exlime(s0, w0, ∃(s1, w1))\n  spimeh(s1, s0, w0, w1)\n  diffss.ex(s1, s0)\n}","parent":["bj-exlime","spimeh","diffss.ex"],"children":["bj-cbvexivw","bj-cbvexw"]},{"name":"bj-cbvexivw","content":"Change bound variable. This is to ~ cbvexvw what ~ cbvalivw is to ~ cbvalvw . [TODO: move after ~ cbvalivw ]. (Contributed by BJ, 17-Mar-2020.)","origin":"thm bj-cbvexivw(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wex(s0, w0), wex(s1, w1))\n  -| wi(wceq(cv(s1), cv(s0)), wi(w0, w1))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w1)\n  -| diffsw(s1, w0)\n} = {\n  bj-cbvexiw(s0, s1, w0, w1)\n  ax5e(s0, wex(s1, w1))\n  ax-5(s1, w0)\n  diff.wex.s(s0, s1, w1)\n}","pretty":"thm bj-cbvexivw(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0, w0)→ ∃(s1, w1))\n  ⊣ (s1 = s0 →(w0 → w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w1)\n  ⊣ d(s1, w0)\n} = {\n  bj-cbvexiw(s0, s1, w0, w1)\n  ax5e(s0, ∃(s1, w1))\n  ax-5(s1, w0)\n  diff.wex.s(s0, s1, w1)\n}","parent":["bj-cbvexiw","ax5e","ax-5","diff.wex.s"],"children":[]},{"name":"bj-modald","content":"A short form of the axiom D of modal logic. (Contributed by BJ, 4-Apr-2021.)","origin":"thm bj-modald(setvar s0, wff w0) {\n  |- wi(wal(s0, wn(w0)), wn(wal(s0, w0)))\n} = {\n  con2i(wal(s0, wn(w0)), wal(s0, w0))\n  sylib(wal(s0, w0), wn(wal(s0, wn(w0))), wex(s0, w0))\n  19.2(s0, w0)\n  df-ex(s0, w0)\n}","pretty":"thm bj-modald(setvar s0, wff w0) {\n  ⊢ (∀(s0, ¬ w0)→ ¬ ∀(s0, w0))\n} = {\n  con2i(∀(s0, ¬ w0), ∀(s0, w0))\n  sylib(∀(s0, w0), ¬ ∀(s0, ¬ w0), ∃(s0, w0))\n  19.2(s0, w0)\n  df-ex(s0, w0)\n}","parent":["con2i","sylib","19.2","df-ex"],"children":[]},{"name":"bj-denot","content":"A weakening of ~ ax-6 and ~ ax6v . (Contributed by BJ, 4-Apr-2021.) (New usage is discouraged.)","origin":"thm bj-denot(setvar s0, setvar s1) {\n  |- wi(wceq(cv(s0), cv(s0)), wn(wal(s1, wn(wceq(cv(s1), cv(s0))))))\n  -| diffss(s0, s1)\n} = {\n  a1i(wceq(cv(s0), cv(s0)), wn(wal(s1, wn(wceq(cv(s1), cv(s0))))))\n  ax6v(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm bj-denot(setvar s0, setvar s1) {\n  ⊢ (s0 = s0 → ¬ ∀(s1, ¬ s1 = s0))\n  ⊣ d(s0, s1)\n} = {\n  a1i(s0 = s0, ¬ ∀(s1, ¬ s1 = s0))\n  ax6v(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["a1i","ax6v","diffss.ex"],"children":[]},{"name":"bj-eqs","content":"A lemma for substitutions, proved from Tarski's FOL. The version without DV(x,y) is true but requires ~ ax-13 . The disjoint variable condition DV(x,ph) is necessary for both directions: consider substituting ` x = z ` for ` ph ` . (Contributed by BJ, 25-May-2021.)","origin":"thm bj-eqs(setvar s0, setvar s1, wff w0) {\n  |- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w0)\n} = {\n  impbii(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  alrimiv(s0, w0, wi(wceq(cv(s0), cv(s1)), w0))\n  ax-1(w0, wceq(cv(s0), cv(s1)))\n  3syl(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0, wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0))\n  exim(s0, wceq(cv(s0), cv(s1)), w0)\n  ax-mp(wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0)), wex(s0, wceq(cv(s0), cv(s1))))\n  ax6ev(s0, s1)\n  pm2.27(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0))\n  ax5e(s0, w0)\n}","pretty":"thm bj-eqs(setvar s0, setvar s1, wff w0) {\n  ⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w0)\n} = {\n  impbii(w0, ∀(s0,(s0 = s1 → w0)))\n  alrimiv(s0, w0, (s0 = s1 → w0))\n  ax-1(w0, s0 = s1)\n  3syl(∀(s0,(s0 = s1 → w0)), w0, (∃(s0, s0 = s1)→ ∃(s0, w0)), ∃(s0, w0))\n  exim(s0, s0 = s1, w0)\n  ax-mp(((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0)), ∃(s0, s0 = s1))\n  ax6ev(s0, s1)\n  pm2.27(∃(s0, s0 = s1), ∃(s0, w0))\n  ax5e(s0, w0)\n}","parent":["impbii","alrimiv","ax-1","3syl","exim","ax-mp","ax6ev","pm2.27","ax5e"],"children":["bj-sb"]}]}