{"index":1186,"title":"1. Restricted Quantifiers","content":"","blocks":[{"name":"wl-ral","content":"Redefine the restricted universal quantifier context to avoid overloading and syntax check errors in mmj2. This operator is to be distinguished from ` A. x e. A ph ` with a similiar semantics, but using ` x ` as a formal parameter rather than assuming true elementhood.","origin":"prop wff wl-ral(setvar s0, class c0, wff w0) { ∀(s0 ∈ c0, w0) }","pretty":"","parent":[],"children":[]},{"name":"diff.wl-ral.s","content":"","origin":"axiom diff.wl-ral.s(setvar sBase, setvar s0, class c0, wff w0) {\n  |- diffsw(sBase, wl-ral(s0, c0, w0))\n  -| diffss(sBase, s0)\n  -| diffsc(sBase, c0)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.wl-ral.s(setvar sBase, setvar s0, class c0, wff w0) {\n  ⊢ d(sBase, ∀(s0 ∈ c0, w0))\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-ral.c","content":"","origin":"axiom diff.wl-ral.c(class cBase, setvar s0, class c0, wff w0) {\n  |- diffcw(cBase, wl-ral(s0, c0, w0))\n  -| diffsc(s0, cBase)\n  -| diffcc(cBase, c0)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.wl-ral.c(class cBase, setvar s0, class c0, wff w0) {\n  ⊢ d(cBase, ∀(s0 ∈ c0, w0))\n  ⊣ d(s0, cBase)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-ral.w","content":"","origin":"axiom diff.wl-ral.w(wff wBase, setvar s0, class c0, wff w0) {\n  |- diffww(wBase, wl-ral(s0, c0, w0))\n  -| diffsw(s0, wBase)\n  -| diffcw(c0, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.wl-ral.w(wff wBase, setvar s0, class c0, wff w0) {\n  ⊢ d(wBase, ∀(s0 ∈ c0, w0))\n  ⊣ d(s0, wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"wl-rex","content":"Redefine the restricted existential quantifier context to avoid overloading and syntax check errors in mmj2. This operator is to be distinguished from ` E. x e. A ph ` with a similiar semantics, but using ` x ` as a formal parameter rather than assuming true elementhood.","origin":"prop wff wl-rex(setvar s0, class c0, wff w0) { ∃(s0 ∈ c0, w0) }","pretty":"","parent":[],"children":[]},{"name":"diff.wl-rex.s","content":"","origin":"axiom diff.wl-rex.s(setvar sBase, setvar s0, class c0, wff w0) {\n  |- diffsw(sBase, wl-rex(s0, c0, w0))\n  -| diffss(sBase, s0)\n  -| diffsc(sBase, c0)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.wl-rex.s(setvar sBase, setvar s0, class c0, wff w0) {\n  ⊢ d(sBase, ∃(s0 ∈ c0, w0))\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-rex.c","content":"","origin":"axiom diff.wl-rex.c(class cBase, setvar s0, class c0, wff w0) {\n  |- diffcw(cBase, wl-rex(s0, c0, w0))\n  -| diffsc(s0, cBase)\n  -| diffcc(cBase, c0)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.wl-rex.c(class cBase, setvar s0, class c0, wff w0) {\n  ⊢ d(cBase, ∃(s0 ∈ c0, w0))\n  ⊣ d(s0, cBase)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-rex.w","content":"","origin":"axiom diff.wl-rex.w(wff wBase, setvar s0, class c0, wff w0) {\n  |- diffww(wBase, wl-rex(s0, c0, w0))\n  -| diffsw(s0, wBase)\n  -| diffcw(c0, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.wl-rex.w(wff wBase, setvar s0, class c0, wff w0) {\n  ⊢ d(wBase, ∃(s0 ∈ c0, w0))\n  ⊣ d(s0, wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"wl-rmo","content":"Redefine the restricted \"at most one\" quantifier context to avoid overloading and syntax check errors in mmj2. This operator is to be distinguished from ` E* x e. A ph ` with a similiar semantics, but using ` x ` as a formal parameter rather than assuming true elementhood.","origin":"prop wff wl-rmo(setvar s0, class c0, wff w0) { ∃!(s0 ∈ c0, w0) }","pretty":"","parent":[],"children":[]},{"name":"diff.wl-rmo.s","content":"","origin":"axiom diff.wl-rmo.s(setvar sBase, setvar s0, class c0, wff w0) {\n  |- diffsw(sBase, wl-rmo(s0, c0, w0))\n  -| diffss(sBase, s0)\n  -| diffsc(sBase, c0)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.wl-rmo.s(setvar sBase, setvar s0, class c0, wff w0) {\n  ⊢ d(sBase, ∃!(s0 ∈ c0, w0))\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-rmo.c","content":"","origin":"axiom diff.wl-rmo.c(class cBase, setvar s0, class c0, wff w0) {\n  |- diffcw(cBase, wl-rmo(s0, c0, w0))\n  -| diffsc(s0, cBase)\n  -| diffcc(cBase, c0)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.wl-rmo.c(class cBase, setvar s0, class c0, wff w0) {\n  ⊢ d(cBase, ∃!(s0 ∈ c0, w0))\n  ⊣ d(s0, cBase)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-rmo.w","content":"","origin":"axiom diff.wl-rmo.w(wff wBase, setvar s0, class c0, wff w0) {\n  |- diffww(wBase, wl-rmo(s0, c0, w0))\n  -| diffsw(s0, wBase)\n  -| diffcw(c0, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.wl-rmo.w(wff wBase, setvar s0, class c0, wff w0) {\n  ⊢ d(wBase, ∃!(s0 ∈ c0, w0))\n  ⊣ d(s0, wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"wl-reu","content":"Redefine the restricted existential uniqueness context to avoid overloading and syntax check errors in mmj2. This operator is to be distinguished from ` E! x e. A ph ` with a similiar semantics, but using ` x ` as a formal parameter rather than assuming true elementhood.","origin":"prop wff wl-reu(setvar s0, class c0, wff w0) { ∃*(s0 ∈ c0, w0) }","pretty":"","parent":[],"children":[]},{"name":"diff.wl-reu.s","content":"","origin":"axiom diff.wl-reu.s(setvar sBase, setvar s0, class c0, wff w0) {\n  |- diffsw(sBase, wl-reu(s0, c0, w0))\n  -| diffss(sBase, s0)\n  -| diffsc(sBase, c0)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.wl-reu.s(setvar sBase, setvar s0, class c0, wff w0) {\n  ⊢ d(sBase, ∃*(s0 ∈ c0, w0))\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-reu.c","content":"","origin":"axiom diff.wl-reu.c(class cBase, setvar s0, class c0, wff w0) {\n  |- diffcw(cBase, wl-reu(s0, c0, w0))\n  -| diffsc(s0, cBase)\n  -| diffcc(cBase, c0)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.wl-reu.c(class cBase, setvar s0, class c0, wff w0) {\n  ⊢ d(cBase, ∃*(s0 ∈ c0, w0))\n  ⊣ d(s0, cBase)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-reu.w","content":"","origin":"axiom diff.wl-reu.w(wff wBase, setvar s0, class c0, wff w0) {\n  |- diffww(wBase, wl-reu(s0, c0, w0))\n  -| diffsw(s0, wBase)\n  -| diffcw(c0, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.wl-reu.w(wff wBase, setvar s0, class c0, wff w0) {\n  ⊢ d(wBase, ∃*(s0 ∈ c0, w0))\n  ⊣ d(s0, wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"wl-crab","content":"Redefine extended class notation to include the restricted class abstraction (class builder).","origin":"prop class wl-crab(setvar s0, class c0, wff w0) { { s0 ∈ c0 | w0 } }","pretty":"","parent":[],"children":[]},{"name":"diff.wl-crab.s","content":"","origin":"axiom diff.wl-crab.s(setvar sBase, setvar s0, class c0, wff w0) {\n  |- diffsc(sBase, wl-crab(s0, c0, w0))\n  -| diffss(sBase, s0)\n  -| diffsc(sBase, c0)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.wl-crab.s(setvar sBase, setvar s0, class c0, wff w0) {\n  ⊢ d(sBase, { s0 ∈ c0 | w0 })\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-crab.c","content":"","origin":"axiom diff.wl-crab.c(class cBase, setvar s0, class c0, wff w0) {\n  |- diffcc(cBase, wl-crab(s0, c0, w0))\n  -| diffsc(s0, cBase)\n  -| diffcc(cBase, c0)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.wl-crab.c(class cBase, setvar s0, class c0, wff w0) {\n  ⊢ d(cBase, { s0 ∈ c0 | w0 })\n  ⊣ d(s0, cBase)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wl-crab.w","content":"","origin":"axiom diff.wl-crab.w(wff wBase, setvar s0, class c0, wff w0) {\n  |- diffcw(wl-crab(s0, c0, w0), wBase)\n  -| diffsw(s0, wBase)\n  -| diffcw(c0, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.wl-crab.w(wff wBase, setvar s0, class c0, wff w0) {\n  ⊢ d({ s0 ∈ c0 | w0 }, wBase)\n  ⊣ d(s0, wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"df-wl-ral","content":"The definiens of ~ df-ral , ` A. x ( x e. A -> ph ) ` is a short and simple expression, but has a severe downside: It allows for two substantially different interpretations. One, and this is the common case, wants this expression to denote that ` ph ` holds for all elements of ` A ` . To this end, ` x ` must not be free in ` A ` , though . Should instead ` A ` vary with ` x ` , then we rather focus on those ` x ` , that happen to be an element of their respective ` A ( x ) ` . Such interpretation is rare, but must nevertheless be considered in design and comments. In addition, many want definitions be designed to express just a single idea, not many. Our definition here introduces a dummy variable ` y ` , disjoint from all other variables, to describe an element in ` A ` . It lets ` x ` appear as a formal parameter with no connection to ` A ` , but occurences in ` ph ` are still honored. The resulting subexpression ` A. x ( x = y -> ph ) ` is ` [ y / x ] ph ` in disguise (see ~ wl-dfralsb ). If ` x ` is not free in ` A ` , a simplification is possible ( see ~ wl-dfralf , ~ wl-dfralv ). (Contributed by NM, 19-Aug-1993.) Isolate x from A, idea of Mario Carneiro. (Revised by Wolf Lammen, 21-May-2023.)","origin":"axiom df-wl-ral(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wl-ral(s0, c0, w0), wal(s1, wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n}","pretty":"axiom df-wl-ral(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∀(s0 ∈ c0, w0)↔ ∀(s1,(s1 ∈ c0 → ∀(s0,(s0 = s1 → w0)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n}","parent":[],"children":["wl-dfralsb","wl-dfralf","wl-dfralv","wl-dfrexex"]},{"name":"wl-dfralsb","content":"An alternate definition of restricted universal quantification ( ~ df-wl-ral ) using substitution. (Contributed by Wolf Lammen, 25-May-2023.)","origin":"thm wl-dfralsb(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wl-ral(s0, c0, w0), wal(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, w0))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n} = {\n  bitr4i(wl-ral(s0, c0, w0), wal(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, w0))), wal(s1, wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))))\n  df-wl-ral(s0, s1, c0, w0)\n  albii(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, w0)), wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  imbi2i(wcel(cv(s1), c0), wsb(s1, s0, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  sb6(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm wl-dfralsb(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∀(s0 ∈ c0, w0)↔ ∀(s1,(s1 ∈ c0 →[s1 / s0]w0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n} = {\n  bitr4i(∀(s0 ∈ c0, w0), ∀(s1,(s1 ∈ c0 →[s1 / s0]w0)), ∀(s1,(s1 ∈ c0 → ∀(s0,(s0 = s1 → w0)))))\n  df-wl-ral(s0, s1, c0, w0)\n  albii(s1, (s1 ∈ c0 →[s1 / s0]w0), (s1 ∈ c0 → ∀(s0,(s0 = s1 → w0))))\n  imbi2i(s1 ∈ c0, [s1 / s0]w0, ∀(s0,(s0 = s1 → w0)))\n  sb6(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["bitr4i","df-wl-ral","albii","imbi2i","sb6","diffss.ex"],"children":["wl-rgenw","wl-dfrexsb","wl-dfrmosb"]},{"name":"wl-dfralflem","content":"Lemma for ~ wl-dfralf and wl-dfralv . (Contributed by Wolf Lammen, 23-May-2023.)","origin":"thm wl-dfralflem(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wal(s0, wal(s1, wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0)))), wal(s1, wi(wcel(cv(s1), c0), w0)))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsw(s0, w0)\n} = {\n  bitri(wal(s0, wal(s1, wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0)))), wal(s1, wi(wcel(cv(s1), c0), w0)), wal(s1, wal(s0, wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0)))))\n  alcom(s0, s1, wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0)))\n  albii(s1, wal(s0, wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0))), wi(wcel(cv(s1), c0), w0))\n  bitri(wal(s0, wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0))), wi(wcel(cv(s1), c0), w0), wal(s0, wi(wceq(cv(s0), cv(s1)), wi(wcel(cv(s0), c0), w0))))\n  albii(s0, wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0)), wi(wceq(cv(s0), cv(s1)), wi(wcel(cv(s0), c0), w0)))\n  bitri(wi(wcel(cv(s0), c0), wi(wceq(cv(s1), cv(s0)), w0)), wi(wceq(cv(s0), cv(s1)), wi(wcel(cv(s0), c0), w0)), wi(wceq(cv(s1), cv(s0)), wi(wcel(cv(s0), c0), w0)))\n  bi2.04(wcel(cv(s0), c0), wceq(cv(s1), cv(s0)), w0)\n  imbi1i(wceq(cv(s1), cv(s0)), wi(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(s1)))\n  equcom(s1, s0)\n  equsalvw(s0, s1, wi(wcel(cv(s0), c0), w0), wi(wcel(cv(s1), c0), w0))\n  imbi1d(wceq(cv(s0), cv(s1)), wcel(cv(s0), c0), w0, wcel(cv(s1), c0))\n  eleq1w(s0, s1, c0)\n  diff.wi.s(s0, wcel(cv(s1), c0), w0)\n  diff.wcel.s(s0, cv(s1), c0)\n  diff.cv.s(s0, s1)\n}","pretty":"thm wl-dfralflem(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∀(s0, ∀(s1,(s0 ∈ c0 →(s1 = s0 → w0))))↔ ∀(s1,(s1 ∈ c0 → w0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, w0)\n} = {\n  bitri(∀(s0, ∀(s1,(s0 ∈ c0 →(s1 = s0 → w0)))), ∀(s1,(s1 ∈ c0 → w0)), ∀(s1, ∀(s0,(s0 ∈ c0 →(s1 = s0 → w0)))))\n  alcom(s0, s1, (s0 ∈ c0 →(s1 = s0 → w0)))\n  albii(s1, ∀(s0,(s0 ∈ c0 →(s1 = s0 → w0))), (s1 ∈ c0 → w0))\n  bitri(∀(s0,(s0 ∈ c0 →(s1 = s0 → w0))), (s1 ∈ c0 → w0), ∀(s0,(s0 = s1 →(s0 ∈ c0 → w0))))\n  albii(s0, (s0 ∈ c0 →(s1 = s0 → w0)), (s0 = s1 →(s0 ∈ c0 → w0)))\n  bitri((s0 ∈ c0 →(s1 = s0 → w0)), (s0 = s1 →(s0 ∈ c0 → w0)), (s1 = s0 →(s0 ∈ c0 → w0)))\n  bi2.04(s0 ∈ c0, s1 = s0, w0)\n  imbi1i(s1 = s0, (s0 ∈ c0 → w0), s0 = s1)\n  equcom(s1, s0)\n  equsalvw(s0, s1, (s0 ∈ c0 → w0), (s1 ∈ c0 → w0))\n  imbi1d(s0 = s1, s0 ∈ c0, w0, s1 ∈ c0)\n  eleq1w(s0, s1, c0)\n  diff.wi.s(s0, s1 ∈ c0, w0)\n  diff.wcel.s(s0, s1, c0)\n  diff.cv.s(s0, s1)\n}","parent":["bitri","alcom","albii","bi2.04","imbi1i","equcom","equsalvw","imbi1d","eleq1w","diff.wi.s","diff.wcel.s","diff.cv.s"],"children":["wl-dfralf","wl-dfralv"]},{"name":"wl-dfralf","content":"Restricted universal quantification ( ~ df-wl-ral ) allows a simplification, if we can assume all appearences of ` x ` in ` A ` are bounded. (Contributed by Wolf Lammen, 23-May-2023.)","origin":"thm wl-dfralf(setvar s0, class c0, wff w0) {\n  |- wi(wnfc(s0, c0), wb(wl-ral(s0, c0, w0), wal(s0, wi(wcel(cv(s0), c0), w0))))\n} = {\n  bicomd(wnfc(s0, c0), wl-ral(s0, c0, w0), wal(s0, wi(wcel(cv(s0), c0), w0)))\n  3bitr4g(wnfc(s0, c0), wal(s0, wi(wcel(cv(s0), c0), w0)), wl-ral(s0, c0, w0), wal(hs0, wal(s0, wi(wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0)))), wal(hs0, wi(wcel(cv(hs0), c0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n  albidv(hs0, wnfc(s0, c0), wal(s0, wi(wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0))), wi(wcel(cv(hs0), c0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))))\n  syl(wnfc(s0, c0), wb(wal(s0, wi(wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0))), wi(wcel(cv(hs0), c0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))), wnf(s0, wcel(cv(hs0), c0)))\n  nfcr(s0, hs0, c0)\n  19.21t(s0, wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0))\n  bicomi(wal(s0, wi(wcel(cv(s0), c0), w0)), wal(hs0, wal(s0, wi(wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0)))))\n  wl-dfralflem(hs0, s0, c0, w0)\n  df-wl-ral(s0, hs0, c0, w0)\n  diff.hs0.w(wnfc(s0, c0))\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","pretty":"thm wl-dfralf(setvar s0, class c0, wff w0) {\n  ⊢ (F/(s0, c0)→(∀(s0 ∈ c0, w0)↔ ∀(s0,(s0 ∈ c0 → w0))))\n} = {\n  bicomd(F/(s0, c0), ∀(s0 ∈ c0, w0), ∀(s0,(s0 ∈ c0 → w0)))\n  3bitr4g(F/(s0, c0), ∀(s0,(s0 ∈ c0 → w0)), ∀(s0 ∈ c0, w0), ∀(hs0, ∀(s0,(hs0 ∈ c0 →(s0 = hs0 → w0)))), ∀(hs0,(hs0 ∈ c0 → ∀(s0,(s0 = hs0 → w0)))))\n  albidv(hs0, F/(s0, c0), ∀(s0,(hs0 ∈ c0 →(s0 = hs0 → w0))), (hs0 ∈ c0 → ∀(s0,(s0 = hs0 → w0))))\n  syl(F/(s0, c0), (∀(s0,(hs0 ∈ c0 →(s0 = hs0 → w0)))↔(hs0 ∈ c0 → ∀(s0,(s0 = hs0 → w0)))), F/(s0, hs0 ∈ c0))\n  nfcr(s0, hs0, c0)\n  19.21t(s0, hs0 ∈ c0, (s0 = hs0 → w0))\n  bicomi(∀(s0,(s0 ∈ c0 → w0)), ∀(hs0, ∀(s0,(hs0 ∈ c0 →(s0 = hs0 → w0)))))\n  wl-dfralflem(hs0, s0, c0, w0)\n  df-wl-ral(s0, hs0, c0, w0)\n  diff.hs0.w(F/(s0, c0))\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","parent":["bicomd","3bitr4g","albidv","syl","nfcr","19.21t","bicomi","wl-dfralflem","df-wl-ral","diff.hs0.w","diffss.ex","diff.hs0.c","diff.hs0.s"],"children":["wl-dfralfi","wl-dfrexf","wl-dfrmof"]},{"name":"wl-dfralfi","content":"Restricted universal quantification ( ~ df-wl-ral ) allows allows a simplification, if we can assume all occurrences of ` x ` in ` A ` are bounded. (Contributed by Wolf Lammen, 26-May-2023.)","origin":"thm wl-dfralfi(setvar s0, class c0, wff w0) {\n  |- wb(wl-ral(s0, c0, w0), wal(s0, wi(wcel(cv(s0), c0), w0)))\n  -| wnfc(s0, c0)\n} = {\n  ax-mp(wb(wl-ral(s0, c0, w0), wal(s0, wi(wcel(cv(s0), c0), w0))), wnfc(s0, c0))\n  wl-dfralf(s0, c0, w0)\n}","pretty":"thm wl-dfralfi(setvar s0, class c0, wff w0) {\n  ⊢ (∀(s0 ∈ c0, w0)↔ ∀(s0,(s0 ∈ c0 → w0)))\n  ⊣ F/(s0, c0)\n} = {\n  ax-mp((∀(s0 ∈ c0, w0)↔ ∀(s0,(s0 ∈ c0 → w0))), F/(s0, c0))\n  wl-dfralf(s0, c0, w0)\n}","parent":["ax-mp","wl-dfralf"],"children":[]},{"name":"wl-dfralv","content":"Alternate definition of restricted universal quantification (df-wl-ral ) when ` x ` and ` A ` are disjoint. (Contributed by Wolf Lammen, 23-May-2023.)","origin":"thm wl-dfralv(setvar s0, class c0, wff w0) {\n  |- wb(wl-ral(s0, c0, w0), wal(s0, wi(wcel(cv(s0), c0), w0)))\n  -| diffsc(s0, c0)\n} = {\n  3bitr2i(wl-ral(s0, c0, w0), wal(s0, wi(wcel(cv(s0), c0), w0)), wal(hs0, wi(wcel(cv(hs0), c0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))), wal(hs0, wal(s0, wi(wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0)))))\n  df-wl-ral(s0, hs0, c0, w0)\n  albii(hs0, wal(s0, wi(wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0))), wi(wcel(cv(hs0), c0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))))\n  19.21v(s0, wcel(cv(hs0), c0), wi(wceq(cv(s0), cv(hs0)), w0))\n  wl-dfralflem(hs0, s0, c0, w0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.wcel.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm wl-dfralv(setvar s0, class c0, wff w0) {\n  ⊢ (∀(s0 ∈ c0, w0)↔ ∀(s0,(s0 ∈ c0 → w0)))\n  ⊣ d(s0, c0)\n} = {\n  3bitr2i(∀(s0 ∈ c0, w0), ∀(s0,(s0 ∈ c0 → w0)), ∀(hs0,(hs0 ∈ c0 → ∀(s0,(s0 = hs0 → w0)))), ∀(hs0, ∀(s0,(hs0 ∈ c0 →(s0 = hs0 → w0)))))\n  df-wl-ral(s0, hs0, c0, w0)\n  albii(hs0, ∀(s0,(hs0 ∈ c0 →(s0 = hs0 → w0))), (hs0 ∈ c0 → ∀(s0,(s0 = hs0 → w0))))\n  19.21v(s0, hs0 ∈ c0, (s0 = hs0 → w0))\n  wl-dfralflem(hs0, s0, c0, w0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.wcel.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["3bitr2i","df-wl-ral","albii","19.21v","wl-dfralflem","diff.hs0.c","diff.hs0.w","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["wl-rgen","wl-ralel","wl-dfrexv","wl-dfrmov"]},{"name":"wl-rgen","content":"Generalization rule for restricted quantification. (Contributed by Wolf Lammen, 10-Jun-2023.)","origin":"thm wl-rgen(setvar s0, class c0, wff w0) {\n  |- wl-ral(s0, c0, w0)\n  -| wi(wcel(cv(s0), c0), w0)\n  -| diffsc(s0, c0)\n} = {\n  mpgbir(s0, wl-ral(s0, c0, w0), wi(wcel(cv(s0), c0), w0))\n  wl-dfralv(s0, c0, w0)\n}","pretty":"thm wl-rgen(setvar s0, class c0, wff w0) {\n  ⊢ ∀(s0 ∈ c0, w0)\n  ⊣ (s0 ∈ c0 → w0)\n  ⊣ d(s0, c0)\n} = {\n  mpgbir(s0, ∀(s0 ∈ c0, w0), (s0 ∈ c0 → w0))\n  wl-dfralv(s0, c0, w0)\n}","parent":["mpgbir","wl-dfralv"],"children":[]},{"name":"wl-rgenw","content":"Generalization rule for restricted quantification. (Contributed by Wolf Lammen, 10-Jun-2023.)","origin":"thm wl-rgenw(setvar s0, class c0, wff w0) {\n  |- wl-ral(s0, c0, w0)\n  -| w0\n} = {\n  mpgbir(hs0, wl-ral(s0, c0, w0), wi(wcel(cv(hs0), c0), wsb(hs0, s0, w0)))\n  wl-dfralsb(s0, hs0, c0, w0)\n  a1i(wcel(cv(hs0), c0), wsb(hs0, s0, w0))\n  sbt(hs0, s0, w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n}","pretty":"thm wl-rgenw(setvar s0, class c0, wff w0) {\n  ⊢ ∀(s0 ∈ c0, w0)\n  ⊣ w0\n} = {\n  mpgbir(hs0, ∀(s0 ∈ c0, w0), (hs0 ∈ c0 →[hs0 / s0]w0))\n  wl-dfralsb(s0, hs0, c0, w0)\n  a1i(hs0 ∈ c0, [hs0 / s0]w0)\n  sbt(hs0, s0, w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n}","parent":["mpgbir","wl-dfralsb","a1i","sbt","diffss.ex","diff.hs0.s","diff.hs0.c","diff.hs0.w"],"children":["wl-rgen2w"]},{"name":"wl-rgen2w","content":"Generalization rule for restricted quantification. Note that ` x ` and ` y ` needn't be distinct. (Contributed by Wolf Lammen, 10-Jun-2023.)","origin":"thm wl-rgen2w(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wl-ral(s0, c0, wl-ral(s1, c1, w0))\n  -| w0\n} = {\n  wl-rgenw(s0, c0, wl-ral(s1, c1, w0))\n  wl-rgenw(s1, c1, w0)\n}","pretty":"thm wl-rgen2w(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ ∀(s0 ∈ c0, ∀(s1 ∈ c1, w0))\n  ⊣ w0\n} = {\n  wl-rgenw(s0, c0, ∀(s1 ∈ c1, w0))\n  wl-rgenw(s1, c1, w0)\n}","parent":["wl-rgenw"],"children":[]},{"name":"wl-ralel","content":"All elements of a class are elements of the class. (Contributed by Wolf Lammen, 10-Jun-2023.)","origin":"thm wl-ralel(setvar s0, class c0) {\n  |- wl-ral(s0, c0, wcel(cv(s0), c0))\n  -| diffsc(s0, c0)\n} = {\n  mpgbir(s0, wl-ral(s0, c0, wcel(cv(s0), c0)), wi(wcel(cv(s0), c0), wcel(cv(s0), c0)))\n  wl-dfralv(s0, c0, wcel(cv(s0), c0))\n  id(wcel(cv(s0), c0))\n}","pretty":"thm wl-ralel(setvar s0, class c0) {\n  ⊢ ∀(s0 ∈ c0, s0 ∈ c0)\n  ⊣ d(s0, c0)\n} = {\n  mpgbir(s0, ∀(s0 ∈ c0, s0 ∈ c0), (s0 ∈ c0 → s0 ∈ c0))\n  wl-dfralv(s0, c0, s0 ∈ c0)\n  id(s0 ∈ c0)\n}","parent":["mpgbir","wl-dfralv","id"],"children":[]},{"name":"df-wl-rex","content":"Restrict an existential quantifier to a class ` A ` . This version does not interpret elementhood verbatim as ` E. x e. A ph ` does. Assuming a real elementhood can lead to awkward consequences should the class ` A ` depend on ` x ` . Instead we base the definiton on ~ df-wl-ral , where this is ruled out. Other definitions are ~ wl-dfrexsb and ~ wl-dfrexex . If ` x ` is not free in ` A ` , the defining expression can be simplified (see ~ wl-dfrexf , ~ wl-dfrexv ). This definition lets ` x ` appear as a formal parameter with no connection to ` A ` , but occurences in ` ph ` are fully honored. (Contributed by NM, 30-Aug-1993.) Isolate x from A. (Revised by Wolf Lammen, 25-May-2023.)","origin":"axiom df-wl-rex(setvar s0, class c0, wff w0) {\n  |- wb(wl-rex(s0, c0, w0), wn(wl-ral(s0, c0, wn(w0))))\n}","pretty":"axiom df-wl-rex(setvar s0, class c0, wff w0) {\n  ⊢ (∃(s0 ∈ c0, w0)↔ ¬ ∀(s0 ∈ c0, ¬ w0))\n}","parent":[],"children":["wl-dfrexf","wl-dfrexv","wl-dfrexex","wl-dfrexsb"]},{"name":"wl-dfrexf","content":"Restricted existential quantification ( ~ df-wl-rex ) allows a simplification, if we can assume all occurrences of ` x ` in ` A ` are bounded. (Contributed by Wolf Lammen, 25-May-2023.)","origin":"thm wl-dfrexf(setvar s0, class c0, wff w0) {\n  |- wi(wnfc(s0, c0), wb(wl-rex(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0))))\n} = {\n  3bitr4g(wnfc(s0, c0), wl-rex(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0)), wn(wl-ral(s0, c0, wn(w0))), wn(wal(s0, wi(wcel(cv(s0), c0), wn(w0)))))\n  notbid(wnfc(s0, c0), wl-ral(s0, c0, wn(w0)), wal(s0, wi(wcel(cv(s0), c0), wn(w0))))\n  wl-dfralf(s0, c0, wn(w0))\n  df-wl-rex(s0, c0, w0)\n  con2bii(wex(s0, wa(wcel(cv(s0), c0), w0)), wal(s0, wi(wcel(cv(s0), c0), wn(w0))))\n  alinexa(s0, wcel(cv(s0), c0), w0)\n}","pretty":"thm wl-dfrexf(setvar s0, class c0, wff w0) {\n  ⊢ (F/(s0, c0)→(∃(s0 ∈ c0, w0)↔ ∃(s0,(s0 ∈ c0 ∧ w0))))\n} = {\n  3bitr4g(F/(s0, c0), ∃(s0 ∈ c0, w0), ∃(s0,(s0 ∈ c0 ∧ w0)), ¬ ∀(s0 ∈ c0, ¬ w0), ¬ ∀(s0,(s0 ∈ c0 → ¬ w0)))\n  notbid(F/(s0, c0), ∀(s0 ∈ c0, ¬ w0), ∀(s0,(s0 ∈ c0 → ¬ w0)))\n  wl-dfralf(s0, c0, ¬ w0)\n  df-wl-rex(s0, c0, w0)\n  con2bii(∃(s0,(s0 ∈ c0 ∧ w0)), ∀(s0,(s0 ∈ c0 → ¬ w0)))\n  alinexa(s0, s0 ∈ c0, w0)\n}","parent":["3bitr4g","notbid","wl-dfralf","df-wl-rex","con2bii","alinexa"],"children":["wl-dfrexfi","wl-dfreuf"]},{"name":"wl-dfrexfi","content":"Restricted universal quantification ( ~ df-wl-rex ) allows a simplification, if we can assume all occurrences of ` x ` in ` A ` are bounded. (Contributed by Wolf Lammen, 26-May-2023.)","origin":"thm wl-dfrexfi(setvar s0, class c0, wff w0) {\n  |- wb(wl-rex(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0)))\n  -| wnfc(s0, c0)\n} = {\n  ax-mp(wb(wl-rex(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0))), wnfc(s0, c0))\n  wl-dfrexf(s0, c0, w0)\n}","pretty":"thm wl-dfrexfi(setvar s0, class c0, wff w0) {\n  ⊢ (∃(s0 ∈ c0, w0)↔ ∃(s0,(s0 ∈ c0 ∧ w0)))\n  ⊣ F/(s0, c0)\n} = {\n  ax-mp((∃(s0 ∈ c0, w0)↔ ∃(s0,(s0 ∈ c0 ∧ w0))), F/(s0, c0))\n  wl-dfrexf(s0, c0, w0)\n}","parent":["ax-mp","wl-dfrexf"],"children":[]},{"name":"wl-dfrexv","content":"Alternate definition of restricted universal quantification ( ~ df-wl-rex ) when ` x ` and ` A ` are disjoint. (Contributed by Wolf Lammen, 25-May-2023.)","origin":"thm wl-dfrexv(setvar s0, class c0, wff w0) {\n  |- wb(wl-rex(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0)))\n  -| diffsc(s0, c0)\n} = {\n  3bitr4i(wl-rex(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0)), wn(wl-ral(s0, c0, wn(w0))), wn(wal(s0, wi(wcel(cv(s0), c0), wn(w0)))))\n  notbii(wl-ral(s0, c0, wn(w0)), wal(s0, wi(wcel(cv(s0), c0), wn(w0))))\n  wl-dfralv(s0, c0, wn(w0))\n  df-wl-rex(s0, c0, w0)\n  con2bii(wex(s0, wa(wcel(cv(s0), c0), w0)), wal(s0, wi(wcel(cv(s0), c0), wn(w0))))\n  alinexa(s0, wcel(cv(s0), c0), w0)\n}","pretty":"thm wl-dfrexv(setvar s0, class c0, wff w0) {\n  ⊢ (∃(s0 ∈ c0, w0)↔ ∃(s0,(s0 ∈ c0 ∧ w0)))\n  ⊣ d(s0, c0)\n} = {\n  3bitr4i(∃(s0 ∈ c0, w0), ∃(s0,(s0 ∈ c0 ∧ w0)), ¬ ∀(s0 ∈ c0, ¬ w0), ¬ ∀(s0,(s0 ∈ c0 → ¬ w0)))\n  notbii(∀(s0 ∈ c0, ¬ w0), ∀(s0,(s0 ∈ c0 → ¬ w0)))\n  wl-dfralv(s0, c0, ¬ w0)\n  df-wl-rex(s0, c0, w0)\n  con2bii(∃(s0,(s0 ∈ c0 ∧ w0)), ∀(s0,(s0 ∈ c0 → ¬ w0)))\n  alinexa(s0, s0 ∈ c0, w0)\n}","parent":["3bitr4i","notbii","wl-dfralv","df-wl-rex","con2bii","alinexa"],"children":["wl-dfreuv"]},{"name":"wl-dfrexex","content":"Alternate definition of the restricted existential quantification ( ~ df-wl-rex ), according to the pattern given in ~ df-wl-ral . (Contributed by Wolf Lammen, 25-May-2023.)","origin":"thm wl-dfrexex(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wl-rex(s0, c0, w0), wex(s1, wa(wcel(cv(s1), c0), wex(s0, wa(wceq(cv(s0), cv(s1)), w0)))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n} = {\n  3bitr4i(wl-rex(s0, c0, w0), wex(s1, wa(wcel(cv(s1), c0), wex(s0, wa(wceq(cv(s0), cv(s1)), w0)))), wn(wl-ral(s0, c0, wn(w0))), wn(wal(s1, wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0)))))))\n  notbii(wl-ral(s0, c0, wn(w0)), wal(s1, wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0))))))\n  df-wl-ral(s0, s1, c0, wn(w0))\n  df-wl-rex(s0, c0, w0)\n  con2bii(wex(s1, wa(wcel(cv(s1), c0), wex(s0, wa(wceq(cv(s0), cv(s1)), w0)))), wal(s1, wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0))))))\n  bitri(wal(s1, wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0))))), wn(wex(s1, wa(wcel(cv(s1), c0), wex(s0, wa(wceq(cv(s0), cv(s1)), w0))))), wal(s1, wi(wcel(cv(s1), c0), wn(wex(s0, wa(wceq(cv(s0), cv(s1)), w0))))))\n  albii(s1, wi(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0)))), wi(wcel(cv(s1), c0), wn(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)))))\n  imbi2i(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0))), wn(wex(s0, wa(wceq(cv(s0), cv(s1)), w0))))\n  alinexa(s0, wceq(cv(s0), cv(s1)), w0)\n  alinexa(s1, wcel(cv(s1), c0), wex(s0, wa(wceq(cv(s0), cv(s1)), w0)))\n  diff.wn.s(s1, w0)\n}","pretty":"thm wl-dfrexex(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∃(s0 ∈ c0, w0)↔ ∃(s1,(s1 ∈ c0 ∧ ∃(s0,(s0 = s1 ∧ w0)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n} = {\n  3bitr4i(∃(s0 ∈ c0, w0), ∃(s1,(s1 ∈ c0 ∧ ∃(s0,(s0 = s1 ∧ w0)))), ¬ ∀(s0 ∈ c0, ¬ w0), ¬ ∀(s1,(s1 ∈ c0 → ∀(s0,(s0 = s1 → ¬ w0)))))\n  notbii(∀(s0 ∈ c0, ¬ w0), ∀(s1,(s1 ∈ c0 → ∀(s0,(s0 = s1 → ¬ w0)))))\n  df-wl-ral(s0, s1, c0, ¬ w0)\n  df-wl-rex(s0, c0, w0)\n  con2bii(∃(s1,(s1 ∈ c0 ∧ ∃(s0,(s0 = s1 ∧ w0)))), ∀(s1,(s1 ∈ c0 → ∀(s0,(s0 = s1 → ¬ w0)))))\n  bitri(∀(s1,(s1 ∈ c0 → ∀(s0,(s0 = s1 → ¬ w0)))), ¬ ∃(s1,(s1 ∈ c0 ∧ ∃(s0,(s0 = s1 ∧ w0)))), ∀(s1,(s1 ∈ c0 → ¬ ∃(s0,(s0 = s1 ∧ w0)))))\n  albii(s1, (s1 ∈ c0 → ∀(s0,(s0 = s1 → ¬ w0))), (s1 ∈ c0 → ¬ ∃(s0,(s0 = s1 ∧ w0))))\n  imbi2i(s1 ∈ c0, ∀(s0,(s0 = s1 → ¬ w0)), ¬ ∃(s0,(s0 = s1 ∧ w0)))\n  alinexa(s0, s0 = s1, w0)\n  alinexa(s1, s1 ∈ c0, ∃(s0,(s0 = s1 ∧ w0)))\n  diff.wn.s(s1, w0)\n}","parent":["3bitr4i","notbii","df-wl-ral","df-wl-rex","con2bii","bitri","albii","imbi2i","alinexa","diff.wn.s"],"children":[]},{"name":"wl-dfrexsb","content":"An alternate definition of restricted existential quantification ( ~ df-wl-rex ) using substitution. (Contributed by Wolf Lammen, 25-May-2023.)","origin":"thm wl-dfrexsb(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wl-rex(s0, c0, w0), wex(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n} = {\n  bitr4i(wl-rex(s0, c0, w0), wex(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))), wn(wal(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, wn(w0))))))\n  xchbinx(wl-rex(s0, c0, w0), wal(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, wn(w0)))), wl-ral(s0, c0, wn(w0)))\n  df-wl-rex(s0, c0, w0)\n  wl-dfralsb(s0, s1, c0, wn(w0))\n  con2bii(wex(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))), wal(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, wn(w0)))))\n  3bitri(wal(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, wn(w0)))), wn(wex(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0)))), wal(s1, wi(wcel(cv(s1), c0), wn(wsb(s1, s0, w0)))), wal(s1, wn(wa(wcel(cv(s1), c0), wsb(s1, s0, w0)))))\n  albii(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, wn(w0))), wi(wcel(cv(s1), c0), wn(wsb(s1, s0, w0))))\n  imbi2i(wcel(cv(s1), c0), wsb(s1, s0, wn(w0)), wn(wsb(s1, s0, w0)))\n  sbn(s1, s0, w0)\n  imnang(s1, wcel(cv(s1), c0), wsb(s1, s0, w0))\n  alnex(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0)))\n  diff.wn.s(s1, w0)\n}","pretty":"thm wl-dfrexsb(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∃(s0 ∈ c0, w0)↔ ∃(s1,(s1 ∈ c0 ∧[s1 / s0]w0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n} = {\n  bitr4i(∃(s0 ∈ c0, w0), ∃(s1,(s1 ∈ c0 ∧[s1 / s0]w0)), ¬ ∀(s1,(s1 ∈ c0 →[s1 / s0]¬ w0)))\n  xchbinx(∃(s0 ∈ c0, w0), ∀(s1,(s1 ∈ c0 →[s1 / s0]¬ w0)), ∀(s0 ∈ c0, ¬ w0))\n  df-wl-rex(s0, c0, w0)\n  wl-dfralsb(s0, s1, c0, ¬ w0)\n  con2bii(∃(s1,(s1 ∈ c0 ∧[s1 / s0]w0)), ∀(s1,(s1 ∈ c0 →[s1 / s0]¬ w0)))\n  3bitri(∀(s1,(s1 ∈ c0 →[s1 / s0]¬ w0)), ¬ ∃(s1,(s1 ∈ c0 ∧[s1 / s0]w0)), ∀(s1,(s1 ∈ c0 → ¬[s1 / s0]w0)), ∀(s1, ¬(s1 ∈ c0 ∧[s1 / s0]w0)))\n  albii(s1, (s1 ∈ c0 →[s1 / s0]¬ w0), (s1 ∈ c0 → ¬[s1 / s0]w0))\n  imbi2i(s1 ∈ c0, [s1 / s0]¬ w0, ¬[s1 / s0]w0)\n  sbn(s1, s0, w0)\n  imnang(s1, s1 ∈ c0, [s1 / s0]w0)\n  alnex(s1, (s1 ∈ c0 ∧[s1 / s0]w0))\n  diff.wn.s(s1, w0)\n}","parent":["bitr4i","xchbinx","df-wl-rex","wl-dfralsb","con2bii","3bitri","albii","imbi2i","sbn","imnang","alnex","diff.wn.s"],"children":["wl-dfreusb"]},{"name":"df-wl-rmo","content":"Restrict \"at most one\" to a given class ` A ` . This version does not interpret elementhood verbatim like ` E* x e. A ph ` does. Assuming a real elementhood can lead to awkward consequences should the class ` A ` depend on ` x ` . Instead we base the definiton on ~ df-wl-ral , where this is already ruled out. This definition lets ` x ` appear as a formal parameter with no connection to ` A ` , but occurences in ` ph ` are fully honored. Alternate definitions are given in ~ wl-dfrmosb and, if ` x ` is not free in ` A ` , ~ wl-dfrmov and ~ wl-dfrmof . (Contributed by NM, 30-Aug-1993.) Isolate x from A. (Revised by Wolf Lammen, 26-May-2023.)","origin":"axiom df-wl-rmo(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wl-rmo(s0, c0, w0), wex(s1, wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n}","pretty":"axiom df-wl-rmo(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, w0)↔ ∃(s1, ∀(s0 ∈ c0,(w0 → s0 = s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n}","parent":[],"children":["wl-dfrmosb","wl-dfrmov","wl-dfrmof"]},{"name":"wl-dfrmosb","content":"An alternate definition of restricted \"at most one\" ( ~ df-wl-rmo ) using substitution. (Contributed by Wolf Lammen, 27-May-2023.)","origin":"thm wl-dfrmosb(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wl-rmo(s0, c0, w0), wmo(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n} = {\n  3bitr4i(wl-rmo(s0, c0, w0), wmo(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))), wex(hs0, wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0))))), wex(hs0, wal(s1, wi(wa(wcel(cv(s1), c0), wsb(s1, s0, w0)), wceq(cv(s1), cv(hs0))))))\n  exbii(hs0, wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0)))), wal(s1, wi(wa(wcel(cv(s1), c0), wsb(s1, s0, w0)), wceq(cv(s1), cv(hs0)))))\n  bitri(wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0)))), wal(s1, wi(wa(wcel(cv(s1), c0), wsb(s1, s0, w0)), wceq(cv(s1), cv(hs0)))), wal(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, wi(w0, wceq(cv(s0), cv(hs0)))))))\n  wl-dfralsb(s0, s1, c0, wi(w0, wceq(cv(s0), cv(hs0))))\n  albii(s1, wi(wcel(cv(s1), c0), wsb(s1, s0, wi(w0, wceq(cv(s0), cv(hs0))))), wi(wa(wcel(cv(s1), c0), wsb(s1, s0, w0)), wceq(cv(s1), cv(hs0))))\n  bitr4i(wi(wcel(cv(s1), c0), wsb(s1, s0, wi(w0, wceq(cv(s0), cv(hs0))))), wi(wa(wcel(cv(s1), c0), wsb(s1, s0, w0)), wceq(cv(s1), cv(hs0))), wi(wcel(cv(s1), c0), wi(wsb(s1, s0, w0), wceq(cv(s1), cv(hs0)))))\n  imbi2i(wcel(cv(s1), c0), wsb(s1, s0, wi(w0, wceq(cv(s0), cv(hs0)))), wi(wsb(s1, s0, w0), wceq(cv(s1), cv(hs0))))\n  bitri(wsb(s1, s0, wi(w0, wceq(cv(s0), cv(hs0)))), wi(wsb(s1, s0, w0), wceq(cv(s1), cv(hs0))), wi(wsb(s1, s0, w0), wsb(s1, s0, wceq(cv(s0), cv(hs0)))))\n  sbim(s1, s0, w0, wceq(cv(s0), cv(hs0)))\n  imbi2i(wsb(s1, s0, w0), wsb(s1, s0, wceq(cv(s0), cv(hs0))), wceq(cv(s1), cv(hs0)))\n  equsb3(s1, s0, hs0)\n  impexp(wcel(cv(s1), c0), wsb(s1, s0, w0), wceq(cv(s1), cv(hs0)))\n  df-wl-rmo(s0, hs0, c0, w0)\n  df-mo(s1, hs0, wa(wcel(cv(s1), c0), wsb(s1, s0, w0)))\n  diff.wi.s(s1, w0, wceq(cv(s0), cv(hs0)))\n  diff.wceq.s(s1, cv(s0), cv(hs0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(wa(wcel(cv(s1), c0), wsb(s1, s0, w0)))\n}","pretty":"thm wl-dfrmosb(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, w0)↔ ∃*(s1,(s1 ∈ c0 ∧[s1 / s0]w0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n} = {\n  3bitr4i(∃!(s0 ∈ c0, w0), ∃*(s1,(s1 ∈ c0 ∧[s1 / s0]w0)), ∃(hs0, ∀(s0 ∈ c0,(w0 → s0 = hs0))), ∃(hs0, ∀(s1,((s1 ∈ c0 ∧[s1 / s0]w0)→ s1 = hs0))))\n  exbii(hs0, ∀(s0 ∈ c0,(w0 → s0 = hs0)), ∀(s1,((s1 ∈ c0 ∧[s1 / s0]w0)→ s1 = hs0)))\n  bitri(∀(s0 ∈ c0,(w0 → s0 = hs0)), ∀(s1,((s1 ∈ c0 ∧[s1 / s0]w0)→ s1 = hs0)), ∀(s1,(s1 ∈ c0 →[s1 / s0](w0 → s0 = hs0))))\n  wl-dfralsb(s0, s1, c0, (w0 → s0 = hs0))\n  albii(s1, (s1 ∈ c0 →[s1 / s0](w0 → s0 = hs0)), ((s1 ∈ c0 ∧[s1 / s0]w0)→ s1 = hs0))\n  bitr4i((s1 ∈ c0 →[s1 / s0](w0 → s0 = hs0)), ((s1 ∈ c0 ∧[s1 / s0]w0)→ s1 = hs0), (s1 ∈ c0 →([s1 / s0]w0 → s1 = hs0)))\n  imbi2i(s1 ∈ c0, [s1 / s0](w0 → s0 = hs0), ([s1 / s0]w0 → s1 = hs0))\n  bitri([s1 / s0](w0 → s0 = hs0), ([s1 / s0]w0 → s1 = hs0), ([s1 / s0]w0 →[s1 / s0]s0 = hs0))\n  sbim(s1, s0, w0, s0 = hs0)\n  imbi2i([s1 / s0]w0, [s1 / s0]s0 = hs0, s1 = hs0)\n  equsb3(s1, s0, hs0)\n  impexp(s1 ∈ c0, [s1 / s0]w0, s1 = hs0)\n  df-wl-rmo(s0, hs0, c0, w0)\n  df-mo(s1, hs0, (s1 ∈ c0 ∧[s1 / s0]w0))\n  diff.wi.s(s1, w0, s0 = hs0)\n  diff.wceq.s(s1, s0, hs0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w((s1 ∈ c0 ∧[s1 / s0]w0))\n}","parent":["3bitr4i","exbii","bitri","wl-dfralsb","albii","bitr4i","imbi2i","sbim","equsb3","impexp","df-wl-rmo","df-mo","diff.wi.s","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.hs0.c","diff.hs0.w"],"children":["wl-dfreusb"]},{"name":"wl-dfrmov","content":"Alternate definition of restricted \"at most one\" ( ~ df-wl-rmo ) when ` x ` and ` A ` are disjoint. (Contributed by Wolf Lammen, 28-May-2023.)","origin":"thm wl-dfrmov(setvar s0, class c0, wff w0) {\n  |- wb(wl-rmo(s0, c0, w0), wmo(s0, wa(wcel(cv(s0), c0), w0)))\n  -| diffsc(s0, c0)\n} = {\n  3bitr4i(wl-rmo(s0, c0, w0), wmo(s0, wa(wcel(cv(s0), c0), w0)), wex(hs0, wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0))))), wex(hs0, wal(s0, wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0))))))\n  exbii(hs0, wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0)))), wal(s0, wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0)))))\n  bitr4i(wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0)))), wal(s0, wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0)))), wal(s0, wi(wcel(cv(s0), c0), wi(w0, wceq(cv(s0), cv(hs0))))))\n  wl-dfralv(s0, c0, wi(w0, wceq(cv(s0), cv(hs0))))\n  albii(s0, wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0))), wi(wcel(cv(s0), c0), wi(w0, wceq(cv(s0), cv(hs0)))))\n  impexp(wcel(cv(s0), c0), w0, wceq(cv(s0), cv(hs0)))\n  df-wl-rmo(s0, hs0, c0, w0)\n  df-mo(s0, hs0, wa(wcel(cv(s0), c0), w0))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs0.w(wa(wcel(cv(s0), c0), w0))\n}","pretty":"thm wl-dfrmov(setvar s0, class c0, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, w0)↔ ∃*(s0,(s0 ∈ c0 ∧ w0)))\n  ⊣ d(s0, c0)\n} = {\n  3bitr4i(∃!(s0 ∈ c0, w0), ∃*(s0,(s0 ∈ c0 ∧ w0)), ∃(hs0, ∀(s0 ∈ c0,(w0 → s0 = hs0))), ∃(hs0, ∀(s0,((s0 ∈ c0 ∧ w0)→ s0 = hs0))))\n  exbii(hs0, ∀(s0 ∈ c0,(w0 → s0 = hs0)), ∀(s0,((s0 ∈ c0 ∧ w0)→ s0 = hs0)))\n  bitr4i(∀(s0 ∈ c0,(w0 → s0 = hs0)), ∀(s0,((s0 ∈ c0 ∧ w0)→ s0 = hs0)), ∀(s0,(s0 ∈ c0 →(w0 → s0 = hs0))))\n  wl-dfralv(s0, c0, (w0 → s0 = hs0))\n  albii(s0, ((s0 ∈ c0 ∧ w0)→ s0 = hs0), (s0 ∈ c0 →(w0 → s0 = hs0)))\n  impexp(s0 ∈ c0, w0, s0 = hs0)\n  df-wl-rmo(s0, hs0, c0, w0)\n  df-mo(s0, hs0, (s0 ∈ c0 ∧ w0))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs0.w((s0 ∈ c0 ∧ w0))\n}","parent":["3bitr4i","exbii","bitr4i","wl-dfralv","albii","impexp","df-wl-rmo","df-mo","diffss.ex","diff.hs0.s","diff.hs0.c","diff.hs0.w"],"children":["wl-dfreuv"]},{"name":"wl-dfrmof","content":"Restricted \"at most one\" ( ~ df-wl-rmo ) allows a simplification, if we can assume all occurrences of ` x ` in ` A ` are bounded. (Contributed by Wolf Lammen, 28-May-2023.)","origin":"thm wl-dfrmof(setvar s0, class c0, wff w0) {\n  |- wi(wnfc(s0, c0), wb(wl-rmo(s0, c0, w0), wmo(s0, wa(wcel(cv(s0), c0), w0))))\n} = {\n  3bitr4g(wnfc(s0, c0), wl-rmo(s0, c0, w0), wmo(s0, wa(wcel(cv(s0), c0), w0)), wex(hs0, wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0))))), wex(hs0, wal(s0, wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0))))))\n  exbidv(hs0, wnfc(s0, c0), wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0)))), wal(s0, wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0)))))\n  bitr4d(wnfc(s0, c0), wl-ral(s0, c0, wi(w0, wceq(cv(s0), cv(hs0)))), wal(s0, wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0)))), wal(s0, wi(wcel(cv(s0), c0), wi(w0, wceq(cv(s0), cv(hs0))))))\n  wl-dfralf(s0, c0, wi(w0, wceq(cv(s0), cv(hs0))))\n  albid(s0, wnfc(s0, c0), wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0))), wi(wcel(cv(s0), c0), wi(w0, wceq(cv(s0), cv(hs0)))))\n  nfnfc1(s0, c0)\n  a1i(wnfc(s0, c0), wb(wi(wa(wcel(cv(s0), c0), w0), wceq(cv(s0), cv(hs0))), wi(wcel(cv(s0), c0), wi(w0, wceq(cv(s0), cv(hs0))))))\n  impexp(wcel(cv(s0), c0), w0, wceq(cv(s0), cv(hs0)))\n  df-wl-rmo(s0, hs0, c0, w0)\n  df-mo(s0, hs0, wa(wcel(cv(s0), c0), w0))\n  diff.hs0.w(wnfc(s0, c0))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs0.w(wa(wcel(cv(s0), c0), w0))\n}","pretty":"thm wl-dfrmof(setvar s0, class c0, wff w0) {\n  ⊢ (F/(s0, c0)→(∃!(s0 ∈ c0, w0)↔ ∃*(s0,(s0 ∈ c0 ∧ w0))))\n} = {\n  3bitr4g(F/(s0, c0), ∃!(s0 ∈ c0, w0), ∃*(s0,(s0 ∈ c0 ∧ w0)), ∃(hs0, ∀(s0 ∈ c0,(w0 → s0 = hs0))), ∃(hs0, ∀(s0,((s0 ∈ c0 ∧ w0)→ s0 = hs0))))\n  exbidv(hs0, F/(s0, c0), ∀(s0 ∈ c0,(w0 → s0 = hs0)), ∀(s0,((s0 ∈ c0 ∧ w0)→ s0 = hs0)))\n  bitr4d(F/(s0, c0), ∀(s0 ∈ c0,(w0 → s0 = hs0)), ∀(s0,((s0 ∈ c0 ∧ w0)→ s0 = hs0)), ∀(s0,(s0 ∈ c0 →(w0 → s0 = hs0))))\n  wl-dfralf(s0, c0, (w0 → s0 = hs0))\n  albid(s0, F/(s0, c0), ((s0 ∈ c0 ∧ w0)→ s0 = hs0), (s0 ∈ c0 →(w0 → s0 = hs0)))\n  nfnfc1(s0, c0)\n  a1i(F/(s0, c0), (((s0 ∈ c0 ∧ w0)→ s0 = hs0)↔(s0 ∈ c0 →(w0 → s0 = hs0))))\n  impexp(s0 ∈ c0, w0, s0 = hs0)\n  df-wl-rmo(s0, hs0, c0, w0)\n  df-mo(s0, hs0, (s0 ∈ c0 ∧ w0))\n  diff.hs0.w(F/(s0, c0))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs0.w((s0 ∈ c0 ∧ w0))\n}","parent":["3bitr4g","exbidv","bitr4d","wl-dfralf","albid","nfnfc1","a1i","impexp","df-wl-rmo","df-mo","diff.hs0.w","diffss.ex","diff.hs0.s","diff.hs0.c"],"children":["wl-dfreuf"]},{"name":"df-wl-reu","content":"Restrict existential uniqueness to a given class ` A ` . This version does not interpret elementhood verbatim like ` E! x e. A ph ` does. Assuming a real elementhood can lead to awkward consequences should the class ` A ` depend on ` x ` . Instead we base the definiton on ~ df-wl-ral , where this is ruled out. This definition lets ` x ` appear as a formal parameter with no connection to ` A ` , but occurences in ` ph ` are fully honored. Alternate definitions are given in ~ wl-dfreusb and, if ` x ` is not free in ` A ` , ~ wl-dfreuv and ~ wl-dfreuf . (Contributed by NM, 30-Aug-1993.) Isolate x from A. (Revised by Wolf Lammen, 28-May-2023.)","origin":"axiom df-wl-reu(setvar s0, class c0, wff w0) {\n  |- wb(wl-reu(s0, c0, w0), wa(wl-rex(s0, c0, w0), wl-rmo(s0, c0, w0)))\n}","pretty":"axiom df-wl-reu(setvar s0, class c0, wff w0) {\n  ⊢ (∃*(s0 ∈ c0, w0)↔(∃(s0 ∈ c0, w0)∧ ∃!(s0 ∈ c0, w0)))\n}","parent":[],"children":["wl-dfreusb","wl-dfreuv","wl-dfreuf"]},{"name":"wl-dfreusb","content":"An alternate definition of restricted existential uniqueness ( ~ df-wl-reu ) using substitution. (Contributed by Wolf Lammen, 28-May-2023.)","origin":"thm wl-dfreusb(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wl-reu(s0, c0, w0), weu(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n} = {\n  3bitr4i(wl-reu(s0, c0, w0), weu(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))), wa(wl-rex(s0, c0, w0), wl-rmo(s0, c0, w0)), wa(wex(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))), wmo(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0)))))\n  anbi12i(wl-rex(s0, c0, w0), wl-rmo(s0, c0, w0), wex(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))), wmo(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))))\n  wl-dfrexsb(s0, s1, c0, w0)\n  wl-dfrmosb(s0, s1, c0, w0)\n  df-wl-reu(s0, c0, w0)\n  df-eu(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0)))\n}","pretty":"thm wl-dfreusb(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (∃*(s0 ∈ c0, w0)↔ ∃!(s1,(s1 ∈ c0 ∧[s1 / s0]w0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n} = {\n  3bitr4i(∃*(s0 ∈ c0, w0), ∃!(s1,(s1 ∈ c0 ∧[s1 / s0]w0)), (∃(s0 ∈ c0, w0)∧ ∃!(s0 ∈ c0, w0)), (∃(s1,(s1 ∈ c0 ∧[s1 / s0]w0))∧ ∃*(s1,(s1 ∈ c0 ∧[s1 / s0]w0))))\n  anbi12i(∃(s0 ∈ c0, w0), ∃!(s0 ∈ c0, w0), ∃(s1,(s1 ∈ c0 ∧[s1 / s0]w0)), ∃*(s1,(s1 ∈ c0 ∧[s1 / s0]w0)))\n  wl-dfrexsb(s0, s1, c0, w0)\n  wl-dfrmosb(s0, s1, c0, w0)\n  df-wl-reu(s0, c0, w0)\n  df-eu(s1, (s1 ∈ c0 ∧[s1 / s0]w0))\n}","parent":["3bitr4i","anbi12i","wl-dfrexsb","wl-dfrmosb","df-wl-reu","df-eu"],"children":[]},{"name":"wl-dfreuv","content":"Alternate definition of restricted existential uniqueness ( ~ df-wl-reu ) when ` x ` and ` A ` are disjoint. (Contributed by Wolf Lammen, 28-May-2023.)","origin":"thm wl-dfreuv(setvar s0, class c0, wff w0) {\n  |- wb(wl-reu(s0, c0, w0), weu(s0, wa(wcel(cv(s0), c0), w0)))\n  -| diffsc(s0, c0)\n} = {\n  3bitr4i(wl-reu(s0, c0, w0), weu(s0, wa(wcel(cv(s0), c0), w0)), wa(wl-rex(s0, c0, w0), wl-rmo(s0, c0, w0)), wa(wex(s0, wa(wcel(cv(s0), c0), w0)), wmo(s0, wa(wcel(cv(s0), c0), w0))))\n  anbi12i(wl-rex(s0, c0, w0), wl-rmo(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0)), wmo(s0, wa(wcel(cv(s0), c0), w0)))\n  wl-dfrexv(s0, c0, w0)\n  wl-dfrmov(s0, c0, w0)\n  df-wl-reu(s0, c0, w0)\n  df-eu(s0, wa(wcel(cv(s0), c0), w0))\n}","pretty":"thm wl-dfreuv(setvar s0, class c0, wff w0) {\n  ⊢ (∃*(s0 ∈ c0, w0)↔ ∃!(s0,(s0 ∈ c0 ∧ w0)))\n  ⊣ d(s0, c0)\n} = {\n  3bitr4i(∃*(s0 ∈ c0, w0), ∃!(s0,(s0 ∈ c0 ∧ w0)), (∃(s0 ∈ c0, w0)∧ ∃!(s0 ∈ c0, w0)), (∃(s0,(s0 ∈ c0 ∧ w0))∧ ∃*(s0,(s0 ∈ c0 ∧ w0))))\n  anbi12i(∃(s0 ∈ c0, w0), ∃!(s0 ∈ c0, w0), ∃(s0,(s0 ∈ c0 ∧ w0)), ∃*(s0,(s0 ∈ c0 ∧ w0)))\n  wl-dfrexv(s0, c0, w0)\n  wl-dfrmov(s0, c0, w0)\n  df-wl-reu(s0, c0, w0)\n  df-eu(s0, (s0 ∈ c0 ∧ w0))\n}","parent":["3bitr4i","anbi12i","wl-dfrexv","wl-dfrmov","df-wl-reu","df-eu"],"children":[]},{"name":"wl-dfreuf","content":"Restricted existential uniqueness ( ~ df-wl-reu ) allows a simplification, if we can assume all occurrences of ` x ` in ` A ` are bounded. (Contributed by Wolf Lammen, 28-May-2023.)","origin":"thm wl-dfreuf(setvar s0, class c0, wff w0) {\n  |- wi(wnfc(s0, c0), wb(wl-reu(s0, c0, w0), weu(s0, wa(wcel(cv(s0), c0), w0))))\n} = {\n  3bitr4g(wnfc(s0, c0), wl-reu(s0, c0, w0), weu(s0, wa(wcel(cv(s0), c0), w0)), wa(wl-rex(s0, c0, w0), wl-rmo(s0, c0, w0)), wa(wex(s0, wa(wcel(cv(s0), c0), w0)), wmo(s0, wa(wcel(cv(s0), c0), w0))))\n  anbi12d(wnfc(s0, c0), wl-rex(s0, c0, w0), wl-rmo(s0, c0, w0), wex(s0, wa(wcel(cv(s0), c0), w0)), wmo(s0, wa(wcel(cv(s0), c0), w0)))\n  wl-dfrexf(s0, c0, w0)\n  wl-dfrmof(s0, c0, w0)\n  df-wl-reu(s0, c0, w0)\n  df-eu(s0, wa(wcel(cv(s0), c0), w0))\n}","pretty":"thm wl-dfreuf(setvar s0, class c0, wff w0) {\n  ⊢ (F/(s0, c0)→(∃*(s0 ∈ c0, w0)↔ ∃!(s0,(s0 ∈ c0 ∧ w0))))\n} = {\n  3bitr4g(F/(s0, c0), ∃*(s0 ∈ c0, w0), ∃!(s0,(s0 ∈ c0 ∧ w0)), (∃(s0 ∈ c0, w0)∧ ∃!(s0 ∈ c0, w0)), (∃(s0,(s0 ∈ c0 ∧ w0))∧ ∃*(s0,(s0 ∈ c0 ∧ w0))))\n  anbi12d(F/(s0, c0), ∃(s0 ∈ c0, w0), ∃!(s0 ∈ c0, w0), ∃(s0,(s0 ∈ c0 ∧ w0)), ∃*(s0,(s0 ∈ c0 ∧ w0)))\n  wl-dfrexf(s0, c0, w0)\n  wl-dfrmof(s0, c0, w0)\n  df-wl-reu(s0, c0, w0)\n  df-eu(s0, (s0 ∈ c0 ∧ w0))\n}","parent":["3bitr4g","anbi12d","wl-dfrexf","wl-dfrmof","df-wl-reu","df-eu"],"children":[]},{"name":"df-wl-rab","content":"Define a restricted class abstraction (class builder), which is the class of all ` x ` in ` A ` such that ` ph ` is true. Definition of [TakeutiZaring] p. 20. (Contributed by NM, 22-Nov-1994.) Isolate x from A. (Revised by Wolf Lammen, 28-May-2023.)","origin":"axiom df-wl-rab(setvar s0, setvar s1, class c0, wff w0) {\n  |- wceq(wl-crab(s0, c0, w0), cab(s1, wa(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n}","pretty":"axiom df-wl-rab(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ { s0 ∈ c0 | w0 } = { s1 |(s1 ∈ c0 ∧ ∀(s0,(s0 = s1 → w0)))}\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n}","parent":[],"children":["wl-dfrabsb"]},{"name":"wl-dfrabsb","content":"Alternate definition of restricted class abstraction ( ~ df-wl-rab ), using substitution. (Contributed by Wolf Lammen, 28-May-2023.)","origin":"thm wl-dfrabsb(setvar s0, setvar s1, class c0, wff w0) {\n  |- wceq(wl-crab(s0, c0, w0), cab(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))))\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n  -| diffsw(s1, w0)\n} = {\n  eqtr4i(wl-crab(s0, c0, w0), cab(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0))), cab(s1, wa(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))))\n  df-wl-rab(s0, s1, c0, w0)\n  abbii(s1, wa(wcel(cv(s1), c0), wsb(s1, s0, w0)), wa(wcel(cv(s1), c0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  anbi2i(wcel(cv(s1), c0), wsb(s1, s0, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  sb6(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm wl-dfrabsb(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ { s0 ∈ c0 | w0 } = { s1 |(s1 ∈ c0 ∧[s1 / s0]w0)}\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, w0)\n} = {\n  eqtr4i({ s0 ∈ c0 | w0 }, { s1 |(s1 ∈ c0 ∧[s1 / s0]w0)}, { s1 |(s1 ∈ c0 ∧ ∀(s0,(s0 = s1 → w0)))})\n  df-wl-rab(s0, s1, c0, w0)\n  abbii(s1, (s1 ∈ c0 ∧[s1 / s0]w0), (s1 ∈ c0 ∧ ∀(s0,(s0 = s1 → w0))))\n  anbi2i(s1 ∈ c0, [s1 / s0]w0, ∀(s0,(s0 = s1 → w0)))\n  sb6(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["eqtr4i","df-wl-rab","abbii","anbi2i","sb6","diffss.ex"],"children":["wl-dfrabv","wl-dfrabf"]},{"name":"wl-dfrabv","content":"Alternate definition of restricted class abstraction ( ~ df-wl-rab ), when ` x ` and ` A ` are disjoint. (Contributed by Wolf Lammen, 29-May-2023.)","origin":"thm wl-dfrabv(setvar s0, class c0, wff w0) {\n  |- wceq(wl-crab(s0, c0, w0), cab(s0, wa(wcel(cv(s0), c0), w0)))\n  -| diffsc(s0, c0)\n} = {\n  eqtri(wl-crab(s0, c0, w0), cab(s0, wa(wcel(cv(s0), c0), w0)), cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))))\n  wl-dfrabsb(s0, hs0, c0, w0)\n  eqriv(hs1, cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))), cab(s0, wa(wcel(cv(s0), c0), w0)))\n  3bitr4i(wcel(cv(hs1), cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0)))), wcel(cv(hs1), cab(s0, wa(wcel(cv(s0), c0), w0))), wa(wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, hs0, wsb(hs0, s0, w0))), wa(wsb(hs1, s0, wcel(cv(s0), c0)), wsb(hs1, s0, w0)))\n  anbi12i(wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, hs0, wsb(hs0, s0, w0)), wsb(hs1, s0, wcel(cv(s0), c0)), wsb(hs1, s0, w0))\n  bitr4i(wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, s0, wcel(cv(s0), c0)), wcel(cv(hs1), c0))\n  clelsb3(hs1, hs0, c0)\n  clelsb3(hs1, s0, c0)\n  sbco2vv(hs1, hs0, s0, w0)\n  bitri(wcel(cv(hs1), cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0)))), wa(wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, hs0, wsb(hs0, s0, w0))), wsb(hs1, hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))))\n  df-clab(hs1, hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0)))\n  sban(hs1, hs0, wcel(cv(hs0), c0), wsb(hs0, s0, w0))\n  bitri(wcel(cv(hs1), cab(s0, wa(wcel(cv(s0), c0), w0))), wa(wsb(hs1, s0, wcel(cv(s0), c0)), wsb(hs1, s0, w0)), wsb(hs1, s0, wa(wcel(cv(s0), c0), w0)))\n  df-clab(hs1, s0, wa(wcel(cv(s0), c0), w0))\n  sban(hs1, s0, wcel(cv(s0), c0), w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs1.c(cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))))\n  diff.hs1.c(cab(s0, wa(wcel(cv(s0), c0), w0)))\n  diff.hs0.s(s0)\n}","pretty":"thm wl-dfrabv(setvar s0, class c0, wff w0) {\n  ⊢ { s0 ∈ c0 | w0 } = { s0 |(s0 ∈ c0 ∧ w0)}\n  ⊣ d(s0, c0)\n} = {\n  eqtri({ s0 ∈ c0 | w0 }, { s0 |(s0 ∈ c0 ∧ w0)}, { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)})\n  wl-dfrabsb(s0, hs0, c0, w0)\n  eqriv(hs1, { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)}, { s0 |(s0 ∈ c0 ∧ w0)})\n  3bitr4i(hs1 ∈ { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)}, hs1 ∈ { s0 |(s0 ∈ c0 ∧ w0)}, ([hs1 / hs0]hs0 ∈ c0 ∧[hs1 / hs0][hs0 / s0]w0), ([hs1 / s0]s0 ∈ c0 ∧[hs1 / s0]w0))\n  anbi12i([hs1 / hs0]hs0 ∈ c0, [hs1 / hs0][hs0 / s0]w0, [hs1 / s0]s0 ∈ c0, [hs1 / s0]w0)\n  bitr4i([hs1 / hs0]hs0 ∈ c0, [hs1 / s0]s0 ∈ c0, hs1 ∈ c0)\n  clelsb3(hs1, hs0, c0)\n  clelsb3(hs1, s0, c0)\n  sbco2vv(hs1, hs0, s0, w0)\n  bitri(hs1 ∈ { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)}, ([hs1 / hs0]hs0 ∈ c0 ∧[hs1 / hs0][hs0 / s0]w0), [hs1 / hs0](hs0 ∈ c0 ∧[hs0 / s0]w0))\n  df-clab(hs1, hs0, (hs0 ∈ c0 ∧[hs0 / s0]w0))\n  sban(hs1, hs0, hs0 ∈ c0, [hs0 / s0]w0)\n  bitri(hs1 ∈ { s0 |(s0 ∈ c0 ∧ w0)}, ([hs1 / s0]s0 ∈ c0 ∧[hs1 / s0]w0), [hs1 / s0](s0 ∈ c0 ∧ w0))\n  df-clab(hs1, s0, (s0 ∈ c0 ∧ w0))\n  sban(hs1, s0, s0 ∈ c0, w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs1.c({ hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)})\n  diff.hs1.c({ s0 |(s0 ∈ c0 ∧ w0)})\n  diff.hs0.s(s0)\n}","parent":["eqtri","wl-dfrabsb","eqriv","3bitr4i","anbi12i","bitr4i","clelsb3","sbco2vv","bitri","df-clab","sban","diffss.ex","diff.hs0.c","diff.hs0.w","diff.hs1.c","diff.hs0.s"],"children":[]},{"name":"wl-clelsb3df","content":"Deduction version of ~ clelsb3f . (Contributed by Wolf Lammen, 29-May-2023.)","origin":"thm wl-clelsb3df(setvar s0, setvar s1, class c0, wff w0) {\n  |- wi(w0, wb(wsb(s0, s1, wcel(cv(s1), c0)), wcel(cv(s0), c0)))\n  -| wnf(s1, w0)\n  -| wi(w0, wnfc(s1, c0))\n} = {\n  3bitr3g(w0, wsb(s0, s1, wcel(cv(s1), c0)), wcel(cv(s0), c0), wsb(s0, s1, wsb(s1, hs0, wcel(cv(hs0), c0))), wsb(s0, hs0, wcel(cv(hs0), c0)))\n  sbco2d(s0, s1, hs0, w0, wcel(cv(hs0), c0))\n  nfv(hs0, w0)\n  nfcrd(s1, hs0, c0, w0)\n  sbbii(s0, s1, wsb(s1, hs0, wcel(cv(hs0), c0)), wcel(cv(s1), c0))\n  clelsb3(s1, hs0, c0)\n  clelsb3(s0, hs0, c0)\n  diff.hs0.w(w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.c(c0)\n}","pretty":"thm wl-clelsb3df(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ (w0 →([s0 / s1]s1 ∈ c0 ↔ s0 ∈ c0))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 → F/(s1, c0))\n} = {\n  3bitr3g(w0, [s0 / s1]s1 ∈ c0, s0 ∈ c0, [s0 / s1][s1 / hs0]hs0 ∈ c0, [s0 / hs0]hs0 ∈ c0)\n  sbco2d(s0, s1, hs0, w0, hs0 ∈ c0)\n  nfv(hs0, w0)\n  nfcrd(s1, hs0, c0, w0)\n  sbbii(s0, s1, [s1 / hs0]hs0 ∈ c0, s1 ∈ c0)\n  clelsb3(s1, hs0, c0)\n  clelsb3(s0, hs0, c0)\n  diff.hs0.w(w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.c(c0)\n}","parent":["3bitr3g","sbco2d","nfv","nfcrd","sbbii","clelsb3","diff.hs0.w","diffss.ex","diff.hs0.s","diff.hs0.c"],"children":["wl-dfrabf"]},{"name":"wl-dfrabf","content":"Alternate definition of restricted class abstraction ( ~ df-wl-rab ), when ` x ` is not free in ` A ` . (Contributed by Wolf Lammen, 29-May-2023.)","origin":"thm wl-dfrabf(setvar s0, class c0, wff w0) {\n  |- wi(wnfc(s0, c0), wceq(wl-crab(s0, c0, w0), cab(s0, wa(wcel(cv(s0), c0), w0))))\n} = {\n  syl5eq(wl-crab(s0, c0, w0), cab(s0, wa(wcel(cv(s0), c0), w0)), cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))), wnfc(s0, c0))\n  wl-dfrabsb(s0, hs0, c0, w0)\n  eqrdv(hs1, cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))), cab(s0, wa(wcel(cv(s0), c0), w0)), wnfc(s0, c0))\n  3bitr4g(wnfc(s0, c0), wcel(cv(hs1), cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0)))), wcel(cv(hs1), cab(s0, wa(wcel(cv(s0), c0), w0))), wa(wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, hs0, wsb(hs0, s0, w0))), wa(wsb(hs1, s0, wcel(cv(s0), c0)), wsb(hs1, s0, w0)))\n  anbi12d(wnfc(s0, c0), wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, hs0, wsb(hs0, s0, w0)), wsb(hs1, s0, wcel(cv(s0), c0)), wsb(hs1, s0, w0))\n  syl5bb(wnfc(s0, c0), wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, s0, wcel(cv(s0), c0)), wcel(cv(hs1), c0))\n  clelsb3(hs1, hs0, c0)\n  bicomd(wnfc(s0, c0), wcel(cv(hs1), c0), wsb(hs1, s0, wcel(cv(s0), c0)))\n  wl-clelsb3df(hs1, s0, c0, wnfc(s0, c0))\n  nfnfc1(s0, c0)\n  id(wnfc(s0, c0))\n  a1i(wnfc(s0, c0), wb(wsb(hs1, hs0, wsb(hs0, s0, w0)), wsb(hs1, s0, w0)))\n  sbco2vv(hs1, hs0, s0, w0)\n  bitri(wcel(cv(hs1), cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0)))), wa(wsb(hs1, hs0, wcel(cv(hs0), c0)), wsb(hs1, hs0, wsb(hs0, s0, w0))), wsb(hs1, hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))))\n  df-clab(hs1, hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0)))\n  sban(hs1, hs0, wcel(cv(hs0), c0), wsb(hs0, s0, w0))\n  bitri(wcel(cv(hs1), cab(s0, wa(wcel(cv(s0), c0), w0))), wa(wsb(hs1, s0, wcel(cv(s0), c0)), wsb(hs1, s0, w0)), wsb(hs1, s0, wa(wcel(cv(s0), c0), w0)))\n  df-clab(hs1, s0, wa(wcel(cv(s0), c0), w0))\n  sban(hs1, s0, wcel(cv(s0), c0), w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs1.c(cab(hs0, wa(wcel(cv(hs0), c0), wsb(hs0, s0, w0))))\n  diff.hs1.c(cab(s0, wa(wcel(cv(s0), c0), w0)))\n  diff.hs1.w(wnfc(s0, c0))\n  diff.hs0.s(s0)\n}","pretty":"thm wl-dfrabf(setvar s0, class c0, wff w0) {\n  ⊢ (F/(s0, c0)→ { s0 ∈ c0 | w0 } = { s0 |(s0 ∈ c0 ∧ w0)})\n} = {\n  syl5eq({ s0 ∈ c0 | w0 }, { s0 |(s0 ∈ c0 ∧ w0)}, { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)}, F/(s0, c0))\n  wl-dfrabsb(s0, hs0, c0, w0)\n  eqrdv(hs1, { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)}, { s0 |(s0 ∈ c0 ∧ w0)}, F/(s0, c0))\n  3bitr4g(F/(s0, c0), hs1 ∈ { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)}, hs1 ∈ { s0 |(s0 ∈ c0 ∧ w0)}, ([hs1 / hs0]hs0 ∈ c0 ∧[hs1 / hs0][hs0 / s0]w0), ([hs1 / s0]s0 ∈ c0 ∧[hs1 / s0]w0))\n  anbi12d(F/(s0, c0), [hs1 / hs0]hs0 ∈ c0, [hs1 / hs0][hs0 / s0]w0, [hs1 / s0]s0 ∈ c0, [hs1 / s0]w0)\n  syl5bb(F/(s0, c0), [hs1 / hs0]hs0 ∈ c0, [hs1 / s0]s0 ∈ c0, hs1 ∈ c0)\n  clelsb3(hs1, hs0, c0)\n  bicomd(F/(s0, c0), hs1 ∈ c0, [hs1 / s0]s0 ∈ c0)\n  wl-clelsb3df(hs1, s0, c0, F/(s0, c0))\n  nfnfc1(s0, c0)\n  id(F/(s0, c0))\n  a1i(F/(s0, c0), ([hs1 / hs0][hs0 / s0]w0 ↔[hs1 / s0]w0))\n  sbco2vv(hs1, hs0, s0, w0)\n  bitri(hs1 ∈ { hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)}, ([hs1 / hs0]hs0 ∈ c0 ∧[hs1 / hs0][hs0 / s0]w0), [hs1 / hs0](hs0 ∈ c0 ∧[hs0 / s0]w0))\n  df-clab(hs1, hs0, (hs0 ∈ c0 ∧[hs0 / s0]w0))\n  sban(hs1, hs0, hs0 ∈ c0, [hs0 / s0]w0)\n  bitri(hs1 ∈ { s0 |(s0 ∈ c0 ∧ w0)}, ([hs1 / s0]s0 ∈ c0 ∧[hs1 / s0]w0), [hs1 / s0](s0 ∈ c0 ∧ w0))\n  df-clab(hs1, s0, (s0 ∈ c0 ∧ w0))\n  sban(hs1, s0, s0 ∈ c0, w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.w(w0)\n  diff.hs1.c({ hs0 |(hs0 ∈ c0 ∧[hs0 / s0]w0)})\n  diff.hs1.c({ s0 |(s0 ∈ c0 ∧ w0)})\n  diff.hs1.w(F/(s0, c0))\n  diff.hs0.s(s0)\n}","parent":["syl5eq","wl-dfrabsb","eqrdv","3bitr4g","anbi12d","syl5bb","clelsb3","bicomd","wl-clelsb3df","nfnfc1","id","a1i","sbco2vv","bitri","df-clab","sban","diffss.ex","diff.hs0.c","diff.hs0.w","diff.hs1.c","diff.hs1.w","diff.hs0.s"],"children":[]}]}