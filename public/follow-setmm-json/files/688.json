{"index":688,"title":"Edges as range of the edge function","content":"","blocks":[{"name":"cedg","content":"Extend class notation with the set of edges (of an undirected simple (hyper-/pseudo-)graph).","origin":"const class cedg { Edg }","pretty":"","parent":[],"children":[]},{"name":"diff.cedg.s","content":"","origin":"axiom diff.cedg.s(setvar s0) {\n  |- diffsc(s0, cedg)\n}","pretty":"axiom diff.cedg.s(setvar s0) {\n  ‚ä¢ d(s0, Edg)\n}","parent":[],"children":[]},{"name":"diff.cedg.c","content":"","origin":"axiom diff.cedg.c(class c0) {\n  |- diffcc(cedg, c0)\n}","pretty":"axiom diff.cedg.c(class c0) {\n  ‚ä¢ d(Edg, c0)\n}","parent":[],"children":[]},{"name":"diff.cedg.w","content":"","origin":"axiom diff.cedg.w(wff w0) {\n  |- diffcw(cedg, w0)\n}","pretty":"axiom diff.cedg.w(wff w0) {\n  ‚ä¢ d(Edg, w0)\n}","parent":[],"children":[]},{"name":"df-edg","content":"Define the class of edges of a graph, see also definition \"E = E(G)\" in section I.1 of [Bollobas] p. 1. This definition is very general: It defines edges of a class as the range of its edge function (which does not even need to be a function). Therefore, this definition could also be used for hypergraphs, pseudographs and multigraphs. In these cases, however, the (possibly more than one) edges connecting the same vertices could not be distinguished anymore. In some cases, this is no problem, so theorems with ` Edg ` are meaningful nevertheless (e.g., ~ edguhgr ). Usually, however, this definition is used only for undirected simple (hyper-/pseudo-)graphs (with or without loops). (Contributed by AV, 1-Jan-2020.) (Revised by AV, 13-Oct-2020.)","origin":"axiom df-edg(setvar s0) {\n  |- wceq(cedg, cmpt(s0, universe, crn(cfv(ciedg, cv(s0)))))\n}","pretty":"axiom df-edg(setvar s0) {\n  ‚ä¢ Edg =(s0 ‚àà ùïå ‚Ü¶ ran((iEdg ` s0)))\n}","parent":[],"children":["edgval"]},{"name":"edgval","content":"The edges of a graph. (Contributed by AV, 1-Jan-2020.) (Revised by AV, 13-Oct-2020.) (Revised by AV, 8-Dec-2021.)","origin":"thm edgval(class c0) {\n  |- wceq(cfv(cedg, c0), crn(cfv(ciedg, c0)))\n} = {\n  pm2.61i(wceq(cfv(cedg, c0), crn(cfv(ciedg, c0))), wcel(c0, universe))\n  fvmpt(hs0, c0, universe, cedg, crn(cfv(ciedg, c0)), crn(cfv(ciedg, cv(hs0))))\n  rneqd(cfv(ciedg, cv(hs0)), cfv(ciedg, c0), wceq(cv(hs0), c0))\n  fveq2(cv(hs0), c0, ciedg)\n  df-edg(hs0)\n  rnex(cfv(ciedg, c0))\n  fvex(ciedg, c0)\n  3eqtr4rd(cfv(cedg, c0), crn(cfv(ciedg, c0)), crn(emptycls), emptycls, wn(wcel(c0, universe)))\n  a1i(wn(wcel(c0, universe)), wceq(crn(emptycls), emptycls))\n  rn0()\n  rneqd(cfv(ciedg, c0), emptycls, wn(wcel(c0, universe)))\n  fvprc(c0, ciedg)\n  fvprc(c0, cedg)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(crn(cfv(ciedg, c0)))\n}","pretty":"thm edgval(class c0) {\n  ‚ä¢ (Edg ` c0)= ran((iEdg ` c0))\n} = {\n  pm2.61i((Edg ` c0)= ran((iEdg ` c0)), c0 ‚àà ùïå)\n  fvmpt(hs0, c0, universe, cedg, ran((iEdg ` c0)), ran((iEdg ` hs0)))\n  rneqd((iEdg ` hs0), (iEdg ` c0), hs0 = c0)\n  fveq2(hs0, c0, ciedg)\n  df-edg(hs0)\n  rnex((iEdg ` c0))\n  fvex(ciedg, c0)\n  3eqtr4rd((Edg ` c0), ran((iEdg ` c0)), ran(‚àÖ), emptycls, ¬¨ c0 ‚àà ùïå)\n  a1i(¬¨ c0 ‚àà ùïå, ran(‚àÖ)= ‚àÖ)\n  rn0()\n  rneqd((iEdg ` c0), emptycls, ¬¨ c0 ‚àà ùïå)\n  fvprc(c0, ciedg)\n  fvprc(c0, cedg)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(ran((iEdg ` c0)))\n}","parent":["pm2.61i","fvmpt","rneqd","fveq2","df-edg","rnex","fvex","3eqtr4rd","a1i","rn0","fvprc","diff.hs0.c"],"children":["iedgedg","edgopval","edgstruct","edgiedgb","edg0iedg0","uhgredgn0","upgredgss","umgredgss","edgupgr","uhgrvtxedgiedgb","upgredg","usgredgss","ausgrumgri","ausgrusgri","uspgrf1oedg","uspgrupgrushgr","usgrumgruspgr","usgruspgrb","usgrf1oedg","uhgr2edg","usgrsizedg","usgredg3","ushgredgedg","ushgredgedgloop","usgr1e","edg0usgr","usgr1v0edg","usgrexmpledg","subgrprop3","0grsubgr","0uhgrsubgr","subgruhgredgd","uhgrspansubgrlem","uhgrspan1","upgrres1","usgredgffibi","dfnbgr3","nbupgrres","usgrnbcnvfv","cplgrop","cusgrexi","structtocusgr","cusgrsize","1loopgredg","1egrvtxdg0","umgr2v2eedg","edginwlk","wlkl1loop","wlkvtxedg","uspgr2wlkeq","wlkiswwlks1","wlkiswwlks2lem4","wlkiswwlks2lem5","wlkiswwlks2","wlkiswwlksupgr2","2pthon3v","umgrwwlks2on","clwlkclwwlk","clwlkclwwlkOLD","isomushgr","ushrisomgr"]},{"name":"iedgedg","content":"An indexed edge is an edge. (Contributed by AV, 19-Dec-2021.)","origin":"thm iedgedg(class c0, class c1, class c2) {\n  |- wi(wa(wfun(c0), wcel(c1, cdm(c0))), wcel(cfv(c0, c1), cfv(cedg, c2)))\n  -| wceq(c0, cfv(ciedg, c2))\n} = {\n  syl6eleqr(cfv(c0, c1), cfv(cedg, c2), crn(c0), wa(wfun(c0), wcel(c1, cdm(c0))))\n  fvelrn(c0, c1)\n  eqtr4i(cfv(cedg, c2), crn(c0), crn(cfv(ciedg, c2)))\n  edgval(c2)\n  rneqi(c0, cfv(ciedg, c2))\n}","pretty":"thm iedgedg(class c0, class c1, class c2) {\n  ‚ä¢ ((Fun(c0)‚àß c1 ‚àà dom(c0))‚Üí(c0 ` c1)‚àà(Edg ` c2))\n  ‚ä£ c0 =(iEdg ` c2)\n} = {\n  syl6eleqr((c0 ` c1), (Edg ` c2), ran(c0), (Fun(c0)‚àß c1 ‚àà dom(c0)))\n  fvelrn(c0, c1)\n  eqtr4i((Edg ` c2), ran(c0), ran((iEdg ` c2)))\n  edgval(c2)\n  rneqi(c0, (iEdg ` c2))\n}","parent":["syl6eleqr","fvelrn","eqtr4i","edgval","rneqi"],"children":["edglnl","numedglnl"]},{"name":"edgopval","content":"The edges of a graph represented as ordered pair. (Contributed by AV, 1-Jan-2020.) (Revised by AV, 13-Oct-2020.)","origin":"thm edgopval(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wceq(cfv(cedg, cop(c0, c2)), crn(c2)))\n} = {\n  syl5eq(cfv(cedg, cop(c0, c2)), crn(c2), crn(cfv(ciedg, cop(c0, c2))), wa(wcel(c0, c1), wcel(c2, c3)))\n  edgval(cop(c0, c2))\n  rneqd(cfv(ciedg, cop(c0, c2)), c2, wa(wcel(c0, c1), wcel(c2, c3)))\n  opiedgfv(c0, c1, c2, c3)\n}","pretty":"thm edgopval(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(Edg ` < c0, c2 >)= ran(c2))\n} = {\n  syl5eq((Edg ` < c0, c2 >), ran(c2), ran((iEdg ` < c0, c2 >)), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  edgval(< c0, c2 >)\n  rneqd((iEdg ` < c0, c2 >), c2, (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  opiedgfv(c0, c1, c2, c3)\n}","parent":["syl5eq","edgval","rneqd","opiedgfv"],"children":["edgov","cusgrsize","uspgrloopedg","uspgrsprfo"]},{"name":"edgov","content":"The edges of a graph represented as ordered pair, shown as operation value. Although a little less intuitive, this representation is often used because it is shorter than the representation as function value of a graph given as ordered pair, see ~ edgopval . The representation ` ran E ` for the set of edges is even shorter, though. (Contributed by AV, 2-Jan-2020.) (Revised by AV, 13-Oct-2020.)","origin":"thm edgov(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wceq(co(c0, cedg, c2), crn(c2)))\n} = {\n  syl5eq(co(c0, cedg, c2), crn(c2), cfv(cedg, cop(c0, c2)), wa(wcel(c0, c1), wcel(c2, c3)))\n  df-ov(c0, cedg, c2)\n  edgopval(c0, c1, c2, c3)\n}","pretty":"thm edgov(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[Edg]c2)= ran(c2))\n} = {\n  syl5eq((c0[Edg]c2), ran(c2), (Edg ` < c0, c2 >), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  df-ov(c0, cedg, c2)\n  edgopval(c0, c1, c2, c3)\n}","parent":["syl5eq","df-ov","edgopval"],"children":[]},{"name":"edgstruct","content":"The edges of a graph represented as an extensible structure with vertices as base set and indexed edges. (Contributed by AV, 13-Oct-2020.)","origin":"thm edgstruct(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wceq(cfv(cedg, c4), crn(c2)))\n  -| wceq(c4, cpr(cop(cfv(cbs, cnx), c0), cop(cfv(cedgf, cnx), c2)))\n} = {\n  syl5eq(cfv(cedg, c4), crn(c2), crn(cfv(ciedg, c4)), wa(wcel(c0, c1), wcel(c2, c3)))\n  edgval(c4)\n  rneqd(cfv(ciedg, c4), c2, wa(wcel(c0, c1), wcel(c2, c3)))\n  struct2griedg(c0, c1, c2, c3, c4)\n}","pretty":"thm edgstruct(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(Edg ` c4)= ran(c2))\n  ‚ä£ c4 = { <(Base ` ndx), c0 >, <(.ef ` ndx), c2 > }\n} = {\n  syl5eq((Edg ` c4), ran(c2), ran((iEdg ` c4)), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  edgval(c4)\n  rneqd((iEdg ` c4), c2, (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  struct2griedg(c0, c1, c2, c3, c4)\n}","parent":["syl5eq","edgval","rneqd","struct2griedg"],"children":[]},{"name":"edgiedgb","content":"A set is an edge iff it is an indexed edge. (Contributed by AV, 17-Oct-2020.) (Revised by AV, 8-Dec-2021.)","origin":"thm edgiedgb(setvar s0, class c0, class c1, class c2) {\n  |- wi(wfun(c0), wb(wcel(c1, cfv(cedg, c2)), wrex(s0, cdm(c0), wceq(c1, cfv(c0, cv(s0))))))\n  -| wceq(c0, cfv(ciedg, c2))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  syl5bb(wfun(c0), wcel(c1, cfv(cedg, c2)), wrex(s0, cdm(c0), wceq(c1, cfv(c0, cv(s0)))), wcel(c1, crn(c0)))\n  eleq2i(c1, cfv(cedg, c2), crn(c0))\n  eqtri(cfv(cedg, c2), crn(c0), crn(cfv(ciedg, c2)))\n  edgval(c2)\n  rneqi(cfv(ciedg, c2), c0)\n  eqcomi(cfv(ciedg, c2), c0)\n  elrnrexdmb(s0, c0, c1)\n}","pretty":"thm edgiedgb(setvar s0, class c0, class c1, class c2) {\n  ‚ä¢ (Fun(c0)‚Üí(c1 ‚àà(Edg ` c2)‚Üî ‚àÉ(s0 ‚àà dom(c0), c1 =(c0 ` s0))))\n  ‚ä£ c0 =(iEdg ` c2)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n} = {\n  syl5bb(Fun(c0), c1 ‚àà(Edg ` c2), ‚àÉ(s0 ‚àà dom(c0), c1 =(c0 ` s0)), c1 ‚àà ran(c0))\n  eleq2i(c1, (Edg ` c2), ran(c0))\n  eqtri((Edg ` c2), ran(c0), ran((iEdg ` c2)))\n  edgval(c2)\n  rneqi((iEdg ` c2), c0)\n  eqcomi((iEdg ` c2), c0)\n  elrnrexdmb(s0, c0, c1)\n}","parent":["syl5bb","eleq2i","eqtri","edgval","rneqi","eqcomi","elrnrexdmb"],"children":["uhgredgiedgb"]},{"name":"edg0iedg0","content":"There is no edge in a graph iff its edge function is empty. (Contributed by AV, 15-Dec-2020.) (Revised by AV, 8-Dec-2021.)","origin":"thm edg0iedg0(class c0, class c1, class c2) {\n  |- wi(wfun(c0), wb(wceq(c1, emptycls), wceq(c0, emptycls)))\n  -| wceq(c0, cfv(ciedg, c2))\n  -| wceq(c1, cfv(cedg, c2))\n} = {\n  3bitrd(wfun(c0), wceq(c1, emptycls), wceq(c0, emptycls), wceq(crn(cfv(ciedg, c2)), emptycls), wceq(crn(c0), emptycls))\n  a1i(wfun(c0), wb(wceq(c1, emptycls), wceq(crn(cfv(ciedg, c2)), emptycls)))\n  eqeq1i(c1, emptycls, crn(cfv(ciedg, c2)))\n  eqtri(c1, crn(cfv(ciedg, c2)), cfv(cedg, c2))\n  edgval(c2)\n  a1i(wfun(c0), wb(wceq(crn(cfv(ciedg, c2)), emptycls), wceq(crn(c0), emptycls)))\n  eqeq1i(crn(cfv(ciedg, c2)), emptycls, crn(c0))\n  rneqi(cfv(ciedg, c2), c0)\n  eqcomi(cfv(ciedg, c2), c0)\n  syl(wfun(c0), wb(wceq(crn(c0), emptycls), wceq(c0, emptycls)), wrel(c0))\n  funrel(c0)\n  bicomd(wrel(c0), wceq(crn(c0), emptycls), wceq(c0, emptycls))\n  relrn0(c0)\n}","pretty":"thm edg0iedg0(class c0, class c1, class c2) {\n  ‚ä¢ (Fun(c0)‚Üí(c1 = ‚àÖ ‚Üî c0 = ‚àÖ))\n  ‚ä£ c0 =(iEdg ` c2)\n  ‚ä£ c1 =(Edg ` c2)\n} = {\n  3bitrd(Fun(c0), c1 = ‚àÖ, c0 = ‚àÖ, ran((iEdg ` c2))= ‚àÖ, ran(c0)= ‚àÖ)\n  a1i(Fun(c0), (c1 = ‚àÖ ‚Üî ran((iEdg ` c2))= ‚àÖ))\n  eqeq1i(c1, emptycls, ran((iEdg ` c2)))\n  eqtri(c1, ran((iEdg ` c2)), (Edg ` c2))\n  edgval(c2)\n  a1i(Fun(c0), (ran((iEdg ` c2))= ‚àÖ ‚Üî ran(c0)= ‚àÖ))\n  eqeq1i(ran((iEdg ` c2)), emptycls, ran(c0))\n  rneqi((iEdg ` c2), c0)\n  eqcomi((iEdg ` c2), c0)\n  syl(Fun(c0), (ran(c0)= ‚àÖ ‚Üî c0 = ‚àÖ), Rel(c0))\n  funrel(c0)\n  bicomd(Rel(c0), ran(c0)= ‚àÖ, c0 = ‚àÖ)\n  relrn0(c0)\n}","parent":["3bitrd","a1i","eqeq1i","eqtri","edgval","rneqi","eqcomi","syl","funrel","bicomd","relrn0"],"children":["uhgriedg0edg0","egrsubgr","vtxduhgr0e"]}]}