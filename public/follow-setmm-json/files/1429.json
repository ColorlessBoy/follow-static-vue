{"index":1429,"title":"Unordered and ordered pairs - extension for singletons","content":"","blocks":[{"name":"eusnsn","content":"There is a unique element of a singleton which is equal to another singleton. (Contributed by AV, 24-Aug-2022.)","origin":"thm eusnsn(setvar s0, setvar s1) {\n  |- weu(s0, wceq(csn(cv(s0)), csn(cv(s1))))\n  -| diffss(s0, s1)\n} = {\n  mpbir(weu(s0, wceq(csn(cv(s0)), csn(cv(s1)))), wex(hs0, wal(s0, wb(wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(hs0))))))\n  spei(hs0, s1, wal(s0, wb(wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(hs0)))), wal(s0, wb(wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(s1)))))\n  albidv(s0, wceq(cv(hs0), cv(s1)), wb(wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(hs0))), wb(wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(s1))))\n  bibi2d(wceq(cv(hs0), cv(s1)), wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(hs0)), wceq(cv(s0), cv(s1)))\n  equequ2(hs0, s1, s0)\n  ax-gen(s0, wb(wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(s1))))\n  elv(s0, wb(wceq(csn(cv(s0)), csn(cv(s1))), wceq(cv(s0), cv(s1))))\n  sneqbg(cv(s0), universe, cv(s1))\n  eu6(s0, hs0, wceq(csn(cv(s0)), csn(cv(s1))))\n  diff.wceq.s(s0, cv(hs0), cv(s1))\n  diff.cv.s(s0, hs0)\n  diff.cv.s(s0, s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wceq(csn(cv(s0)), csn(cv(s1))))\n}","pretty":"thm eusnsn(setvar s0, setvar s1) {\n  ⊢ ∃!(s0, { s0 } = { s1 })\n  ⊣ d(s0, s1)\n} = {\n  mpbir(∃!(s0, { s0 } = { s1 }), ∃(hs0, ∀(s0,({ s0 } = { s1 } ↔ s0 = hs0))))\n  spei(hs0, s1, ∀(s0,({ s0 } = { s1 } ↔ s0 = hs0)), ∀(s0,({ s0 } = { s1 } ↔ s0 = s1)))\n  albidv(s0, hs0 = s1, ({ s0 } = { s1 } ↔ s0 = hs0), ({ s0 } = { s1 } ↔ s0 = s1))\n  bibi2d(hs0 = s1, { s0 } = { s1 }, s0 = hs0, s0 = s1)\n  equequ2(hs0, s1, s0)\n  ax-gen(s0, ({ s0 } = { s1 } ↔ s0 = s1))\n  elv(s0, ({ s0 } = { s1 } ↔ s0 = s1))\n  sneqbg(s0, universe, s1)\n  eu6(s0, hs0, { s0 } = { s1 })\n  diff.wceq.s(s0, hs0, s1)\n  diff.cv.s(s0, hs0)\n  diff.cv.s(s0, s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w({ s0 } = { s1 })\n}","parent":["mpbir","spei","albidv","bibi2d","equequ2","ax-gen","elv","sneqbg","eu6","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["aiotaval"]},{"name":"absnsb","content":"If the class abstraction ` { x | ph } ` associated with the wff ` ph ` is a singleton, the wff is true for the singleton element. (Contributed by AV, 24-Aug-2022.)","origin":"thm absnsb(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cab(s0, w0), csn(cv(s1))), wsb(s1, s0, w0))\n  -| diffss(s0, s1)\n} = {\n  3imtr4i(wceq(cab(s0, w0), csn(cv(s1))), wsb(s1, s0, w0), wal(s0, wb(wcel(cv(s0), cab(s0, w0)), wcel(cv(s0), csn(cv(s1))))), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  alimi(s0, wb(wcel(cv(s0), cab(s0, w0)), wcel(cv(s0), csn(cv(s1)))), wi(wceq(cv(s0), cv(s1)), w0))\n  sylbi(wb(wcel(cv(s0), cab(s0, w0)), wcel(cv(s0), csn(cv(s1)))), wi(wceq(cv(s0), cv(s1)), w0), wb(w0, wceq(cv(s0), cv(s1))))\n  bibi12i(wcel(cv(s0), cab(s0, w0)), wcel(cv(s0), csn(cv(s1))), w0, wceq(cv(s0), cv(s1)))\n  abid(s0, w0)\n  velsn(s0, cv(s1))\n  biimpr(w0, wceq(cv(s0), cv(s1)))\n  cleqf(s0, cab(s0, w0), csn(cv(s1)))\n  nfab1(s0, w0)\n  nfcv(s0, csn(cv(s1)))\n  sb6(s1, s0, w0)\n  diff.csn.s(s0, cv(s1))\n  diff.cv.s(s0, s1)\n  diffss.ex(s1, s0)\n}","pretty":"thm absnsb(setvar s0, setvar s1, wff w0) {\n  ⊢ ({ s0 | w0 } = { s1 } →[s1 / s0]w0)\n  ⊣ d(s0, s1)\n} = {\n  3imtr4i({ s0 | w0 } = { s1 }, [s1 / s0]w0, ∀(s0,(s0 ∈ { s0 | w0 } ↔ s0 ∈ { s1 })), ∀(s0,(s0 = s1 → w0)))\n  alimi(s0, (s0 ∈ { s0 | w0 } ↔ s0 ∈ { s1 }), (s0 = s1 → w0))\n  sylbi((s0 ∈ { s0 | w0 } ↔ s0 ∈ { s1 }), (s0 = s1 → w0), (w0 ↔ s0 = s1))\n  bibi12i(s0 ∈ { s0 | w0 }, s0 ∈ { s1 }, w0, s0 = s1)\n  abid(s0, w0)\n  velsn(s0, s1)\n  biimpr(w0, s0 = s1)\n  cleqf(s0, { s0 | w0 }, { s1 })\n  nfab1(s0, w0)\n  nfcv(s0, { s1 })\n  sb6(s1, s0, w0)\n  diff.csn.s(s0, s1)\n  diff.cv.s(s0, s1)\n  diffss.ex(s1, s0)\n}","parent":["3imtr4i","alimi","sylbi","bibi12i","abid","velsn","biimpr","cleqf","nfab1","nfcv","sb6","diff.csn.s","diff.cv.s","diffss.ex"],"children":[]},{"name":"euabsneu","content":"Another way to express existential uniqueness of a wff ` ph ` : its associated class abstraction ` { x | ph } ` is a singleton. Variant of ~ euabsn2 using existential uniqueness for the singleton element instead of existence only. (Contributed by AV, 24-Aug-2022.)","origin":"thm euabsneu(setvar s0, setvar s1, wff w0) {\n  |- wb(weu(s0, w0), weu(s1, wceq(cab(s0, w0), csn(cv(s1)))))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w0)\n} = {\n  3bitr4i(weu(s0, w0), weu(s1, wceq(cab(s0, w0), csn(cv(s1)))), wex(s1, wceq(cab(s0, w0), csn(cv(s1)))), wa(wex(s1, wceq(cab(s0, w0), csn(cv(s1)))), wmo(s1, wceq(cab(s0, w0), csn(cv(s1))))))\n  biantru(wex(s1, wceq(cab(s0, w0), csn(cv(s1)))), wmo(s1, wceq(cab(s0, w0), csn(cv(s1)))))\n  mpbi(wmo(s1, wceq(cab(s0, w0), csn(cv(s1)))), wmo(s1, wceq(csn(cv(s1)), cab(s0, w0))))\n  mosneq(s1, cab(s0, w0))\n  mobii(s1, wceq(csn(cv(s1)), cab(s0, w0)), wceq(cab(s0, w0), csn(cv(s1))))\n  eqcom(csn(cv(s1)), cab(s0, w0))\n  euabsn2(s0, s1, w0)\n  df-eu(s1, wceq(cab(s0, w0), csn(cv(s1))))\n  diff.cab.s(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm euabsneu(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃!(s0, w0)↔ ∃!(s1, { s0 | w0 } = { s1 }))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w0)\n} = {\n  3bitr4i(∃!(s0, w0), ∃!(s1, { s0 | w0 } = { s1 }), ∃(s1, { s0 | w0 } = { s1 }), (∃(s1, { s0 | w0 } = { s1 })∧ ∃*(s1, { s0 | w0 } = { s1 })))\n  biantru(∃(s1, { s0 | w0 } = { s1 }), ∃*(s1, { s0 | w0 } = { s1 }))\n  mpbi(∃*(s1, { s0 | w0 } = { s1 }), ∃*(s1, { s1 } = { s0 | w0 }))\n  mosneq(s1, { s0 | w0 })\n  mobii(s1, { s1 } = { s0 | w0 }, { s0 | w0 } = { s1 })\n  eqcom({ s1 }, { s0 | w0 })\n  euabsn2(s0, s1, w0)\n  df-eu(s1, { s0 | w0 } = { s1 })\n  diff.cab.s(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["3bitr4i","biantru","mpbi","mosneq","mobii","eqcom","euabsn2","df-eu","diff.cab.s","diffss.ex"],"children":["reuaiotaiota"]}]}