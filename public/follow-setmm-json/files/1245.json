{"index":1245,"title":"Opposite rings and dual vector spaces","content":"","blocks":[{"name":"cld","content":"Extend class notation with left dualvector space.","origin":"const class cld { LDual }","pretty":"","parent":[],"children":[]},{"name":"diff.cld.s","content":"","origin":"axiom diff.cld.s(setvar s0) {\n  |- diffsc(s0, cld)\n}","pretty":"axiom diff.cld.s(setvar s0) {\n  ‚ä¢ d(s0, LDual)\n}","parent":[],"children":[]},{"name":"diff.cld.c","content":"","origin":"axiom diff.cld.c(class c0) {\n  |- diffcc(cld, c0)\n}","pretty":"axiom diff.cld.c(class c0) {\n  ‚ä¢ d(LDual, c0)\n}","parent":[],"children":[]},{"name":"diff.cld.w","content":"","origin":"axiom diff.cld.w(wff w0) {\n  |- diffcw(cld, w0)\n}","pretty":"axiom diff.cld.w(wff w0) {\n  ‚ä¢ d(LDual, w0)\n}","parent":[],"children":[]},{"name":"df-ldual","content":"Define the (left) dual of a left vector space (or module) in which the vectors are functionals. In many texts, this is defined as a right vector space, but by reversing the multiplication we achieve a left vector space, as is done in definition of dual vector space in [Holland95] p. 218. This allows us to reuse our existing collection of left vector space theorems. The restriction on ` oF ( +g `` v ) ` allows it to be a set; see ~ ofmres . Note the operation reversal in the scalar product to allow us to use the original scalar ring instead of the ` oppR ` ring, for convenience. (Contributed by NM, 18-Oct-2014.)","origin":"axiom df-ldual(setvar s0, setvar s1, setvar s2) {\n  |- wceq(cld, cmpt(s0, universe, cun(ctp(cop(cfv(cbs, cnx), cfv(clfn, cv(s0))), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, cv(s0)))), cxp(cfv(clfn, cv(s0)), cfv(clfn, cv(s0))))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, cv(s0))))), csn(cop(cfv(cvsca, cnx), cmpo(s1, s2, cfv(cbs, cfv(csca, cv(s0))), cfv(clfn, cv(s0)), co(cv(s2), cof(cfv(cmulr, cfv(csca, cv(s0)))), cxp(cfv(cbs, cv(s0)), csn(cv(s1))))))))))\n  -| diffss(s1, s2)\n  -| diffss(s0, s2)\n  -| diffss(s0, s1)\n}","pretty":"axiom df-ldual(setvar s0, setvar s1, setvar s2) {\n  ‚ä¢ LDual =(s0 ‚àà ùïå ‚Ü¶({ <(Base ` ndx),(LFnl ` s0)>, <(+ ` ndx),(oF((+ `(Scalar ` s0)))|`((LFnl ` s0)√ó(LFnl ` s0)))>, <(Scalar ` ndx),(oppR `(Scalar ` s0))> } ‚ãÉ { <(√ó ` ndx),(s1 ‚àà(Base `(Scalar ` s0)), s2 ‚àà(LFnl ` s0)‚Ü¶(s2[oF((√ó `(Scalar ` s0)))]((Base ` s0)√ó { s1 })))> }))\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s0, s1)\n}","parent":[],"children":["ldualset"]},{"name":"ldualset","content":"Define the (left) dual of a left vector space (or module) in which the vectors are functionals. In many texts, this is defined as a right vector space, but by reversing the multiplication we achieve a left vector space, as is done in definition of dual vector space in [Holland95] p. 218. This allows us to reuse our existing collection of left vector space theorems. Note the operation reversal in the scalar product to allow us to use the original scalar ring instead of the ` oppR ` ring, for convenience. (Contributed by NM, 18-Oct-2014.)","origin":"thm ldualset(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, class c11, wff w0) {\n  |- wi(w0, wceq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4)))))\n  -| wceq(c5, cfv(cbs, c6))\n  -| wceq(c7, cfv(cplusg, c8))\n  -| wceq(c2, cres(cof(c7), cxp(c1, c1)))\n  -| wceq(c1, cfv(clfn, c6))\n  -| wceq(c0, cfv(cld, c6))\n  -| wceq(c8, cfv(csca, c6))\n  -| wceq(c9, cfv(cbs, c8))\n  -| wceq(c10, cfv(cmulr, c8))\n  -| wceq(c3, cfv(coppr, c8))\n  -| wceq(c4, cmpo(s0, s1, c9, c1, co(cv(s1), cof(c10), cxp(c5, csn(cv(s0))))))\n  -| wi(w0, wcel(c6, c11))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c6)\n  -| diffsc(s1, c6)\n} = {\n  3syl(w0, wceq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4)))), wcel(c6, c11), wcel(c6, universe))\n  elex(c6, c11)\n  syl5eq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))), cfv(cld, c6), wcel(c6, universe))\n  fvmpt(hs0, c6, universe, cld, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))), cun(ctp(cop(cfv(cbs, cnx), cfv(clfn, cv(hs0))), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, cv(hs0)))), cxp(cfv(clfn, cv(hs0)), cfv(clfn, cv(hs0))))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, cv(hs0))))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, cfv(cbs, cfv(csca, cv(hs0))), cfv(clfn, cv(hs0)), co(cv(s1), cof(cfv(cmulr, cfv(csca, cv(hs0)))), cxp(cfv(cbs, cv(hs0)), csn(cv(s0)))))))))\n  uneq12d(ctp(cop(cfv(cbs, cnx), cfv(clfn, cv(hs0))), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, cv(hs0)))), cxp(cfv(clfn, cv(hs0)), cfv(clfn, cv(hs0))))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, cv(hs0))))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, cfv(cbs, cfv(csca, cv(hs0))), cfv(clfn, cv(hs0)), co(cv(s1), cof(cfv(cmulr, cfv(csca, cv(hs0)))), cxp(cfv(cbs, cv(hs0)), csn(cv(s0))))))), ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4)), wceq(cv(hs0), c6))\n  tpeq123d(cop(cfv(cbs, cnx), cfv(clfn, cv(hs0))), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, cv(hs0)))), cxp(cfv(clfn, cv(hs0)), cfv(clfn, cv(hs0))))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, cv(hs0)))), cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3), wceq(cv(hs0), c6))\n  opeq2d(cfv(cbs, cnx), cfv(clfn, cv(hs0)), c1, wceq(cv(hs0), c6))\n  opeq2d(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, cv(hs0)))), cxp(cfv(clfn, cv(hs0)), cfv(clfn, cv(hs0)))), c2, wceq(cv(hs0), c6))\n  syl6eqr(cres(cof(cfv(cplusg, cfv(csca, cv(hs0)))), cxp(cfv(clfn, cv(hs0)), cfv(clfn, cv(hs0)))), c2, cres(cof(c7), cxp(c1, c1)), wceq(cv(hs0), c6))\n  reseq12d(cof(cfv(cplusg, cfv(csca, cv(hs0)))), cxp(cfv(clfn, cv(hs0)), cfv(clfn, cv(hs0))), cof(c7), cxp(c1, c1), wceq(cv(hs0), c6))\n  syl(wceq(cv(hs0), c6), wceq(cof(cfv(cplusg, cfv(csca, cv(hs0)))), cof(c7)), wceq(cfv(cplusg, cfv(csca, cv(hs0))), c7))\n  syl6eqr(cfv(cplusg, cfv(csca, cv(hs0))), c7, cfv(cplusg, c8), wceq(cv(hs0), c6))\n  fveq2d(cplusg, cfv(csca, cv(hs0)), c8, wceq(cv(hs0), c6))\n  ofeq(cfv(cplusg, cfv(csca, cv(hs0))), c7)\n  sqxpeqd(cfv(clfn, cv(hs0)), c1, wceq(cv(hs0), c6))\n  opeq2d(cfv(csca, cnx), cfv(coppr, cfv(csca, cv(hs0))), c3, wceq(cv(hs0), c6))\n  syl6eqr(cfv(coppr, cfv(csca, cv(hs0))), c3, cfv(coppr, c8), wceq(cv(hs0), c6))\n  fveq2d(coppr, cfv(csca, cv(hs0)), c8, wceq(cv(hs0), c6))\n  sneqd(cop(cfv(cvsca, cnx), cmpo(s0, s1, cfv(cbs, cfv(csca, cv(hs0))), cfv(clfn, cv(hs0)), co(cv(s1), cof(cfv(cmulr, cfv(csca, cv(hs0)))), cxp(cfv(cbs, cv(hs0)), csn(cv(s0)))))), cop(cfv(cvsca, cnx), c4), wceq(cv(hs0), c6))\n  opeq2d(cfv(cvsca, cnx), cmpo(s0, s1, cfv(cbs, cfv(csca, cv(hs0))), cfv(clfn, cv(hs0)), co(cv(s1), cof(cfv(cmulr, cfv(csca, cv(hs0)))), cxp(cfv(cbs, cv(hs0)), csn(cv(s0))))), c4, wceq(cv(hs0), c6))\n  syl6eqr(cmpo(s0, s1, cfv(cbs, cfv(csca, cv(hs0))), cfv(clfn, cv(hs0)), co(cv(s1), cof(cfv(cmulr, cfv(csca, cv(hs0)))), cxp(cfv(cbs, cv(hs0)), csn(cv(s0))))), c4, cmpo(s0, s1, c9, c1, co(cv(s1), cof(c10), cxp(c5, csn(cv(s0))))), wceq(cv(hs0), c6))\n  mpoeq123dv(s0, s1, cfv(cbs, cfv(csca, cv(hs0))), cfv(clfn, cv(hs0)), co(cv(s1), cof(cfv(cmulr, cfv(csca, cv(hs0)))), cxp(cfv(cbs, cv(hs0)), csn(cv(s0)))), c9, c1, co(cv(s1), cof(c10), cxp(c5, csn(cv(s0)))), wceq(cv(hs0), c6))\n  syl6eqr(cfv(cbs, cfv(csca, cv(hs0))), c9, cfv(cbs, c8), wceq(cv(hs0), c6))\n  fveq2d(cbs, cfv(csca, cv(hs0)), c8, wceq(cv(hs0), c6))\n  syl6eqr(cfv(clfn, cv(hs0)), c1, cfv(clfn, c6), wceq(cv(hs0), c6))\n  fveq2(cv(hs0), c6, clfn)\n  oveq123d(cv(s1), cof(cfv(cmulr, cfv(csca, cv(hs0)))), cxp(cfv(cbs, cv(hs0)), csn(cv(s0))), cv(s1), cof(c10), cxp(c5, csn(cv(s0))), wceq(cv(hs0), c6))\n  syl(wceq(cv(hs0), c6), wceq(cof(cfv(cmulr, cfv(csca, cv(hs0)))), cof(c10)), wceq(cfv(cmulr, cfv(csca, cv(hs0))), c10))\n  syl6eqr(cfv(cmulr, cfv(csca, cv(hs0))), c10, cfv(cmulr, c8), wceq(cv(hs0), c6))\n  fveq2d(cmulr, cfv(csca, cv(hs0)), c8, wceq(cv(hs0), c6))\n  syl6eqr(cfv(csca, cv(hs0)), c8, cfv(csca, c6), wceq(cv(hs0), c6))\n  fveq2(cv(hs0), c6, csca)\n  ofeq(cfv(cmulr, cfv(csca, cv(hs0))), c10)\n  eqidd(cv(s1), wceq(cv(hs0), c6))\n  xpeq1d(cfv(cbs, cv(hs0)), csn(cv(s0)), c5, wceq(cv(hs0), c6))\n  syl6eqr(cfv(cbs, cv(hs0)), c5, cfv(cbs, c6), wceq(cv(hs0), c6))\n  fveq2(cv(hs0), c6, cbs)\n  df-ldual(hs0, s0, s1)\n  unex(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4)))\n  tpex(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3))\n  snex(cop(cfv(cvsca, cnx), c4))\n  diff.hs0.c(c6)\n  diff.hs0.c(universe)\n  diff.hs0.c(cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))))\n  diff.wceq.s(s0, cv(hs0), c6)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s1, cv(hs0), c6)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.s(s0)\n}","pretty":"thm ldualset(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, class c11, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 =({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ‚ãÉ { <(√ó ` ndx), c4 > }))\n  ‚ä£ c5 =(Base ` c6)\n  ‚ä£ c7 =(+ ` c8)\n  ‚ä£ c2 =(oF(c7)|`(c1 √ó c1))\n  ‚ä£ c1 =(LFnl ` c6)\n  ‚ä£ c0 =(LDual ` c6)\n  ‚ä£ c8 =(Scalar ` c6)\n  ‚ä£ c9 =(Base ` c8)\n  ‚ä£ c10 =(√ó ` c8)\n  ‚ä£ c3 =(oppR ` c8)\n  ‚ä£ c4 =(s0 ‚àà c9, s1 ‚àà c1 ‚Ü¶(s1[oF(c10)](c5 √ó { s0 })))\n  ‚ä£ (w0 ‚Üí c6 ‚àà c11)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c6)\n  ‚ä£ d(s1, c6)\n} = {\n  3syl(w0, c0 =({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ‚ãÉ { <(√ó ` ndx), c4 > }), c6 ‚àà c11, c6 ‚àà ùïå)\n  elex(c6, c11)\n  syl5eq(c0, ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ‚ãÉ { <(√ó ` ndx), c4 > }), (LDual ` c6), c6 ‚àà ùïå)\n  fvmpt(hs0, c6, universe, cld, ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ‚ãÉ { <(√ó ` ndx), c4 > }), ({ <(Base ` ndx),(LFnl ` hs0)>, <(+ ` ndx),(oF((+ `(Scalar ` hs0)))|`((LFnl ` hs0)√ó(LFnl ` hs0)))>, <(Scalar ` ndx),(oppR `(Scalar ` hs0))> } ‚ãÉ { <(√ó ` ndx),(s0 ‚àà(Base `(Scalar ` hs0)), s1 ‚àà(LFnl ` hs0)‚Ü¶(s1[oF((√ó `(Scalar ` hs0)))]((Base ` hs0)√ó { s0 })))> }))\n  uneq12d({ <(Base ` ndx),(LFnl ` hs0)>, <(+ ` ndx),(oF((+ `(Scalar ` hs0)))|`((LFnl ` hs0)√ó(LFnl ` hs0)))>, <(Scalar ` ndx),(oppR `(Scalar ` hs0))> }, { <(√ó ` ndx),(s0 ‚àà(Base `(Scalar ` hs0)), s1 ‚àà(LFnl ` hs0)‚Ü¶(s1[oF((√ó `(Scalar ` hs0)))]((Base ` hs0)√ó { s0 })))> }, { <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > }, { <(√ó ` ndx), c4 > }, hs0 = c6)\n  tpeq123d(<(Base ` ndx),(LFnl ` hs0)>, <(+ ` ndx),(oF((+ `(Scalar ` hs0)))|`((LFnl ` hs0)√ó(LFnl ` hs0)))>, <(Scalar ` ndx),(oppR `(Scalar ` hs0))>, <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 >, hs0 = c6)\n  opeq2d((Base ` ndx), (LFnl ` hs0), c1, hs0 = c6)\n  opeq2d((+ ` ndx), (oF((+ `(Scalar ` hs0)))|`((LFnl ` hs0)√ó(LFnl ` hs0))), c2, hs0 = c6)\n  syl6eqr((oF((+ `(Scalar ` hs0)))|`((LFnl ` hs0)√ó(LFnl ` hs0))), c2, (oF(c7)|`(c1 √ó c1)), hs0 = c6)\n  reseq12d(oF((+ `(Scalar ` hs0))), ((LFnl ` hs0)√ó(LFnl ` hs0)), oF(c7), (c1 √ó c1), hs0 = c6)\n  syl(hs0 = c6, oF((+ `(Scalar ` hs0)))= oF(c7), (+ `(Scalar ` hs0))= c7)\n  syl6eqr((+ `(Scalar ` hs0)), c7, (+ ` c8), hs0 = c6)\n  fveq2d(cplusg, (Scalar ` hs0), c8, hs0 = c6)\n  ofeq((+ `(Scalar ` hs0)), c7)\n  sqxpeqd((LFnl ` hs0), c1, hs0 = c6)\n  opeq2d((Scalar ` ndx), (oppR `(Scalar ` hs0)), c3, hs0 = c6)\n  syl6eqr((oppR `(Scalar ` hs0)), c3, (oppR ` c8), hs0 = c6)\n  fveq2d(coppr, (Scalar ` hs0), c8, hs0 = c6)\n  sneqd(<(√ó ` ndx),(s0 ‚àà(Base `(Scalar ` hs0)), s1 ‚àà(LFnl ` hs0)‚Ü¶(s1[oF((√ó `(Scalar ` hs0)))]((Base ` hs0)√ó { s0 })))>, <(√ó ` ndx), c4 >, hs0 = c6)\n  opeq2d((√ó ` ndx), (s0 ‚àà(Base `(Scalar ` hs0)), s1 ‚àà(LFnl ` hs0)‚Ü¶(s1[oF((√ó `(Scalar ` hs0)))]((Base ` hs0)√ó { s0 }))), c4, hs0 = c6)\n  syl6eqr((s0 ‚àà(Base `(Scalar ` hs0)), s1 ‚àà(LFnl ` hs0)‚Ü¶(s1[oF((√ó `(Scalar ` hs0)))]((Base ` hs0)√ó { s0 }))), c4, (s0 ‚àà c9, s1 ‚àà c1 ‚Ü¶(s1[oF(c10)](c5 √ó { s0 }))), hs0 = c6)\n  mpoeq123dv(s0, s1, (Base `(Scalar ` hs0)), (LFnl ` hs0), (s1[oF((√ó `(Scalar ` hs0)))]((Base ` hs0)√ó { s0 })), c9, c1, (s1[oF(c10)](c5 √ó { s0 })), hs0 = c6)\n  syl6eqr((Base `(Scalar ` hs0)), c9, (Base ` c8), hs0 = c6)\n  fveq2d(cbs, (Scalar ` hs0), c8, hs0 = c6)\n  syl6eqr((LFnl ` hs0), c1, (LFnl ` c6), hs0 = c6)\n  fveq2(hs0, c6, clfn)\n  oveq123d(s1, oF((√ó `(Scalar ` hs0))), ((Base ` hs0)√ó { s0 }), s1, oF(c10), (c5 √ó { s0 }), hs0 = c6)\n  syl(hs0 = c6, oF((√ó `(Scalar ` hs0)))= oF(c10), (√ó `(Scalar ` hs0))= c10)\n  syl6eqr((√ó `(Scalar ` hs0)), c10, (√ó ` c8), hs0 = c6)\n  fveq2d(cmulr, (Scalar ` hs0), c8, hs0 = c6)\n  syl6eqr((Scalar ` hs0), c8, (Scalar ` c6), hs0 = c6)\n  fveq2(hs0, c6, csca)\n  ofeq((√ó `(Scalar ` hs0)), c10)\n  eqidd(s1, hs0 = c6)\n  xpeq1d((Base ` hs0), { s0 }, c5, hs0 = c6)\n  syl6eqr((Base ` hs0), c5, (Base ` c6), hs0 = c6)\n  fveq2(hs0, c6, cbs)\n  df-ldual(hs0, s0, s1)\n  unex({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > }, { <(√ó ` ndx), c4 > })\n  tpex(<(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 >)\n  snex(<(√ó ` ndx), c4 >)\n  diff.hs0.c(c6)\n  diff.hs0.c(universe)\n  diff.hs0.c(({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ‚ãÉ { <(√ó ` ndx), c4 > }))\n  diff.wceq.s(s0, hs0, c6)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s1, hs0, c6)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.s(s0)\n}","parent":["3syl","elex","syl5eq","fvmpt","uneq12d","tpeq123d","opeq2d","syl6eqr","reseq12d","syl","fveq2d","ofeq","sqxpeqd","sneqd","mpoeq123dv","fveq2","oveq123d","eqidd","xpeq1d","df-ldual","unex","tpex","snex","diff.hs0.c","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["ldualvbase","ldualfvadd","ldualsca","ldualfvs"]},{"name":"ldualvbase","content":"The vectors of a dual space are functionals of the original space. (Contributed by NM, 18-Oct-2014.)","origin":"thm ldualvbase(class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c1, cfv(clfn, c2))\n  -| wceq(c3, cfv(cld, c2))\n  -| wceq(c0, cfv(cbs, c3))\n  -| wi(w0, wcel(c2, c4))\n} = {\n  3eqtr4g(c0, c1, cfv(cbs, c3), cfv(cbs, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, c2)))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0))))))))), w0)\n  fveq2d(cbs, c3, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, c2)))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0)))))))), w0)\n  ldualset(hs0, hs1, c3, c1, cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1)), cfv(coppr, cfv(csca, c2)), cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0))))), cfv(cbs, c2), c2, cfv(cplusg, cfv(csca, c2)), cfv(csca, c2), cfv(cbs, cfv(csca, c2)), cfv(cmulr, cfv(csca, c2)), c4, w0)\n  eqid(cfv(cbs, c2))\n  eqid(cfv(cplusg, cfv(csca, c2)))\n  eqid(cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1)))\n  eqid(cfv(csca, c2))\n  eqid(cfv(cbs, cfv(csca, c2)))\n  eqid(cfv(cmulr, cfv(csca, c2)))\n  eqid(cfv(coppr, cfv(csca, c2)))\n  eqid(cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0))))))\n  ax-mp(wceq(c1, cfv(cbs, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, c2)))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0)))))))))), wcel(c1, universe))\n  fvexi(c1, clfn, c2)\n  lmodbase(c1, universe, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, c2)))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0)))))))), cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1)), cfv(coppr, cfv(csca, c2)), cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0))))))\n  eqid(cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, cfv(csca, c2))), cxp(c1, c1))), cop(cfv(csca, cnx), cfv(coppr, cfv(csca, c2)))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, cfv(csca, c2)), c1, co(cv(hs1), cof(cfv(cmulr, cfv(csca, c2))), cxp(cfv(cbs, c2), csn(cv(hs0)))))))))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c2)\n  diff.hs1.c(c2)\n}","pretty":"thm ldualvbase(class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c1 =(LFnl ` c2)\n  ‚ä£ c3 =(LDual ` c2)\n  ‚ä£ c0 =(Base ` c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n} = {\n  3eqtr4g(c0, c1, (Base ` c3), (Base `({ <(Base ` ndx), c1 >, <(+ ` ndx),(oF((+ `(Scalar ` c2)))|`(c1 √ó c1))>, <(Scalar ` ndx),(oppR `(Scalar ` c2))> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 })))> })), w0)\n  fveq2d(cbs, c3, ({ <(Base ` ndx), c1 >, <(+ ` ndx),(oF((+ `(Scalar ` c2)))|`(c1 √ó c1))>, <(Scalar ` ndx),(oppR `(Scalar ` c2))> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 })))> }), w0)\n  ldualset(hs0, hs1, c3, c1, (oF((+ `(Scalar ` c2)))|`(c1 √ó c1)), (oppR `(Scalar ` c2)), (hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 }))), (Base ` c2), c2, (+ `(Scalar ` c2)), (Scalar ` c2), (Base `(Scalar ` c2)), (√ó `(Scalar ` c2)), c4, w0)\n  eqid((Base ` c2))\n  eqid((+ `(Scalar ` c2)))\n  eqid((oF((+ `(Scalar ` c2)))|`(c1 √ó c1)))\n  eqid((Scalar ` c2))\n  eqid((Base `(Scalar ` c2)))\n  eqid((√ó `(Scalar ` c2)))\n  eqid((oppR `(Scalar ` c2)))\n  eqid((hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 }))))\n  ax-mp(c1 =(Base `({ <(Base ` ndx), c1 >, <(+ ` ndx),(oF((+ `(Scalar ` c2)))|`(c1 √ó c1))>, <(Scalar ` ndx),(oppR `(Scalar ` c2))> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 })))> })), c1 ‚àà ùïå)\n  fvexi(c1, clfn, c2)\n  lmodbase(c1, universe, ({ <(Base ` ndx), c1 >, <(+ ` ndx),(oF((+ `(Scalar ` c2)))|`(c1 √ó c1))>, <(Scalar ` ndx),(oppR `(Scalar ` c2))> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 })))> }), (oF((+ `(Scalar ` c2)))|`(c1 √ó c1)), (oppR `(Scalar ` c2)), (hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 }))))\n  eqid(({ <(Base ` ndx), c1 >, <(+ ` ndx),(oF((+ `(Scalar ` c2)))|`(c1 √ó c1))>, <(Scalar ` ndx),(oppR `(Scalar ` c2))> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base `(Scalar ` c2)), hs1 ‚àà c1 ‚Ü¶(hs1[oF((√ó `(Scalar ` c2)))]((Base ` c2)√ó { hs0 })))> }))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c2)\n  diff.hs1.c(c2)\n}","parent":["3eqtr4g","fveq2d","ldualset","eqid","ax-mp","fvexi","lmodbase","diff.hs0.s","diff.hs0.c","diff.hs1.c"],"children":["ldualelvbase","ldualgrplem","lduallmodlem","lclkr","lclkrs","lcfrvalsnN","lcfrlem4","lcfrlem5","lcfrlem6","lcfrlem16","lcfr","lcdvbase","mapdunirnN"]},{"name":"ldualelvbase","content":"Utility theorem for converting a functional to a vector of the dual space in order to use standard vector theorems. (Contributed by NM, 6-Jan-2015.)","origin":"thm ldualelvbase(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wcel(c0, c1))\n  -| wceq(c2, cfv(clfn, c3))\n  -| wceq(c4, cfv(cld, c3))\n  -| wceq(c1, cfv(cbs, c4))\n  -| wi(w0, wcel(c3, c5))\n  -| wi(w0, wcel(c0, c2))\n} = {\n  eleqtrrd(c0, c1, c2, w0)\n  ldualvbase(c1, c2, c3, c4, c5, w0)\n}","pretty":"thm ldualelvbase(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 ‚àà c1)\n  ‚ä£ c2 =(LFnl ` c3)\n  ‚ä£ c4 =(LDual ` c3)\n  ‚ä£ c1 =(Base ` c4)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c5)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c2)\n} = {\n  eleqtrrd(c0, c1, c2, w0)\n  ldualvbase(c1, c2, c3, c4, c5, w0)\n}","parent":["eleqtrrd","ldualvbase"],"children":["ldual0v","ldualvsub","ldualvsubval","ldual0vs","ldual1dim","lkreqN","lkrlspeqN","lclkrlem1","lclkrlem2j","lcfrvalsnN","lcfrlem31","lcfrlem33"]},{"name":"ldualfvadd","content":"Vector addition in the dual of a vector space. (Contributed by NM, 21-Oct-2014.)","origin":"thm ldualfvadd(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(clfn, c3))\n  -| wceq(c4, cfv(csca, c3))\n  -| wceq(c5, cfv(cplusg, c4))\n  -| wceq(c6, cfv(cld, c3))\n  -| wceq(c0, cfv(cplusg, c6))\n  -| wi(w0, wcel(c3, c7))\n  -| wceq(c1, cres(cof(c5), cxp(c2, c2)))\n} = {\n  3eqtr4g(c0, c1, cfv(cplusg, c6), cfv(cplusg, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), c1), cop(cfv(csca, cnx), cfv(coppr, c4))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0))))))))), w0)\n  fveq2d(cplusg, c6, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), c1), cop(cfv(csca, cnx), cfv(coppr, c4))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))), w0)\n  ldualset(hs0, hs1, c6, c2, c1, cfv(coppr, c4), cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0))))), cfv(cbs, c3), c3, c5, c4, cfv(cbs, c4), cfv(cmulr, c4), c7, w0)\n  eqid(cfv(cbs, c3))\n  eqid(cfv(cbs, c4))\n  eqid(cfv(cmulr, c4))\n  eqid(cfv(coppr, c4))\n  eqid(cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0))))))\n  ax-mp(wceq(c1, cfv(cplusg, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), c1), cop(cfv(csca, cnx), cfv(coppr, c4))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))))), wcel(c1, universe))\n  eqeltri(c1, universe, cres(cof(c5), cxp(c2, c2)))\n  ax-mp(wcel(cres(cof(c5), cxp(c2, c2)), universe), wcel(c2, universe))\n  fvexi(c2, clfn, c3)\n  ofmresex(c5, c2, c2, universe, universe, wcel(c2, universe))\n  id(wcel(c2, universe))\n  lmodplusg(c1, universe, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), c1), cop(cfv(csca, cnx), cfv(coppr, c4))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))), c2, cfv(coppr, c4), cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0))))))\n  eqid(cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), c1), cop(cfv(csca, cnx), cfv(coppr, c4))), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c4), c2, co(cv(hs1), cof(cfv(cmulr, c4)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c3)\n  diff.hs1.c(c3)\n}","pretty":"thm ldualfvadd(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(LFnl ` c3)\n  ‚ä£ c4 =(Scalar ` c3)\n  ‚ä£ c5 =(+ ` c4)\n  ‚ä£ c6 =(LDual ` c3)\n  ‚ä£ c0 =(+ ` c6)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c7)\n  ‚ä£ c1 =(oF(c5)|`(c2 √ó c2))\n} = {\n  3eqtr4g(c0, c1, (+ ` c6), (+ `({ <(Base ` ndx), c2 >, <(+ ` ndx), c1 >, <(Scalar ` ndx),(oppR ` c4)> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 })))> })), w0)\n  fveq2d(cplusg, c6, ({ <(Base ` ndx), c2 >, <(+ ` ndx), c1 >, <(Scalar ` ndx),(oppR ` c4)> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 })))> }), w0)\n  ldualset(hs0, hs1, c6, c2, c1, (oppR ` c4), (hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 }))), (Base ` c3), c3, c5, c4, (Base ` c4), (√ó ` c4), c7, w0)\n  eqid((Base ` c3))\n  eqid((Base ` c4))\n  eqid((√ó ` c4))\n  eqid((oppR ` c4))\n  eqid((hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 }))))\n  ax-mp(c1 =(+ `({ <(Base ` ndx), c2 >, <(+ ` ndx), c1 >, <(Scalar ` ndx),(oppR ` c4)> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 })))> })), c1 ‚àà ùïå)\n  eqeltri(c1, universe, (oF(c5)|`(c2 √ó c2)))\n  ax-mp((oF(c5)|`(c2 √ó c2))‚àà ùïå, c2 ‚àà ùïå)\n  fvexi(c2, clfn, c3)\n  ofmresex(c5, c2, c2, universe, universe, c2 ‚àà ùïå)\n  id(c2 ‚àà ùïå)\n  lmodplusg(c1, universe, ({ <(Base ` ndx), c2 >, <(+ ` ndx), c1 >, <(Scalar ` ndx),(oppR ` c4)> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 })))> }), c2, (oppR ` c4), (hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 }))))\n  eqid(({ <(Base ` ndx), c2 >, <(+ ` ndx), c1 >, <(Scalar ` ndx),(oppR ` c4)> } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c4), hs1 ‚àà c2 ‚Ü¶(hs1[oF((√ó ` c4))]((Base ` c3)√ó { hs0 })))> }))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c3)\n  diff.hs1.c(c3)\n}","parent":["3eqtr4g","fveq2d","ldualset","eqid","ax-mp","eqeltri","fvexi","ofmresex","id","lmodplusg","diff.hs0.s","diff.hs0.c","diff.hs1.c"],"children":["ldualvadd"]},{"name":"ldualvadd","content":"Vector addition in the dual of a vector space. (Contributed by NM, 21-Oct-2014.)","origin":"thm ldualvadd(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  |- wi(w0, wceq(co(c0, c1, c2), co(c0, cof(c3), c2)))\n  -| wceq(c4, cfv(clfn, c5))\n  -| wceq(c6, cfv(csca, c5))\n  -| wceq(c3, cfv(cplusg, c6))\n  -| wceq(c7, cfv(cld, c5))\n  -| wceq(c1, cfv(cplusg, c7))\n  -| wi(w0, wcel(c5, c8))\n  -| wi(w0, wcel(c0, c4))\n  -| wi(w0, wcel(c2, c4))\n} = {\n  eqtrd(co(c0, c1, c2), co(c0, cof(c3), c2), co(c0, cres(cof(c3), cxp(c4, c4)), c2), w0)\n  oveqd(c0, c1, c2, cres(cof(c3), cxp(c4, c4)), w0)\n  ldualfvadd(c1, cres(cof(c3), cxp(c4, c4)), c4, c5, c6, c3, c7, c8, w0)\n  eqid(cres(cof(c3), cxp(c4, c4)))\n  ofmresval(c0, c3, c4, c4, c2, w0)\n}","pretty":"thm ldualvadd(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)=(c0[oF(c3)]c2))\n  ‚ä£ c4 =(LFnl ` c5)\n  ‚ä£ c6 =(Scalar ` c5)\n  ‚ä£ c3 =(+ ` c6)\n  ‚ä£ c7 =(LDual ` c5)\n  ‚ä£ c1 =(+ ` c7)\n  ‚ä£ (w0 ‚Üí c5 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c4)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n} = {\n  eqtrd((c0[c1]c2), (c0[oF(c3)]c2), (c0[(oF(c3)|`(c4 √ó c4))]c2), w0)\n  oveqd(c0, c1, c2, (oF(c3)|`(c4 √ó c4)), w0)\n  ldualfvadd(c1, (oF(c3)|`(c4 √ó c4)), c4, c5, c6, c3, c7, c8, w0)\n  eqid((oF(c3)|`(c4 √ó c4)))\n  ofmresval(c0, c3, c4, c4, c2, w0)\n}","parent":["eqtrd","oveqd","ldualfvadd","eqid","ofmresval"],"children":["ldualvaddcl","ldualvaddval","ldualvaddcom","ldualvsdi1","ldualvsdi2","ldualgrplem","ldual0v"]},{"name":"ldualvaddcl","content":"The value of vector addition in the dual of a vector space is a functional. (Contributed by NM, 21-Oct-2014.)","origin":"thm ldualvaddcl(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wcel(co(c0, c1, c2), c3))\n  -| wceq(c3, cfv(clfn, c4))\n  -| wceq(c5, cfv(cld, c4))\n  -| wceq(c1, cfv(cplusg, c5))\n  -| wi(w0, wcel(c4, clmod))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(c2, c3))\n} = {\n  eqeltrd(co(c0, c1, c2), c3, co(c0, cof(cfv(cplusg, cfv(csca, c4))), c2), w0)\n  ldualvadd(c0, c1, c2, cfv(cplusg, cfv(csca, c4)), c3, c4, cfv(csca, c4), c5, clmod, w0)\n  lfladdcl(c0, cfv(cplusg, cfv(csca, c4)), c2, c3, cfv(csca, c4), c4, w0)\n  eqid(cfv(csca, c4))\n  eqid(cfv(cplusg, cfv(csca, c4)))\n}","pretty":"thm ldualvaddcl(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)‚àà c3)\n  ‚ä£ c3 =(LFnl ` c4)\n  ‚ä£ c5 =(LDual ` c4)\n  ‚ä£ c1 =(+ ` c5)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c3)\n} = {\n  eqeltrd((c0[c1]c2), c3, (c0[oF((+ `(Scalar ` c4)))]c2), w0)\n  ldualvadd(c0, c1, c2, (+ `(Scalar ` c4)), c3, c4, (Scalar ` c4), c5, clmod, w0)\n  lfladdcl(c0, (+ `(Scalar ` c4)), c2, c3, (Scalar ` c4), c4, w0)\n  eqid((Scalar ` c4))\n  eqid((+ `(Scalar ` c4)))\n}","parent":["eqeltrd","ldualvadd","lfladdcl","eqid"],"children":["ldualvsdi1","ldualgrplem","ldualvsubcl","lkrin","lclkrlem2e","lclkrlem2f","lclkrlem2h","lclkrlem2m","lclkrlem2n","lclkrlem2o","lclkrlem2p","lclkrlem2s","lclkrlem2v","lclkrlem2","lclkrslem2"]},{"name":"ldualvaddval","content":"The value of the value of vector addition in the dual of a vector space. (Contributed by NM, 7-Jan-2015.)","origin":"thm ldualvaddval(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wceq(cfv(co(c0, c1, c2), c3), co(cfv(c0, c3), c4, cfv(c2, c3))))\n  -| wceq(c5, cfv(cbs, c6))\n  -| wceq(c7, cfv(csca, c6))\n  -| wceq(c4, cfv(cplusg, c7))\n  -| wceq(c8, cfv(clfn, c6))\n  -| wceq(c9, cfv(cld, c6))\n  -| wceq(c1, cfv(cplusg, c9))\n  -| wi(w0, wcel(c6, clmod))\n  -| wi(w0, wcel(c0, c8))\n  -| wi(w0, wcel(c2, c8))\n  -| wi(w0, wcel(c3, c5))\n} = {\n  eqtrd(cfv(co(c0, c1, c2), c3), co(cfv(c0, c3), c4, cfv(c2, c3)), cfv(co(c0, cof(c4), c2), c3), w0)\n  fveq1d(co(c0, c1, c2), c3, co(c0, cof(c4), c2), w0)\n  ldualvadd(c0, c1, c2, c4, c8, c6, c7, c9, clmod, w0)\n  mpdan(w0, wceq(cfv(co(c0, cof(c4), c2), c3), co(cfv(c0, c3), c4, cfv(c2, c3))), wcel(c3, c5))\n  ofval(c3, c5, c0, c4, c2, cfv(c0, c3), cfv(c2, c3), c5, c5, universe, universe, w0)\n  syl2anc(w0, wfn(c0, c5), wcel(c6, clmod), wcel(c0, c8))\n  ffnd(c0, c5, cfv(cbs, c7), wa(wcel(c6, clmod), wcel(c0, c8)))\n  lflf(c6, clmod, c0, c8, c5, cfv(cbs, c7), c7)\n  syl2anc(w0, wfn(c2, c5), wcel(c6, clmod), wcel(c2, c8))\n  ffnd(c2, c5, cfv(cbs, c7), wa(wcel(c6, clmod), wcel(c2, c8)))\n  lflf(c6, clmod, c2, c8, c5, cfv(cbs, c7), c7)\n  eqid(cfv(cbs, c7))\n  a1i(w0, wcel(c5, universe))\n  fvexi(c5, cbs, c6)\n  inidm(c5)\n  eqidd(cfv(c0, c3), wa(w0, wcel(c3, c5)))\n  eqidd(cfv(c2, c3), wa(w0, wcel(c3, c5)))\n}","pretty":"thm ldualvaddval(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0[c1]c2)` c3)=((c0 ` c3)[c4](c2 ` c3)))\n  ‚ä£ c5 =(Base ` c6)\n  ‚ä£ c7 =(Scalar ` c6)\n  ‚ä£ c4 =(+ ` c7)\n  ‚ä£ c8 =(LFnl ` c6)\n  ‚ä£ c9 =(LDual ` c6)\n  ‚ä£ c1 =(+ ` c9)\n  ‚ä£ (w0 ‚Üí c6 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c5)\n} = {\n  eqtrd(((c0[c1]c2)` c3), ((c0 ` c3)[c4](c2 ` c3)), ((c0[oF(c4)]c2)` c3), w0)\n  fveq1d((c0[c1]c2), c3, (c0[oF(c4)]c2), w0)\n  ldualvadd(c0, c1, c2, c4, c8, c6, c7, c9, clmod, w0)\n  mpdan(w0, ((c0[oF(c4)]c2)` c3)=((c0 ` c3)[c4](c2 ` c3)), c3 ‚àà c5)\n  ofval(c3, c5, c0, c4, c2, (c0 ` c3), (c2 ` c3), c5, c5, universe, universe, w0)\n  syl2anc(w0, c0[Fn]c5, c6 ‚àà LMod, c0 ‚àà c8)\n  ffnd(c0, c5, (Base ` c7), (c6 ‚àà LMod ‚àß c0 ‚àà c8))\n  lflf(c6, clmod, c0, c8, c5, (Base ` c7), c7)\n  syl2anc(w0, c2[Fn]c5, c6 ‚àà LMod, c2 ‚àà c8)\n  ffnd(c2, c5, (Base ` c7), (c6 ‚àà LMod ‚àß c2 ‚àà c8))\n  lflf(c6, clmod, c2, c8, c5, (Base ` c7), c7)\n  eqid((Base ` c7))\n  a1i(w0, c5 ‚àà ùïå)\n  fvexi(c5, cbs, c6)\n  inidm(c5)\n  eqidd((c0 ` c3), (w0 ‚àß c3 ‚àà c5))\n  eqidd((c2 ` c3), (w0 ‚àß c3 ‚àà c5))\n}","parent":["eqtrd","fveq1d","ldualvadd","mpdan","ofval","syl2anc","ffnd","lflf","eqid","a1i","fvexi","inidm","eqidd"],"children":["ldualvsubval","lkrin","lcdvaddval"]},{"name":"ldualsca","content":"The ring of scalars of the dual of a vector space. (Contributed by NM, 18-Oct-2014.)","origin":"thm ldualsca(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(csca, c3))\n  -| wceq(c1, cfv(coppr, c2))\n  -| wceq(c4, cfv(cld, c3))\n  -| wceq(c0, cfv(csca, c4))\n  -| wi(w0, wcel(c3, c5))\n} = {\n  3eqtr4g(c0, c1, cfv(csca, c4), cfv(csca, cun(ctp(cop(cfv(cbs, cnx), cfv(clfn, c3)), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3)))), cop(cfv(csca, cnx), c1)), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0))))))))), w0)\n  fveq2d(csca, c4, cun(ctp(cop(cfv(cbs, cnx), cfv(clfn, c3)), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3)))), cop(cfv(csca, cnx), c1)), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))), w0)\n  ldualset(hs0, hs1, c4, cfv(clfn, c3), cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3))), c1, cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0))))), cfv(cbs, c3), c3, cfv(cplusg, c2), c2, cfv(cbs, c2), cfv(cmulr, c2), c5, w0)\n  eqid(cfv(cbs, c3))\n  eqid(cfv(cplusg, c2))\n  eqid(cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3))))\n  eqid(cfv(clfn, c3))\n  eqid(cfv(cbs, c2))\n  eqid(cfv(cmulr, c2))\n  eqid(cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0))))))\n  ax-mp(wceq(c1, cfv(csca, cun(ctp(cop(cfv(cbs, cnx), cfv(clfn, c3)), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3)))), cop(cfv(csca, cnx), c1)), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))))), wcel(c1, universe))\n  fvexi(c1, coppr, c2)\n  lmodsca(c1, universe, cun(ctp(cop(cfv(cbs, cnx), cfv(clfn, c3)), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3)))), cop(cfv(csca, cnx), c1)), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))), cfv(clfn, c3), cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3))), cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0))))))\n  eqid(cun(ctp(cop(cfv(cbs, cnx), cfv(clfn, c3)), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c2)), cxp(cfv(clfn, c3), cfv(clfn, c3)))), cop(cfv(csca, cnx), c1)), csn(cop(cfv(cvsca, cnx), cmpo(hs0, hs1, cfv(cbs, c2), cfv(clfn, c3), co(cv(hs1), cof(cfv(cmulr, c2)), cxp(cfv(cbs, c3), csn(cv(hs0)))))))))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c3)\n  diff.hs1.c(c3)\n}","pretty":"thm ldualsca(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(Scalar ` c3)\n  ‚ä£ c1 =(oppR ` c2)\n  ‚ä£ c4 =(LDual ` c3)\n  ‚ä£ c0 =(Scalar ` c4)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c5)\n} = {\n  3eqtr4g(c0, c1, (Scalar ` c4), (Scalar `({ <(Base ` ndx),(LFnl ` c3)>, <(+ ` ndx),(oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3)))>, <(Scalar ` ndx), c1 > } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 })))> })), w0)\n  fveq2d(csca, c4, ({ <(Base ` ndx),(LFnl ` c3)>, <(+ ` ndx),(oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3)))>, <(Scalar ` ndx), c1 > } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 })))> }), w0)\n  ldualset(hs0, hs1, c4, (LFnl ` c3), (oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3))), c1, (hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 }))), (Base ` c3), c3, (+ ` c2), c2, (Base ` c2), (√ó ` c2), c5, w0)\n  eqid((Base ` c3))\n  eqid((+ ` c2))\n  eqid((oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3))))\n  eqid((LFnl ` c3))\n  eqid((Base ` c2))\n  eqid((√ó ` c2))\n  eqid((hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 }))))\n  ax-mp(c1 =(Scalar `({ <(Base ` ndx),(LFnl ` c3)>, <(+ ` ndx),(oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3)))>, <(Scalar ` ndx), c1 > } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 })))> })), c1 ‚àà ùïå)\n  fvexi(c1, coppr, c2)\n  lmodsca(c1, universe, ({ <(Base ` ndx),(LFnl ` c3)>, <(+ ` ndx),(oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3)))>, <(Scalar ` ndx), c1 > } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 })))> }), (LFnl ` c3), (oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3))), (hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 }))))\n  eqid(({ <(Base ` ndx),(LFnl ` c3)>, <(+ ` ndx),(oF((+ ` c2))|`((LFnl ` c3)√ó(LFnl ` c3)))>, <(Scalar ` ndx), c1 > } ‚ãÉ { <(√ó ` ndx),(hs0 ‚àà(Base ` c2), hs1 ‚àà(LFnl ` c3)‚Ü¶(hs1[oF((√ó ` c2))]((Base ` c3)√ó { hs0 })))> }))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c3)\n  diff.hs1.c(c3)\n}","parent":["3eqtr4g","fveq2d","ldualset","eqid","ax-mp","fvexi","lmodsca","diff.hs0.s","diff.hs0.c","diff.hs1.c"],"children":["ldualsbase","ldualsaddN","ldualsmul","ldual0","ldual1","ldualneg","lduallmodlem","lduallvec","ldualvsub","lcdsca"]},{"name":"ldualsbase","content":"Base set of scalar ring for the dual of a vector space. (Contributed by NM, 24-Oct-2014.)","origin":"thm ldualsbase(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(csca, c3))\n  -| wceq(c1, cfv(cbs, c2))\n  -| wceq(c4, cfv(cld, c3))\n  -| wceq(c5, cfv(csca, c4))\n  -| wceq(c0, cfv(cbs, c5))\n  -| wi(w0, wcel(c3, c6))\n} = {\n  3eqtr4g(c0, c1, cfv(cbs, c5), cfv(cbs, cfv(coppr, c2)), w0)\n  fveq2d(cbs, c5, cfv(coppr, c2), w0)\n  ldualsca(c5, cfv(coppr, c2), c2, c3, c4, c6, w0)\n  opprbas(c1, cfv(coppr, c2), c2)\n  eqid(cfv(coppr, c2))\n}","pretty":"thm ldualsbase(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(Scalar ` c3)\n  ‚ä£ c1 =(Base ` c2)\n  ‚ä£ c4 =(LDual ` c3)\n  ‚ä£ c5 =(Scalar ` c4)\n  ‚ä£ c0 =(Base ` c5)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c6)\n} = {\n  3eqtr4g(c0, c1, (Base ` c5), (Base `(oppR ` c2)), w0)\n  fveq2d(cbs, c5, (oppR ` c2), w0)\n  ldualsca(c5, (oppR ` c2), c2, c3, c4, c6, w0)\n  opprbas(c1, (oppR ` c2), c2)\n  eqid((oppR ` c2))\n}","parent":["3eqtr4g","fveq2d","ldualsca","opprbas","eqid"],"children":["ldualvsubval","ldualssvscl","ldual1dim","lkreqN","lkrlspeqN","lclkr","lclkrs","lcfrvalsnN"]},{"name":"ldualsaddN","content":"Scalar addition for the dual of a vector space. (Contributed by NM, 24-Oct-2014.) (New usage is discouraged.)","origin":"thm ldualsaddN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(csca, c3))\n  -| wceq(c1, cfv(cplusg, c2))\n  -| wceq(c4, cfv(cld, c3))\n  -| wceq(c5, cfv(csca, c4))\n  -| wceq(c0, cfv(cplusg, c5))\n  -| wi(w0, wcel(c3, c6))\n} = {\n  3eqtr4g(c0, c1, cfv(cplusg, c5), cfv(cplusg, cfv(coppr, c2)), w0)\n  fveq2d(cplusg, c5, cfv(coppr, c2), w0)\n  ldualsca(c5, cfv(coppr, c2), c2, c3, c4, c6, w0)\n  oppradd(c1, cfv(coppr, c2), c2)\n  eqid(cfv(coppr, c2))\n}","pretty":"thm ldualsaddN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(Scalar ` c3)\n  ‚ä£ c1 =(+ ` c2)\n  ‚ä£ c4 =(LDual ` c3)\n  ‚ä£ c5 =(Scalar ` c4)\n  ‚ä£ c0 =(+ ` c5)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c6)\n} = {\n  3eqtr4g(c0, c1, (+ ` c5), (+ `(oppR ` c2)), w0)\n  fveq2d(cplusg, c5, (oppR ` c2), w0)\n  ldualsca(c5, (oppR ` c2), c2, c3, c4, c6, w0)\n  oppradd(c1, (oppR ` c2), c2)\n  eqid((oppR ` c2))\n}","parent":["3eqtr4g","fveq2d","ldualsca","oppradd","eqid"],"children":[]},{"name":"ldualsmul","content":"Scalar multiplication for the dual of a vector space. (Contributed by NM, 19-Oct-2014.) (Revised by Mario Carneiro, 22-Sep-2015.)","origin":"thm ldualsmul(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wceq(co(c0, c1, c2), co(c2, c3, c0)))\n  -| wceq(c4, cfv(csca, c5))\n  -| wceq(c6, cfv(cbs, c4))\n  -| wceq(c3, cfv(cmulr, c4))\n  -| wceq(c7, cfv(cld, c5))\n  -| wceq(c8, cfv(csca, c7))\n  -| wceq(c1, cfv(cmulr, c8))\n  -| wi(w0, wcel(c5, c9))\n  -| wi(w0, wcel(c0, c6))\n  -| wi(w0, wcel(c2, c6))\n} = {\n  a1ii(wi(w0, wceq(co(c0, c1, c2), co(c2, c3, c0))), wi(w0, wcel(c0, c6)))\n  a1ii(wi(w0, wceq(co(c0, c1, c2), co(c2, c3, c0))), wi(w0, wcel(c2, c6)))\n  syl6eq(co(c0, c1, c2), co(c2, c3, c0), co(c0, cfv(cmulr, cfv(coppr, c4)), c2), w0)\n  oveqd(c0, c1, c2, cfv(cmulr, cfv(coppr, c4)), w0)\n  syl5eq(c1, cfv(cmulr, cfv(coppr, c4)), cfv(cmulr, c8), w0)\n  fveq2d(cmulr, c8, cfv(coppr, c4), w0)\n  ldualsca(c8, cfv(coppr, c4), c4, c5, c7, c9, w0)\n  opprmul(c0, cfv(cmulr, cfv(coppr, c4)), c2, c3, c6, c4, cfv(coppr, c4))\n  eqid(cfv(coppr, c4))\n  eqid(cfv(cmulr, cfv(coppr, c4)))\n}","pretty":"thm ldualsmul(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)=(c2[c3]c0))\n  ‚ä£ c4 =(Scalar ` c5)\n  ‚ä£ c6 =(Base ` c4)\n  ‚ä£ c3 =(√ó ` c4)\n  ‚ä£ c7 =(LDual ` c5)\n  ‚ä£ c8 =(Scalar ` c7)\n  ‚ä£ c1 =(√ó ` c8)\n  ‚ä£ (w0 ‚Üí c5 ‚àà c9)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c6)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c6)\n} = {\n  a1ii((w0 ‚Üí(c0[c1]c2)=(c2[c3]c0)), (w0 ‚Üí c0 ‚àà c6))\n  a1ii((w0 ‚Üí(c0[c1]c2)=(c2[c3]c0)), (w0 ‚Üí c2 ‚àà c6))\n  syl6eq((c0[c1]c2), (c2[c3]c0), (c0[(√ó `(oppR ` c4))]c2), w0)\n  oveqd(c0, c1, c2, (√ó `(oppR ` c4)), w0)\n  syl5eq(c1, (√ó `(oppR ` c4)), (√ó ` c8), w0)\n  fveq2d(cmulr, c8, (oppR ` c4), w0)\n  ldualsca(c8, (oppR ` c4), c4, c5, c7, c9, w0)\n  opprmul(c0, (√ó `(oppR ` c4)), c2, c3, c6, c4, (oppR ` c4))\n  eqid((oppR ` c4))\n  eqid((√ó `(oppR ` c4)))\n}","parent":["a1ii","syl6eq","oveqd","syl5eq","fveq2d","ldualsca","opprmul","eqid"],"children":["ldualvsass2"]},{"name":"ldualfvs","content":"Scalar product operation for the dual of a vector space. (Contributed by NM, 18-Oct-2014.)","origin":"thm ldualfvs(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(clfn, c3))\n  -| wceq(c4, cfv(cbs, c3))\n  -| wceq(c5, cfv(csca, c3))\n  -| wceq(c6, cfv(cbs, c5))\n  -| wceq(c7, cfv(cmulr, c5))\n  -| wceq(c8, cfv(cld, c3))\n  -| wceq(c0, cfv(cvsca, c8))\n  -| wi(w0, wcel(c3, c9))\n  -| wceq(c1, cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n  -| diffsc(s0, c6)\n  -| diffsc(s0, c7)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n  -| diffsc(s1, c4)\n  -| diffsc(s1, c6)\n  -| diffsc(s1, c7)\n} = {\n  a1ii(wi(w0, wceq(c0, c1)), diffsc(s0, c2))\n  a1ii(wi(w0, wceq(c0, c1)), diffsc(s0, c4))\n  a1ii(wi(w0, wceq(c0, c1)), diffsc(s0, c7))\n  a1ii(wi(w0, wceq(c0, c1)), diffsc(s1, c4))\n  a1ii(wi(w0, wceq(c0, c1)), diffsc(s1, c7))\n  3eqtr4g(c0, c1, cfv(cvsca, c8), cfv(cvsca, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c5)), cxp(c2, c2))), cop(cfv(csca, cnx), cfv(coppr, c5))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))))))), w0)\n  fveq2d(cvsca, c8, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c5)), cxp(c2, c2))), cop(cfv(csca, cnx), cfv(coppr, c5))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0)))))))), w0)\n  ldualset(s0, s1, c8, c2, cres(cof(cfv(cplusg, c5)), cxp(c2, c2)), cfv(coppr, c5), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))), c4, c3, cfv(cplusg, c5), c5, c6, c7, c9, w0)\n  eqid(cfv(cplusg, c5))\n  eqid(cres(cof(cfv(cplusg, c5)), cxp(c2, c2)))\n  eqid(cfv(coppr, c5))\n  eqid(cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))))\n  eqtri(c1, cfv(cvsca, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c5)), cxp(c2, c2))), cop(cfv(csca, cnx), cfv(coppr, c5))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))))))), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))))\n  ax-mp(wceq(cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))), cfv(cvsca, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c5)), cxp(c2, c2))), cop(cfv(csca, cnx), cfv(coppr, c5))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0)))))))))), wcel(cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))), universe))\n  mpt2ex(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0)))))\n  fvexi(c6, cbs, c5)\n  fvexi(c2, clfn, c3)\n  lmodvsca(cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0))))), universe, cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c5)), cxp(c2, c2))), cop(cfv(csca, cnx), cfv(coppr, c5))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0)))))))), c2, cres(cof(cfv(cplusg, c5)), cxp(c2, c2)), cfv(coppr, c5))\n  eqid(cun(ctp(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), cres(cof(cfv(cplusg, c5)), cxp(c2, c2))), cop(cfv(csca, cnx), cfv(coppr, c5))), csn(cop(cfv(cvsca, cnx), cmpo(s0, s1, c6, c2, co(cv(s1), cof(c7), cxp(c4, csn(cv(s0)))))))))\n}","pretty":"thm ldualfvs(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(LFnl ` c3)\n  ‚ä£ c4 =(Base ` c3)\n  ‚ä£ c5 =(Scalar ` c3)\n  ‚ä£ c6 =(Base ` c5)\n  ‚ä£ c7 =(√ó ` c5)\n  ‚ä£ c8 =(LDual ` c3)\n  ‚ä£ c0 =(√ó ` c8)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c9)\n  ‚ä£ c1 =(s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s0, c4)\n  ‚ä£ d(s0, c6)\n  ‚ä£ d(s0, c7)\n  ‚ä£ d(s1, c2)\n  ‚ä£ d(s1, c3)\n  ‚ä£ d(s1, c4)\n  ‚ä£ d(s1, c6)\n  ‚ä£ d(s1, c7)\n} = {\n  a1ii((w0 ‚Üí c0 = c1), d(s0, c2))\n  a1ii((w0 ‚Üí c0 = c1), d(s0, c4))\n  a1ii((w0 ‚Üí c0 = c1), d(s0, c7))\n  a1ii((w0 ‚Üí c0 = c1), d(s1, c4))\n  a1ii((w0 ‚Üí c0 = c1), d(s1, c7))\n  3eqtr4g(c0, c1, (√ó ` c8), (√ó `({ <(Base ` ndx), c2 >, <(+ ` ndx),(oF((+ ` c5))|`(c2 √ó c2))>, <(Scalar ` ndx),(oppR ` c5)> } ‚ãÉ { <(√ó ` ndx),(s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))> })), w0)\n  fveq2d(cvsca, c8, ({ <(Base ` ndx), c2 >, <(+ ` ndx),(oF((+ ` c5))|`(c2 √ó c2))>, <(Scalar ` ndx),(oppR ` c5)> } ‚ãÉ { <(√ó ` ndx),(s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))> }), w0)\n  ldualset(s0, s1, c8, c2, (oF((+ ` c5))|`(c2 √ó c2)), (oppR ` c5), (s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 }))), c4, c3, (+ ` c5), c5, c6, c7, c9, w0)\n  eqid((+ ` c5))\n  eqid((oF((+ ` c5))|`(c2 √ó c2)))\n  eqid((oppR ` c5))\n  eqid((s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 }))))\n  eqtri(c1, (√ó `({ <(Base ` ndx), c2 >, <(+ ` ndx),(oF((+ ` c5))|`(c2 √ó c2))>, <(Scalar ` ndx),(oppR ` c5)> } ‚ãÉ { <(√ó ` ndx),(s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))> })), (s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 }))))\n  ax-mp((s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))=(√ó `({ <(Base ` ndx), c2 >, <(+ ` ndx),(oF((+ ` c5))|`(c2 √ó c2))>, <(Scalar ` ndx),(oppR ` c5)> } ‚ãÉ { <(√ó ` ndx),(s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))> })), (s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))‚àà ùïå)\n  mpt2ex(s0, s1, c6, c2, (s1[oF(c7)](c4 √ó { s0 })))\n  fvexi(c6, cbs, c5)\n  fvexi(c2, clfn, c3)\n  lmodvsca((s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 }))), universe, ({ <(Base ` ndx), c2 >, <(+ ` ndx),(oF((+ ` c5))|`(c2 √ó c2))>, <(Scalar ` ndx),(oppR ` c5)> } ‚ãÉ { <(√ó ` ndx),(s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))> }), c2, (oF((+ ` c5))|`(c2 √ó c2)), (oppR ` c5))\n  eqid(({ <(Base ` ndx), c2 >, <(+ ` ndx),(oF((+ ` c5))|`(c2 √ó c2))>, <(Scalar ` ndx),(oppR ` c5)> } ‚ãÉ { <(√ó ` ndx),(s0 ‚àà c6, s1 ‚àà c2 ‚Ü¶(s1[oF(c7)](c4 √ó { s0 })))> }))\n}","parent":["a1ii","3eqtr4g","fveq2d","ldualset","eqid","eqtri","ax-mp","mpt2ex","fvexi","lmodvsca"],"children":["ldualvs"]},{"name":"ldualvs","content":"Scalar product operation value (which is a functional) for the dual of a vector space. (Contributed by NM, 18-Oct-2014.)","origin":"thm ldualvs(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  |- wi(w0, wceq(co(c0, c1, c2), co(c2, cof(c3), cxp(c4, csn(c0)))))\n  -| wceq(c5, cfv(clfn, c6))\n  -| wceq(c4, cfv(cbs, c6))\n  -| wceq(c7, cfv(csca, c6))\n  -| wceq(c8, cfv(cbs, c7))\n  -| wceq(c3, cfv(cmulr, c7))\n  -| wceq(c9, cfv(cld, c6))\n  -| wceq(c1, cfv(cvsca, c9))\n  -| wi(w0, wcel(c6, c10))\n  -| wi(w0, wcel(c0, c8))\n  -| wi(w0, wcel(c2, c5))\n} = {\n  eqtrd(co(c0, c1, c2), co(c2, cof(c3), cxp(c4, csn(c0))), co(c0, cmpo(hs0, hs1, c8, c5, co(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0))))), c2), w0)\n  oveqd(c0, c1, c2, cmpo(hs0, hs1, c8, c5, co(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0))))), w0)\n  ldualfvs(hs0, hs1, c1, cmpo(hs0, hs1, c8, c5, co(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0))))), c5, c6, c4, c7, c8, c3, c9, c10, w0)\n  syl2anc(w0, wceq(co(c0, cmpo(hs0, hs1, c8, c5, co(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0))))), c2), co(c2, cof(c3), cxp(c4, csn(c0)))), wcel(c0, c8), wcel(c2, c5))\n  ovmpt2(hs0, hs1, c0, c8, c2, c5, cmpo(hs0, hs1, c8, c5, co(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0))))), co(c2, cof(c3), cxp(c4, csn(c0))), co(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0)))), co(cv(hs1), cof(c3), cxp(c4, csn(c0))))\n  oveq2d(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0))), cxp(c4, csn(c0)), wceq(cv(hs0), c0))\n  xpeq2d(c4, csn(cv(hs0)), csn(c0), wceq(cv(hs0), c0))\n  sneq(cv(hs0), c0)\n  oveq1(cv(hs1), c2, cof(c3), cxp(c4, csn(c0)))\n  eqid(cmpo(hs0, hs1, c8, c5, co(cv(hs1), cof(c3), cxp(c4, csn(cv(hs0))))))\n  ovex(c2, cof(c3), cxp(c4, csn(c0)))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c5)\n  diff.hs0.c(c6)\n  diff.hs0.c(c4)\n  diff.hs0.c(c8)\n  diff.hs0.c(c3)\n  diff.hs1.c(c5)\n  diff.hs1.c(c6)\n  diff.hs1.c(c4)\n  diff.hs1.c(c8)\n  diff.hs1.c(c3)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(co(c2, cof(c3), cxp(c4, csn(c0))))\n  diff.hs1.c(c0)\n  diff.hs1.c(c2)\n  diff.hs1.c(co(c2, cof(c3), cxp(c4, csn(c0))))\n}","pretty":"thm ldualvs(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)=(c2[oF(c3)](c4 √ó { c0 })))\n  ‚ä£ c5 =(LFnl ` c6)\n  ‚ä£ c4 =(Base ` c6)\n  ‚ä£ c7 =(Scalar ` c6)\n  ‚ä£ c8 =(Base ` c7)\n  ‚ä£ c3 =(√ó ` c7)\n  ‚ä£ c9 =(LDual ` c6)\n  ‚ä£ c1 =(√ó ` c9)\n  ‚ä£ (w0 ‚Üí c6 ‚àà c10)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c5)\n} = {\n  eqtrd((c0[c1]c2), (c2[oF(c3)](c4 √ó { c0 })), (c0[(hs0 ‚àà c8, hs1 ‚àà c5 ‚Ü¶(hs1[oF(c3)](c4 √ó { hs0 })))]c2), w0)\n  oveqd(c0, c1, c2, (hs0 ‚àà c8, hs1 ‚àà c5 ‚Ü¶(hs1[oF(c3)](c4 √ó { hs0 }))), w0)\n  ldualfvs(hs0, hs1, c1, (hs0 ‚àà c8, hs1 ‚àà c5 ‚Ü¶(hs1[oF(c3)](c4 √ó { hs0 }))), c5, c6, c4, c7, c8, c3, c9, c10, w0)\n  syl2anc(w0, (c0[(hs0 ‚àà c8, hs1 ‚àà c5 ‚Ü¶(hs1[oF(c3)](c4 √ó { hs0 })))]c2)=(c2[oF(c3)](c4 √ó { c0 })), c0 ‚àà c8, c2 ‚àà c5)\n  ovmpt2(hs0, hs1, c0, c8, c2, c5, (hs0 ‚àà c8, hs1 ‚àà c5 ‚Ü¶(hs1[oF(c3)](c4 √ó { hs0 }))), (c2[oF(c3)](c4 √ó { c0 })), (hs1[oF(c3)](c4 √ó { hs0 })), (hs1[oF(c3)](c4 √ó { c0 })))\n  oveq2d(hs1, oF(c3), (c4 √ó { hs0 }), (c4 √ó { c0 }), hs0 = c0)\n  xpeq2d(c4, { hs0 }, { c0 }, hs0 = c0)\n  sneq(hs0, c0)\n  oveq1(hs1, c2, oF(c3), (c4 √ó { c0 }))\n  eqid((hs0 ‚àà c8, hs1 ‚àà c5 ‚Ü¶(hs1[oF(c3)](c4 √ó { hs0 }))))\n  ovex(c2, oF(c3), (c4 √ó { c0 }))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c5)\n  diff.hs0.c(c6)\n  diff.hs0.c(c4)\n  diff.hs0.c(c8)\n  diff.hs0.c(c3)\n  diff.hs1.c(c5)\n  diff.hs1.c(c6)\n  diff.hs1.c(c4)\n  diff.hs1.c(c8)\n  diff.hs1.c(c3)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c((c2[oF(c3)](c4 √ó { c0 })))\n  diff.hs1.c(c0)\n  diff.hs1.c(c2)\n  diff.hs1.c((c2[oF(c3)](c4 √ó { c0 })))\n}","parent":["eqtrd","oveqd","ldualfvs","syl2anc","ovmpt2","oveq2d","xpeq2d","sneq","oveq1","eqid","ovex","diff.hs0.s","diff.hs0.c","diff.hs1.c"],"children":["ldualvsval","ldualvscl","ldualvsass","ldualvsdi1","ldualvsdi2","lduallmodlem","eqlkr4","ldual1dim","ldualkrsc","lkrss"]},{"name":"ldualvsval","content":"Value of scalar product operation value for the dual of a vector space. (Contributed by NM, 18-Oct-2014.)","origin":"thm ldualvsval(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, class c11, wff w0) {\n  |- wi(w0, wceq(cfv(co(c0, c1, c2), c3), co(cfv(c2, c3), c4, c0)))\n  -| wceq(c5, cfv(clfn, c6))\n  -| wceq(c7, cfv(cbs, c6))\n  -| wceq(c8, cfv(csca, c6))\n  -| wceq(c9, cfv(cbs, c8))\n  -| wceq(c4, cfv(cmulr, c8))\n  -| wceq(c10, cfv(cld, c6))\n  -| wceq(c1, cfv(cvsca, c10))\n  -| wi(w0, wcel(c6, c11))\n  -| wi(w0, wcel(c0, c9))\n  -| wi(w0, wcel(c2, c5))\n  -| wi(w0, wcel(c3, c7))\n} = {\n  eqtrd(cfv(co(c0, c1, c2), c3), co(cfv(c2, c3), c4, c0), cfv(co(c2, cof(c4), cxp(c7, csn(c0))), c3), w0)\n  fveq1d(co(c0, c1, c2), c3, co(c2, cof(c4), cxp(c7, csn(c0))), w0)\n  ldualvs(c0, c1, c2, c4, c7, c5, c6, c8, c9, c10, c11, w0)\n  mpdan(w0, wceq(cfv(co(c2, cof(c4), cxp(c7, csn(c0))), c3), co(cfv(c2, c3), c4, c0)), wcel(c3, c7))\n  ofc2(c3, c7, c2, c4, c0, cfv(c2, c3), universe, c9, w0)\n  a1i(w0, wcel(c7, universe))\n  fvexi(c7, cbs, c6)\n  ffnd(c2, c7, c9, w0)\n  syl2anc(w0, wf(c2, c7, c9), wcel(c6, c11), wcel(c2, c5))\n  lflf(c6, c11, c2, c5, c7, c9, c8)\n  eqidd(cfv(c2, c3), wa(w0, wcel(c3, c7)))\n}","pretty":"thm ldualvsval(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, class c11, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0[c1]c2)` c3)=((c2 ` c3)[c4]c0))\n  ‚ä£ c5 =(LFnl ` c6)\n  ‚ä£ c7 =(Base ` c6)\n  ‚ä£ c8 =(Scalar ` c6)\n  ‚ä£ c9 =(Base ` c8)\n  ‚ä£ c4 =(√ó ` c8)\n  ‚ä£ c10 =(LDual ` c6)\n  ‚ä£ c1 =(√ó ` c10)\n  ‚ä£ (w0 ‚Üí c6 ‚àà c11)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c9)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c5)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c7)\n} = {\n  eqtrd(((c0[c1]c2)` c3), ((c2 ` c3)[c4]c0), ((c2[oF(c4)](c7 √ó { c0 }))` c3), w0)\n  fveq1d((c0[c1]c2), c3, (c2[oF(c4)](c7 √ó { c0 })), w0)\n  ldualvs(c0, c1, c2, c4, c7, c5, c6, c8, c9, c10, c11, w0)\n  mpdan(w0, ((c2[oF(c4)](c7 √ó { c0 }))` c3)=((c2 ` c3)[c4]c0), c3 ‚àà c7)\n  ofc2(c3, c7, c2, c4, c0, (c2 ` c3), universe, c9, w0)\n  a1i(w0, c7 ‚àà ùïå)\n  fvexi(c7, cbs, c6)\n  ffnd(c2, c7, c9, w0)\n  syl2anc(w0, (c2 : c7 ‚Üí c9), c6 ‚àà c11, c2 ‚àà c5)\n  lflf(c6, c11, c2, c5, c7, c9, c8)\n  eqidd((c2 ` c3), (w0 ‚àß c3 ‚àà c7))\n}","parent":["eqtrd","fveq1d","ldualvs","mpdan","ofc2","a1i","fvexi","ffnd","syl2anc","lflf","eqidd"],"children":["ldualvsubval","lcfrlem1","lcdvsval"]},{"name":"ldualvscl","content":"The scalar product operation value is a functional. (Contributed by NM, 18-Oct-2014.)","origin":"thm ldualvscl(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  |- wi(w0, wcel(co(c0, c1, c2), c3))\n  -| wceq(c3, cfv(clfn, c4))\n  -| wceq(c5, cfv(csca, c4))\n  -| wceq(c6, cfv(cbs, c5))\n  -| wceq(c7, cfv(cld, c4))\n  -| wceq(c1, cfv(cvsca, c7))\n  -| wi(w0, wcel(c4, clmod))\n  -| wi(w0, wcel(c0, c6))\n  -| wi(w0, wcel(c2, c3))\n} = {\n  eqeltrd(co(c0, c1, c2), c3, co(c2, cof(cfv(cmulr, c5)), cxp(cfv(cbs, c4), csn(c0))), w0)\n  ldualvs(c0, c1, c2, cfv(cmulr, c5), cfv(cbs, c4), c3, c4, c5, c6, c7, clmod, w0)\n  lflvscl(c2, cfv(cmulr, c5), cfv(cbs, c4), c0, c3, c4, c5, c6, w0)\n  eqid(cfv(cbs, c4))\n  eqid(cfv(cmulr, c5))\n}","pretty":"thm ldualvscl(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)‚àà c3)\n  ‚ä£ c3 =(LFnl ` c4)\n  ‚ä£ c5 =(Scalar ` c4)\n  ‚ä£ c6 =(Base ` c5)\n  ‚ä£ c7 =(LDual ` c4)\n  ‚ä£ c1 =(√ó ` c7)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c6)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c3)\n} = {\n  eqeltrd((c0[c1]c2), c3, (c2[oF((√ó ` c5))]((Base ` c4)√ó { c0 })), w0)\n  ldualvs(c0, c1, c2, (√ó ` c5), (Base ` c4), c3, c4, c5, c6, c7, clmod, w0)\n  lflvscl(c2, (√ó ` c5), (Base ` c4), c0, c3, c4, c5, c6, w0)\n  eqid((Base ` c4))\n  eqid((√ó ` c5))\n}","parent":["eqeltrd","ldualvs","lflvscl","eqid"],"children":["ldualvsdi1","ldualvsdi2","lduallmodlem","ldualvsubcl","ldualvsubval","lkreqN","lclkrlem1","lclkrslem1","lcfrlem1","lcfrlem2","lcfrlem3","lcfrlem30","lcfrlem31"]},{"name":"ldualvaddcom","content":"Commutative law for vector (functional) addition. (Contributed by NM, 17-Jan-2015.)","origin":"thm ldualvaddcom(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(co(c0, c1, c2), co(c2, c1, c0)))\n  -| wceq(c3, cfv(clfn, c4))\n  -| wceq(c5, cfv(cld, c4))\n  -| wceq(c1, cfv(cplusg, c5))\n  -| wi(w0, wcel(c4, clmod))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(c2, c3))\n} = {\n  3eqtr4d(co(c0, c1, c2), co(c2, c1, c0), co(c0, cof(cfv(cplusg, cfv(csca, c4))), c2), co(c2, cof(cfv(cplusg, cfv(csca, c4))), c0), w0)\n  lfladdcom(c0, cfv(cplusg, cfv(csca, c4)), c2, cfv(csca, c4), c4, c3, w0)\n  ldualvadd(c0, c1, c2, cfv(cplusg, cfv(csca, c4)), c3, c4, cfv(csca, c4), c5, clmod, w0)\n  ldualvadd(c2, c1, c0, cfv(cplusg, cfv(csca, c4)), c3, c4, cfv(csca, c4), c5, clmod, w0)\n  eqid(cfv(csca, c4))\n  eqid(cfv(cplusg, cfv(csca, c4)))\n}","pretty":"thm ldualvaddcom(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)=(c2[c1]c0))\n  ‚ä£ c3 =(LFnl ` c4)\n  ‚ä£ c5 =(LDual ` c4)\n  ‚ä£ c1 =(+ ` c5)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c3)\n} = {\n  3eqtr4d((c0[c1]c2), (c2[c1]c0), (c0[oF((+ `(Scalar ` c4)))]c2), (c2[oF((+ `(Scalar ` c4)))]c0), w0)\n  lfladdcom(c0, (+ `(Scalar ` c4)), c2, (Scalar ` c4), c4, c3, w0)\n  ldualvadd(c0, c1, c2, (+ `(Scalar ` c4)), c3, c4, (Scalar ` c4), c5, clmod, w0)\n  ldualvadd(c2, c1, c0, (+ `(Scalar ` c4)), c3, c4, (Scalar ` c4), c5, clmod, w0)\n  eqid((Scalar ` c4))\n  eqid((+ `(Scalar ` c4)))\n}","parent":["3eqtr4d","lfladdcom","ldualvadd","eqid"],"children":["lclkrlem2k","lclkrlem2u"]},{"name":"ldualvsass","content":"Associative law for scalar product operation. (Contributed by NM, 20-Oct-2014.)","origin":"thm ldualvsass(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wceq(co(co(c0, c1, c2), c3, c4), co(c2, c3, co(c0, c3, c4))))\n  -| wceq(c5, cfv(clfn, c6))\n  -| wceq(c7, cfv(csca, c6))\n  -| wceq(c8, cfv(cbs, c7))\n  -| wceq(c1, cfv(cmulr, c7))\n  -| wceq(c9, cfv(cld, c6))\n  -| wceq(c3, cfv(cvsca, c9))\n  -| wi(w0, wcel(c6, clmod))\n  -| wi(w0, wcel(c2, c8))\n  -| wi(w0, wcel(c0, c8))\n  -| wi(w0, wcel(c4, c5))\n} = {\n  eqtr4d(co(co(c0, c1, c2), c3, c4), co(c2, c3, co(c0, c3, c4)), co(c2, c3, co(c4, cof(c1), cxp(cfv(cbs, c6), csn(c0)))), w0)\n  3eqtr4d(co(co(c0, c1, c2), c3, c4), co(c2, c3, co(c4, cof(c1), cxp(cfv(cbs, c6), csn(c0)))), co(c4, cof(c1), cxp(cfv(cbs, c6), csn(co(c0, c1, c2)))), co(co(c4, cof(c1), cxp(cfv(cbs, c6), csn(c0))), cof(c1), cxp(cfv(cbs, c6), csn(c2))), w0)\n  lflvsass(c4, c1, cfv(cbs, c6), c0, c2, c6, c7, c8, c5, w0)\n  ldualvs(co(c0, c1, c2), c3, c4, c1, cfv(cbs, c6), c5, c6, c7, c8, c9, clmod, w0)\n  syl3anc(w0, wcel(co(c0, c1, c2), c8), wcel(c7, crg), wcel(c0, c8), wcel(c2, c8))\n  syl(w0, wcel(c7, crg), wcel(c6, clmod))\n  lmodring(c6, c7)\n  ringcl(c7, c0, c8, c2, c1)\n  ldualvs(c2, c3, co(c4, cof(c1), cxp(cfv(cbs, c6), csn(c0))), c1, cfv(cbs, c6), c5, c6, c7, c8, c9, clmod, w0)\n  lflvscl(c4, c1, cfv(cbs, c6), c0, c5, c6, c7, c8, w0)\n  oveq2d(c2, c3, co(c0, c3, c4), co(c4, cof(c1), cxp(cfv(cbs, c6), csn(c0))), w0)\n  ldualvs(c0, c3, c4, c1, cfv(cbs, c6), c5, c6, c7, c8, c9, clmod, w0)\n  eqid(cfv(cbs, c6))\n}","pretty":"thm ldualvsass(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0[c1]c2)[c3]c4)=(c2[c3](c0[c3]c4)))\n  ‚ä£ c5 =(LFnl ` c6)\n  ‚ä£ c7 =(Scalar ` c6)\n  ‚ä£ c8 =(Base ` c7)\n  ‚ä£ c1 =(√ó ` c7)\n  ‚ä£ c9 =(LDual ` c6)\n  ‚ä£ c3 =(√ó ` c9)\n  ‚ä£ (w0 ‚Üí c6 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c4 ‚àà c5)\n} = {\n  eqtr4d(((c0[c1]c2)[c3]c4), (c2[c3](c0[c3]c4)), (c2[c3](c4[oF(c1)]((Base ` c6)√ó { c0 }))), w0)\n  3eqtr4d(((c0[c1]c2)[c3]c4), (c2[c3](c4[oF(c1)]((Base ` c6)√ó { c0 }))), (c4[oF(c1)]((Base ` c6)√ó {(c0[c1]c2)})), ((c4[oF(c1)]((Base ` c6)√ó { c0 }))[oF(c1)]((Base ` c6)√ó { c2 })), w0)\n  lflvsass(c4, c1, (Base ` c6), c0, c2, c6, c7, c8, c5, w0)\n  ldualvs((c0[c1]c2), c3, c4, c1, (Base ` c6), c5, c6, c7, c8, c9, clmod, w0)\n  syl3anc(w0, (c0[c1]c2)‚àà c8, c7 ‚àà Ring, c0 ‚àà c8, c2 ‚àà c8)\n  syl(w0, c7 ‚àà Ring, c6 ‚àà LMod)\n  lmodring(c6, c7)\n  ringcl(c7, c0, c8, c2, c1)\n  ldualvs(c2, c3, (c4[oF(c1)]((Base ` c6)√ó { c0 })), c1, (Base ` c6), c5, c6, c7, c8, c9, clmod, w0)\n  lflvscl(c4, c1, (Base ` c6), c0, c5, c6, c7, c8, w0)\n  oveq2d(c2, c3, (c0[c3]c4), (c4[oF(c1)]((Base ` c6)√ó { c0 })), w0)\n  ldualvs(c0, c3, c4, c1, (Base ` c6), c5, c6, c7, c8, c9, clmod, w0)\n  eqid((Base ` c6))\n}","parent":["eqtr4d","3eqtr4d","lflvsass","ldualvs","syl3anc","syl","lmodring","ringcl","lflvscl","oveq2d","eqid"],"children":["ldualvsass2"]},{"name":"ldualvsass2","content":"Associative law for scalar product operation, using operations from the dual space. (Contributed by NM, 20-Oct-2014.)","origin":"thm ldualvsass2(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  |- wi(w0, wceq(co(co(c0, c1, c2), c3, c4), co(c0, c3, co(c2, c3, c4))))\n  -| wceq(c5, cfv(clfn, c6))\n  -| wceq(c7, cfv(csca, c6))\n  -| wceq(c8, cfv(cbs, c7))\n  -| wceq(c9, cfv(cld, c6))\n  -| wceq(c10, cfv(csca, c9))\n  -| wceq(c1, cfv(cmulr, c10))\n  -| wceq(c3, cfv(cvsca, c9))\n  -| wi(w0, wcel(c6, clmod))\n  -| wi(w0, wcel(c0, c8))\n  -| wi(w0, wcel(c2, c8))\n  -| wi(w0, wcel(c4, c5))\n} = {\n  eqtrd(co(co(c0, c1, c2), c3, c4), co(c0, c3, co(c2, c3, c4)), co(co(c2, cfv(cmulr, c7), c0), c3, c4), w0)\n  oveq1d(co(c0, c1, c2), c3, c4, co(c2, cfv(cmulr, c7), c0), w0)\n  ldualsmul(c0, c1, c2, cfv(cmulr, c7), c7, c6, c8, c9, c10, clmod, w0)\n  ldualvsass(c2, cfv(cmulr, c7), c0, c3, c4, c5, c6, c7, c8, c9, w0)\n  eqid(cfv(cmulr, c7))\n}","pretty":"thm ldualvsass2(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0[c1]c2)[c3]c4)=(c0[c3](c2[c3]c4)))\n  ‚ä£ c5 =(LFnl ` c6)\n  ‚ä£ c7 =(Scalar ` c6)\n  ‚ä£ c8 =(Base ` c7)\n  ‚ä£ c9 =(LDual ` c6)\n  ‚ä£ c10 =(Scalar ` c9)\n  ‚ä£ c1 =(√ó ` c10)\n  ‚ä£ c3 =(√ó ` c9)\n  ‚ä£ (w0 ‚Üí c6 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c4 ‚àà c5)\n} = {\n  eqtrd(((c0[c1]c2)[c3]c4), (c0[c3](c2[c3]c4)), ((c2[(√ó ` c7)]c0)[c3]c4), w0)\n  oveq1d((c0[c1]c2), c3, c4, (c2[(√ó ` c7)]c0), w0)\n  ldualsmul(c0, c1, c2, (√ó ` c7), c7, c6, c8, c9, c10, clmod, w0)\n  ldualvsass(c2, (√ó ` c7), c0, c3, c4, c5, c6, c7, c8, c9, w0)\n  eqid((√ó ` c7))\n}","parent":["eqtrd","oveq1d","ldualsmul","ldualvsass","eqid"],"children":["lduallmodlem"]},{"name":"ldualvsdi1","content":"Distributive law for scalar product operation, using operations from the dual space. (Contributed by NM, 21-Oct-2014.)","origin":"thm ldualvsdi1(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wceq(co(c0, c1, co(c2, c3, c4)), co(co(c0, c1, c2), c3, co(c0, c1, c4))))\n  -| wceq(c5, cfv(clfn, c6))\n  -| wceq(c7, cfv(csca, c6))\n  -| wceq(c8, cfv(cbs, c7))\n  -| wceq(c9, cfv(cld, c6))\n  -| wceq(c3, cfv(cplusg, c9))\n  -| wceq(c1, cfv(cvsca, c9))\n  -| wi(w0, wcel(c6, clmod))\n  -| wi(w0, wcel(c0, c8))\n  -| wi(w0, wcel(c2, c5))\n  -| wi(w0, wcel(c4, c5))\n} = {\n  3eqtr4rd(co(c0, c1, co(c2, c3, c4)), co(co(c0, c1, c2), c3, co(c0, c1, c4)), co(co(c0, c1, c2), cof(cfv(cplusg, c7)), co(c0, c1, c4)), co(co(c2, cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0))), cof(cfv(cplusg, c7)), co(c4, cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0)))), w0)\n  oveq12d(co(c0, c1, c2), cof(cfv(cplusg, c7)), co(c0, c1, c4), co(c2, cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0))), co(c4, cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0))), w0)\n  ldualvs(c0, c1, c2, cfv(cmulr, c7), cfv(cbs, c6), c5, c6, c7, c8, c9, clmod, w0)\n  ldualvs(c0, c1, c4, cfv(cmulr, c7), cfv(cbs, c6), c5, c6, c7, c8, c9, clmod, w0)\n  ldualvadd(co(c0, c1, c2), c3, co(c0, c1, c4), cfv(cplusg, c7), c5, c6, c7, c9, clmod, w0)\n  ldualvscl(c0, c1, c2, c5, c6, c7, c8, c9, w0)\n  ldualvscl(c0, c1, c4, c5, c6, c7, c8, c9, w0)\n  3eqtrd(co(c0, c1, co(c2, c3, c4)), co(co(c2, cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0))), cof(cfv(cplusg, c7)), co(c4, cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0)))), co(co(c2, c3, c4), cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0))), co(co(c2, cof(cfv(cplusg, c7)), c4), cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0))), w0)\n  ldualvs(c0, c1, co(c2, c3, c4), cfv(cmulr, c7), cfv(cbs, c6), c5, c6, c7, c8, c9, clmod, w0)\n  ldualvaddcl(c2, c3, c4, c5, c6, c9, w0)\n  oveq1d(co(c2, c3, c4), cof(cfv(cmulr, c7)), cxp(cfv(cbs, c6), csn(c0)), co(c2, cof(cfv(cplusg, c7)), c4), w0)\n  ldualvadd(c2, c3, c4, cfv(cplusg, c7), c5, c6, c7, c9, clmod, w0)\n  lflvsdi1(c2, cfv(cplusg, c7), c4, cfv(cmulr, c7), cfv(cbs, c6), c0, c6, c7, c8, c5, w0)\n  eqid(cfv(cbs, c6))\n  eqid(cfv(cplusg, c7))\n  eqid(cfv(cmulr, c7))\n}","pretty":"thm ldualvsdi1(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1](c2[c3]c4))=((c0[c1]c2)[c3](c0[c1]c4)))\n  ‚ä£ c5 =(LFnl ` c6)\n  ‚ä£ c7 =(Scalar ` c6)\n  ‚ä£ c8 =(Base ` c7)\n  ‚ä£ c9 =(LDual ` c6)\n  ‚ä£ c3 =(+ ` c9)\n  ‚ä£ c1 =(√ó ` c9)\n  ‚ä£ (w0 ‚Üí c6 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c5)\n  ‚ä£ (w0 ‚Üí c4 ‚àà c5)\n} = {\n  3eqtr4rd((c0[c1](c2[c3]c4)), ((c0[c1]c2)[c3](c0[c1]c4)), ((c0[c1]c2)[oF((+ ` c7))](c0[c1]c4)), ((c2[oF((√ó ` c7))]((Base ` c6)√ó { c0 }))[oF((+ ` c7))](c4[oF((√ó ` c7))]((Base ` c6)√ó { c0 }))), w0)\n  oveq12d((c0[c1]c2), oF((+ ` c7)), (c0[c1]c4), (c2[oF((√ó ` c7))]((Base ` c6)√ó { c0 })), (c4[oF((√ó ` c7))]((Base ` c6)√ó { c0 })), w0)\n  ldualvs(c0, c1, c2, (√ó ` c7), (Base ` c6), c5, c6, c7, c8, c9, clmod, w0)\n  ldualvs(c0, c1, c4, (√ó ` c7), (Base ` c6), c5, c6, c7, c8, c9, clmod, w0)\n  ldualvadd((c0[c1]c2), c3, (c0[c1]c4), (+ ` c7), c5, c6, c7, c9, clmod, w0)\n  ldualvscl(c0, c1, c2, c5, c6, c7, c8, c9, w0)\n  ldualvscl(c0, c1, c4, c5, c6, c7, c8, c9, w0)\n  3eqtrd((c0[c1](c2[c3]c4)), ((c2[oF((√ó ` c7))]((Base ` c6)√ó { c0 }))[oF((+ ` c7))](c4[oF((√ó ` c7))]((Base ` c6)√ó { c0 }))), ((c2[c3]c4)[oF((√ó ` c7))]((Base ` c6)√ó { c0 })), ((c2[oF((+ ` c7))]c4)[oF((√ó ` c7))]((Base ` c6)√ó { c0 })), w0)\n  ldualvs(c0, c1, (c2[c3]c4), (√ó ` c7), (Base ` c6), c5, c6, c7, c8, c9, clmod, w0)\n  ldualvaddcl(c2, c3, c4, c5, c6, c9, w0)\n  oveq1d((c2[c3]c4), oF((√ó ` c7)), ((Base ` c6)√ó { c0 }), (c2[oF((+ ` c7))]c4), w0)\n  ldualvadd(c2, c3, c4, (+ ` c7), c5, c6, c7, c9, clmod, w0)\n  lflvsdi1(c2, (+ ` c7), c4, (√ó ` c7), (Base ` c6), c0, c6, c7, c8, c5, w0)\n  eqid((Base ` c6))\n  eqid((+ ` c7))\n  eqid((√ó ` c7))\n}","parent":["3eqtr4rd","oveq12d","ldualvs","ldualvadd","ldualvscl","3eqtrd","ldualvaddcl","oveq1d","lflvsdi1","eqid"],"children":["lduallmodlem"]},{"name":"ldualvsdi2","content":"Reverse distributive law for scalar product operation, using operations from the dual space. (Contributed by NM, 21-Oct-2014.)","origin":"thm ldualvsdi2(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  |- wi(w0, wceq(co(co(c0, c1, c2), c3, c4), co(co(c0, c3, c4), c5, co(c2, c3, c4))))\n  -| wceq(c6, cfv(clfn, c7))\n  -| wceq(c8, cfv(csca, c7))\n  -| wceq(c1, cfv(cplusg, c8))\n  -| wceq(c9, cfv(cbs, c8))\n  -| wceq(c10, cfv(cld, c7))\n  -| wceq(c5, cfv(cplusg, c10))\n  -| wceq(c3, cfv(cvsca, c10))\n  -| wi(w0, wcel(c7, clmod))\n  -| wi(w0, wcel(c0, c9))\n  -| wi(w0, wcel(c2, c9))\n  -| wi(w0, wcel(c4, c6))\n} = {\n  3eqtrd(co(co(c0, c1, c2), c3, c4), co(co(c0, c3, c4), c5, co(c2, c3, c4)), co(c4, cof(cfv(cmulr, c8)), cxp(cfv(cbs, c7), csn(co(c0, c1, c2)))), co(co(c4, cof(cfv(cmulr, c8)), cxp(cfv(cbs, c7), csn(c0))), cof(c1), co(c4, cof(cfv(cmulr, c8)), cxp(cfv(cbs, c7), csn(c2)))), w0)\n  ldualvs(co(c0, c1, c2), c3, c4, cfv(cmulr, c8), cfv(cbs, c7), c6, c7, c8, c9, c10, clmod, w0)\n  syl3anc(w0, wcel(co(c0, c1, c2), c9), wcel(c7, clmod), wcel(c0, c9), wcel(c2, c9))\n  lmodacl(c7, c0, c9, c2, c1, c8)\n  lflvsdi2a(c4, cfv(cmulr, c8), cfv(cbs, c7), c0, c1, c2, c7, c8, c9, c6, w0)\n  eqtr2d(co(co(c4, cof(cfv(cmulr, c8)), cxp(cfv(cbs, c7), csn(c0))), cof(c1), co(c4, cof(cfv(cmulr, c8)), cxp(cfv(cbs, c7), csn(c2)))), co(co(c0, c3, c4), c5, co(c2, c3, c4)), co(co(c0, c3, c4), cof(c1), co(c2, c3, c4)), w0)\n  ldualvadd(co(c0, c3, c4), c5, co(c2, c3, c4), c1, c6, c7, c8, c10, clmod, w0)\n  ldualvscl(c0, c3, c4, c6, c7, c8, c9, c10, w0)\n  ldualvscl(c2, c3, c4, c6, c7, c8, c9, c10, w0)\n  oveq12d(co(c0, c3, c4), cof(c1), co(c2, c3, c4), co(c4, cof(cfv(cmulr, c8)), cxp(cfv(cbs, c7), csn(c0))), co(c4, cof(cfv(cmulr, c8)), cxp(cfv(cbs, c7), csn(c2))), w0)\n  ldualvs(c0, c3, c4, cfv(cmulr, c8), cfv(cbs, c7), c6, c7, c8, c9, c10, clmod, w0)\n  ldualvs(c2, c3, c4, cfv(cmulr, c8), cfv(cbs, c7), c6, c7, c8, c9, c10, clmod, w0)\n  eqid(cfv(cbs, c7))\n  eqid(cfv(cmulr, c8))\n}","pretty":"thm ldualvsdi2(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0[c1]c2)[c3]c4)=((c0[c3]c4)[c5](c2[c3]c4)))\n  ‚ä£ c6 =(LFnl ` c7)\n  ‚ä£ c8 =(Scalar ` c7)\n  ‚ä£ c1 =(+ ` c8)\n  ‚ä£ c9 =(Base ` c8)\n  ‚ä£ c10 =(LDual ` c7)\n  ‚ä£ c5 =(+ ` c10)\n  ‚ä£ c3 =(√ó ` c10)\n  ‚ä£ (w0 ‚Üí c7 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c9)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c9)\n  ‚ä£ (w0 ‚Üí c4 ‚àà c6)\n} = {\n  3eqtrd(((c0[c1]c2)[c3]c4), ((c0[c3]c4)[c5](c2[c3]c4)), (c4[oF((√ó ` c8))]((Base ` c7)√ó {(c0[c1]c2)})), ((c4[oF((√ó ` c8))]((Base ` c7)√ó { c0 }))[oF(c1)](c4[oF((√ó ` c8))]((Base ` c7)√ó { c2 }))), w0)\n  ldualvs((c0[c1]c2), c3, c4, (√ó ` c8), (Base ` c7), c6, c7, c8, c9, c10, clmod, w0)\n  syl3anc(w0, (c0[c1]c2)‚àà c9, c7 ‚àà LMod, c0 ‚àà c9, c2 ‚àà c9)\n  lmodacl(c7, c0, c9, c2, c1, c8)\n  lflvsdi2a(c4, (√ó ` c8), (Base ` c7), c0, c1, c2, c7, c8, c9, c6, w0)\n  eqtr2d(((c4[oF((√ó ` c8))]((Base ` c7)√ó { c0 }))[oF(c1)](c4[oF((√ó ` c8))]((Base ` c7)√ó { c2 }))), ((c0[c3]c4)[c5](c2[c3]c4)), ((c0[c3]c4)[oF(c1)](c2[c3]c4)), w0)\n  ldualvadd((c0[c3]c4), c5, (c2[c3]c4), c1, c6, c7, c8, c10, clmod, w0)\n  ldualvscl(c0, c3, c4, c6, c7, c8, c9, c10, w0)\n  ldualvscl(c2, c3, c4, c6, c7, c8, c9, c10, w0)\n  oveq12d((c0[c3]c4), oF(c1), (c2[c3]c4), (c4[oF((√ó ` c8))]((Base ` c7)√ó { c0 })), (c4[oF((√ó ` c8))]((Base ` c7)√ó { c2 })), w0)\n  ldualvs(c0, c3, c4, (√ó ` c8), (Base ` c7), c6, c7, c8, c9, c10, clmod, w0)\n  ldualvs(c2, c3, c4, (√ó ` c8), (Base ` c7), c6, c7, c8, c9, c10, clmod, w0)\n  eqid((Base ` c7))\n  eqid((√ó ` c8))\n}","parent":["3eqtrd","ldualvs","syl3anc","lmodacl","lflvsdi2a","eqtr2d","ldualvadd","ldualvscl","oveq12d","eqid"],"children":["lduallmodlem"]},{"name":"ldualgrplem","content":"Lemma for ~ ldualgrp . (Contributed by NM, 22-Oct-2014.)","origin":"thm ldualgrplem(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wcel(c0, cgrp))\n  -| wceq(c0, cfv(cld, c1))\n  -| wi(w0, wcel(c1, clmod))\n  -| wceq(c2, cfv(cbs, c1))\n  -| wceq(c3, cof(cfv(cplusg, c1)))\n  -| wceq(c4, cfv(clfn, c1))\n  -| wceq(c5, cfv(csca, c1))\n  -| wceq(c6, cfv(cbs, c5))\n  -| wceq(c7, cfv(cmulr, c5))\n  -| wceq(c8, cfv(coppr, c5))\n  -| wceq(c9, cfv(cvsca, c0))\n} = {\n  a1ii(wi(w0, wcel(c0, cgrp)), wceq(c3, cof(cfv(cplusg, c1))))\n  a1ii(wi(w0, wcel(c0, cgrp)), wceq(c6, cfv(cbs, c5)))\n  a1ii(wi(w0, wcel(c0, cgrp)), wceq(c7, cfv(cmulr, c5)))\n  a1ii(wi(w0, wcel(c0, cgrp)), wceq(c8, cfv(coppr, c5)))\n  a1ii(wi(w0, wcel(c0, cgrp)), wceq(c9, cfv(cvsca, c0)))\n  isgrpd(hs0, hs1, hs2, c0, c4, cfv(cplusg, c0), cxp(c2, csn(cfv(c0g, c5))), cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))), w0)\n  eqcomd(c4, cfv(cbs, c0), w0)\n  ldualvbase(cfv(cbs, c0), c4, c1, c0, clmod, w0)\n  eqid(cfv(cbs, c0))\n  eqidd(cfv(cplusg, c0), w0)\n  ldualvaddcl(cv(hs0), cfv(cplusg, c0), cv(hs1), c4, c1, c0, w3a(w0, wcel(cv(hs0), c4), wcel(cv(hs1), c4)))\n  3ad2ant1(w0, wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(c1, clmod))\n  simp2(w0, wcel(cv(hs0), c4), wcel(cv(hs1), c4))\n  simp3(w0, wcel(cv(hs0), c4), wcel(cv(hs1), c4))\n  3eqtr4rd(co(co(cv(hs0), cfv(cplusg, c0), cv(hs1)), cfv(cplusg, c0), cv(hs2)), co(cv(hs0), cfv(cplusg, c0), co(cv(hs1), cfv(cplusg, c0), cv(hs2))), co(cv(hs0), cof(cfv(cplusg, c5)), co(cv(hs1), cfv(cplusg, c0), cv(hs2))), co(cv(hs0), cof(cfv(cplusg, c5)), co(cv(hs1), cof(cfv(cplusg, c5)), cv(hs2))), wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  oveq2d(cv(hs0), cof(cfv(cplusg, c5)), co(cv(hs1), cfv(cplusg, c0), cv(hs2)), co(cv(hs1), cof(cfv(cplusg, c5)), cv(hs2)), wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  ldualvadd(cv(hs1), cfv(cplusg, c0), cv(hs2), cfv(cplusg, c5), c4, c1, c5, c0, clmod, wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  ldualvadd(cv(hs0), cfv(cplusg, c0), co(cv(hs1), cfv(cplusg, c0), cv(hs2)), cfv(cplusg, c5), c4, c1, c5, c0, clmod, wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  ldualvaddcl(cv(hs1), cfv(cplusg, c0), cv(hs2), c4, c1, c0, wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  3eqtrd(co(co(cv(hs0), cfv(cplusg, c0), cv(hs1)), cfv(cplusg, c0), cv(hs2)), co(cv(hs0), cof(cfv(cplusg, c5)), co(cv(hs1), cof(cfv(cplusg, c5)), cv(hs2))), co(co(cv(hs0), cfv(cplusg, c0), cv(hs1)), cof(cfv(cplusg, c5)), cv(hs2)), co(co(cv(hs0), cof(cfv(cplusg, c5)), cv(hs1)), cof(cfv(cplusg, c5)), cv(hs2)), wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  ldualvadd(co(cv(hs0), cfv(cplusg, c0), cv(hs1)), cfv(cplusg, c0), cv(hs2), cfv(cplusg, c5), c4, c1, c5, c0, clmod, wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  ldualvaddcl(cv(hs0), cfv(cplusg, c0), cv(hs1), c4, c1, c0, wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  oveq1d(co(cv(hs0), cfv(cplusg, c0), cv(hs1)), cof(cfv(cplusg, c5)), cv(hs2), co(cv(hs0), cof(cfv(cplusg, c5)), cv(hs1)), wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  ldualvadd(cv(hs0), cfv(cplusg, c0), cv(hs1), cfv(cplusg, c5), c4, c1, c5, c0, clmod, wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  lfladdass(cv(hs0), cfv(cplusg, c5), cv(hs1), cv(hs2), c5, c1, c4, wa(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  adantr(w0, w3a(wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4)), wcel(c1, clmod))\n  simpr1(w0, wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))\n  simpr2(w0, wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))\n  simpr3(w0, wcel(cv(hs0), c4), wcel(cv(hs1), c4), wcel(cv(hs2), c4))\n  eqtrd(co(cxp(c2, csn(cfv(c0g, c5))), cfv(cplusg, c0), cv(hs0)), cv(hs0), co(cxp(c2, csn(cfv(c0g, c5))), cof(cfv(cplusg, c5)), cv(hs0)), wa(w0, wcel(cv(hs0), c4)))\n  ldualvadd(cxp(c2, csn(cfv(c0g, c5))), cfv(cplusg, c0), cv(hs0), cfv(cplusg, c5), c4, c1, c5, c0, clmod, wa(w0, wcel(cv(hs0), c4)))\n  adantr(w0, wcel(cv(hs0), c4), wcel(cxp(c2, csn(cfv(c0g, c5))), c4))\n  syl(w0, wcel(cxp(c2, csn(cfv(c0g, c5))), c4), wcel(c1, clmod))\n  lfl0f(c1, c2, cfv(c0g, c5), c4, c5)\n  lfladd0l(c2, cfv(c0g, c5), cfv(cplusg, c5), cv(hs0), c1, c5, c4, wa(w0, wcel(cv(hs0), c4)))\n  eqtrd(co(cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))), cfv(cplusg, c0), cv(hs0)), cxp(c2, csn(cfv(c0g, c5))), co(cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))), cof(cfv(cplusg, c5)), cv(hs0)), wa(w0, wcel(cv(hs0), c4)))\n  ldualvadd(cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))), cfv(cplusg, c0), cv(hs0), cfv(cplusg, c5), c4, c1, c5, c0, clmod, wa(w0, wcel(cv(hs0), c4)))\n  eqid(cfv(cplusg, c0))\n  lflnegcl(hs2, cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))), c4, c2, c1, c5, cfv(cminusg, c5), cv(hs0), wa(w0, wcel(cv(hs0), c4)))\n  lflnegl(hs2, cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))), cfv(cplusg, c5), cv(hs0), c2, cfv(c0g, c5), c1, c5, cfv(cminusg, c5), c4, wa(w0, wcel(cv(hs0), c4)))\n  eqid(cfv(cminusg, c5))\n  eqid(cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))))\n  adantr(w0, wcel(cv(hs0), c4), wcel(c1, clmod))\n  simpr(w0, wcel(cv(hs0), c4))\n  eqid(cfv(cplusg, c5))\n  eqid(cfv(c0g, c5))\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(c0)\n  diff.hs0.c(c4)\n  diff.hs0.c(cfv(cplusg, c0))\n  diff.hs0.c(cxp(c2, csn(cfv(c0g, c5))))\n  diff.hs1.c(c0)\n  diff.hs1.c(c4)\n  diff.hs1.c(cfv(cplusg, c0))\n  diff.hs1.c(cxp(c2, csn(cfv(c0g, c5))))\n  diff.hs1.c(cmpt(hs2, c2, cfv(cfv(cminusg, c5), cfv(cv(hs0), cv(hs2)))))\n  diff.hs2.c(c0)\n  diff.hs2.c(c4)\n  diff.hs2.c(cfv(cplusg, c0))\n  diff.hs2.c(cxp(c2, csn(cfv(c0g, c5))))\n  diff.hs0.w(w0)\n  diff.hs1.w(w0)\n  diff.hs2.w(w0)\n  diff.hs2.c(c2)\n  diff.hs2.c(c1)\n  diff.hs2.c(c5)\n  diff.hs2.c(cfv(cminusg, c5))\n  diff.hs2.c(cv(hs0))\n  diff.hs2.w(wa(w0, wcel(cv(hs0), c4)))\n}","pretty":"thm ldualgrplem(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 ‚àà Grp)\n  ‚ä£ c0 =(LDual ` c1)\n  ‚ä£ (w0 ‚Üí c1 ‚àà LMod)\n  ‚ä£ c2 =(Base ` c1)\n  ‚ä£ c3 = oF((+ ` c1))\n  ‚ä£ c4 =(LFnl ` c1)\n  ‚ä£ c5 =(Scalar ` c1)\n  ‚ä£ c6 =(Base ` c5)\n  ‚ä£ c7 =(√ó ` c5)\n  ‚ä£ c8 =(oppR ` c5)\n  ‚ä£ c9 =(√ó ` c0)\n} = {\n  a1ii((w0 ‚Üí c0 ‚àà Grp), c3 = oF((+ ` c1)))\n  a1ii((w0 ‚Üí c0 ‚àà Grp), c6 =(Base ` c5))\n  a1ii((w0 ‚Üí c0 ‚àà Grp), c7 =(√ó ` c5))\n  a1ii((w0 ‚Üí c0 ‚àà Grp), c8 =(oppR ` c5))\n  a1ii((w0 ‚Üí c0 ‚àà Grp), c9 =(√ó ` c0))\n  isgrpd(hs0, hs1, hs2, c0, c4, (+ ` c0), (c2 √ó {(0 ` c5)}), (hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2))), w0)\n  eqcomd(c4, (Base ` c0), w0)\n  ldualvbase((Base ` c0), c4, c1, c0, clmod, w0)\n  eqid((Base ` c0))\n  eqidd((+ ` c0), w0)\n  ldualvaddcl(hs0, (+ ` c0), hs1, c4, c1, c0, (w0 ‚àß hs0 ‚àà c4 ‚àß hs1 ‚àà c4))\n  3ad2ant1(w0, hs0 ‚àà c4, hs1 ‚àà c4, c1 ‚àà LMod)\n  simp2(w0, hs0 ‚àà c4, hs1 ‚àà c4)\n  simp3(w0, hs0 ‚àà c4, hs1 ‚àà c4)\n  3eqtr4rd(((hs0[(+ ` c0)]hs1)[(+ ` c0)]hs2), (hs0[(+ ` c0)](hs1[(+ ` c0)]hs2)), (hs0[oF((+ ` c5))](hs1[(+ ` c0)]hs2)), (hs0[oF((+ ` c5))](hs1[oF((+ ` c5))]hs2)), (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  oveq2d(hs0, oF((+ ` c5)), (hs1[(+ ` c0)]hs2), (hs1[oF((+ ` c5))]hs2), (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  ldualvadd(hs1, (+ ` c0), hs2, (+ ` c5), c4, c1, c5, c0, clmod, (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  ldualvadd(hs0, (+ ` c0), (hs1[(+ ` c0)]hs2), (+ ` c5), c4, c1, c5, c0, clmod, (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  ldualvaddcl(hs1, (+ ` c0), hs2, c4, c1, c0, (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  3eqtrd(((hs0[(+ ` c0)]hs1)[(+ ` c0)]hs2), (hs0[oF((+ ` c5))](hs1[oF((+ ` c5))]hs2)), ((hs0[(+ ` c0)]hs1)[oF((+ ` c5))]hs2), ((hs0[oF((+ ` c5))]hs1)[oF((+ ` c5))]hs2), (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  ldualvadd((hs0[(+ ` c0)]hs1), (+ ` c0), hs2, (+ ` c5), c4, c1, c5, c0, clmod, (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  ldualvaddcl(hs0, (+ ` c0), hs1, c4, c1, c0, (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  oveq1d((hs0[(+ ` c0)]hs1), oF((+ ` c5)), hs2, (hs0[oF((+ ` c5))]hs1), (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  ldualvadd(hs0, (+ ` c0), hs1, (+ ` c5), c4, c1, c5, c0, clmod, (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  lfladdass(hs0, (+ ` c5), hs1, hs2, c5, c1, c4, (w0 ‚àß(hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  adantr(w0, (hs0 ‚àà c4 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4), c1 ‚àà LMod)\n  simpr1(w0, hs0 ‚àà c4, hs1 ‚àà c4, hs2 ‚àà c4)\n  simpr2(w0, hs0 ‚àà c4, hs1 ‚àà c4, hs2 ‚àà c4)\n  simpr3(w0, hs0 ‚àà c4, hs1 ‚àà c4, hs2 ‚àà c4)\n  eqtrd(((c2 √ó {(0 ` c5)})[(+ ` c0)]hs0), hs0, ((c2 √ó {(0 ` c5)})[oF((+ ` c5))]hs0), (w0 ‚àß hs0 ‚àà c4))\n  ldualvadd((c2 √ó {(0 ` c5)}), (+ ` c0), hs0, (+ ` c5), c4, c1, c5, c0, clmod, (w0 ‚àß hs0 ‚àà c4))\n  adantr(w0, hs0 ‚àà c4, (c2 √ó {(0 ` c5)})‚àà c4)\n  syl(w0, (c2 √ó {(0 ` c5)})‚àà c4, c1 ‚àà LMod)\n  lfl0f(c1, c2, (0 ` c5), c4, c5)\n  lfladd0l(c2, (0 ` c5), (+ ` c5), hs0, c1, c5, c4, (w0 ‚àß hs0 ‚àà c4))\n  eqtrd(((hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2)))[(+ ` c0)]hs0), (c2 √ó {(0 ` c5)}), ((hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2)))[oF((+ ` c5))]hs0), (w0 ‚àß hs0 ‚àà c4))\n  ldualvadd((hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2))), (+ ` c0), hs0, (+ ` c5), c4, c1, c5, c0, clmod, (w0 ‚àß hs0 ‚àà c4))\n  eqid((+ ` c0))\n  lflnegcl(hs2, (hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2))), c4, c2, c1, c5, (invg ` c5), hs0, (w0 ‚àß hs0 ‚àà c4))\n  lflnegl(hs2, (hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2))), (+ ` c5), hs0, c2, (0 ` c5), c1, c5, (invg ` c5), c4, (w0 ‚àß hs0 ‚àà c4))\n  eqid((invg ` c5))\n  eqid((hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2))))\n  adantr(w0, hs0 ‚àà c4, c1 ‚àà LMod)\n  simpr(w0, hs0 ‚àà c4)\n  eqid((+ ` c5))\n  eqid((0 ` c5))\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(c0)\n  diff.hs0.c(c4)\n  diff.hs0.c((+ ` c0))\n  diff.hs0.c((c2 √ó {(0 ` c5)}))\n  diff.hs1.c(c0)\n  diff.hs1.c(c4)\n  diff.hs1.c((+ ` c0))\n  diff.hs1.c((c2 √ó {(0 ` c5)}))\n  diff.hs1.c((hs2 ‚àà c2 ‚Ü¶((invg ` c5)`(hs0 ` hs2))))\n  diff.hs2.c(c0)\n  diff.hs2.c(c4)\n  diff.hs2.c((+ ` c0))\n  diff.hs2.c((c2 √ó {(0 ` c5)}))\n  diff.hs0.w(w0)\n  diff.hs1.w(w0)\n  diff.hs2.w(w0)\n  diff.hs2.c(c2)\n  diff.hs2.c(c1)\n  diff.hs2.c(c5)\n  diff.hs2.c((invg ` c5))\n  diff.hs2.c(hs0)\n  diff.hs2.w((w0 ‚àß hs0 ‚àà c4))\n}","parent":["a1ii","isgrpd","eqcomd","ldualvbase","eqid","eqidd","ldualvaddcl","3ad2ant1","simp2","simp3","3eqtr4rd","oveq2d","ldualvadd","3eqtrd","oveq1d","lfladdass","adantr","simpr1","simpr2","simpr3","eqtrd","syl","lfl0f","lfladd0l","lflnegcl","lflnegl","simpr","diff.hs0.s","diff.hs1.s","diff.hs0.c","diff.hs1.c","diff.hs2.c","diff.hs0.w","diff.hs1.w","diff.hs2.w"],"children":["ldualgrp"]},{"name":"ldualgrp","content":"The dual of a vector space is a group. (Contributed by NM, 21-Oct-2014.)","origin":"thm ldualgrp(class c0, class c1, wff w0) {\n  |- wi(w0, wcel(c0, cgrp))\n  -| wceq(c0, cfv(cld, c1))\n  -| wi(w0, wcel(c1, clmod))\n} = {\n  ldualgrplem(c0, c1, cfv(cbs, c1), cof(cfv(cplusg, c1)), cfv(clfn, c1), cfv(csca, c1), cfv(cbs, cfv(csca, c1)), cfv(cmulr, cfv(csca, c1)), cfv(coppr, cfv(csca, c1)), cfv(cvsca, c0), w0)\n  eqid(cfv(cbs, c1))\n  eqid(cof(cfv(cplusg, c1)))\n  eqid(cfv(clfn, c1))\n  eqid(cfv(csca, c1))\n  eqid(cfv(cbs, cfv(csca, c1)))\n  eqid(cfv(cmulr, cfv(csca, c1)))\n  eqid(cfv(coppr, cfv(csca, c1)))\n  eqid(cfv(cvsca, c0))\n}","pretty":"thm ldualgrp(class c0, class c1, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 ‚àà Grp)\n  ‚ä£ c0 =(LDual ` c1)\n  ‚ä£ (w0 ‚Üí c1 ‚àà LMod)\n} = {\n  ldualgrplem(c0, c1, (Base ` c1), oF((+ ` c1)), (LFnl ` c1), (Scalar ` c1), (Base `(Scalar ` c1)), (√ó `(Scalar ` c1)), (oppR `(Scalar ` c1)), (√ó ` c0), w0)\n  eqid((Base ` c1))\n  eqid(oF((+ ` c1)))\n  eqid((LFnl ` c1))\n  eqid((Scalar ` c1))\n  eqid((Base `(Scalar ` c1)))\n  eqid((√ó `(Scalar ` c1)))\n  eqid((oppR `(Scalar ` c1)))\n  eqid((√ó ` c0))\n}","parent":["ldualgrplem","eqid"],"children":["ldual0v","lduallmodlem","lcfrlem33"]},{"name":"ldual0","content":"The zero scalar of the dual of a vector space. (Contributed by NM, 28-Dec-2014.)","origin":"thm ldual0(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(csca, c3))\n  -| wceq(c1, cfv(c0g, c2))\n  -| wceq(c4, cfv(cld, c3))\n  -| wceq(c5, cfv(csca, c4))\n  -| wceq(c0, cfv(c0g, c5))\n  -| wi(w0, wcel(c3, clmod))\n} = {\n  3eqtr4g(c0, c1, cfv(c0g, c5), cfv(c0g, cfv(coppr, c2)), w0)\n  fveq2d(c0g, c5, cfv(coppr, c2), w0)\n  ldualsca(c5, cfv(coppr, c2), c2, c3, c4, clmod, w0)\n  oppr0(c1, cfv(coppr, c2), c2)\n  eqid(cfv(coppr, c2))\n}","pretty":"thm ldual0(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(Scalar ` c3)\n  ‚ä£ c1 =(0 ` c2)\n  ‚ä£ c4 =(LDual ` c3)\n  ‚ä£ c5 =(Scalar ` c4)\n  ‚ä£ c0 =(0 ` c5)\n  ‚ä£ (w0 ‚Üí c3 ‚àà LMod)\n} = {\n  3eqtr4g(c0, c1, (0 ` c5), (0 `(oppR ` c2)), w0)\n  fveq2d(c0g, c5, (oppR ` c2), w0)\n  ldualsca(c5, (oppR ` c2), c2, c3, c4, clmod, w0)\n  oppr0(c1, (oppR ` c2), c2)\n  eqid((oppR ` c2))\n}","parent":["3eqtr4g","fveq2d","ldualsca","oppr0","eqid"],"children":["ldual0vs","lkreqN","lkrlspeqN","lclkrlem1"]},{"name":"ldual1","content":"The unit scalar of the dual of a vector space. (Contributed by NM, 26-Feb-2015.)","origin":"thm ldual1(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(csca, c3))\n  -| wceq(c1, cfv(cur, c2))\n  -| wceq(c4, cfv(cld, c3))\n  -| wceq(c5, cfv(csca, c4))\n  -| wceq(c0, cfv(cur, c5))\n  -| wi(w0, wcel(c3, clmod))\n} = {\n  3eqtr4g(c0, c1, cfv(cur, c5), cfv(cur, cfv(coppr, c2)), w0)\n  fveq2d(cur, c5, cfv(coppr, c2), w0)\n  ldualsca(c5, cfv(coppr, c2), c2, c3, c4, clmod, w0)\n  oppr1(c1, cfv(coppr, c2), c2)\n  eqid(cfv(coppr, c2))\n}","pretty":"thm ldual1(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(Scalar ` c3)\n  ‚ä£ c1 =(1r ` c2)\n  ‚ä£ c4 =(LDual ` c3)\n  ‚ä£ c5 =(Scalar ` c4)\n  ‚ä£ c0 =(1r ` c5)\n  ‚ä£ (w0 ‚Üí c3 ‚àà LMod)\n} = {\n  3eqtr4g(c0, c1, (1r ` c5), (1r `(oppR ` c2)), w0)\n  fveq2d(cur, c5, (oppR ` c2), w0)\n  ldualsca(c5, (oppR ` c2), c2, c3, c4, clmod, w0)\n  oppr1(c1, (oppR ` c2), c2)\n  eqid((oppR ` c2))\n}","parent":["3eqtr4g","fveq2d","ldualsca","oppr1","eqid"],"children":["ldualvsubval"]},{"name":"ldualneg","content":"The negative of a scalar of the dual of a vector space. (Contributed by NM, 26-Feb-2015.)","origin":"thm ldualneg(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wceq(c2, cfv(csca, c3))\n  -| wceq(c1, cfv(cminusg, c2))\n  -| wceq(c4, cfv(cld, c3))\n  -| wceq(c5, cfv(csca, c4))\n  -| wceq(c0, cfv(cminusg, c5))\n  -| wi(w0, wcel(c3, clmod))\n} = {\n  3eqtr4g(c0, c1, cfv(cminusg, c5), cfv(cminusg, cfv(coppr, c2)), w0)\n  fveq2d(cminusg, c5, cfv(coppr, c2), w0)\n  ldualsca(c5, cfv(coppr, c2), c2, c3, c4, clmod, w0)\n  opprneg(c1, cfv(coppr, c2), c2)\n  eqid(cfv(coppr, c2))\n}","pretty":"thm ldualneg(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 = c1)\n  ‚ä£ c2 =(Scalar ` c3)\n  ‚ä£ c1 =(invg ` c2)\n  ‚ä£ c4 =(LDual ` c3)\n  ‚ä£ c5 =(Scalar ` c4)\n  ‚ä£ c0 =(invg ` c5)\n  ‚ä£ (w0 ‚Üí c3 ‚àà LMod)\n} = {\n  3eqtr4g(c0, c1, (invg ` c5), (invg `(oppR ` c2)), w0)\n  fveq2d(cminusg, c5, (oppR ` c2), w0)\n  ldualsca(c5, (oppR ` c2), c2, c3, c4, clmod, w0)\n  opprneg(c1, (oppR ` c2), c2)\n  eqid((oppR ` c2))\n}","parent":["3eqtr4g","fveq2d","ldualsca","opprneg","eqid"],"children":["ldualvsubval"]},{"name":"ldual0v","content":"The zero vector of the dual of a vector space. (Contributed by NM, 24-Oct-2014.)","origin":"thm ldual0v(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(c0, cxp(c1, csn(c2))))\n  -| wceq(c1, cfv(cbs, c3))\n  -| wceq(c4, cfv(csca, c3))\n  -| wceq(c2, cfv(c0g, c4))\n  -| wceq(c5, cfv(cld, c3))\n  -| wceq(c0, cfv(c0g, c5))\n  -| wi(w0, wcel(c3, clmod))\n} = {\n  mpbid(w0, wceq(c0, cxp(c1, csn(c2))), wceq(co(cxp(c1, csn(c2)), cfv(cplusg, c5), cxp(c1, csn(c2))), cxp(c1, csn(c2))))\n  eqtrd(co(cxp(c1, csn(c2)), cfv(cplusg, c5), cxp(c1, csn(c2))), cxp(c1, csn(c2)), co(cxp(c1, csn(c2)), cof(cfv(cplusg, c4)), cxp(c1, csn(c2))), w0)\n  ldualvadd(cxp(c1, csn(c2)), cfv(cplusg, c5), cxp(c1, csn(c2)), cfv(cplusg, c4), cfv(clfn, c3), c3, c4, c5, clmod, w0)\n  lfladd0l(c1, c2, cfv(cplusg, c4), cxp(c1, csn(c2)), c3, c4, cfv(clfn, c3), w0)\n  eqid(cfv(cplusg, c4))\n  syl2anc(w0, wb(wceq(co(cxp(c1, csn(c2)), cfv(cplusg, c5), cxp(c1, csn(c2))), cxp(c1, csn(c2))), wceq(c0, cxp(c1, csn(c2)))), wcel(c5, cgrp), wcel(cxp(c1, csn(c2)), cfv(cbs, c5)))\n  ldualgrp(c5, c3, w0)\n  ldualelvbase(cxp(c1, csn(c2)), cfv(cbs, c5), cfv(clfn, c3), c3, c5, clmod, w0)\n  syl(w0, wcel(cxp(c1, csn(c2)), cfv(clfn, c3)), wcel(c3, clmod))\n  lfl0f(c3, c1, c2, cfv(clfn, c3), c4)\n  eqid(cfv(clfn, c3))\n  grpid(c5, cxp(c1, csn(c2)), cfv(cbs, c5), cfv(cplusg, c5), c0)\n  eqid(cfv(cbs, c5))\n  eqid(cfv(cplusg, c5))\n}","pretty":"thm ldual0v(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 =(c1 √ó { c2 }))\n  ‚ä£ c1 =(Base ` c3)\n  ‚ä£ c4 =(Scalar ` c3)\n  ‚ä£ c2 =(0 ` c4)\n  ‚ä£ c5 =(LDual ` c3)\n  ‚ä£ c0 =(0 ` c5)\n  ‚ä£ (w0 ‚Üí c3 ‚àà LMod)\n} = {\n  mpbid(w0, c0 =(c1 √ó { c2 }), ((c1 √ó { c2 })[(+ ` c5)](c1 √ó { c2 }))=(c1 √ó { c2 }))\n  eqtrd(((c1 √ó { c2 })[(+ ` c5)](c1 √ó { c2 })), (c1 √ó { c2 }), ((c1 √ó { c2 })[oF((+ ` c4))](c1 √ó { c2 })), w0)\n  ldualvadd((c1 √ó { c2 }), (+ ` c5), (c1 √ó { c2 }), (+ ` c4), (LFnl ` c3), c3, c4, c5, clmod, w0)\n  lfladd0l(c1, c2, (+ ` c4), (c1 √ó { c2 }), c3, c4, (LFnl ` c3), w0)\n  eqid((+ ` c4))\n  syl2anc(w0, (((c1 √ó { c2 })[(+ ` c5)](c1 √ó { c2 }))=(c1 √ó { c2 })‚Üî c0 =(c1 √ó { c2 })), c5 ‚àà Grp, (c1 √ó { c2 })‚àà(Base ` c5))\n  ldualgrp(c5, c3, w0)\n  ldualelvbase((c1 √ó { c2 }), (Base ` c5), (LFnl ` c3), c3, c5, clmod, w0)\n  syl(w0, (c1 √ó { c2 })‚àà(LFnl ` c3), c3 ‚àà LMod)\n  lfl0f(c3, c1, c2, (LFnl ` c3), c4)\n  eqid((LFnl ` c3))\n  grpid(c5, (c1 √ó { c2 }), (Base ` c5), (+ ` c5), c0)\n  eqid((Base ` c5))\n  eqid((+ ` c5))\n}","parent":["mpbid","eqtrd","ldualvadd","lfladd0l","eqid","syl2anc","ldualgrp","ldualelvbase","syl","lfl0f","grpid"],"children":["ldual0vcl","lkr0f2","lduallkr3","lclkrlem1","lclkrlem2j","lcd0v","lcd0v2"]},{"name":"ldual0vcl","content":"The dual zero vector is a functional. (Contributed by NM, 5-Mar-2015.)","origin":"thm ldual0vcl(class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(w0, wcel(c0, c1))\n  -| wceq(c1, cfv(clfn, c2))\n  -| wceq(c3, cfv(cld, c2))\n  -| wceq(c0, cfv(c0g, c3))\n  -| wi(w0, wcel(c2, clmod))\n} = {\n  eqeltrd(c0, c1, cxp(cfv(cbs, c2), csn(cfv(c0g, cfv(csca, c2)))), w0)\n  ldual0v(c0, cfv(cbs, c2), cfv(c0g, cfv(csca, c2)), c2, cfv(csca, c2), c3, w0)\n  syl(w0, wcel(cxp(cfv(cbs, c2), csn(cfv(c0g, cfv(csca, c2)))), c1), wcel(c2, clmod))\n  lfl0f(c2, cfv(cbs, c2), cfv(c0g, cfv(csca, c2)), c1, cfv(csca, c2))\n  eqid(cfv(csca, c2))\n  eqid(cfv(c0g, cfv(csca, c2)))\n  eqid(cfv(cbs, c2))\n}","pretty":"thm ldual0vcl(class c0, class c1, class c2, class c3, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 ‚àà c1)\n  ‚ä£ c1 =(LFnl ` c2)\n  ‚ä£ c3 =(LDual ` c2)\n  ‚ä£ c0 =(0 ` c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà LMod)\n} = {\n  eqeltrd(c0, c1, ((Base ` c2)√ó {(0 `(Scalar ` c2))}), w0)\n  ldual0v(c0, (Base ` c2), (0 `(Scalar ` c2)), c2, (Scalar ` c2), c3, w0)\n  syl(w0, ((Base ` c2)√ó {(0 `(Scalar ` c2))})‚àà c1, c2 ‚àà LMod)\n  lfl0f(c2, (Base ` c2), (0 `(Scalar ` c2)), c1, (Scalar ` c2))\n  eqid((Scalar ` c2))\n  eqid((0 `(Scalar ` c2)))\n  eqid((Base ` c2))\n}","parent":["eqeltrd","ldual0v","syl","lfl0f","eqid"],"children":["lcfr"]},{"name":"lduallmodlem","content":"Lemma for ~ lduallmod . (Contributed by NM, 22-Oct-2014.)","origin":"thm lduallmodlem(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wcel(c0, clmod))\n  -| wceq(c0, cfv(cld, c1))\n  -| wi(w0, wcel(c1, clmod))\n  -| wceq(c2, cfv(cbs, c1))\n  -| wceq(c3, cof(cfv(cplusg, c1)))\n  -| wceq(c4, cfv(clfn, c1))\n  -| wceq(c5, cfv(csca, c1))\n  -| wceq(c6, cfv(cbs, c5))\n  -| wceq(c7, cfv(cmulr, c5))\n  -| wceq(c8, cfv(coppr, c5))\n  -| wceq(c9, cfv(cvsca, c0))\n} = {\n  a1ii(wi(w0, wcel(c0, clmod)), wceq(c3, cof(cfv(cplusg, c1))))\n  islmodd(hs0, hs1, hs2, c0, c4, cfv(cplusg, c0), c8, c9, c6, cfv(cplusg, c5), cfv(cmulr, cfv(csca, c0)), cfv(cur, c5), w0)\n  eqcomd(c4, cfv(cbs, c0), w0)\n  ldualvbase(cfv(cbs, c0), c4, c1, c0, clmod, w0)\n  eqid(cfv(cbs, c0))\n  eqidd(cfv(cplusg, c0), w0)\n  eqcomd(c8, cfv(csca, c0), w0)\n  a1i(w0, wceq(c9, cfv(cvsca, c0)))\n  a1i(w0, wceq(c6, cfv(cbs, c8)))\n  opprbas(c6, c8, c5)\n  a1i(w0, wceq(cfv(cplusg, c5), cfv(cplusg, c8)))\n  oppradd(cfv(cplusg, c5), c8, c5)\n  fveq2d(cmulr, cfv(csca, c0), c8, w0)\n  ldualsca(cfv(csca, c0), c8, c5, c1, c0, clmod, w0)\n  a1i(w0, wceq(cfv(cur, c5), cfv(cur, c8)))\n  oppr1(cfv(cur, c5), c8, c5)\n  3syl(w0, wcel(c8, crg), wcel(c1, clmod), wcel(c5, crg))\n  opprring(c5, c8)\n  ldualgrp(c0, c1, w0)\n  ldualvscl(cv(hs0), c9, cv(hs1), c4, c1, c5, c6, c0, w3a(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c4)))\n  3ad2ant1(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c4), wcel(c1, clmod))\n  simp2(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c4))\n  simp3(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c4))\n  ldualvsdi1(cv(hs0), c9, cv(hs1), cfv(cplusg, c0), cv(hs2), c4, c1, c5, c6, c0, wa(w0, w3a(wcel(cv(hs0), c6), wcel(cv(hs1), c4), wcel(cv(hs2), c4))))\n  adantr(w0, w3a(wcel(cv(hs0), c6), wcel(cv(hs1), c4), wcel(cv(hs2), c4)), wcel(c1, clmod))\n  simpr1(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c4), wcel(cv(hs2), c4))\n  simpr2(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c4), wcel(cv(hs2), c4))\n  simpr3(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c4), wcel(cv(hs2), c4))\n  ldualvsdi2(cv(hs0), cfv(cplusg, c5), cv(hs1), c9, cv(hs2), cfv(cplusg, c0), c4, c1, c5, c6, c0, wa(w0, w3a(wcel(cv(hs0), c6), wcel(cv(hs1), c6), wcel(cv(hs2), c4))))\n  eqid(cfv(cplusg, c5))\n  eqid(cfv(cplusg, c0))\n  ldualvsass2(cv(hs0), cfv(cmulr, cfv(csca, c0)), cv(hs1), c9, cv(hs2), c4, c1, c5, c6, c0, cfv(csca, c0), wa(w0, w3a(wcel(cv(hs0), c6), wcel(cv(hs1), c6), wcel(cv(hs2), c4))))\n  eqid(cfv(csca, c0))\n  eqid(cfv(cmulr, cfv(csca, c0)))\n  adantr(w0, w3a(wcel(cv(hs0), c6), wcel(cv(hs1), c6), wcel(cv(hs2), c4)), wcel(c1, clmod))\n  simpr1(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c6), wcel(cv(hs2), c4))\n  simpr2(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c6), wcel(cv(hs2), c4))\n  simpr3(w0, wcel(cv(hs0), c6), wcel(cv(hs1), c6), wcel(cv(hs2), c4))\n  eqtrd(co(cfv(cur, c5), c9, cv(hs0)), cv(hs0), co(cv(hs0), cof(c7), cxp(c2, csn(cfv(cur, c5)))), wa(w0, wcel(cv(hs0), c4)))\n  ldualvs(cfv(cur, c5), c9, cv(hs0), c7, c2, c4, c1, c5, c6, c0, clmod, wa(w0, wcel(cv(hs0), c4)))\n  adantr(w0, wcel(cv(hs0), c4), wcel(cfv(cur, c5), c6))\n  3syl(w0, wcel(cfv(cur, c5), c6), wcel(c1, clmod), wcel(c5, crg))\n  lmodring(c1, c5)\n  ringidcl(c5, cfv(cur, c5), c6)\n  lfl1sc(cv(hs0), c7, c2, cfv(cur, c5), c1, c5, c4, c6, wa(w0, wcel(cv(hs0), c4)))\n  eqid(cfv(cur, c5))\n  adantr(w0, wcel(cv(hs0), c4), wcel(c1, clmod))\n  simpr(w0, wcel(cv(hs0), c4))\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(c0)\n  diff.hs0.c(c4)\n  diff.hs0.c(cfv(cplusg, c0))\n  diff.hs0.c(c9)\n  diff.hs0.c(c6)\n  diff.hs0.c(cfv(cur, c5))\n  diff.hs1.c(c4)\n  diff.hs1.c(cfv(cplusg, c0))\n  diff.hs1.c(c9)\n  diff.hs1.c(c6)\n  diff.hs1.c(cfv(cplusg, c5))\n  diff.hs1.c(cfv(cmulr, cfv(csca, c0)))\n  diff.hs2.c(c4)\n  diff.hs2.c(cfv(cplusg, c0))\n  diff.hs2.c(c9)\n  diff.hs2.c(c6)\n  diff.hs2.c(cfv(cplusg, c5))\n  diff.hs2.c(cfv(cmulr, cfv(csca, c0)))\n  diff.hs0.w(w0)\n  diff.hs1.w(w0)\n  diff.hs2.w(w0)\n}","pretty":"thm lduallmodlem(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 ‚àà LMod)\n  ‚ä£ c0 =(LDual ` c1)\n  ‚ä£ (w0 ‚Üí c1 ‚àà LMod)\n  ‚ä£ c2 =(Base ` c1)\n  ‚ä£ c3 = oF((+ ` c1))\n  ‚ä£ c4 =(LFnl ` c1)\n  ‚ä£ c5 =(Scalar ` c1)\n  ‚ä£ c6 =(Base ` c5)\n  ‚ä£ c7 =(√ó ` c5)\n  ‚ä£ c8 =(oppR ` c5)\n  ‚ä£ c9 =(√ó ` c0)\n} = {\n  a1ii((w0 ‚Üí c0 ‚àà LMod), c3 = oF((+ ` c1)))\n  islmodd(hs0, hs1, hs2, c0, c4, (+ ` c0), c8, c9, c6, (+ ` c5), (√ó `(Scalar ` c0)), (1r ` c5), w0)\n  eqcomd(c4, (Base ` c0), w0)\n  ldualvbase((Base ` c0), c4, c1, c0, clmod, w0)\n  eqid((Base ` c0))\n  eqidd((+ ` c0), w0)\n  eqcomd(c8, (Scalar ` c0), w0)\n  a1i(w0, c9 =(√ó ` c0))\n  a1i(w0, c6 =(Base ` c8))\n  opprbas(c6, c8, c5)\n  a1i(w0, (+ ` c5)=(+ ` c8))\n  oppradd((+ ` c5), c8, c5)\n  fveq2d(cmulr, (Scalar ` c0), c8, w0)\n  ldualsca((Scalar ` c0), c8, c5, c1, c0, clmod, w0)\n  a1i(w0, (1r ` c5)=(1r ` c8))\n  oppr1((1r ` c5), c8, c5)\n  3syl(w0, c8 ‚àà Ring, c1 ‚àà LMod, c5 ‚àà Ring)\n  opprring(c5, c8)\n  ldualgrp(c0, c1, w0)\n  ldualvscl(hs0, c9, hs1, c4, c1, c5, c6, c0, (w0 ‚àß hs0 ‚àà c6 ‚àß hs1 ‚àà c4))\n  3ad2ant1(w0, hs0 ‚àà c6, hs1 ‚àà c4, c1 ‚àà LMod)\n  simp2(w0, hs0 ‚àà c6, hs1 ‚àà c4)\n  simp3(w0, hs0 ‚àà c6, hs1 ‚àà c4)\n  ldualvsdi1(hs0, c9, hs1, (+ ` c0), hs2, c4, c1, c5, c6, c0, (w0 ‚àß(hs0 ‚àà c6 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4)))\n  adantr(w0, (hs0 ‚àà c6 ‚àß hs1 ‚àà c4 ‚àß hs2 ‚àà c4), c1 ‚àà LMod)\n  simpr1(w0, hs0 ‚àà c6, hs1 ‚àà c4, hs2 ‚àà c4)\n  simpr2(w0, hs0 ‚àà c6, hs1 ‚àà c4, hs2 ‚àà c4)\n  simpr3(w0, hs0 ‚àà c6, hs1 ‚àà c4, hs2 ‚àà c4)\n  ldualvsdi2(hs0, (+ ` c5), hs1, c9, hs2, (+ ` c0), c4, c1, c5, c6, c0, (w0 ‚àß(hs0 ‚àà c6 ‚àß hs1 ‚àà c6 ‚àß hs2 ‚àà c4)))\n  eqid((+ ` c5))\n  eqid((+ ` c0))\n  ldualvsass2(hs0, (√ó `(Scalar ` c0)), hs1, c9, hs2, c4, c1, c5, c6, c0, (Scalar ` c0), (w0 ‚àß(hs0 ‚àà c6 ‚àß hs1 ‚àà c6 ‚àß hs2 ‚àà c4)))\n  eqid((Scalar ` c0))\n  eqid((√ó `(Scalar ` c0)))\n  adantr(w0, (hs0 ‚àà c6 ‚àß hs1 ‚àà c6 ‚àß hs2 ‚àà c4), c1 ‚àà LMod)\n  simpr1(w0, hs0 ‚àà c6, hs1 ‚àà c6, hs2 ‚àà c4)\n  simpr2(w0, hs0 ‚àà c6, hs1 ‚àà c6, hs2 ‚àà c4)\n  simpr3(w0, hs0 ‚àà c6, hs1 ‚àà c6, hs2 ‚àà c4)\n  eqtrd(((1r ` c5)[c9]hs0), hs0, (hs0[oF(c7)](c2 √ó {(1r ` c5)})), (w0 ‚àß hs0 ‚àà c4))\n  ldualvs((1r ` c5), c9, hs0, c7, c2, c4, c1, c5, c6, c0, clmod, (w0 ‚àß hs0 ‚àà c4))\n  adantr(w0, hs0 ‚àà c4, (1r ` c5)‚àà c6)\n  3syl(w0, (1r ` c5)‚àà c6, c1 ‚àà LMod, c5 ‚àà Ring)\n  lmodring(c1, c5)\n  ringidcl(c5, (1r ` c5), c6)\n  lfl1sc(hs0, c7, c2, (1r ` c5), c1, c5, c4, c6, (w0 ‚àß hs0 ‚àà c4))\n  eqid((1r ` c5))\n  adantr(w0, hs0 ‚àà c4, c1 ‚àà LMod)\n  simpr(w0, hs0 ‚àà c4)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(c0)\n  diff.hs0.c(c4)\n  diff.hs0.c((+ ` c0))\n  diff.hs0.c(c9)\n  diff.hs0.c(c6)\n  diff.hs0.c((1r ` c5))\n  diff.hs1.c(c4)\n  diff.hs1.c((+ ` c0))\n  diff.hs1.c(c9)\n  diff.hs1.c(c6)\n  diff.hs1.c((+ ` c5))\n  diff.hs1.c((√ó `(Scalar ` c0)))\n  diff.hs2.c(c4)\n  diff.hs2.c((+ ` c0))\n  diff.hs2.c(c9)\n  diff.hs2.c(c6)\n  diff.hs2.c((+ ` c5))\n  diff.hs2.c((√ó `(Scalar ` c0)))\n  diff.hs0.w(w0)\n  diff.hs1.w(w0)\n  diff.hs2.w(w0)\n}","parent":["a1ii","islmodd","eqcomd","ldualvbase","eqid","eqidd","a1i","opprbas","oppradd","fveq2d","ldualsca","oppr1","3syl","opprring","ldualgrp","ldualvscl","3ad2ant1","simp2","simp3","ldualvsdi1","adantr","simpr1","simpr2","simpr3","ldualvsdi2","ldualvsass2","eqtrd","ldualvs","lmodring","ringidcl","lfl1sc","simpr","diff.hs0.s","diff.hs1.s","diff.hs0.c","diff.hs1.c","diff.hs2.c","diff.hs0.w","diff.hs1.w","diff.hs2.w"],"children":["lduallmod"]},{"name":"lduallmod","content":"The dual of a left module is also a left module. (Contributed by NM, 22-Oct-2014.)","origin":"thm lduallmod(class c0, class c1, wff w0) {\n  |- wi(w0, wcel(c0, clmod))\n  -| wceq(c0, cfv(cld, c1))\n  -| wi(w0, wcel(c1, clmod))\n} = {\n  lduallmodlem(c0, c1, cfv(cbs, c1), cof(cfv(cplusg, c1)), cfv(clfn, c1), cfv(csca, c1), cfv(cbs, cfv(csca, c1)), cfv(cmulr, cfv(csca, c1)), cfv(coppr, cfv(csca, c1)), cfv(cvsca, c0), w0)\n  eqid(cfv(cbs, c1))\n  eqid(cof(cfv(cplusg, c1)))\n  eqid(cfv(clfn, c1))\n  eqid(cfv(csca, c1))\n  eqid(cfv(cbs, cfv(csca, c1)))\n  eqid(cfv(cmulr, cfv(csca, c1)))\n  eqid(cfv(coppr, cfv(csca, c1)))\n  eqid(cfv(cvsca, c0))\n}","pretty":"thm lduallmod(class c0, class c1, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 ‚àà LMod)\n  ‚ä£ c0 =(LDual ` c1)\n  ‚ä£ (w0 ‚Üí c1 ‚àà LMod)\n} = {\n  lduallmodlem(c0, c1, (Base ` c1), oF((+ ` c1)), (LFnl ` c1), (Scalar ` c1), (Base `(Scalar ` c1)), (√ó `(Scalar ` c1)), (oppR `(Scalar ` c1)), (√ó ` c0), w0)\n  eqid((Base ` c1))\n  eqid(oF((+ ` c1)))\n  eqid((LFnl ` c1))\n  eqid((Scalar ` c1))\n  eqid((Base `(Scalar ` c1)))\n  eqid((√ó `(Scalar ` c1)))\n  eqid((oppR `(Scalar ` c1)))\n  eqid((√ó ` c0))\n}","parent":["lduallmodlem","eqid"],"children":["lduallvec","ldualvsub","ldualvsubval","ldualssvscl","ldualssvsubcl","ldual0vs","ldual1dim","lkrlspeqN","lclkrlem1","lclkrlem2j","lcfrvalsnN","lcfrlem31","lcfr","lcd0v","lcdlss","lcdlsp","mapdrvallem2","mapdunirnN"]},{"name":"lduallvec","content":"The dual of a left vector space is also a left vector space. Note that scalar multiplication is reversed by ~ df-oppr ; otherwise, the dual would be a right vector space as is sometimes the case in the literature. (Contributed by NM, 22-Oct-2014.)","origin":"thm lduallvec(class c0, class c1, wff w0) {\n  |- wi(w0, wcel(c0, clvec))\n  -| wceq(c0, cfv(cld, c1))\n  -| wi(w0, wcel(c1, clvec))\n} = {\n  sylanbrc(w0, wcel(c0, clvec), wcel(c0, clmod), wcel(cfv(csca, c0), cdr))\n  lduallmod(c0, c1, w0)\n  syl(w0, wcel(c1, clmod), wcel(c1, clvec))\n  lveclmod(c1)\n  eqeltrd(cfv(csca, c0), cdr, cfv(coppr, cfv(csca, c1)), w0)\n  ldualsca(cfv(csca, c0), cfv(coppr, cfv(csca, c1)), cfv(csca, c1), c1, c0, clvec, w0)\n  sylib(w0, wcel(cfv(coppr, cfv(csca, c1)), cdr), wcel(cfv(csca, c1), cdr))\n  syl(w0, wcel(cfv(csca, c1), cdr), wcel(c1, clvec))\n  lvecdrng(c1, cfv(csca, c1))\n  eqid(cfv(csca, c1))\n  opprdrng(cfv(csca, c1), cfv(coppr, cfv(csca, c1)))\n  eqid(cfv(coppr, cfv(csca, c1)))\n  islvec(c0, cfv(csca, c0))\n  eqid(cfv(csca, c0))\n}","pretty":"thm lduallvec(class c0, class c1, wff w0) {\n  ‚ä¢ (w0 ‚Üí c0 ‚àà LVec)\n  ‚ä£ c0 =(LDual ` c1)\n  ‚ä£ (w0 ‚Üí c1 ‚àà LVec)\n} = {\n  sylanbrc(w0, c0 ‚àà LVec, c0 ‚àà LMod, (Scalar ` c0)‚àà DivRing)\n  lduallmod(c0, c1, w0)\n  syl(w0, c1 ‚àà LMod, c1 ‚àà LVec)\n  lveclmod(c1)\n  eqeltrd((Scalar ` c0), cdr, (oppR `(Scalar ` c1)), w0)\n  ldualsca((Scalar ` c0), (oppR `(Scalar ` c1)), (Scalar ` c1), c1, c0, clvec, w0)\n  sylib(w0, (oppR `(Scalar ` c1))‚àà DivRing, (Scalar ` c1)‚àà DivRing)\n  syl(w0, (Scalar ` c1)‚àà DivRing, c1 ‚àà LVec)\n  lvecdrng(c1, (Scalar ` c1))\n  eqid((Scalar ` c1))\n  opprdrng((Scalar ` c1), (oppR `(Scalar ` c1)))\n  eqid((oppR `(Scalar ` c1)))\n  islvec(c0, (Scalar ` c0))\n  eqid((Scalar ` c0))\n}","parent":["sylanbrc","lduallmod","syl","lveclmod","eqeltrd","ldualsca","sylib","lvecdrng","eqid","opprdrng","islvec"],"children":["lkreqN","lkrlspeqN","lcdlvec"]},{"name":"ldualvsub","content":"The value of vector subtraction in the dual of a vector space. (Contributed by NM, 27-Feb-2015.)","origin":"thm ldualvsub(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  |- wi(w0, wceq(co(c0, c1, c2), co(c0, c3, co(cfv(c4, c5), c6, c2))))\n  -| wceq(c7, cfv(csca, c8))\n  -| wceq(c4, cfv(cminusg, c7))\n  -| wceq(c5, cfv(cur, c7))\n  -| wceq(c9, cfv(clfn, c8))\n  -| wceq(c10, cfv(cld, c8))\n  -| wceq(c3, cfv(cplusg, c10))\n  -| wceq(c6, cfv(cvsca, c10))\n  -| wceq(c1, cfv(csg, c10))\n  -| wi(w0, wcel(c8, clmod))\n  -| wi(w0, wcel(c0, c9))\n  -| wi(w0, wcel(c2, c9))\n} = {\n  eqtr4d(co(c0, c1, c2), co(c0, c3, co(cfv(c4, c5), c6, c2)), co(c0, c3, co(cfv(cfv(cminusg, cfv(csca, c10)), cfv(cur, cfv(csca, c10))), c6, c2)), w0)\n  syl3anc(w0, wceq(co(c0, c1, c2), co(c0, c3, co(cfv(cfv(cminusg, cfv(csca, c10)), cfv(cur, cfv(csca, c10))), c6, c2))), wcel(c10, clmod), wcel(c0, cfv(cbs, c10)), wcel(c2, cfv(cbs, c10)))\n  lduallmod(c10, c8, w0)\n  ldualelvbase(c0, cfv(cbs, c10), c9, c8, c10, clmod, w0)\n  ldualelvbase(c2, cfv(cbs, c10), c9, c8, c10, clmod, w0)\n  lmodvsubval2(c10, c0, cfv(cbs, c10), c2, c1, c3, cfv(cminusg, cfv(csca, c10)), cfv(cur, cfv(csca, c10)), c6, cfv(csca, c10))\n  eqid(cfv(cbs, c10))\n  eqid(cfv(cminusg, cfv(csca, c10)))\n  eqid(cfv(cur, cfv(csca, c10)))\n  oveq2d(c0, c3, co(cfv(c4, c5), c6, c2), co(cfv(cfv(cminusg, cfv(csca, c10)), cfv(cur, cfv(csca, c10))), c6, c2), w0)\n  oveq1d(cfv(c4, c5), c6, c2, cfv(cfv(cminusg, cfv(csca, c10)), cfv(cur, cfv(csca, c10))), w0)\n  fveq12d(c4, c5, cfv(cminusg, cfv(csca, c10)), cfv(cur, cfv(csca, c10)), w0)\n  syl6reqr(c4, cfv(cminusg, cfv(csca, c10)), cfv(cminusg, cfv(coppr, c7)), w0)\n  fveq2d(cminusg, cfv(csca, c10), cfv(coppr, c7), w0)\n  opprneg(c4, cfv(coppr, c7), c7)\n  syl6reqr(c5, cfv(cur, cfv(csca, c10)), cfv(cur, cfv(coppr, c7)), w0)\n  fveq2d(cur, cfv(csca, c10), cfv(coppr, c7), w0)\n  ldualsca(cfv(csca, c10), cfv(coppr, c7), c7, c8, c10, clmod, w0)\n  eqid(cfv(csca, c10))\n  oppr1(c5, cfv(coppr, c7), c7)\n  eqid(cfv(coppr, c7))\n}","pretty":"thm ldualvsub(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)=(c0[c3]((c4 ` c5)[c6]c2)))\n  ‚ä£ c7 =(Scalar ` c8)\n  ‚ä£ c4 =(invg ` c7)\n  ‚ä£ c5 =(1r ` c7)\n  ‚ä£ c9 =(LFnl ` c8)\n  ‚ä£ c10 =(LDual ` c8)\n  ‚ä£ c3 =(+ ` c10)\n  ‚ä£ c6 =(√ó ` c10)\n  ‚ä£ c1 =(-g ` c10)\n  ‚ä£ (w0 ‚Üí c8 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c9)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c9)\n} = {\n  eqtr4d((c0[c1]c2), (c0[c3]((c4 ` c5)[c6]c2)), (c0[c3](((invg `(Scalar ` c10))`(1r `(Scalar ` c10)))[c6]c2)), w0)\n  syl3anc(w0, (c0[c1]c2)=(c0[c3](((invg `(Scalar ` c10))`(1r `(Scalar ` c10)))[c6]c2)), c10 ‚àà LMod, c0 ‚àà(Base ` c10), c2 ‚àà(Base ` c10))\n  lduallmod(c10, c8, w0)\n  ldualelvbase(c0, (Base ` c10), c9, c8, c10, clmod, w0)\n  ldualelvbase(c2, (Base ` c10), c9, c8, c10, clmod, w0)\n  lmodvsubval2(c10, c0, (Base ` c10), c2, c1, c3, (invg `(Scalar ` c10)), (1r `(Scalar ` c10)), c6, (Scalar ` c10))\n  eqid((Base ` c10))\n  eqid((invg `(Scalar ` c10)))\n  eqid((1r `(Scalar ` c10)))\n  oveq2d(c0, c3, ((c4 ` c5)[c6]c2), (((invg `(Scalar ` c10))`(1r `(Scalar ` c10)))[c6]c2), w0)\n  oveq1d((c4 ` c5), c6, c2, ((invg `(Scalar ` c10))`(1r `(Scalar ` c10))), w0)\n  fveq12d(c4, c5, (invg `(Scalar ` c10)), (1r `(Scalar ` c10)), w0)\n  syl6reqr(c4, (invg `(Scalar ` c10)), (invg `(oppR ` c7)), w0)\n  fveq2d(cminusg, (Scalar ` c10), (oppR ` c7), w0)\n  opprneg(c4, (oppR ` c7), c7)\n  syl6reqr(c5, (1r `(Scalar ` c10)), (1r `(oppR ` c7)), w0)\n  fveq2d(cur, (Scalar ` c10), (oppR ` c7), w0)\n  ldualsca((Scalar ` c10), (oppR ` c7), c7, c8, c10, clmod, w0)\n  eqid((Scalar ` c10))\n  oppr1(c5, (oppR ` c7), c7)\n  eqid((oppR ` c7))\n}","parent":["eqtr4d","syl3anc","lduallmod","ldualelvbase","lmodvsubval2","eqid","oveq2d","oveq1d","fveq12d","syl6reqr","fveq2d","opprneg","ldualsca","oppr1"],"children":["ldualvsubcl","lcfrlem2"]},{"name":"ldualvsubcl","content":"Closure of vector subtraction in the dual of a vector space. (Contributed by NM, 27-Feb-2015.)","origin":"thm ldualvsubcl(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wcel(co(c0, c1, c2), c3))\n  -| wceq(c3, cfv(clfn, c4))\n  -| wceq(c5, cfv(cld, c4))\n  -| wceq(c1, cfv(csg, c5))\n  -| wi(w0, wcel(c4, clmod))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(c2, c3))\n} = {\n  eqeltrd(co(c0, c1, c2), c3, co(c0, cfv(cplusg, c5), co(cfv(cfv(cminusg, cfv(csca, c4)), cfv(cur, cfv(csca, c4))), cfv(cvsca, c5), c2)), w0)\n  ldualvsub(c0, c1, c2, cfv(cplusg, c5), cfv(cminusg, cfv(csca, c4)), cfv(cur, cfv(csca, c4)), cfv(cvsca, c5), cfv(csca, c4), c4, c3, c5, w0)\n  ldualvaddcl(c0, cfv(cplusg, c5), co(cfv(cfv(cminusg, cfv(csca, c4)), cfv(cur, cfv(csca, c4))), cfv(cvsca, c5), c2), c3, c4, c5, w0)\n  eqid(cfv(cplusg, c5))\n  ldualvscl(cfv(cfv(cminusg, cfv(csca, c4)), cfv(cur, cfv(csca, c4))), cfv(cvsca, c5), c2, c3, c4, cfv(csca, c4), cfv(cbs, cfv(csca, c4)), c5, w0)\n  eqid(cfv(cvsca, c5))\n  syl2anc(w0, wcel(cfv(cfv(cminusg, cfv(csca, c4)), cfv(cur, cfv(csca, c4))), cfv(cbs, cfv(csca, c4))), wcel(cfv(csca, c4), cgrp), wcel(cfv(cur, cfv(csca, c4)), cfv(cbs, cfv(csca, c4))))\n  syl(w0, wcel(cfv(csca, c4), cgrp), wcel(cfv(csca, c4), crg))\n  ringgrp(cfv(csca, c4))\n  syl(w0, wcel(cfv(cur, cfv(csca, c4)), cfv(cbs, cfv(csca, c4))), wcel(cfv(csca, c4), crg))\n  syl(w0, wcel(cfv(csca, c4), crg), wcel(c4, clmod))\n  lmodring(c4, cfv(csca, c4))\n  eqid(cfv(csca, c4))\n  ringidcl(cfv(csca, c4), cfv(cur, cfv(csca, c4)), cfv(cbs, cfv(csca, c4)))\n  eqid(cfv(cur, cfv(csca, c4)))\n  grpinvcl(cfv(csca, c4), cfv(cur, cfv(csca, c4)), cfv(cbs, cfv(csca, c4)), cfv(cminusg, cfv(csca, c4)))\n  eqid(cfv(cbs, cfv(csca, c4)))\n  eqid(cfv(cminusg, cfv(csca, c4)))\n}","pretty":"thm ldualvsubcl(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)‚àà c3)\n  ‚ä£ c3 =(LFnl ` c4)\n  ‚ä£ c5 =(LDual ` c4)\n  ‚ä£ c1 =(-g ` c5)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c3)\n} = {\n  eqeltrd((c0[c1]c2), c3, (c0[(+ ` c5)](((invg `(Scalar ` c4))`(1r `(Scalar ` c4)))[(√ó ` c5)]c2)), w0)\n  ldualvsub(c0, c1, c2, (+ ` c5), (invg `(Scalar ` c4)), (1r `(Scalar ` c4)), (√ó ` c5), (Scalar ` c4), c4, c3, c5, w0)\n  ldualvaddcl(c0, (+ ` c5), (((invg `(Scalar ` c4))`(1r `(Scalar ` c4)))[(√ó ` c5)]c2), c3, c4, c5, w0)\n  eqid((+ ` c5))\n  ldualvscl(((invg `(Scalar ` c4))`(1r `(Scalar ` c4))), (√ó ` c5), c2, c3, c4, (Scalar ` c4), (Base `(Scalar ` c4)), c5, w0)\n  eqid((√ó ` c5))\n  syl2anc(w0, ((invg `(Scalar ` c4))`(1r `(Scalar ` c4)))‚àà(Base `(Scalar ` c4)), (Scalar ` c4)‚àà Grp, (1r `(Scalar ` c4))‚àà(Base `(Scalar ` c4)))\n  syl(w0, (Scalar ` c4)‚àà Grp, (Scalar ` c4)‚àà Ring)\n  ringgrp((Scalar ` c4))\n  syl(w0, (1r `(Scalar ` c4))‚àà(Base `(Scalar ` c4)), (Scalar ` c4)‚àà Ring)\n  syl(w0, (Scalar ` c4)‚àà Ring, c4 ‚àà LMod)\n  lmodring(c4, (Scalar ` c4))\n  eqid((Scalar ` c4))\n  ringidcl((Scalar ` c4), (1r `(Scalar ` c4)), (Base `(Scalar ` c4)))\n  eqid((1r `(Scalar ` c4)))\n  grpinvcl((Scalar ` c4), (1r `(Scalar ` c4)), (Base `(Scalar ` c4)), (invg `(Scalar ` c4)))\n  eqid((Base `(Scalar ` c4)))\n  eqid((invg `(Scalar ` c4)))\n}","parent":["eqeltrd","ldualvsub","ldualvaddcl","eqid","ldualvscl","syl2anc","syl","ringgrp","lmodring","ringidcl","grpinvcl"],"children":["lcfrlem3","lcfrlem30"]},{"name":"ldualvsubval","content":"The value of the value of vector subtraction in the dual of a vector space. TODO: shorten with ~ ldualvsub ? (Requires ` D ` to ` oppR ` conversion.) (Contributed by NM, 26-Feb-2015.)","origin":"thm ldualvsubval(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wceq(cfv(co(c0, c1, c2), c3), co(cfv(c0, c3), c4, cfv(c2, c3))))\n  -| wceq(c5, cfv(cbs, c6))\n  -| wceq(c7, cfv(csca, c6))\n  -| wceq(c4, cfv(csg, c7))\n  -| wceq(c8, cfv(clfn, c6))\n  -| wceq(c9, cfv(cld, c6))\n  -| wceq(c1, cfv(csg, c9))\n  -| wi(w0, wcel(c6, clmod))\n  -| wi(w0, wcel(c0, c8))\n  -| wi(w0, wcel(c2, c8))\n  -| wi(w0, wcel(c3, c5))\n} = {\n  3eqtrd(cfv(co(c0, c1, c2), c3), co(cfv(c0, c3), c4, cfv(c2, c3)), cfv(co(c0, cfv(cplusg, c9), co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2)), c3), co(cfv(c0, c3), cfv(cplusg, c7), cfv(co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2), c3)), w0)\n  fveq1d(co(c0, c1, c2), c3, co(c0, cfv(cplusg, c9), co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2)), w0)\n  syl3anc(w0, wceq(co(c0, c1, c2), co(c0, cfv(cplusg, c9), co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2))), wcel(c9, clmod), wcel(c0, cfv(cbs, c9)), wcel(c2, cfv(cbs, c9)))\n  ldualelvbase(c0, cfv(cbs, c9), c8, c6, c9, clmod, w0)\n  ldualelvbase(c2, cfv(cbs, c9), c8, c6, c9, clmod, w0)\n  lmodvsubval2(c9, c0, cfv(cbs, c9), c2, c1, cfv(cplusg, c9), cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9)), cfv(cvsca, c9), cfv(csca, c9))\n  eqid(cfv(cbs, c9))\n  ldualvaddval(c0, cfv(cplusg, c9), co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2), c3, cfv(cplusg, c7), c5, c6, c7, c8, c9, w0)\n  eqid(cfv(cplusg, c9))\n  ldualvscl(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2, c8, c6, c7, cfv(cbs, c7), c9, w0)\n  eleqtrd(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cbs, c7), cfv(cbs, cfv(csca, c9)), w0)\n  syl2anc(w0, wcel(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cbs, cfv(csca, c9))), wcel(cfv(csca, c9), cgrp), wcel(cfv(cur, cfv(csca, c9)), cfv(cbs, cfv(csca, c9))))\n  syl(w0, wcel(cfv(csca, c9), cgrp), wcel(c9, clmod))\n  lmodfgrp(c9, cfv(csca, c9))\n  syl(w0, wcel(cfv(cur, cfv(csca, c9)), cfv(cbs, cfv(csca, c9))), wcel(cfv(csca, c9), crg))\n  syl(w0, wcel(cfv(csca, c9), crg), wcel(c9, clmod))\n  lduallmod(c9, c6, w0)\n  lmodring(c9, cfv(csca, c9))\n  ringidcl(cfv(csca, c9), cfv(cur, cfv(csca, c9)), cfv(cbs, cfv(csca, c9)))\n  grpinvcl(cfv(csca, c9), cfv(cur, cfv(csca, c9)), cfv(cbs, cfv(csca, c9)), cfv(cminusg, cfv(csca, c9)))\n  ldualsbase(cfv(cbs, cfv(csca, c9)), cfv(cbs, c7), c7, c6, c9, cfv(csca, c9), clmod, w0)\n  eqid(cfv(cbs, cfv(csca, c9)))\n  eqtr4d(co(cfv(c0, c3), cfv(cplusg, c7), cfv(co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2), c3)), co(cfv(c0, c3), c4, cfv(c2, c3)), co(cfv(c0, c3), cfv(cplusg, c7), cfv(cfv(cminusg, c7), cfv(c2, c3))), w0)\n  oveq2d(cfv(c0, c3), cfv(cplusg, c7), cfv(co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2), c3), cfv(cfv(cminusg, c7), cfv(c2, c3)), w0)\n  3eqtrd(cfv(co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2), c3), cfv(cfv(cminusg, c7), cfv(c2, c3)), cfv(co(cfv(cfv(cminusg, c7), cfv(cur, c7)), cfv(cvsca, c9), c2), c3), co(cfv(c2, c3), cfv(cmulr, c7), cfv(cfv(cminusg, c7), cfv(cur, c7))), w0)\n  fveq1d(co(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2), c3, co(cfv(cfv(cminusg, c7), cfv(cur, c7)), cfv(cvsca, c9), c2), w0)\n  oveq1d(cfv(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9))), cfv(cvsca, c9), c2, cfv(cfv(cminusg, c7), cfv(cur, c7)), w0)\n  fveq12d(cfv(cminusg, cfv(csca, c9)), cfv(cur, cfv(csca, c9)), cfv(cminusg, c7), cfv(cur, c7), w0)\n  ldualneg(cfv(cminusg, cfv(csca, c9)), cfv(cminusg, c7), c7, c6, c9, cfv(csca, c9), w0)\n  eqid(cfv(cminusg, cfv(csca, c9)))\n  ldual1(cfv(cur, cfv(csca, c9)), cfv(cur, c7), c7, c6, c9, cfv(csca, c9), w0)\n  eqid(cfv(csca, c9))\n  eqid(cfv(cur, cfv(csca, c9)))\n  ldualvsval(cfv(cfv(cminusg, c7), cfv(cur, c7)), cfv(cvsca, c9), c2, c3, cfv(cmulr, c7), c8, c6, c5, c7, cfv(cbs, c7), c9, clmod, w0)\n  eqid(cfv(cvsca, c9))\n  syl2anc(w0, wcel(cfv(cfv(cminusg, c7), cfv(cur, c7)), cfv(cbs, c7)), wcel(c7, cgrp), wcel(cfv(cur, c7), cfv(cbs, c7)))\n  syl(w0, wcel(c7, cgrp), wcel(c7, crg))\n  ringgrp(c7)\n  syl(w0, wcel(cfv(cur, c7), cfv(cbs, c7)), wcel(c6, clmod))\n  lmod1cl(c6, cfv(cur, c7), cfv(cbs, c7), c7)\n  grpinvcl(c7, cfv(cur, c7), cfv(cbs, c7), cfv(cminusg, c7))\n  rngnegr(cfv(c2, c3), cfv(cmulr, c7), cfv(cminusg, c7), cfv(cur, c7), cfv(cbs, c7), c7, w0)\n  eqid(cfv(cmulr, c7))\n  eqid(cfv(cur, c7))\n  syl(w0, wcel(c7, crg), wcel(c6, clmod))\n  lmodring(c6, c7)\n  syl2anc(w0, wceq(co(cfv(c0, c3), c4, cfv(c2, c3)), co(cfv(c0, c3), cfv(cplusg, c7), cfv(cfv(cminusg, c7), cfv(c2, c3)))), wcel(cfv(c0, c3), cfv(cbs, c7)), wcel(cfv(c2, c3), cfv(cbs, c7)))\n  syl3anc(w0, wcel(cfv(c0, c3), cfv(cbs, c7)), wcel(c6, clmod), wcel(c0, c8), wcel(c3, c5))\n  lflcl(c6, clmod, c0, c8, c3, c5, cfv(cbs, c7), c7)\n  syl3anc(w0, wcel(cfv(c2, c3), cfv(cbs, c7)), wcel(c6, clmod), wcel(c2, c8), wcel(c3, c5))\n  lflcl(c6, clmod, c2, c8, c3, c5, cfv(cbs, c7), c7)\n  grpsubval(cfv(c0, c3), cfv(cbs, c7), cfv(c2, c3), c4, cfv(cplusg, c7), cfv(cminusg, c7), c7)\n  eqid(cfv(cbs, c7))\n  eqid(cfv(cplusg, c7))\n  eqid(cfv(cminusg, c7))\n}","pretty":"thm ldualvsubval(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0[c1]c2)` c3)=((c0 ` c3)[c4](c2 ` c3)))\n  ‚ä£ c5 =(Base ` c6)\n  ‚ä£ c7 =(Scalar ` c6)\n  ‚ä£ c4 =(-g ` c7)\n  ‚ä£ c8 =(LFnl ` c6)\n  ‚ä£ c9 =(LDual ` c6)\n  ‚ä£ c1 =(-g ` c9)\n  ‚ä£ (w0 ‚Üí c6 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c5)\n} = {\n  3eqtrd(((c0[c1]c2)` c3), ((c0 ` c3)[c4](c2 ` c3)), ((c0[(+ ` c9)](((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2))` c3), ((c0 ` c3)[(+ ` c7)]((((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2)` c3)), w0)\n  fveq1d((c0[c1]c2), c3, (c0[(+ ` c9)](((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2)), w0)\n  syl3anc(w0, (c0[c1]c2)=(c0[(+ ` c9)](((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2)), c9 ‚àà LMod, c0 ‚àà(Base ` c9), c2 ‚àà(Base ` c9))\n  ldualelvbase(c0, (Base ` c9), c8, c6, c9, clmod, w0)\n  ldualelvbase(c2, (Base ` c9), c8, c6, c9, clmod, w0)\n  lmodvsubval2(c9, c0, (Base ` c9), c2, c1, (+ ` c9), (invg `(Scalar ` c9)), (1r `(Scalar ` c9)), (√ó ` c9), (Scalar ` c9))\n  eqid((Base ` c9))\n  ldualvaddval(c0, (+ ` c9), (((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2), c3, (+ ` c7), c5, c6, c7, c8, c9, w0)\n  eqid((+ ` c9))\n  ldualvscl(((invg `(Scalar ` c9))`(1r `(Scalar ` c9))), (√ó ` c9), c2, c8, c6, c7, (Base ` c7), c9, w0)\n  eleqtrd(((invg `(Scalar ` c9))`(1r `(Scalar ` c9))), (Base ` c7), (Base `(Scalar ` c9)), w0)\n  syl2anc(w0, ((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))‚àà(Base `(Scalar ` c9)), (Scalar ` c9)‚àà Grp, (1r `(Scalar ` c9))‚àà(Base `(Scalar ` c9)))\n  syl(w0, (Scalar ` c9)‚àà Grp, c9 ‚àà LMod)\n  lmodfgrp(c9, (Scalar ` c9))\n  syl(w0, (1r `(Scalar ` c9))‚àà(Base `(Scalar ` c9)), (Scalar ` c9)‚àà Ring)\n  syl(w0, (Scalar ` c9)‚àà Ring, c9 ‚àà LMod)\n  lduallmod(c9, c6, w0)\n  lmodring(c9, (Scalar ` c9))\n  ringidcl((Scalar ` c9), (1r `(Scalar ` c9)), (Base `(Scalar ` c9)))\n  grpinvcl((Scalar ` c9), (1r `(Scalar ` c9)), (Base `(Scalar ` c9)), (invg `(Scalar ` c9)))\n  ldualsbase((Base `(Scalar ` c9)), (Base ` c7), c7, c6, c9, (Scalar ` c9), clmod, w0)\n  eqid((Base `(Scalar ` c9)))\n  eqtr4d(((c0 ` c3)[(+ ` c7)]((((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2)` c3)), ((c0 ` c3)[c4](c2 ` c3)), ((c0 ` c3)[(+ ` c7)]((invg ` c7)`(c2 ` c3))), w0)\n  oveq2d((c0 ` c3), (+ ` c7), ((((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2)` c3), ((invg ` c7)`(c2 ` c3)), w0)\n  3eqtrd(((((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2)` c3), ((invg ` c7)`(c2 ` c3)), ((((invg ` c7)`(1r ` c7))[(√ó ` c9)]c2)` c3), ((c2 ` c3)[(√ó ` c7)]((invg ` c7)`(1r ` c7))), w0)\n  fveq1d((((invg `(Scalar ` c9))`(1r `(Scalar ` c9)))[(√ó ` c9)]c2), c3, (((invg ` c7)`(1r ` c7))[(√ó ` c9)]c2), w0)\n  oveq1d(((invg `(Scalar ` c9))`(1r `(Scalar ` c9))), (√ó ` c9), c2, ((invg ` c7)`(1r ` c7)), w0)\n  fveq12d((invg `(Scalar ` c9)), (1r `(Scalar ` c9)), (invg ` c7), (1r ` c7), w0)\n  ldualneg((invg `(Scalar ` c9)), (invg ` c7), c7, c6, c9, (Scalar ` c9), w0)\n  eqid((invg `(Scalar ` c9)))\n  ldual1((1r `(Scalar ` c9)), (1r ` c7), c7, c6, c9, (Scalar ` c9), w0)\n  eqid((Scalar ` c9))\n  eqid((1r `(Scalar ` c9)))\n  ldualvsval(((invg ` c7)`(1r ` c7)), (√ó ` c9), c2, c3, (√ó ` c7), c8, c6, c5, c7, (Base ` c7), c9, clmod, w0)\n  eqid((√ó ` c9))\n  syl2anc(w0, ((invg ` c7)`(1r ` c7))‚àà(Base ` c7), c7 ‚àà Grp, (1r ` c7)‚àà(Base ` c7))\n  syl(w0, c7 ‚àà Grp, c7 ‚àà Ring)\n  ringgrp(c7)\n  syl(w0, (1r ` c7)‚àà(Base ` c7), c6 ‚àà LMod)\n  lmod1cl(c6, (1r ` c7), (Base ` c7), c7)\n  grpinvcl(c7, (1r ` c7), (Base ` c7), (invg ` c7))\n  rngnegr((c2 ` c3), (√ó ` c7), (invg ` c7), (1r ` c7), (Base ` c7), c7, w0)\n  eqid((√ó ` c7))\n  eqid((1r ` c7))\n  syl(w0, c7 ‚àà Ring, c6 ‚àà LMod)\n  lmodring(c6, c7)\n  syl2anc(w0, ((c0 ` c3)[c4](c2 ` c3))=((c0 ` c3)[(+ ` c7)]((invg ` c7)`(c2 ` c3))), (c0 ` c3)‚àà(Base ` c7), (c2 ` c3)‚àà(Base ` c7))\n  syl3anc(w0, (c0 ` c3)‚àà(Base ` c7), c6 ‚àà LMod, c0 ‚àà c8, c3 ‚àà c5)\n  lflcl(c6, clmod, c0, c8, c3, c5, (Base ` c7), c7)\n  syl3anc(w0, (c2 ` c3)‚àà(Base ` c7), c6 ‚àà LMod, c2 ‚àà c8, c3 ‚àà c5)\n  lflcl(c6, clmod, c2, c8, c3, c5, (Base ` c7), c7)\n  grpsubval((c0 ` c3), (Base ` c7), (c2 ` c3), c4, (+ ` c7), (invg ` c7), c7)\n  eqid((Base ` c7))\n  eqid((+ ` c7))\n  eqid((invg ` c7))\n}","parent":["3eqtrd","fveq1d","syl3anc","ldualelvbase","lmodvsubval2","eqid","ldualvaddval","ldualvscl","eleqtrd","syl2anc","syl","lmodfgrp","lduallmod","lmodring","ringidcl","grpinvcl","ldualsbase","eqtr4d","oveq2d","oveq1d","fveq12d","ldualneg","ldual1","ldualvsval","ringgrp","lmod1cl","rngnegr","lflcl","grpsubval"],"children":["lcfrlem1"]},{"name":"ldualssvscl","content":"Closure of scalar product in a dual subspace.) (Contributed by NM, 5-Feb-2015.)","origin":"thm ldualssvscl(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  |- wi(w0, wcel(co(c0, c1, c2), c3))\n  -| wceq(c4, cfv(csca, c5))\n  -| wceq(c6, cfv(cbs, c4))\n  -| wceq(c7, cfv(cld, c5))\n  -| wceq(c1, cfv(cvsca, c7))\n  -| wceq(c8, cfv(clss, c7))\n  -| wi(w0, wcel(c5, clmod))\n  -| wi(w0, wcel(c3, c8))\n  -| wi(w0, wcel(c0, c6))\n  -| wi(w0, wcel(c2, c3))\n} = {\n  syl22anc(w0, wcel(co(c0, c1, c2), c3), wcel(c7, clmod), wcel(c3, c8), wcel(c0, cfv(cbs, cfv(csca, c7))), wcel(c2, c3))\n  lduallmod(c7, c5, w0)\n  eleqtrrd(c0, cfv(cbs, cfv(csca, c7)), c6, w0)\n  ldualsbase(cfv(cbs, cfv(csca, c7)), c6, c4, c5, c7, cfv(csca, c7), clmod, w0)\n  lssvscl(c7, c3, c8, c0, cfv(cbs, cfv(csca, c7)), c2, c1, cfv(csca, c7))\n  eqid(cfv(csca, c7))\n  eqid(cfv(cbs, cfv(csca, c7)))\n}","pretty":"thm ldualssvscl(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)‚àà c3)\n  ‚ä£ c4 =(Scalar ` c5)\n  ‚ä£ c6 =(Base ` c4)\n  ‚ä£ c7 =(LDual ` c5)\n  ‚ä£ c1 =(√ó ` c7)\n  ‚ä£ c8 =(LSubSp ` c7)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c6)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c3)\n} = {\n  syl22anc(w0, (c0[c1]c2)‚àà c3, c7 ‚àà LMod, c3 ‚àà c8, c0 ‚àà(Base `(Scalar ` c7)), c2 ‚àà c3)\n  lduallmod(c7, c5, w0)\n  eleqtrrd(c0, (Base `(Scalar ` c7)), c6, w0)\n  ldualsbase((Base `(Scalar ` c7)), c6, c4, c5, c7, (Scalar ` c7), clmod, w0)\n  lssvscl(c7, c3, c8, c0, (Base `(Scalar ` c7)), c2, c1, (Scalar ` c7))\n  eqid((Scalar ` c7))\n  eqid((Base `(Scalar ` c7)))\n}","parent":["syl22anc","lduallmod","eleqtrrd","ldualsbase","lssvscl","eqid"],"children":["lcfrlem16","lcfrlem37","mapdrvallem2"]},{"name":"ldualssvsubcl","content":"Closure of vector subtraction in a dual subspace.) (Contributed by NM, 9-Mar-2015.)","origin":"thm ldualssvsubcl(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(w0, wcel(co(c0, c1, c2), c3))\n  -| wceq(c4, cfv(cld, c5))\n  -| wceq(c1, cfv(csg, c4))\n  -| wceq(c6, cfv(clss, c4))\n  -| wi(w0, wcel(c5, clmod))\n  -| wi(w0, wcel(c3, c6))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(c2, c3))\n} = {\n  syl22anc(w0, wcel(co(c0, c1, c2), c3), wcel(c4, clmod), wcel(c3, c6), wcel(c0, c3), wcel(c2, c3))\n  lduallmod(c4, c5, w0)\n  lssvsubcl(c4, c3, c6, c0, c2, c1)\n}","pretty":"thm ldualssvsubcl(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)‚àà c3)\n  ‚ä£ c4 =(LDual ` c5)\n  ‚ä£ c1 =(-g ` c4)\n  ‚ä£ c6 =(LSubSp ` c4)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c6)\n  ‚ä£ (w0 ‚Üí c0 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c3)\n} = {\n  syl22anc(w0, (c0[c1]c2)‚àà c3, c4 ‚àà LMod, c3 ‚àà c6, c0 ‚àà c3, c2 ‚àà c3)\n  lduallmod(c4, c5, w0)\n  lssvsubcl(c4, c3, c6, c0, c2, c1)\n}","parent":["syl22anc","lduallmod","lssvsubcl"],"children":["lcfrlem37"]},{"name":"ldual0vs","content":"Scalar zero times a functional is the zero functional. (Contributed by NM, 17-Feb-2015.)","origin":"thm ldual0vs(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  |- wi(w0, wceq(co(c0, c1, c2), c3))\n  -| wceq(c4, cfv(clfn, c5))\n  -| wceq(c6, cfv(csca, c5))\n  -| wceq(c0, cfv(c0g, c6))\n  -| wceq(c7, cfv(cld, c5))\n  -| wceq(c1, cfv(cvsca, c7))\n  -| wceq(c3, cfv(c0g, c7))\n  -| wi(w0, wcel(c5, clmod))\n  -| wi(w0, wcel(c2, c4))\n} = {\n  eqtr3d(co(c0, c1, c2), c3, co(cfv(c0g, cfv(csca, c7)), c1, c2), w0)\n  oveq1d(cfv(c0g, cfv(csca, c7)), c1, c2, c0, w0)\n  ldual0(cfv(c0g, cfv(csca, c7)), c0, c6, c5, c7, cfv(csca, c7), w0)\n  syl2anc(w0, wceq(co(cfv(c0g, cfv(csca, c7)), c1, c2), c3), wcel(c7, clmod), wcel(c2, cfv(cbs, c7)))\n  lduallmod(c7, c5, w0)\n  ldualelvbase(c2, cfv(cbs, c7), c4, c5, c7, clmod, w0)\n  lmod0vs(c7, c2, cfv(cbs, c7), cfv(c0g, cfv(csca, c7)), c1, c3, cfv(csca, c7))\n  eqid(cfv(cbs, c7))\n  eqid(cfv(csca, c7))\n  eqid(cfv(c0g, cfv(csca, c7)))\n}","pretty":"thm ldual0vs(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)= c3)\n  ‚ä£ c4 =(LFnl ` c5)\n  ‚ä£ c6 =(Scalar ` c5)\n  ‚ä£ c0 =(0 ` c6)\n  ‚ä£ c7 =(LDual ` c5)\n  ‚ä£ c1 =(√ó ` c7)\n  ‚ä£ c3 =(0 ` c7)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n} = {\n  eqtr3d((c0[c1]c2), c3, ((0 `(Scalar ` c7))[c1]c2), w0)\n  oveq1d((0 `(Scalar ` c7)), c1, c2, c0, w0)\n  ldual0((0 `(Scalar ` c7)), c0, c6, c5, c7, (Scalar ` c7), w0)\n  syl2anc(w0, ((0 `(Scalar ` c7))[c1]c2)= c3, c7 ‚àà LMod, c2 ‚àà(Base ` c7))\n  lduallmod(c7, c5, w0)\n  ldualelvbase(c2, (Base ` c7), c4, c5, c7, clmod, w0)\n  lmod0vs(c7, c2, (Base ` c7), (0 `(Scalar ` c7)), c1, c3, (Scalar ` c7))\n  eqid((Base ` c7))\n  eqid((Scalar ` c7))\n  eqid((0 `(Scalar ` c7)))\n}","parent":["eqtr3d","oveq1d","ldual0","syl2anc","lduallmod","ldualelvbase","lmod0vs","eqid"],"children":["lkrss2N","lcfrlem33"]},{"name":"lkr0f2","content":"The kernel of the zero functional is the set of all vectors. (Contributed by NM, 4-Feb-2015.)","origin":"thm lkr0f2(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(w0, wb(wceq(cfv(c0, c1), c2), wceq(c1, c3)))\n  -| wceq(c2, cfv(cbs, c4))\n  -| wceq(c5, cfv(clfn, c4))\n  -| wceq(c0, cfv(clk, c4))\n  -| wceq(c6, cfv(cld, c4))\n  -| wceq(c3, cfv(c0g, c6))\n  -| wi(w0, wcel(c4, clmod))\n  -| wi(w0, wcel(c1, c5))\n} = {\n  bitr4d(w0, wceq(cfv(c0, c1), c2), wceq(c1, c3), wceq(c1, cxp(c2, csn(cfv(c0g, cfv(csca, c4))))))\n  syl2anc(w0, wb(wceq(cfv(c0, c1), c2), wceq(c1, cxp(c2, csn(cfv(c0g, cfv(csca, c4)))))), wcel(c4, clmod), wcel(c1, c5))\n  lkr0f(c4, c1, c5, c0, c2, cfv(c0g, cfv(csca, c4)), cfv(csca, c4))\n  eqeq2d(c1, c3, cxp(c2, csn(cfv(c0g, cfv(csca, c4)))), w0)\n  ldual0v(c3, c2, cfv(c0g, cfv(csca, c4)), c4, cfv(csca, c4), c6, w0)\n  eqid(cfv(csca, c4))\n  eqid(cfv(c0g, cfv(csca, c4)))\n}","pretty":"thm lkr0f2(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0 ` c1)= c2 ‚Üî c1 = c3))\n  ‚ä£ c2 =(Base ` c4)\n  ‚ä£ c5 =(LFnl ` c4)\n  ‚ä£ c0 =(LKer ` c4)\n  ‚ä£ c6 =(LDual ` c4)\n  ‚ä£ c3 =(0 ` c6)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c5)\n} = {\n  bitr4d(w0, (c0 ` c1)= c2, c1 = c3, c1 =(c2 √ó {(0 `(Scalar ` c4))}))\n  syl2anc(w0, ((c0 ` c1)= c2 ‚Üî c1 =(c2 √ó {(0 `(Scalar ` c4))})), c4 ‚àà LMod, c1 ‚àà c5)\n  lkr0f(c4, c1, c5, c0, c2, (0 `(Scalar ` c4)), (Scalar ` c4))\n  eqeq2d(c1, c3, (c2 √ó {(0 `(Scalar ` c4))}), w0)\n  ldual0v(c3, c2, (0 `(Scalar ` c4)), c4, (Scalar ` c4), c6, w0)\n  eqid((Scalar ` c4))\n  eqid((0 `(Scalar ` c4)))\n}","parent":["bitr4d","syl2anc","lkr0f","eqeq2d","ldual0v","eqid"],"children":["lkrpssN","lcfl8b","lcfrlem9"]},{"name":"lduallkr3","content":"The kernels of nonzero functionals are hyperplanes. (Contributed by NM, 22-Feb-2015.)","origin":"thm lduallkr3(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(w0, wb(wcel(cfv(c0, c1), c2), wne(c1, c3)))\n  -| wceq(c2, cfv(clsh, c4))\n  -| wceq(c5, cfv(clfn, c4))\n  -| wceq(c0, cfv(clk, c4))\n  -| wceq(c6, cfv(cld, c4))\n  -| wceq(c3, cfv(c0g, c6))\n  -| wi(w0, wcel(c4, clvec))\n  -| wi(w0, wcel(c1, c5))\n} = {\n  bitr4d(w0, wcel(cfv(c0, c1), c2), wne(c1, c3), wne(c1, cxp(cfv(cbs, c4), csn(cfv(c0g, cfv(csca, c4))))))\n  lkrshp3(c0, c1, c2, cfv(cbs, c4), cfv(c0g, cfv(csca, c4)), c4, cfv(csca, c4), c5, w0)\n  neeq2d(c1, c3, cxp(cfv(cbs, c4), csn(cfv(c0g, cfv(csca, c4)))), w0)\n  ldual0v(c3, cfv(cbs, c4), cfv(c0g, cfv(csca, c4)), c4, cfv(csca, c4), c6, w0)\n  eqid(cfv(cbs, c4))\n  eqid(cfv(csca, c4))\n  eqid(cfv(c0g, cfv(csca, c4)))\n  syl(w0, wcel(c4, clmod), wcel(c4, clvec))\n  lveclmod(c4)\n}","pretty":"thm lduallkr3(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0 ` c1)‚àà c2 ‚Üî c1 ‚â† c3))\n  ‚ä£ c2 =(LSHyp ` c4)\n  ‚ä£ c5 =(LFnl ` c4)\n  ‚ä£ c0 =(LKer ` c4)\n  ‚ä£ c6 =(LDual ` c4)\n  ‚ä£ c3 =(0 ` c6)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c5)\n} = {\n  bitr4d(w0, (c0 ` c1)‚àà c2, c1 ‚â† c3, c1 ‚â†((Base ` c4)√ó {(0 `(Scalar ` c4))}))\n  lkrshp3(c0, c1, c2, (Base ` c4), (0 `(Scalar ` c4)), c4, (Scalar ` c4), c5, w0)\n  neeq2d(c1, c3, ((Base ` c4)√ó {(0 `(Scalar ` c4))}), w0)\n  ldual0v(c3, (Base ` c4), (0 `(Scalar ` c4)), c4, (Scalar ` c4), c6, w0)\n  eqid((Base ` c4))\n  eqid((Scalar ` c4))\n  eqid((0 `(Scalar ` c4)))\n  syl(w0, c4 ‚àà LMod, c4 ‚àà LVec)\n  lveclmod(c4)\n}","parent":["bitr4d","lkrshp3","neeq2d","ldual0v","eqid","syl","lveclmod"],"children":["lcfrlem25","lcfrlem35"]},{"name":"lkrpssN","content":"Proper subset relation between kernels. (Contributed by NM, 16-Feb-2015.) (New usage is discouraged.)","origin":"thm lkrpssN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(w0, wb(wpss(cfv(c0, c1), cfv(c0, c2)), wa(wne(c1, c3), wceq(c2, c3))))\n  -| wceq(c4, cfv(clfn, c5))\n  -| wceq(c0, cfv(clk, c5))\n  -| wceq(c6, cfv(cld, c5))\n  -| wceq(c3, cfv(c0g, c6))\n  -| wi(w0, wcel(c5, clvec))\n  -| wi(w0, wcel(c1, c4))\n  -| wi(w0, wcel(c2, c4))\n} = {\n  bitrd(w0, wpss(cfv(c0, c1), cfv(c0, c2)), wa(wne(c1, c3), wceq(c2, c3)), wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5))))\n  syl5bb(w0, wpss(cfv(c0, c1), cfv(c0, c2)), wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5))), wa(wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2))))\n  impbida(w0, wa(wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2))), wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5))))\n  jca(wa(w0, wa(wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2)))), wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)))\n  sylan2br(w0, wa(wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2))), wne(cfv(c0, c1), cfv(cbs, c5)), wpss(cfv(c0, c1), cfv(c0, c2)))\n  df-pss(cfv(c0, c1), cfv(c0, c2))\n  pssned(cfv(c0, c1), cfv(cbs, c5), wa(w0, wpss(cfv(c0, c1), cfv(c0, c2))))\n  psssstrd(cfv(c0, c1), cfv(cbs, c5), cfv(c0, c2), wa(w0, wpss(cfv(c0, c1), cfv(c0, c2))))\n  simpr(w0, wpss(cfv(c0, c1), cfv(c0, c2)))\n  adantr(w0, wpss(cfv(c0, c1), cfv(c0, c2)), wss(cfv(c0, c2), cfv(cbs, c5)))\n  mpbid(wa(w0, wa(wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2)))), wceq(cfv(c0, c2), cfv(cbs, c5)), wn(wcel(cfv(c0, c2), cfv(clsh, c5))))\n  impr(w0, wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2)), wn(wcel(cfv(c0, c2), cfv(clsh, c5))))\n  necon3ad(cfv(c0, c1), cfv(c0, c2), wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5)))\n  ex(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5)), wceq(cfv(c0, c1), cfv(c0, c2)))\n  mpbid(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c1), cfv(c0, c2)), wss(cfv(c0, c1), cfv(c0, c2)))\n  simplr(w0, wss(cfv(c0, c1), cfv(c0, c2)), wcel(cfv(c0, c2), cfv(clsh, c5)))\n  lshpcmp(cfv(c0, c1), cfv(c0, c2), cfv(clsh, c5), c5, wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))))\n  ad2antrr(w0, wss(cfv(c0, c1), cfv(c0, c2)), wcel(cfv(c0, c2), cfv(clsh, c5)), wcel(c5, clvec))\n  mpjaodan(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wcel(cfv(c0, c1), cfv(clsh, c5)), wcel(cfv(c0, c1), cfv(clsh, c5)), wceq(cfv(c0, c1), cfv(cbs, c5)))\n  simpr(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wcel(cfv(c0, c1), cfv(clsh, c5)))\n  pm2.21dd(wa(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c1), cfv(cbs, c5))), wcel(cfv(c0, c1), cfv(clsh, c5)), wcel(cfv(c0, c2), cfv(clsh, c5)))\n  simplr(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5)), wceq(cfv(c0, c1), cfv(cbs, c5)))\n  mpbird(wa(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c1), cfv(cbs, c5))), wn(wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c2), cfv(cbs, c5)))\n  eqssd(cfv(c0, c2), cfv(cbs, c5), wa(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c1), cfv(cbs, c5))))\n  ad3antrrr(w0, wss(cfv(c0, c1), cfv(c0, c2)), wcel(cfv(c0, c2), cfv(clsh, c5)), wceq(cfv(c0, c1), cfv(cbs, c5)), wss(cfv(c0, c2), cfv(cbs, c5)))\n  lkrssv(c0, c2, cfv(cbs, c5), c5, c4, w0)\n  eqsstr3d(cfv(cbs, c5), cfv(c0, c2), cfv(c0, c1), wa(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c1), cfv(cbs, c5))))\n  simpr(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c1), cfv(cbs, c5)))\n  simpllr(w0, wss(cfv(c0, c1), cfv(c0, c2)), wcel(cfv(c0, c2), cfv(clsh, c5)), wceq(cfv(c0, c1), cfv(cbs, c5)))\n  necon1bbid(cfv(c0, c2), cfv(cbs, c5), wa(wa(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c1), cfv(cbs, c5))), wcel(cfv(c0, c2), cfv(clsh, c5)))\n  ad3antrrr(w0, wss(cfv(c0, c1), cfv(c0, c2)), wcel(cfv(c0, c2), cfv(clsh, c5)), wceq(cfv(c0, c1), cfv(cbs, c5)), wb(wne(cfv(c0, c2), cfv(cbs, c5)), wcel(cfv(c0, c2), cfv(clsh, c5))))\n  ad2antrr(w0, wss(cfv(c0, c1), cfv(c0, c2)), wcel(cfv(c0, c2), cfv(clsh, c5)), wo(wcel(cfv(c0, c1), cfv(clsh, c5)), wceq(cfv(c0, c1), cfv(cbs, c5))))\n  lkrshpor(c0, c1, cfv(clsh, c5), cfv(cbs, c5), c5, c4, w0)\n  simpr(wa(w0, wss(cfv(c0, c1), cfv(c0, c2))), wcel(cfv(c0, c2), cfv(clsh, c5)))\n  adantr(w0, wa(wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2))), wb(wn(wcel(cfv(c0, c2), cfv(clsh, c5))), wceq(cfv(c0, c2), cfv(cbs, c5))))\n  necon1bbid(cfv(c0, c2), cfv(cbs, c5), w0, wcel(cfv(c0, c2), cfv(clsh, c5)))\n  lkrshp4(c0, c2, cfv(cbs, c5), cfv(clsh, c5), c5, c4, w0)\n  eqid(cfv(clsh, c5))\n  jca(wa(w0, wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)))), wss(cfv(c0, c1), cfv(c0, c2)), wne(cfv(c0, c1), cfv(c0, c2)))\n  sseqtrd(cfv(c0, c1), cfv(c0, c2), cfv(cbs, c5), wa(w0, wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)))))\n  adantr(w0, wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5))), wss(cfv(c0, c1), cfv(cbs, c5)))\n  lkrssv(c0, c1, cfv(cbs, c5), c5, c4, w0)\n  neeqtrd(cfv(c0, c1), cfv(c0, c2), cfv(cbs, c5), wa(w0, wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)))))\n  simprl(w0, wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)))\n  eqcomd(cfv(cbs, c5), cfv(c0, c2), wa(w0, wa(wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)))))\n  simprr(w0, wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)))\n  anbi12d(w0, wne(cfv(c0, c1), cfv(cbs, c5)), wceq(cfv(c0, c2), cfv(cbs, c5)), wne(c1, c3), wceq(c2, c3))\n  necon3bid(cfv(c0, c1), cfv(cbs, c5), c1, c3, w0)\n  lkr0f2(c0, c1, cfv(cbs, c5), c3, c5, c4, c6, w0)\n  lkr0f2(c0, c2, cfv(cbs, c5), c3, c5, c4, c6, w0)\n  eqid(cfv(cbs, c5))\n  syl(w0, wcel(c5, clmod), wcel(c5, clvec))\n  lveclmod(c5)\n}","pretty":"thm lkrpssN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0 ` c1)‚ää(c0 ` c2)‚Üî(c1 ‚â† c3 ‚àß c2 = c3)))\n  ‚ä£ c4 =(LFnl ` c5)\n  ‚ä£ c0 =(LKer ` c5)\n  ‚ä£ c6 =(LDual ` c5)\n  ‚ä£ c3 =(0 ` c6)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c4)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n} = {\n  bitrd(w0, (c0 ` c1)‚ää(c0 ` c2), (c1 ‚â† c3 ‚àß c2 = c3), ((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5)))\n  syl5bb(w0, (c0 ` c1)‚ää(c0 ` c2), ((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5)), ((c0 ` c1)‚äÜ(c0 ` c2)‚àß(c0 ` c1)‚â†(c0 ` c2)))\n  impbida(w0, ((c0 ` c1)‚äÜ(c0 ` c2)‚àß(c0 ` c1)‚â†(c0 ` c2)), ((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5)))\n  jca((w0 ‚àß((c0 ` c1)‚äÜ(c0 ` c2)‚àß(c0 ` c1)‚â†(c0 ` c2))), (c0 ` c1)‚â†(Base ` c5), (c0 ` c2)=(Base ` c5))\n  sylan2br(w0, ((c0 ` c1)‚äÜ(c0 ` c2)‚àß(c0 ` c1)‚â†(c0 ` c2)), (c0 ` c1)‚â†(Base ` c5), (c0 ` c1)‚ää(c0 ` c2))\n  df-pss((c0 ` c1), (c0 ` c2))\n  pssned((c0 ` c1), (Base ` c5), (w0 ‚àß(c0 ` c1)‚ää(c0 ` c2)))\n  psssstrd((c0 ` c1), (Base ` c5), (c0 ` c2), (w0 ‚àß(c0 ` c1)‚ää(c0 ` c2)))\n  simpr(w0, (c0 ` c1)‚ää(c0 ` c2))\n  adantr(w0, (c0 ` c1)‚ää(c0 ` c2), (c0 ` c2)‚äÜ(Base ` c5))\n  mpbid((w0 ‚àß((c0 ` c1)‚äÜ(c0 ` c2)‚àß(c0 ` c1)‚â†(c0 ` c2))), (c0 ` c2)=(Base ` c5), ¬¨(c0 ` c2)‚àà(LSHyp ` c5))\n  impr(w0, (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c1)‚â†(c0 ` c2), ¬¨(c0 ` c2)‚àà(LSHyp ` c5))\n  necon3ad((c0 ` c1), (c0 ` c2), (w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2)), (c0 ` c2)‚àà(LSHyp ` c5))\n  ex((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2)), (c0 ` c2)‚àà(LSHyp ` c5), (c0 ` c1)=(c0 ` c2))\n  mpbid(((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5)), (c0 ` c1)=(c0 ` c2), (c0 ` c1)‚äÜ(c0 ` c2))\n  simplr(w0, (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c2)‚àà(LSHyp ` c5))\n  lshpcmp((c0 ` c1), (c0 ` c2), (LSHyp ` c5), c5, ((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5)))\n  ad2antrr(w0, (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c2)‚àà(LSHyp ` c5), c5 ‚àà LVec)\n  mpjaodan(((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5)), (c0 ` c1)‚àà(LSHyp ` c5), (c0 ` c1)‚àà(LSHyp ` c5), (c0 ` c1)=(Base ` c5))\n  simpr(((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5)), (c0 ` c1)‚àà(LSHyp ` c5))\n  pm2.21dd((((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5))‚àß(c0 ` c1)=(Base ` c5)), (c0 ` c1)‚àà(LSHyp ` c5), (c0 ` c2)‚àà(LSHyp ` c5))\n  simplr((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2)), (c0 ` c2)‚àà(LSHyp ` c5), (c0 ` c1)=(Base ` c5))\n  mpbird((((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5))‚àß(c0 ` c1)=(Base ` c5)), ¬¨(c0 ` c2)‚àà(LSHyp ` c5), (c0 ` c2)=(Base ` c5))\n  eqssd((c0 ` c2), (Base ` c5), (((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5))‚àß(c0 ` c1)=(Base ` c5)))\n  ad3antrrr(w0, (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c2)‚àà(LSHyp ` c5), (c0 ` c1)=(Base ` c5), (c0 ` c2)‚äÜ(Base ` c5))\n  lkrssv(c0, c2, (Base ` c5), c5, c4, w0)\n  eqsstr3d((Base ` c5), (c0 ` c2), (c0 ` c1), (((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5))‚àß(c0 ` c1)=(Base ` c5)))\n  simpr(((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5)), (c0 ` c1)=(Base ` c5))\n  simpllr(w0, (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c2)‚àà(LSHyp ` c5), (c0 ` c1)=(Base ` c5))\n  necon1bbid((c0 ` c2), (Base ` c5), (((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2))‚àß(c0 ` c2)‚àà(LSHyp ` c5))‚àß(c0 ` c1)=(Base ` c5)), (c0 ` c2)‚àà(LSHyp ` c5))\n  ad3antrrr(w0, (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c2)‚àà(LSHyp ` c5), (c0 ` c1)=(Base ` c5), ((c0 ` c2)‚â†(Base ` c5)‚Üî(c0 ` c2)‚àà(LSHyp ` c5)))\n  ad2antrr(w0, (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c2)‚àà(LSHyp ` c5), ((c0 ` c1)‚àà(LSHyp ` c5)‚à®(c0 ` c1)=(Base ` c5)))\n  lkrshpor(c0, c1, (LSHyp ` c5), (Base ` c5), c5, c4, w0)\n  simpr((w0 ‚àß(c0 ` c1)‚äÜ(c0 ` c2)), (c0 ` c2)‚àà(LSHyp ` c5))\n  adantr(w0, ((c0 ` c1)‚äÜ(c0 ` c2)‚àß(c0 ` c1)‚â†(c0 ` c2)), (¬¨(c0 ` c2)‚àà(LSHyp ` c5)‚Üî(c0 ` c2)=(Base ` c5)))\n  necon1bbid((c0 ` c2), (Base ` c5), w0, (c0 ` c2)‚àà(LSHyp ` c5))\n  lkrshp4(c0, c2, (Base ` c5), (LSHyp ` c5), c5, c4, w0)\n  eqid((LSHyp ` c5))\n  jca((w0 ‚àß((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5))), (c0 ` c1)‚äÜ(c0 ` c2), (c0 ` c1)‚â†(c0 ` c2))\n  sseqtrd((c0 ` c1), (c0 ` c2), (Base ` c5), (w0 ‚àß((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5))))\n  adantr(w0, ((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5)), (c0 ` c1)‚äÜ(Base ` c5))\n  lkrssv(c0, c1, (Base ` c5), c5, c4, w0)\n  neeqtrd((c0 ` c1), (c0 ` c2), (Base ` c5), (w0 ‚àß((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5))))\n  simprl(w0, (c0 ` c1)‚â†(Base ` c5), (c0 ` c2)=(Base ` c5))\n  eqcomd((Base ` c5), (c0 ` c2), (w0 ‚àß((c0 ` c1)‚â†(Base ` c5)‚àß(c0 ` c2)=(Base ` c5))))\n  simprr(w0, (c0 ` c1)‚â†(Base ` c5), (c0 ` c2)=(Base ` c5))\n  anbi12d(w0, (c0 ` c1)‚â†(Base ` c5), (c0 ` c2)=(Base ` c5), c1 ‚â† c3, c2 = c3)\n  necon3bid((c0 ` c1), (Base ` c5), c1, c3, w0)\n  lkr0f2(c0, c1, (Base ` c5), c3, c5, c4, c6, w0)\n  lkr0f2(c0, c2, (Base ` c5), c3, c5, c4, c6, w0)\n  eqid((Base ` c5))\n  syl(w0, c5 ‚àà LMod, c5 ‚àà LVec)\n  lveclmod(c5)\n}","parent":["bitrd","syl5bb","impbida","jca","sylan2br","df-pss","pssned","psssstrd","simpr","adantr","mpbid","impr","necon3ad","ex","simplr","lshpcmp","ad2antrr","mpjaodan","pm2.21dd","mpbird","eqssd","ad3antrrr","lkrssv","eqsstr3d","simpllr","necon1bbid","lkrshpor","lkrshp4","eqid","sseqtrd","neeqtrd","simprl","eqcomd","simprr","anbi12d","necon3bid","lkr0f2","syl","lveclmod"],"children":["lkrss2N","lkreqN"]},{"name":"lkrin","content":"Intersection of the kernels of 2 functionals is included in the kernel of their sum. (Contributed by NM, 7-Jan-2015.)","origin":"thm lkrin(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(w0, wss(cin(cfv(c0, c1), cfv(c0, c2)), cfv(c0, co(c1, c3, c2))))\n  -| wceq(c4, cfv(clfn, c5))\n  -| wceq(c0, cfv(clk, c5))\n  -| wceq(c6, cfv(cld, c5))\n  -| wceq(c3, cfv(cplusg, c6))\n  -| wi(w0, wcel(c5, clmod))\n  -| wi(w0, wcel(c1, c4))\n  -| wi(w0, wcel(c2, c4))\n} = {\n  ssrdv(hs0, cin(cfv(c0, c1), cfv(c0, c2)), cfv(c0, co(c1, c3, c2)), w0)\n  syl5bi(w0, wcel(cv(hs0), cin(cfv(c0, c1), cfv(c0, c2))), wcel(cv(hs0), cfv(c0, co(c1, c3, c2))), wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2))))\n  elin(cv(hs0), cfv(c0, c1), cfv(c0, c2))\n  ex(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2))), wcel(cv(hs0), cfv(c0, co(c1, c3, c2))))\n  mpbir2and(wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))), wcel(cv(hs0), cfv(c0, co(c1, c3, c2))), wcel(cv(hs0), cfv(cbs, c5)), wceq(cfv(co(c1, c3, c2), cv(hs0)), cfv(c0g, cfv(csca, c5))))\n  3eqtrd(cfv(co(c1, c3, c2), cv(hs0)), cfv(c0g, cfv(csca, c5)), co(cfv(c1, cv(hs0)), cfv(cplusg, cfv(csca, c5)), cfv(c2, cv(hs0))), co(cfv(c0g, cfv(csca, c5)), cfv(cplusg, cfv(csca, c5)), cfv(c0g, cfv(csca, c5))), wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))))\n  ldualvaddval(c1, c3, c2, cv(hs0), cfv(cplusg, cfv(csca, c5)), cfv(cbs, c5), c5, cfv(csca, c5), c4, c6, wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))))\n  syl3anc(wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))), wcel(cv(hs0), cfv(cbs, c5)), wcel(c5, clmod), wcel(c1, c4), wcel(cv(hs0), cfv(c0, c1)))\n  lkrcl(c5, clmod, c1, c4, cv(hs0), c0, cfv(cbs, c5))\n  oveq12d(cfv(c1, cv(hs0)), cfv(cplusg, cfv(csca, c5)), cfv(c2, cv(hs0)), cfv(c0g, cfv(csca, c5)), cfv(c0g, cfv(csca, c5)), wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))))\n  syl3anc(wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))), wceq(cfv(c1, cv(hs0)), cfv(c0g, cfv(csca, c5))), wcel(c5, clmod), wcel(c1, c4), wcel(cv(hs0), cfv(c0, c1)))\n  adantr(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2))), wcel(c1, c4))\n  simprl(w0, wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))\n  lkrf0(c5, clmod, c1, c4, cv(hs0), c0, cfv(c0g, cfv(csca, c5)), cfv(csca, c5))\n  syl3anc(wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))), wceq(cfv(c2, cv(hs0)), cfv(c0g, cfv(csca, c5))), wcel(c5, clmod), wcel(c2, c4), wcel(cv(hs0), cfv(c0, c2)))\n  adantr(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2))), wcel(c2, c4))\n  simprr(w0, wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))\n  lkrf0(c5, clmod, c2, c4, cv(hs0), c0, cfv(c0g, cfv(csca, c5)), cfv(csca, c5))\n  adantr(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2))), wceq(co(cfv(c0g, cfv(csca, c5)), cfv(cplusg, cfv(csca, c5)), cfv(c0g, cfv(csca, c5))), cfv(c0g, cfv(csca, c5))))\n  syl2anc(w0, wceq(co(cfv(c0g, cfv(csca, c5)), cfv(cplusg, cfv(csca, c5)), cfv(c0g, cfv(csca, c5))), cfv(c0g, cfv(csca, c5))), wcel(cfv(csca, c5), cgrp), wcel(cfv(c0g, cfv(csca, c5)), cfv(cbs, cfv(csca, c5))))\n  syl(w0, wcel(cfv(c0g, cfv(csca, c5)), cfv(cbs, cfv(csca, c5))), wcel(cfv(csca, c5), cgrp))\n  syl(w0, wcel(cfv(csca, c5), cgrp), wcel(cfv(csca, c5), crg))\n  syl(w0, wcel(cfv(csca, c5), crg), wcel(c5, clmod))\n  lmodring(c5, cfv(csca, c5))\n  ringgrp(cfv(csca, c5))\n  grpidcl(cfv(csca, c5), cfv(c0g, cfv(csca, c5)), cfv(cbs, cfv(csca, c5)))\n  grplid(cfv(csca, c5), cfv(c0g, cfv(csca, c5)), cfv(cbs, cfv(csca, c5)), cfv(c0g, cfv(csca, c5)), cfv(cplusg, cfv(csca, c5)))\n  eqid(cfv(cbs, cfv(csca, c5)))\n  eqid(cfv(cplusg, cfv(csca, c5)))\n  syl2anc(wa(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2)))), wb(wcel(cv(hs0), cfv(c0, co(c1, c3, c2))), wa(wcel(cv(hs0), cfv(cbs, c5)), wceq(cfv(co(c1, c3, c2), cv(hs0)), cfv(c0g, cfv(csca, c5))))), wcel(c5, clmod), wcel(co(c1, c3, c2), c4))\n  adantr(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2))), wcel(c5, clmod))\n  adantr(w0, wa(wcel(cv(hs0), cfv(c0, c1)), wcel(cv(hs0), cfv(c0, c2))), wcel(co(c1, c3, c2), c4))\n  ldualvaddcl(c1, c3, c2, c4, c5, c6, w0)\n  ellkr(c5, clmod, co(c1, c3, c2), c4, cv(hs0), c0, cfv(cbs, c5), cfv(c0g, cfv(csca, c5)), cfv(csca, c5))\n  eqid(cfv(cbs, c5))\n  eqid(cfv(csca, c5))\n  eqid(cfv(c0g, cfv(csca, c5)))\n  diff.hs0.c(cin(cfv(c0, c1), cfv(c0, c2)))\n  diff.hs0.c(cfv(c0, co(c1, c3, c2)))\n  diff.hs0.w(w0)\n}","pretty":"thm lkrin(class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0 ` c1)‚ãÇ(c0 ` c2))‚äÜ(c0 `(c1[c3]c2)))\n  ‚ä£ c4 =(LFnl ` c5)\n  ‚ä£ c0 =(LKer ` c5)\n  ‚ä£ c6 =(LDual ` c5)\n  ‚ä£ c3 =(+ ` c6)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LMod)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c4)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n} = {\n  ssrdv(hs0, ((c0 ` c1)‚ãÇ(c0 ` c2)), (c0 `(c1[c3]c2)), w0)\n  syl5bi(w0, hs0 ‚àà((c0 ` c1)‚ãÇ(c0 ` c2)), hs0 ‚àà(c0 `(c1[c3]c2)), (hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2)))\n  elin(hs0, (c0 ` c1), (c0 ` c2))\n  ex(w0, (hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2)), hs0 ‚àà(c0 `(c1[c3]c2)))\n  mpbir2and((w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))), hs0 ‚àà(c0 `(c1[c3]c2)), hs0 ‚àà(Base ` c5), ((c1[c3]c2)` hs0)=(0 `(Scalar ` c5)))\n  3eqtrd(((c1[c3]c2)` hs0), (0 `(Scalar ` c5)), ((c1 ` hs0)[(+ `(Scalar ` c5))](c2 ` hs0)), ((0 `(Scalar ` c5))[(+ `(Scalar ` c5))](0 `(Scalar ` c5))), (w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))))\n  ldualvaddval(c1, c3, c2, hs0, (+ `(Scalar ` c5)), (Base ` c5), c5, (Scalar ` c5), c4, c6, (w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))))\n  syl3anc((w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))), hs0 ‚àà(Base ` c5), c5 ‚àà LMod, c1 ‚àà c4, hs0 ‚àà(c0 ` c1))\n  lkrcl(c5, clmod, c1, c4, hs0, c0, (Base ` c5))\n  oveq12d((c1 ` hs0), (+ `(Scalar ` c5)), (c2 ` hs0), (0 `(Scalar ` c5)), (0 `(Scalar ` c5)), (w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))))\n  syl3anc((w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))), (c1 ` hs0)=(0 `(Scalar ` c5)), c5 ‚àà LMod, c1 ‚àà c4, hs0 ‚àà(c0 ` c1))\n  adantr(w0, (hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2)), c1 ‚àà c4)\n  simprl(w0, hs0 ‚àà(c0 ` c1), hs0 ‚àà(c0 ` c2))\n  lkrf0(c5, clmod, c1, c4, hs0, c0, (0 `(Scalar ` c5)), (Scalar ` c5))\n  syl3anc((w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))), (c2 ` hs0)=(0 `(Scalar ` c5)), c5 ‚àà LMod, c2 ‚àà c4, hs0 ‚àà(c0 ` c2))\n  adantr(w0, (hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2)), c2 ‚àà c4)\n  simprr(w0, hs0 ‚àà(c0 ` c1), hs0 ‚àà(c0 ` c2))\n  lkrf0(c5, clmod, c2, c4, hs0, c0, (0 `(Scalar ` c5)), (Scalar ` c5))\n  adantr(w0, (hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2)), ((0 `(Scalar ` c5))[(+ `(Scalar ` c5))](0 `(Scalar ` c5)))=(0 `(Scalar ` c5)))\n  syl2anc(w0, ((0 `(Scalar ` c5))[(+ `(Scalar ` c5))](0 `(Scalar ` c5)))=(0 `(Scalar ` c5)), (Scalar ` c5)‚àà Grp, (0 `(Scalar ` c5))‚àà(Base `(Scalar ` c5)))\n  syl(w0, (0 `(Scalar ` c5))‚àà(Base `(Scalar ` c5)), (Scalar ` c5)‚àà Grp)\n  syl(w0, (Scalar ` c5)‚àà Grp, (Scalar ` c5)‚àà Ring)\n  syl(w0, (Scalar ` c5)‚àà Ring, c5 ‚àà LMod)\n  lmodring(c5, (Scalar ` c5))\n  ringgrp((Scalar ` c5))\n  grpidcl((Scalar ` c5), (0 `(Scalar ` c5)), (Base `(Scalar ` c5)))\n  grplid((Scalar ` c5), (0 `(Scalar ` c5)), (Base `(Scalar ` c5)), (0 `(Scalar ` c5)), (+ `(Scalar ` c5)))\n  eqid((Base `(Scalar ` c5)))\n  eqid((+ `(Scalar ` c5)))\n  syl2anc((w0 ‚àß(hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2))), (hs0 ‚àà(c0 `(c1[c3]c2))‚Üî(hs0 ‚àà(Base ` c5)‚àß((c1[c3]c2)` hs0)=(0 `(Scalar ` c5)))), c5 ‚àà LMod, (c1[c3]c2)‚àà c4)\n  adantr(w0, (hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2)), c5 ‚àà LMod)\n  adantr(w0, (hs0 ‚àà(c0 ` c1)‚àß hs0 ‚àà(c0 ` c2)), (c1[c3]c2)‚àà c4)\n  ldualvaddcl(c1, c3, c2, c4, c5, c6, w0)\n  ellkr(c5, clmod, (c1[c3]c2), c4, hs0, c0, (Base ` c5), (0 `(Scalar ` c5)), (Scalar ` c5))\n  eqid((Base ` c5))\n  eqid((Scalar ` c5))\n  eqid((0 `(Scalar ` c5)))\n  diff.hs0.c(((c0 ` c1)‚ãÇ(c0 ` c2)))\n  diff.hs0.c((c0 `(c1[c3]c2)))\n  diff.hs0.w(w0)\n}","parent":["ssrdv","syl5bi","elin","ex","mpbir2and","3eqtrd","ldualvaddval","syl3anc","lkrcl","oveq12d","adantr","simprl","lkrf0","simprr","syl2anc","syl","lmodring","ringgrp","grpidcl","grplid","eqid","ldualvaddcl","ellkr","diff.hs0.c","diff.hs0.w"],"children":["lclkrlem2e","lclkrlem2f","lclkrlem2r","lclkrlem2v","lclkrslem2","lcfrlem2"]},{"name":"eqlkr4","content":"Two functionals with the same kernel are the same up to a constant. (Contributed by NM, 4-Feb-2015.)","origin":"thm eqlkr4(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  |- wi(w0, wrex(s0, c0, wceq(c1, co(cv(s0), c2, c3))))\n  -| wceq(c4, cfv(csca, c5))\n  -| wceq(c0, cfv(cbs, c4))\n  -| wceq(c6, cfv(clfn, c5))\n  -| wceq(c7, cfv(clk, c5))\n  -| wceq(c8, cfv(cld, c5))\n  -| wceq(c2, cfv(cvsca, c8))\n  -| wi(w0, wcel(c5, clvec))\n  -| wi(w0, wcel(c3, c6))\n  -| wi(w0, wcel(c1, c6))\n  -| wi(w0, wceq(cfv(c7, c3), cfv(c7, c1)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n  -| diffsc(s0, c5)\n  -| diffsc(s0, c6)\n  -| diffsc(s0, c7)\n  -| diffsw(s0, w0)\n} = {\n  mpbird(w0, wrex(s0, c0, wceq(c1, co(cv(s0), c2, c3))), wrex(s0, c0, wceq(c1, co(c3, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(cv(s0)))))))\n  syl121anc(w0, wrex(s0, c0, wceq(c1, co(c3, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(cv(s0)))))), wcel(c5, clvec), wcel(c3, c6), wcel(c1, c6), wceq(cfv(c7, c3), cfv(c7, c1)))\n  eqlkr2(s0, c5, c3, c6, c1, c7, c0, cfv(cmulr, c4), cfv(cbs, c5), c4)\n  rexbidva(s0, c0, w0, wceq(c1, co(cv(s0), c2, c3)), wceq(c1, co(c3, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(cv(s0))))))\n  eqeq2d(c1, co(cv(s0), c2, c3), co(c3, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(cv(s0)))), wa(w0, wcel(cv(s0), c0)))\n  ldualvs(cv(s0), c2, c3, cfv(cmulr, c4), cfv(cbs, c5), c6, c5, c4, c0, c8, clvec, wa(w0, wcel(cv(s0), c0)))\n  eqid(cfv(cbs, c5))\n  eqid(cfv(cmulr, c4))\n  adantr(w0, wcel(cv(s0), c0), wcel(c5, clvec))\n  simpr(w0, wcel(cv(s0), c0))\n  adantr(w0, wcel(cv(s0), c0), wcel(c3, c6))\n  diff.cfv.s(s0, cmulr, c4)\n  diff.cmulr.s(s0)\n  diff.cfv.s(s0, cbs, c5)\n  diff.cbs.s(s0)\n}","pretty":"thm eqlkr4(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  ‚ä¢ (w0 ‚Üí ‚àÉ(s0 ‚àà c0, c1 =(s0[c2]c3)))\n  ‚ä£ c4 =(Scalar ` c5)\n  ‚ä£ c0 =(Base ` c4)\n  ‚ä£ c6 =(LFnl ` c5)\n  ‚ä£ c7 =(LKer ` c5)\n  ‚ä£ c8 =(LDual ` c5)\n  ‚ä£ c2 =(√ó ` c8)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c6)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c6)\n  ‚ä£ (w0 ‚Üí(c7 ` c3)=(c7 ` c1))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s0, c4)\n  ‚ä£ d(s0, c5)\n  ‚ä£ d(s0, c6)\n  ‚ä£ d(s0, c7)\n  ‚ä£ d(s0, w0)\n} = {\n  mpbird(w0, ‚àÉ(s0 ‚àà c0, c1 =(s0[c2]c3)), ‚àÉ(s0 ‚àà c0, c1 =(c3[oF((√ó ` c4))]((Base ` c5)√ó { s0 }))))\n  syl121anc(w0, ‚àÉ(s0 ‚àà c0, c1 =(c3[oF((√ó ` c4))]((Base ` c5)√ó { s0 }))), c5 ‚àà LVec, c3 ‚àà c6, c1 ‚àà c6, (c7 ` c3)=(c7 ` c1))\n  eqlkr2(s0, c5, c3, c6, c1, c7, c0, (√ó ` c4), (Base ` c5), c4)\n  rexbidva(s0, c0, w0, c1 =(s0[c2]c3), c1 =(c3[oF((√ó ` c4))]((Base ` c5)√ó { s0 })))\n  eqeq2d(c1, (s0[c2]c3), (c3[oF((√ó ` c4))]((Base ` c5)√ó { s0 })), (w0 ‚àß s0 ‚àà c0))\n  ldualvs(s0, c2, c3, (√ó ` c4), (Base ` c5), c6, c5, c4, c0, c8, clvec, (w0 ‚àß s0 ‚àà c0))\n  eqid((Base ` c5))\n  eqid((√ó ` c4))\n  adantr(w0, s0 ‚àà c0, c5 ‚àà LVec)\n  simpr(w0, s0 ‚àà c0)\n  adantr(w0, s0 ‚àà c0, c3 ‚àà c6)\n  diff.cfv.s(s0, cmulr, c4)\n  diff.cmulr.s(s0)\n  diff.cfv.s(s0, cbs, c5)\n  diff.cbs.s(s0)\n}","parent":["mpbird","syl121anc","eqlkr2","rexbidva","eqeq2d","ldualvs","eqid","adantr","simpr","diff.cfv.s","diff.cmulr.s","diff.cbs.s"],"children":["lkrss2N","lcfrlem16","mapdrvallem2"]},{"name":"ldual1dim","content":"Equivalent expressions for a 1-dim subspace (ray) of functionals. (Contributed by NM, 24-Oct-2014.)","origin":"thm ldual1dim(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(cfv(c0, csn(c1)), crab(s0, c2, wss(cfv(c3, c1), cfv(c3, cv(s0))))))\n  -| wceq(c2, cfv(clfn, c4))\n  -| wceq(c3, cfv(clk, c4))\n  -| wceq(c5, cfv(cld, c4))\n  -| wceq(c0, cfv(clspn, c5))\n  -| wi(w0, wcel(c4, clvec))\n  -| wi(w0, wcel(c1, c2))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c5)\n  -| diffsw(s0, w0)\n} = {\n  3eqtr4d(cfv(c0, csn(c1)), crab(s0, c2, wss(cfv(c3, c1), cfv(c3, cv(s0)))), cab(s0, wrex(hs0, cfv(cbs, cfv(csca, c5)), wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1)))), cab(s0, wrex(hs0, cfv(cbs, cfv(csca, c4)), wceq(cv(s0), co(c1, cof(cfv(cmulr, cfv(csca, c4))), cxp(cfv(cbs, c4), csn(cv(hs0))))))), w0)\n  abbidv(s0, w0, wrex(hs0, cfv(cbs, cfv(csca, c5)), wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1))), wrex(hs0, cfv(cbs, cfv(csca, c4)), wceq(cv(s0), co(c1, cof(cfv(cmulr, cfv(csca, c4))), cxp(cfv(cbs, c4), csn(cv(hs0)))))))\n  rexbidv2(hs0, cfv(cbs, cfv(csca, c5)), cfv(cbs, cfv(csca, c4)), w0, wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1)), wceq(cv(s0), co(c1, cof(cfv(cmulr, cfv(csca, c4))), cxp(cfv(cbs, c4), csn(cv(hs0))))))\n  bitrd(w0, wa(wcel(cv(hs0), cfv(cbs, cfv(csca, c5))), wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1))), wa(wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(cv(s0), co(c1, cof(cfv(cmulr, cfv(csca, c4))), cxp(cfv(cbs, c4), csn(cv(hs0)))))), wa(wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1))))\n  anbi1d(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c5))), wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1)), wcel(cv(hs0), cfv(cbs, cfv(csca, c4))))\n  eleq2d(cv(hs0), cfv(cbs, cfv(csca, c5)), cfv(cbs, cfv(csca, c4)), w0)\n  ldualsbase(cfv(cbs, cfv(csca, c5)), cfv(cbs, cfv(csca, c4)), cfv(csca, c4), c4, c5, cfv(csca, c5), clvec, w0)\n  pm5.32da(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1)), wceq(cv(s0), co(c1, cof(cfv(cmulr, cfv(csca, c4))), cxp(cfv(cbs, c4), csn(cv(hs0))))))\n  eqeq2d(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1), co(c1, cof(cfv(cmulr, cfv(csca, c4))), cxp(cfv(cbs, c4), csn(cv(hs0)))), wa(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4)))))\n  ldualvs(cv(hs0), cfv(cvsca, c5), c1, cfv(cmulr, cfv(csca, c4)), cfv(cbs, c4), c2, c4, cfv(csca, c4), cfv(cbs, cfv(csca, c4)), c5, clvec, wa(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4)))))\n  adantr(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wcel(c4, clvec))\n  simpr(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))))\n  adantr(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wcel(c1, c2))\n  syl2anc(w0, wceq(cfv(c0, csn(c1)), cab(s0, wrex(hs0, cfv(cbs, cfv(csca, c5)), wceq(cv(s0), co(cv(hs0), cfv(cvsca, c5), c1))))), wcel(c5, clmod), wcel(c1, cfv(cbs, c5)))\n  syl(w0, wcel(c5, clmod), wcel(c4, clvec))\n  lduallmod(c5, c4, wcel(c4, clvec))\n  lveclmod(c4)\n  ldualelvbase(c1, cfv(cbs, c5), c2, c4, c5, clvec, w0)\n  lspsn(s0, hs0, c5, c1, cfv(cbs, c5), c0, cfv(cbs, cfv(csca, c5)), cfv(cvsca, c5), cfv(csca, c5))\n  eqid(cfv(csca, c5))\n  eqid(cfv(cbs, cfv(csca, c5)))\n  eqid(cfv(cbs, c5))\n  eqid(cfv(cvsca, c5))\n  lfl1dim(s0, hs0, c2, c3, c1, cfv(cbs, cfv(csca, c4)), cfv(cmulr, cfv(csca, c4)), cfv(cbs, c4), c4, cfv(csca, c4), w0)\n  eqid(cfv(cbs, c4))\n  eqid(cfv(csca, c4))\n  eqid(cfv(cbs, cfv(csca, c4)))\n  eqid(cfv(cmulr, cfv(csca, c4)))\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cfv.s(s0, cbs, c5)\n  diff.cfv.s(s0, cbs, cfv(csca, c5))\n  diff.cbs.s(s0)\n  diff.cfv.s(s0, csca, c5)\n  diff.csca.s(s0)\n  diff.cfv.s(s0, cvsca, c5)\n  diff.cvsca.s(s0)\n  diff.hs0.c(c5)\n  diff.hs0.c(c1)\n  diff.hs0.c(cfv(cbs, c5))\n  diff.hs0.c(c0)\n  diff.hs0.c(cfv(cbs, cfv(csca, c5)))\n  diff.hs0.c(cfv(cvsca, c5))\n  diff.hs0.c(cfv(csca, c5))\n  diff.hs0.c(c2)\n  diff.hs0.c(c3)\n  diff.hs0.c(cfv(cbs, cfv(csca, c4)))\n  diff.hs0.c(cfv(cmulr, cfv(csca, c4)))\n  diff.hs0.c(cfv(cbs, c4))\n  diff.hs0.c(c4)\n  diff.hs0.c(cfv(csca, c4))\n}","pretty":"thm ldual1dim(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0 ` { c1 })= { s0 ‚àà c2 |(c3 ` c1)‚äÜ(c3 ` s0)})\n  ‚ä£ c2 =(LFnl ` c4)\n  ‚ä£ c3 =(LKer ` c4)\n  ‚ä£ c5 =(LDual ` c4)\n  ‚ä£ c0 =(LSpan ` c5)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c2)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c5)\n  ‚ä£ d(s0, w0)\n} = {\n  3eqtr4d((c0 ` { c1 }), { s0 ‚àà c2 |(c3 ` c1)‚äÜ(c3 ` s0)}, { s0 | ‚àÉ(hs0 ‚àà(Base `(Scalar ` c5)), s0 =(hs0[(√ó ` c5)]c1))}, { s0 | ‚àÉ(hs0 ‚àà(Base `(Scalar ` c4)), s0 =(c1[oF((√ó `(Scalar ` c4)))]((Base ` c4)√ó { hs0 })))}, w0)\n  abbidv(s0, w0, ‚àÉ(hs0 ‚àà(Base `(Scalar ` c5)), s0 =(hs0[(√ó ` c5)]c1)), ‚àÉ(hs0 ‚àà(Base `(Scalar ` c4)), s0 =(c1[oF((√ó `(Scalar ` c4)))]((Base ` c4)√ó { hs0 }))))\n  rexbidv2(hs0, (Base `(Scalar ` c5)), (Base `(Scalar ` c4)), w0, s0 =(hs0[(√ó ` c5)]c1), s0 =(c1[oF((√ó `(Scalar ` c4)))]((Base ` c4)√ó { hs0 })))\n  bitrd(w0, (hs0 ‚àà(Base `(Scalar ` c5))‚àß s0 =(hs0[(√ó ` c5)]c1)), (hs0 ‚àà(Base `(Scalar ` c4))‚àß s0 =(c1[oF((√ó `(Scalar ` c4)))]((Base ` c4)√ó { hs0 }))), (hs0 ‚àà(Base `(Scalar ` c4))‚àß s0 =(hs0[(√ó ` c5)]c1)))\n  anbi1d(w0, hs0 ‚àà(Base `(Scalar ` c5)), s0 =(hs0[(√ó ` c5)]c1), hs0 ‚àà(Base `(Scalar ` c4)))\n  eleq2d(hs0, (Base `(Scalar ` c5)), (Base `(Scalar ` c4)), w0)\n  ldualsbase((Base `(Scalar ` c5)), (Base `(Scalar ` c4)), (Scalar ` c4), c4, c5, (Scalar ` c5), clvec, w0)\n  pm5.32da(w0, hs0 ‚àà(Base `(Scalar ` c4)), s0 =(hs0[(√ó ` c5)]c1), s0 =(c1[oF((√ó `(Scalar ` c4)))]((Base ` c4)√ó { hs0 })))\n  eqeq2d(s0, (hs0[(√ó ` c5)]c1), (c1[oF((√ó `(Scalar ` c4)))]((Base ` c4)√ó { hs0 })), (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))))\n  ldualvs(hs0, (√ó ` c5), c1, (√ó `(Scalar ` c4)), (Base ` c4), c2, c4, (Scalar ` c4), (Base `(Scalar ` c4)), c5, clvec, (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))))\n  adantr(w0, hs0 ‚àà(Base `(Scalar ` c4)), c4 ‚àà LVec)\n  simpr(w0, hs0 ‚àà(Base `(Scalar ` c4)))\n  adantr(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 ‚àà c2)\n  syl2anc(w0, (c0 ` { c1 })= { s0 | ‚àÉ(hs0 ‚àà(Base `(Scalar ` c5)), s0 =(hs0[(√ó ` c5)]c1))}, c5 ‚àà LMod, c1 ‚àà(Base ` c5))\n  syl(w0, c5 ‚àà LMod, c4 ‚àà LVec)\n  lduallmod(c5, c4, c4 ‚àà LVec)\n  lveclmod(c4)\n  ldualelvbase(c1, (Base ` c5), c2, c4, c5, clvec, w0)\n  lspsn(s0, hs0, c5, c1, (Base ` c5), c0, (Base `(Scalar ` c5)), (√ó ` c5), (Scalar ` c5))\n  eqid((Scalar ` c5))\n  eqid((Base `(Scalar ` c5)))\n  eqid((Base ` c5))\n  eqid((√ó ` c5))\n  lfl1dim(s0, hs0, c2, c3, c1, (Base `(Scalar ` c4)), (√ó `(Scalar ` c4)), (Base ` c4), c4, (Scalar ` c4), w0)\n  eqid((Base ` c4))\n  eqid((Scalar ` c4))\n  eqid((Base `(Scalar ` c4)))\n  eqid((√ó `(Scalar ` c4)))\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cfv.s(s0, cbs, c5)\n  diff.cfv.s(s0, cbs, (Scalar ` c5))\n  diff.cbs.s(s0)\n  diff.cfv.s(s0, csca, c5)\n  diff.csca.s(s0)\n  diff.cfv.s(s0, cvsca, c5)\n  diff.cvsca.s(s0)\n  diff.hs0.c(c5)\n  diff.hs0.c(c1)\n  diff.hs0.c((Base ` c5))\n  diff.hs0.c(c0)\n  diff.hs0.c((Base `(Scalar ` c5)))\n  diff.hs0.c((√ó ` c5))\n  diff.hs0.c((Scalar ` c5))\n  diff.hs0.c(c2)\n  diff.hs0.c(c3)\n  diff.hs0.c((Base `(Scalar ` c4)))\n  diff.hs0.c((√ó `(Scalar ` c4)))\n  diff.hs0.c((Base ` c4))\n  diff.hs0.c(c4)\n  diff.hs0.c((Scalar ` c4))\n}","parent":["3eqtr4d","abbidv","rexbidv2","bitrd","anbi1d","eleq2d","ldualsbase","pm5.32da","eqeq2d","ldualvs","adantr","simpr","syl2anc","syl","lduallmod","lveclmod","ldualelvbase","lspsn","eqid","lfl1dim","diff.hs0.w","diffss.ex","diff.hs0.s","diff.cfv.s","diff.cbs.s","diff.csca.s","diff.cvsca.s","diff.hs0.c"],"children":["mapdsn3"]},{"name":"ldualkrsc","content":"The kernel of a nonzero scalar product of a functional equals the kernel of the functional. (Contributed by NM, 28-Dec-2014.)","origin":"thm ldualkrsc(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  |- wi(w0, wceq(cfv(c0, co(c1, c2, c3)), cfv(c0, c3)))\n  -| wceq(c4, cfv(csca, c5))\n  -| wceq(c6, cfv(cbs, c4))\n  -| wceq(c7, cfv(c0g, c4))\n  -| wceq(c8, cfv(clfn, c5))\n  -| wceq(c0, cfv(clk, c5))\n  -| wceq(c9, cfv(cld, c5))\n  -| wceq(c2, cfv(cvsca, c9))\n  -| wi(w0, wcel(c5, clvec))\n  -| wi(w0, wcel(c3, c8))\n  -| wi(w0, wcel(c1, c6))\n  -| wi(w0, wne(c1, c7))\n} = {\n  eqtrd(cfv(c0, co(c1, c2, c3)), cfv(c0, c3), cfv(c0, co(c3, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(c1)))), w0)\n  fveq2d(c0, co(c1, c2, c3), co(c3, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(c1))), w0)\n  ldualvs(c1, c2, c3, cfv(cmulr, c4), cfv(cbs, c5), c8, c5, c4, c6, c9, clvec, w0)\n  lkrsc(c0, c3, cfv(cmulr, c4), cfv(cbs, c5), c1, c5, c4, c6, c8, c7, w0)\n  eqid(cfv(cbs, c5))\n  eqid(cfv(cmulr, c4))\n}","pretty":"thm ldualkrsc(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0 `(c1[c2]c3))=(c0 ` c3))\n  ‚ä£ c4 =(Scalar ` c5)\n  ‚ä£ c6 =(Base ` c4)\n  ‚ä£ c7 =(0 ` c4)\n  ‚ä£ c8 =(LFnl ` c5)\n  ‚ä£ c0 =(LKer ` c5)\n  ‚ä£ c9 =(LDual ` c5)\n  ‚ä£ c2 =(√ó ` c9)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c3 ‚àà c8)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c6)\n  ‚ä£ (w0 ‚Üí c1 ‚â† c7)\n} = {\n  eqtrd((c0 `(c1[c2]c3)), (c0 ` c3), (c0 `(c3[oF((√ó ` c4))]((Base ` c5)√ó { c1 }))), w0)\n  fveq2d(c0, (c1[c2]c3), (c3[oF((√ó ` c4))]((Base ` c5)√ó { c1 })), w0)\n  ldualvs(c1, c2, c3, (√ó ` c4), (Base ` c5), c8, c5, c4, c6, c9, clvec, w0)\n  lkrsc(c0, c3, (√ó ` c4), (Base ` c5), c1, c5, c4, c6, c8, c7, w0)\n  eqid((Base ` c5))\n  eqid((√ó ` c4))\n}","parent":["eqtrd","fveq2d","ldualvs","lkrsc","eqid"],"children":["lclkrlem1","lcfrlem31"]},{"name":"lkrss","content":"The kernel of a scalar product of a functional includes the kernel of the functional. (Contributed by NM, 27-Jan-2015.)","origin":"thm lkrss(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  |- wi(w0, wss(cfv(c0, c1), cfv(c0, co(c2, c3, c1))))\n  -| wceq(c4, cfv(csca, c5))\n  -| wceq(c6, cfv(cbs, c4))\n  -| wceq(c7, cfv(clfn, c5))\n  -| wceq(c0, cfv(clk, c5))\n  -| wceq(c8, cfv(cld, c5))\n  -| wceq(c3, cfv(cvsca, c8))\n  -| wi(w0, wcel(c5, clvec))\n  -| wi(w0, wcel(c1, c7))\n  -| wi(w0, wcel(c2, c6))\n} = {\n  sseqtr4d(cfv(c0, c1), cfv(c0, co(c2, c3, c1)), cfv(c0, co(c1, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(c2)))), w0)\n  lkrscss(c0, c1, cfv(cmulr, c4), cfv(cbs, c5), c2, c5, c4, c6, c7, w0)\n  fveq2d(c0, co(c2, c3, c1), co(c1, cof(cfv(cmulr, c4)), cxp(cfv(cbs, c5), csn(c2))), w0)\n  ldualvs(c2, c3, c1, cfv(cmulr, c4), cfv(cbs, c5), c7, c5, c4, c6, c8, clvec, w0)\n  eqid(cfv(cbs, c5))\n  eqid(cfv(cmulr, c4))\n}","pretty":"thm lkrss(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0 ` c1)‚äÜ(c0 `(c2[c3]c1)))\n  ‚ä£ c4 =(Scalar ` c5)\n  ‚ä£ c6 =(Base ` c4)\n  ‚ä£ c7 =(LFnl ` c5)\n  ‚ä£ c0 =(LKer ` c5)\n  ‚ä£ c8 =(LDual ` c5)\n  ‚ä£ c3 =(√ó ` c8)\n  ‚ä£ (w0 ‚Üí c5 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c7)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c6)\n} = {\n  sseqtr4d((c0 ` c1), (c0 `(c2[c3]c1)), (c0 `(c1[oF((√ó ` c4))]((Base ` c5)√ó { c2 }))), w0)\n  lkrscss(c0, c1, (√ó ` c4), (Base ` c5), c2, c5, c4, c6, c7, w0)\n  fveq2d(c0, (c2[c3]c1), (c1[oF((√ó ` c4))]((Base ` c5)√ó { c2 })), w0)\n  ldualvs(c2, c3, c1, (√ó ` c4), (Base ` c5), c7, c5, c4, c6, c8, clvec, w0)\n  eqid((Base ` c5))\n  eqid((√ó ` c4))\n}","parent":["sseqtr4d","lkrscss","fveq2d","ldualvs","eqid"],"children":["lkrss2N","lkreqN","lclkrslem1","lcfrlem2"]},{"name":"lkrss2N","content":"Two functionals with kernels in a subset relationship. (Contributed by NM, 17-Feb-2015.) (New usage is discouraged.)","origin":"thm lkrss2N(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  |- wi(w0, wb(wss(cfv(c0, c1), cfv(c0, c2)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1)))))\n  -| wceq(c5, cfv(csca, c6))\n  -| wceq(c3, cfv(cbs, c5))\n  -| wceq(c7, cfv(clfn, c6))\n  -| wceq(c0, cfv(clk, c6))\n  -| wceq(c8, cfv(cld, c6))\n  -| wceq(c4, cfv(cvsca, c8))\n  -| wi(w0, wcel(c6, clvec))\n  -| wi(w0, wcel(c1, c7))\n  -| wi(w0, wcel(c2, c7))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n  -| diffsc(s0, c5)\n  -| diffsc(s0, c6)\n  -| diffsc(s0, c7)\n  -| diffsw(s0, w0)\n} = {\n  impbida(w0, wss(cfv(c0, c1), cfv(c0, c2)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))))\n  sylan2b(w0, wss(cfv(c0, c1), cfv(c0, c2)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))), wo(wpss(cfv(c0, c1), cfv(c0, c2)), wceq(cfv(c0, c1), cfv(c0, c2))))\n  sspss(cfv(c0, c1), cfv(c0, c2))\n  jaodan(w0, wpss(cfv(c0, c1), cfv(c0, c2)), wceq(cfv(c0, c1), cfv(c0, c2)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))))\n  imp(w0, wpss(cfv(c0, c1), cfv(c0, c2)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))))\n  sylbid(w0, wpss(cfv(c0, c1), cfv(c0, c2)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))), wa(wne(c1, cfv(c0g, c8)), wceq(c2, cfv(c0g, c8))))\n  lkrpssN(c0, c1, c2, cfv(c0g, c8), c7, c6, c8, w0)\n  adantld(w0, wne(c1, cfv(c0g, c8)), wceq(c2, cfv(c0g, c8)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))))\n  ex(w0, wceq(c2, cfv(c0g, c8)), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))))\n  syl2anc(wa(w0, wceq(c2, cfv(c0g, c8))), wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))), wcel(cfv(c0g, c5), c3), wceq(c2, co(cfv(c0g, c5), c4, c1)))\n  adantr(w0, wceq(c2, cfv(c0g, c8)), wcel(cfv(c0g, c5), c3))\n  syl(w0, wcel(cfv(c0g, c5), c3), wcel(c6, clmod))\n  lmod0cl(c6, cfv(c0g, c5), c3, c5)\n  eqtr4d(c2, co(cfv(c0g, c5), c4, c1), cfv(c0g, c8), wa(w0, wceq(c2, cfv(c0g, c8))))\n  simpr(w0, wceq(c2, cfv(c0g, c8)))\n  adantr(w0, wceq(c2, cfv(c0g, c8)), wceq(co(cfv(c0g, c5), c4, c1), cfv(c0g, c8)))\n  ldual0vs(cfv(c0g, c5), c4, c1, cfv(c0g, c8), c7, c6, c5, c8, w0)\n  eqid(cfv(c0g, c5))\n  eqid(cfv(c0g, c8))\n  syl(w0, wcel(c6, clmod), wcel(c6, clvec))\n  lveclmod(c6)\n  rspceeqv(s0, cfv(c0g, c5), c3, c2, co(cfv(c0g, c5), c4, c1), co(cv(s0), c4, c1))\n  oveq1(cv(s0), cfv(c0g, c5), c4, c1)\n  eqlkr4(s0, c3, c2, c4, c1, c5, c6, c7, c0, c8, wa(w0, wceq(cfv(c0, c1), cfv(c0, c2))))\n  adantr(w0, wceq(cfv(c0, c1), cfv(c0, c2)), wcel(c6, clvec))\n  adantr(w0, wceq(cfv(c0, c1), cfv(c0, c2)), wcel(c1, c7))\n  adantr(w0, wceq(cfv(c0, c1), cfv(c0, c2)), wcel(c2, c7))\n  simpr(w0, wceq(cfv(c0, c1), cfv(c0, c2)))\n  imp(w0, wrex(s0, c3, wceq(c2, co(cv(s0), c4, c1))), wss(cfv(c0, c1), cfv(c0, c2)))\n  rexlimdv(s0, c3, w0, wceq(c2, co(cv(s0), c4, c1)), wss(cfv(c0, c1), cfv(c0, c2)))\n  syl6(w0, wcel(cv(s0), c3), wi(wceq(c2, co(cv(s0), c4, c1)), wss(cfv(c0, c1), cfv(c0, c2))), wss(cfv(c0, c1), cfv(c0, co(cv(s0), c4, c1))))\n  ex(w0, wcel(cv(s0), c3), wss(cfv(c0, c1), cfv(c0, co(cv(s0), c4, c1))))\n  lkrss(c0, c1, cv(s0), c4, c5, c6, c3, c7, c8, wa(w0, wcel(cv(s0), c3)))\n  adantr(w0, wcel(cv(s0), c3), wcel(c6, clvec))\n  adantr(w0, wcel(cv(s0), c3), wcel(c1, c7))\n  simpr(w0, wcel(cv(s0), c3))\n  biimprcd(wss(cfv(c0, c1), cfv(c0, co(cv(s0), c4, c1))), wceq(c2, co(cv(s0), c4, c1)), wss(cfv(c0, c1), cfv(c0, c2)))\n  sseq2d(cfv(c0, c1), cfv(c0, c2), cfv(c0, co(cv(s0), c4, c1)), wceq(c2, co(cv(s0), c4, c1)))\n  fveq2(c2, co(cv(s0), c4, c1), c0)\n  diff.co.s(s0, cfv(c0g, c5), c4, c1)\n  diff.cfv.s(s0, c0g, c5)\n  diff.c0g.s(s0)\n  diff.wa.s(s0, w0, wceq(cfv(c0, c1), cfv(c0, c2)))\n  diff.wceq.s(s0, cfv(c0, c1), cfv(c0, c2))\n  diff.wss.s(s0, cfv(c0, c1), cfv(c0, c2))\n  diff.cfv.s(s0, c0, c1)\n  diff.cfv.s(s0, c0, c2)\n}","pretty":"thm lkrss2N(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, wff w0) {\n  ‚ä¢ (w0 ‚Üí((c0 ` c1)‚äÜ(c0 ` c2)‚Üî ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1))))\n  ‚ä£ c5 =(Scalar ` c6)\n  ‚ä£ c3 =(Base ` c5)\n  ‚ä£ c7 =(LFnl ` c6)\n  ‚ä£ c0 =(LKer ` c6)\n  ‚ä£ c8 =(LDual ` c6)\n  ‚ä£ c4 =(√ó ` c8)\n  ‚ä£ (w0 ‚Üí c6 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c1 ‚àà c7)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c7)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s0, c4)\n  ‚ä£ d(s0, c5)\n  ‚ä£ d(s0, c6)\n  ‚ä£ d(s0, c7)\n  ‚ä£ d(s0, w0)\n} = {\n  impbida(w0, (c0 ` c1)‚äÜ(c0 ` c2), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)))\n  sylan2b(w0, (c0 ` c1)‚äÜ(c0 ` c2), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)), ((c0 ` c1)‚ää(c0 ` c2)‚à®(c0 ` c1)=(c0 ` c2)))\n  sspss((c0 ` c1), (c0 ` c2))\n  jaodan(w0, (c0 ` c1)‚ää(c0 ` c2), (c0 ` c1)=(c0 ` c2), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)))\n  imp(w0, (c0 ` c1)‚ää(c0 ` c2), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)))\n  sylbid(w0, (c0 ` c1)‚ää(c0 ` c2), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)), (c1 ‚â†(0 ` c8)‚àß c2 =(0 ` c8)))\n  lkrpssN(c0, c1, c2, (0 ` c8), c7, c6, c8, w0)\n  adantld(w0, c1 ‚â†(0 ` c8), c2 =(0 ` c8), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)))\n  ex(w0, c2 =(0 ` c8), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)))\n  syl2anc((w0 ‚àß c2 =(0 ` c8)), ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)), (0 ` c5)‚àà c3, c2 =((0 ` c5)[c4]c1))\n  adantr(w0, c2 =(0 ` c8), (0 ` c5)‚àà c3)\n  syl(w0, (0 ` c5)‚àà c3, c6 ‚àà LMod)\n  lmod0cl(c6, (0 ` c5), c3, c5)\n  eqtr4d(c2, ((0 ` c5)[c4]c1), (0 ` c8), (w0 ‚àß c2 =(0 ` c8)))\n  simpr(w0, c2 =(0 ` c8))\n  adantr(w0, c2 =(0 ` c8), ((0 ` c5)[c4]c1)=(0 ` c8))\n  ldual0vs((0 ` c5), c4, c1, (0 ` c8), c7, c6, c5, c8, w0)\n  eqid((0 ` c5))\n  eqid((0 ` c8))\n  syl(w0, c6 ‚àà LMod, c6 ‚àà LVec)\n  lveclmod(c6)\n  rspceeqv(s0, (0 ` c5), c3, c2, ((0 ` c5)[c4]c1), (s0[c4]c1))\n  oveq1(s0, (0 ` c5), c4, c1)\n  eqlkr4(s0, c3, c2, c4, c1, c5, c6, c7, c0, c8, (w0 ‚àß(c0 ` c1)=(c0 ` c2)))\n  adantr(w0, (c0 ` c1)=(c0 ` c2), c6 ‚àà LVec)\n  adantr(w0, (c0 ` c1)=(c0 ` c2), c1 ‚àà c7)\n  adantr(w0, (c0 ` c1)=(c0 ` c2), c2 ‚àà c7)\n  simpr(w0, (c0 ` c1)=(c0 ` c2))\n  imp(w0, ‚àÉ(s0 ‚àà c3, c2 =(s0[c4]c1)), (c0 ` c1)‚äÜ(c0 ` c2))\n  rexlimdv(s0, c3, w0, c2 =(s0[c4]c1), (c0 ` c1)‚äÜ(c0 ` c2))\n  syl6(w0, s0 ‚àà c3, (c2 =(s0[c4]c1)‚Üí(c0 ` c1)‚äÜ(c0 ` c2)), (c0 ` c1)‚äÜ(c0 `(s0[c4]c1)))\n  ex(w0, s0 ‚àà c3, (c0 ` c1)‚äÜ(c0 `(s0[c4]c1)))\n  lkrss(c0, c1, s0, c4, c5, c6, c3, c7, c8, (w0 ‚àß s0 ‚àà c3))\n  adantr(w0, s0 ‚àà c3, c6 ‚àà LVec)\n  adantr(w0, s0 ‚àà c3, c1 ‚àà c7)\n  simpr(w0, s0 ‚àà c3)\n  biimprcd((c0 ` c1)‚äÜ(c0 `(s0[c4]c1)), c2 =(s0[c4]c1), (c0 ` c1)‚äÜ(c0 ` c2))\n  sseq2d((c0 ` c1), (c0 ` c2), (c0 `(s0[c4]c1)), c2 =(s0[c4]c1))\n  fveq2(c2, (s0[c4]c1), c0)\n  diff.co.s(s0, (0 ` c5), c4, c1)\n  diff.cfv.s(s0, c0g, c5)\n  diff.c0g.s(s0)\n  diff.wa.s(s0, w0, (c0 ` c1)=(c0 ` c2))\n  diff.wceq.s(s0, (c0 ` c1), (c0 ` c2))\n  diff.wss.s(s0, (c0 ` c1), (c0 ` c2))\n  diff.cfv.s(s0, c0, c1)\n  diff.cfv.s(s0, c0, c2)\n}","parent":["impbida","sylan2b","sspss","jaodan","imp","sylbid","lkrpssN","adantld","ex","syl2anc","adantr","syl","lmod0cl","eqtr4d","simpr","ldual0vs","eqid","lveclmod","rspceeqv","oveq1","eqlkr4","rexlimdv","syl6","lkrss","biimprcd","sseq2d","fveq2","diff.co.s","diff.cfv.s","diff.c0g.s","diff.wa.s","diff.wceq.s","diff.wss.s"],"children":["lcfrvalsnN"]},{"name":"lkreqN","content":"Proportional functionals have equal kernels. (Contributed by NM, 28-Mar-2015.) (New usage is discouraged.)","origin":"thm lkreqN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  |- wi(w0, wceq(cfv(c0, c1), cfv(c0, c2)))\n  -| wceq(c3, cfv(csca, c4))\n  -| wceq(c5, cfv(cbs, c3))\n  -| wceq(c6, cfv(c0g, c3))\n  -| wceq(c7, cfv(clfn, c4))\n  -| wceq(c0, cfv(clk, c4))\n  -| wceq(c8, cfv(cld, c4))\n  -| wceq(c9, cfv(cvsca, c8))\n  -| wi(w0, wcel(c4, clvec))\n  -| wi(w0, wcel(c10, cdif(c5, csn(c6))))\n  -| wi(w0, wcel(c2, c7))\n  -| wi(w0, wceq(c1, co(c10, c9, c2)))\n} = {\n  eqcomd(cfv(c0, c1), cfv(c0, c2), w0)\n  mpbird(w0, wceq(cfv(c0, c2), cfv(c0, c1)), wn(wa(wne(c2, cfv(c0g, c8)), wceq(c1, cfv(c0g, c8)))))\n  sylibr(w0, wn(wa(wne(c2, cfv(c0g, c8)), wceq(c1, cfv(c0g, c8)))), wo(wn(wne(c2, cfv(c0g, c8))), wn(wceq(c1, cfv(c0g, c8)))))\n  orrd(w0, wn(wne(c2, cfv(c0g, c8))), wn(wceq(c1, cfv(c0g, c8))))\n  con3d(w0, wn(wne(c2, cfv(c0g, c8))), wceq(c1, cfv(c0g, c8)))\n  syl6ibr(w0, wceq(c1, cfv(c0g, c8)), wn(wne(c2, cfv(c0g, c8))), wceq(c2, cfv(c0g, c8)))\n  sylbid(w0, wceq(c1, cfv(c0g, c8)), wceq(c2, cfv(c0g, c8)), wceq(co(c10, c9, c2), cfv(c0g, c8)))\n  eqeq1d(c1, cfv(c0g, c8), co(c10, c9, c2), w0)\n  sylbid(w0, wceq(co(c10, c9, c2), cfv(c0g, c8)), wceq(c2, cfv(c0g, c8)), wo(wceq(c10, cfv(c0g, cfv(csca, c8))), wceq(c2, cfv(c0g, c8))))\n  lvecvs0or(c10, c9, c2, cfv(c0g, c8), cfv(c0g, cfv(csca, c8)), cfv(cbs, c8), c8, cfv(csca, c8), cfv(cbs, cfv(csca, c8)), w0)\n  lduallvec(c8, c4, w0)\n  eleqtrrd(c10, cfv(cbs, cfv(csca, c8)), c5, w0)\n  ldualsbase(cfv(cbs, cfv(csca, c8)), c5, c3, c4, c8, cfv(csca, c8), clvec, w0)\n  eqid(cfv(cbs, cfv(csca, c8)))\n  ldualelvbase(c2, cfv(cbs, c8), c7, c4, c8, clvec, w0)\n  eqid(cfv(cbs, c8))\n  jaod(w0, wceq(c10, cfv(c0g, cfv(csca, c8))), wceq(c2, cfv(c0g, c8)), wceq(c2, cfv(c0g, c8)))\n  sylbid(w0, wceq(c10, cfv(c0g, cfv(csca, c8))), wceq(c2, cfv(c0g, c8)), wceq(c10, c6))\n  eqeq2d(c10, cfv(c0g, cfv(csca, c8)), c6, w0)\n  ldual0(cfv(c0g, cfv(csca, c8)), c6, c3, c4, c8, cfv(csca, c8), w0)\n  eqid(cfv(csca, c8))\n  eqid(cfv(c0g, cfv(csca, c8)))\n  necon4d(c10, c6, c2, cfv(c0g, c8), w0)\n  a1d(w0, wne(c2, cfv(c0g, c8)), wne(c10, c6))\n  syl(w0, wne(c10, c6), wcel(c10, cdif(c5, csn(c6))))\n  eldifsni(c10, c5, c6)\n  idd(w0, wceq(c2, cfv(c0g, c8)))\n  nne(c2, cfv(c0g, c8))\n  ianor(wne(c2, cfv(c0g, c8)), wceq(c1, cfv(c0g, c8)))\n  necon2bbid(cfv(c0, c2), cfv(c0, c1), w0, wa(wne(c2, cfv(c0g, c8)), wceq(c1, cfv(c0g, c8))))\n  bitr4d(w0, wa(wne(c2, cfv(c0g, c8)), wceq(c1, cfv(c0g, c8))), wne(cfv(c0, c2), cfv(c0, c1)), wa(wss(cfv(c0, c2), cfv(c0, c1)), wne(cfv(c0, c2), cfv(c0, c1))))\n  syl5rbbr(w0, wa(wne(c2, cfv(c0g, c8)), wceq(c1, cfv(c0g, c8))), wa(wss(cfv(c0, c2), cfv(c0, c1)), wne(cfv(c0, c2), cfv(c0, c1))), wpss(cfv(c0, c2), cfv(c0, c1)))\n  df-pss(cfv(c0, c2), cfv(c0, c1))\n  lkrpssN(c0, c2, c1, cfv(c0g, c8), c7, c4, c8, w0)\n  eqid(cfv(c0g, c8))\n  eqeltrd(c1, c7, co(c10, c9, c2), w0)\n  ldualvscl(c10, c9, c2, c7, c4, c3, c5, c8, w0)\n  syl(w0, wcel(c4, clmod), wcel(c4, clvec))\n  lveclmod(c4)\n  biantrurd(w0, wne(cfv(c0, c2), cfv(c0, c1)), wss(cfv(c0, c2), cfv(c0, c1)))\n  sseqtr4d(cfv(c0, c2), cfv(c0, c1), cfv(c0, co(c10, c9, c2)), w0)\n  lkrss(c0, c2, c10, c9, c3, c4, c5, c7, c8, w0)\n  eldifad(c10, c5, csn(c6), w0)\n  fveq2d(c0, c1, co(c10, c9, c2), w0)\n}","pretty":"thm lkreqN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8, class c9, class c10, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0 ` c1)=(c0 ` c2))\n  ‚ä£ c3 =(Scalar ` c4)\n  ‚ä£ c5 =(Base ` c3)\n  ‚ä£ c6 =(0 ` c3)\n  ‚ä£ c7 =(LFnl ` c4)\n  ‚ä£ c0 =(LKer ` c4)\n  ‚ä£ c8 =(LDual ` c4)\n  ‚ä£ c9 =(√ó ` c8)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c10 ‚àà(c5 \\ { c6 }))\n  ‚ä£ (w0 ‚Üí c2 ‚àà c7)\n  ‚ä£ (w0 ‚Üí c1 =(c10[c9]c2))\n} = {\n  eqcomd((c0 ` c1), (c0 ` c2), w0)\n  mpbird(w0, (c0 ` c2)=(c0 ` c1), ¬¨(c2 ‚â†(0 ` c8)‚àß c1 =(0 ` c8)))\n  sylibr(w0, ¬¨(c2 ‚â†(0 ` c8)‚àß c1 =(0 ` c8)), (¬¨ c2 ‚â†(0 ` c8)‚à® ¬¨ c1 =(0 ` c8)))\n  orrd(w0, ¬¨ c2 ‚â†(0 ` c8), ¬¨ c1 =(0 ` c8))\n  con3d(w0, ¬¨ c2 ‚â†(0 ` c8), c1 =(0 ` c8))\n  syl6ibr(w0, c1 =(0 ` c8), ¬¨ c2 ‚â†(0 ` c8), c2 =(0 ` c8))\n  sylbid(w0, c1 =(0 ` c8), c2 =(0 ` c8), (c10[c9]c2)=(0 ` c8))\n  eqeq1d(c1, (0 ` c8), (c10[c9]c2), w0)\n  sylbid(w0, (c10[c9]c2)=(0 ` c8), c2 =(0 ` c8), (c10 =(0 `(Scalar ` c8))‚à® c2 =(0 ` c8)))\n  lvecvs0or(c10, c9, c2, (0 ` c8), (0 `(Scalar ` c8)), (Base ` c8), c8, (Scalar ` c8), (Base `(Scalar ` c8)), w0)\n  lduallvec(c8, c4, w0)\n  eleqtrrd(c10, (Base `(Scalar ` c8)), c5, w0)\n  ldualsbase((Base `(Scalar ` c8)), c5, c3, c4, c8, (Scalar ` c8), clvec, w0)\n  eqid((Base `(Scalar ` c8)))\n  ldualelvbase(c2, (Base ` c8), c7, c4, c8, clvec, w0)\n  eqid((Base ` c8))\n  jaod(w0, c10 =(0 `(Scalar ` c8)), c2 =(0 ` c8), c2 =(0 ` c8))\n  sylbid(w0, c10 =(0 `(Scalar ` c8)), c2 =(0 ` c8), c10 = c6)\n  eqeq2d(c10, (0 `(Scalar ` c8)), c6, w0)\n  ldual0((0 `(Scalar ` c8)), c6, c3, c4, c8, (Scalar ` c8), w0)\n  eqid((Scalar ` c8))\n  eqid((0 `(Scalar ` c8)))\n  necon4d(c10, c6, c2, (0 ` c8), w0)\n  a1d(w0, c2 ‚â†(0 ` c8), c10 ‚â† c6)\n  syl(w0, c10 ‚â† c6, c10 ‚àà(c5 \\ { c6 }))\n  eldifsni(c10, c5, c6)\n  idd(w0, c2 =(0 ` c8))\n  nne(c2, (0 ` c8))\n  ianor(c2 ‚â†(0 ` c8), c1 =(0 ` c8))\n  necon2bbid((c0 ` c2), (c0 ` c1), w0, (c2 ‚â†(0 ` c8)‚àß c1 =(0 ` c8)))\n  bitr4d(w0, (c2 ‚â†(0 ` c8)‚àß c1 =(0 ` c8)), (c0 ` c2)‚â†(c0 ` c1), ((c0 ` c2)‚äÜ(c0 ` c1)‚àß(c0 ` c2)‚â†(c0 ` c1)))\n  syl5rbbr(w0, (c2 ‚â†(0 ` c8)‚àß c1 =(0 ` c8)), ((c0 ` c2)‚äÜ(c0 ` c1)‚àß(c0 ` c2)‚â†(c0 ` c1)), (c0 ` c2)‚ää(c0 ` c1))\n  df-pss((c0 ` c2), (c0 ` c1))\n  lkrpssN(c0, c2, c1, (0 ` c8), c7, c4, c8, w0)\n  eqid((0 ` c8))\n  eqeltrd(c1, c7, (c10[c9]c2), w0)\n  ldualvscl(c10, c9, c2, c7, c4, c3, c5, c8, w0)\n  syl(w0, c4 ‚àà LMod, c4 ‚àà LVec)\n  lveclmod(c4)\n  biantrurd(w0, (c0 ` c2)‚â†(c0 ` c1), (c0 ` c2)‚äÜ(c0 ` c1))\n  sseqtr4d((c0 ` c2), (c0 ` c1), (c0 `(c10[c9]c2)), w0)\n  lkrss(c0, c2, c10, c9, c3, c4, c5, c7, c8, w0)\n  eldifad(c10, c5, { c6 }, w0)\n  fveq2d(c0, c1, (c10[c9]c2), w0)\n}","parent":["eqcomd","mpbird","sylibr","orrd","con3d","syl6ibr","sylbid","eqeq1d","lvecvs0or","lduallvec","eleqtrrd","ldualsbase","eqid","ldualelvbase","jaod","eqeq2d","ldual0","necon4d","a1d","syl","eldifsni","idd","nne","ianor","necon2bbid","bitr4d","syl5rbbr","df-pss","lkrpssN","eqeltrd","ldualvscl","lveclmod","biantrurd","sseqtr4d","lkrss","eldifad","fveq2d"],"children":["lkrlspeqN","lcdlkreq2N"]},{"name":"lkrlspeqN","content":"Condition for colinear functionals to have equal kernels. (Contributed by NM, 20-Mar-2015.) (New usage is discouraged.)","origin":"thm lkrlspeqN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  |- wi(w0, wceq(cfv(c0, c1), cfv(c0, c2)))\n  -| wceq(c3, cfv(clfn, c4))\n  -| wceq(c0, cfv(clk, c4))\n  -| wceq(c5, cfv(cld, c4))\n  -| wceq(c6, cfv(c0g, c5))\n  -| wceq(c7, cfv(clspn, c5))\n  -| wi(w0, wcel(c4, clvec))\n  -| wi(w0, wcel(c2, c3))\n  -| wi(w0, wcel(c1, cdif(cfv(c7, csn(c2)), csn(c6))))\n} = {\n  mpd(w0, wceq(cfv(c0, c1), cfv(c0, c2)), wrex(hs0, cfv(cbs, cfv(csca, c4)), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  mpbid(w0, wrex(hs0, cfv(cbs, cfv(csca, c4)), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))), wrex(hs0, cfv(cbs, cfv(csca, c5)), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  mpbid(w0, wrex(hs0, cfv(cbs, cfv(csca, c5)), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))), wcel(c1, cfv(c7, csn(c2))))\n  eldifad(c1, cfv(c7, csn(c2)), csn(c6), w0)\n  syl2anc(w0, wb(wcel(c1, cfv(c7, csn(c2))), wrex(hs0, cfv(cbs, cfv(csca, c5)), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)))), wcel(c5, clmod), wcel(c2, cfv(cbs, c5)))\n  lduallmod(c5, c4, w0)\n  lspsnel(hs0, c5, c2, cfv(cbs, c5), c1, c7, cfv(cbs, cfv(csca, c5)), cfv(cvsca, c5), cfv(csca, c5))\n  rexeqdv(hs0, cfv(cbs, cfv(csca, c5)), cfv(cbs, cfv(csca, c4)), w0, wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)))\n  rexlimdv3a(hs0, cfv(cbs, cfv(csca, c4)), w0, wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wceq(cfv(c0, c1), cfv(c0, c2)))\n  lkreqN(c0, c1, c2, cfv(csca, c4), c4, cfv(cbs, cfv(csca, c4)), cfv(c0g, cfv(csca, c4)), c3, c5, cfv(cvsca, c5), cv(hs0), w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  3ad2ant1(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wcel(c4, clvec))\n  sylanbrc(w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))), wcel(cv(hs0), cdif(cfv(cbs, cfv(csca, c4)), csn(cfv(c0g, cfv(csca, c4))))), wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wne(cv(hs0), cfv(c0g, cfv(csca, c4))))\n  mpd(w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))), wne(cv(hs0), cfv(c0g, cfv(csca, c4))), wne(co(cv(hs0), cfv(cvsca, c5), c2), c6))\n  eqnetrrd(co(cv(hs0), cfv(cvsca, c5), c2), c6, c1, w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  3ad2ant1(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wne(c1, c6))\n  syl(w0, wne(c1, c6), wcel(c1, cdif(cfv(c7, csn(c2)), csn(c6))))\n  eldifsni(c1, cfv(c7, csn(c2)), c6)\n  necon3d(co(cv(hs0), cfv(cvsca, c5), c2), c6, cv(hs0), cfv(c0g, cfv(csca, c4)), w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  sylibrd(w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))), wceq(cv(hs0), cfv(c0g, cfv(csca, c4))), wceq(co(cv(hs0), cfv(cvsca, c5), c2), c6), wo(wceq(cv(hs0), cfv(c0g, cfv(csca, c5))), wceq(c2, c6)))\n  syl6bir(w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))), wceq(cv(hs0), cfv(c0g, cfv(csca, c4))), wo(wceq(cv(hs0), cfv(c0g, cfv(csca, c5))), wceq(c2, c6)), wceq(cv(hs0), cfv(c0g, cfv(csca, c5))))\n  eqeq2d(cv(hs0), cfv(c0g, cfv(csca, c5)), cfv(c0g, cfv(csca, c4)), w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  3ad2ant1(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wceq(cfv(c0g, cfv(csca, c5)), cfv(c0g, cfv(csca, c4))))\n  ldual0(cfv(c0g, cfv(csca, c5)), cfv(c0g, cfv(csca, c4)), cfv(csca, c4), c4, c5, cfv(csca, c5), w0)\n  eqid(cfv(c0g, cfv(csca, c4)))\n  syl(w0, wcel(c4, clmod), wcel(c4, clvec))\n  lveclmod(c4)\n  orc(wceq(cv(hs0), cfv(c0g, cfv(csca, c5))), wceq(c2, c6))\n  lvecvs0or(cv(hs0), cfv(cvsca, c5), c2, c6, cfv(c0g, cfv(csca, c5)), cfv(cbs, c5), c5, cfv(csca, c5), cfv(cbs, cfv(csca, c5)), w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  eqid(cfv(cvsca, c5))\n  eqid(cfv(c0g, cfv(csca, c5)))\n  3ad2ant1(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wcel(c5, clvec))\n  lduallvec(c5, c4, w0)\n  eleqtrrd(cv(hs0), cfv(cbs, cfv(csca, c5)), cfv(cbs, cfv(csca, c4)), w3a(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2))))\n  simp2(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)))\n  3ad2ant1(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wceq(cfv(cbs, cfv(csca, c5)), cfv(cbs, cfv(csca, c4))))\n  ldualsbase(cfv(cbs, cfv(csca, c5)), cfv(cbs, cfv(csca, c4)), cfv(csca, c4), c4, c5, cfv(csca, c5), clvec, w0)\n  eqid(cfv(csca, c4))\n  eqid(cfv(cbs, cfv(csca, c4)))\n  eqid(cfv(csca, c5))\n  eqid(cfv(cbs, cfv(csca, c5)))\n  3ad2ant1(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wcel(c2, cfv(cbs, c5)))\n  ldualelvbase(c2, cfv(cbs, c5), c3, c4, c5, clvec, w0)\n  eqid(cfv(cbs, c5))\n  eldifsn(cv(hs0), cfv(cbs, cfv(csca, c4)), cfv(c0g, cfv(csca, c4)))\n  3ad2ant1(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)), wcel(c2, c3))\n  simp3(w0, wcel(cv(hs0), cfv(cbs, cfv(csca, c4))), wceq(c1, co(cv(hs0), cfv(cvsca, c5), c2)))\n  diff.hs0.c(c5)\n  diff.hs0.c(c2)\n  diff.hs0.c(cfv(cbs, c5))\n  diff.hs0.c(c1)\n  diff.hs0.c(c7)\n  diff.hs0.c(cfv(cbs, cfv(csca, c5)))\n  diff.hs0.c(cfv(cvsca, c5))\n  diff.hs0.c(cfv(csca, c5))\n  diff.hs0.c(cfv(cbs, cfv(csca, c4)))\n  diff.hs0.w(w0)\n  diff.hs0.w(wceq(cfv(c0, c1), cfv(c0, c2)))\n}","pretty":"thm lkrlspeqN(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0 ` c1)=(c0 ` c2))\n  ‚ä£ c3 =(LFnl ` c4)\n  ‚ä£ c0 =(LKer ` c4)\n  ‚ä£ c5 =(LDual ` c4)\n  ‚ä£ c6 =(0 ` c5)\n  ‚ä£ c7 =(LSpan ` c5)\n  ‚ä£ (w0 ‚Üí c4 ‚àà LVec)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c1 ‚àà((c7 ` { c2 })\\ { c6 }))\n} = {\n  mpd(w0, (c0 ` c1)=(c0 ` c2), ‚àÉ(hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2)))\n  mpbid(w0, ‚àÉ(hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2)), ‚àÉ(hs0 ‚àà(Base `(Scalar ` c5)), c1 =(hs0[(√ó ` c5)]c2)))\n  mpbid(w0, ‚àÉ(hs0 ‚àà(Base `(Scalar ` c5)), c1 =(hs0[(√ó ` c5)]c2)), c1 ‚àà(c7 ` { c2 }))\n  eldifad(c1, (c7 ` { c2 }), { c6 }, w0)\n  syl2anc(w0, (c1 ‚àà(c7 ` { c2 })‚Üî ‚àÉ(hs0 ‚àà(Base `(Scalar ` c5)), c1 =(hs0[(√ó ` c5)]c2))), c5 ‚àà LMod, c2 ‚àà(Base ` c5))\n  lduallmod(c5, c4, w0)\n  lspsnel(hs0, c5, c2, (Base ` c5), c1, c7, (Base `(Scalar ` c5)), (√ó ` c5), (Scalar ` c5))\n  rexeqdv(hs0, (Base `(Scalar ` c5)), (Base `(Scalar ` c4)), w0, c1 =(hs0[(√ó ` c5)]c2))\n  rexlimdv3a(hs0, (Base `(Scalar ` c4)), w0, c1 =(hs0[(√ó ` c5)]c2), (c0 ` c1)=(c0 ` c2))\n  lkreqN(c0, c1, c2, (Scalar ` c4), c4, (Base `(Scalar ` c4)), (0 `(Scalar ` c4)), c3, c5, (√ó ` c5), hs0, (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)))\n  3ad2ant1(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2), c4 ‚àà LVec)\n  sylanbrc((w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)), hs0 ‚àà((Base `(Scalar ` c4))\\ {(0 `(Scalar ` c4))}), hs0 ‚àà(Base `(Scalar ` c4)), hs0 ‚â†(0 `(Scalar ` c4)))\n  mpd((w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)), hs0 ‚â†(0 `(Scalar ` c4)), (hs0[(√ó ` c5)]c2)‚â† c6)\n  eqnetrrd((hs0[(√ó ` c5)]c2), c6, c1, (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)))\n  3ad2ant1(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2), c1 ‚â† c6)\n  syl(w0, c1 ‚â† c6, c1 ‚àà((c7 ` { c2 })\\ { c6 }))\n  eldifsni(c1, (c7 ` { c2 }), c6)\n  necon3d((hs0[(√ó ` c5)]c2), c6, hs0, (0 `(Scalar ` c4)), (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)))\n  sylibrd((w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)), hs0 =(0 `(Scalar ` c4)), (hs0[(√ó ` c5)]c2)= c6, (hs0 =(0 `(Scalar ` c5))‚à® c2 = c6))\n  syl6bir((w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)), hs0 =(0 `(Scalar ` c4)), (hs0 =(0 `(Scalar ` c5))‚à® c2 = c6), hs0 =(0 `(Scalar ` c5)))\n  eqeq2d(hs0, (0 `(Scalar ` c5)), (0 `(Scalar ` c4)), (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)))\n  3ad2ant1(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2), (0 `(Scalar ` c5))=(0 `(Scalar ` c4)))\n  ldual0((0 `(Scalar ` c5)), (0 `(Scalar ` c4)), (Scalar ` c4), c4, c5, (Scalar ` c5), w0)\n  eqid((0 `(Scalar ` c4)))\n  syl(w0, c4 ‚àà LMod, c4 ‚àà LVec)\n  lveclmod(c4)\n  orc(hs0 =(0 `(Scalar ` c5)), c2 = c6)\n  lvecvs0or(hs0, (√ó ` c5), c2, c6, (0 `(Scalar ` c5)), (Base ` c5), c5, (Scalar ` c5), (Base `(Scalar ` c5)), (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)))\n  eqid((√ó ` c5))\n  eqid((0 `(Scalar ` c5)))\n  3ad2ant1(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2), c5 ‚àà LVec)\n  lduallvec(c5, c4, w0)\n  eleqtrrd(hs0, (Base `(Scalar ` c5)), (Base `(Scalar ` c4)), (w0 ‚àß hs0 ‚àà(Base `(Scalar ` c4))‚àß c1 =(hs0[(√ó ` c5)]c2)))\n  simp2(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2))\n  3ad2ant1(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2), (Base `(Scalar ` c5))=(Base `(Scalar ` c4)))\n  ldualsbase((Base `(Scalar ` c5)), (Base `(Scalar ` c4)), (Scalar ` c4), c4, c5, (Scalar ` c5), clvec, w0)\n  eqid((Scalar ` c4))\n  eqid((Base `(Scalar ` c4)))\n  eqid((Scalar ` c5))\n  eqid((Base `(Scalar ` c5)))\n  3ad2ant1(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2), c2 ‚àà(Base ` c5))\n  ldualelvbase(c2, (Base ` c5), c3, c4, c5, clvec, w0)\n  eqid((Base ` c5))\n  eldifsn(hs0, (Base `(Scalar ` c4)), (0 `(Scalar ` c4)))\n  3ad2ant1(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2), c2 ‚àà c3)\n  simp3(w0, hs0 ‚àà(Base `(Scalar ` c4)), c1 =(hs0[(√ó ` c5)]c2))\n  diff.hs0.c(c5)\n  diff.hs0.c(c2)\n  diff.hs0.c((Base ` c5))\n  diff.hs0.c(c1)\n  diff.hs0.c(c7)\n  diff.hs0.c((Base `(Scalar ` c5)))\n  diff.hs0.c((√ó ` c5))\n  diff.hs0.c((Scalar ` c5))\n  diff.hs0.c((Base `(Scalar ` c4)))\n  diff.hs0.w(w0)\n  diff.hs0.w((c0 ` c1)=(c0 ` c2))\n}","parent":["mpd","mpbid","eldifad","syl2anc","lduallmod","lspsnel","rexeqdv","rexlimdv3a","lkreqN","3ad2ant1","sylanbrc","eqnetrrd","syl","eldifsni","necon3d","sylibrd","syl6bir","eqeq2d","ldual0","eqid","lveclmod","orc","lvecvs0or","lduallvec","eleqtrrd","simp2","ldualsbase","ldualelvbase","eldifsn","simp3","diff.hs0.c","diff.hs0.w"],"children":["lcdlkreqN"]}]}