{"index":25,"title":"Equivalence","content":"","blocks":[{"name":"trubitru","content":"A ` <-> ` identity. (Contributed by Anthony Hart, 22-Oct-2010.) (Proof shortened by Andrew Salmon, 13-May-2011.)","origin":"thm trubitru() {\n  |- wb(wb(wtru, wtru), wtru)\n} = {\n  bitru(wb(wtru, wtru))\n  biid(wtru)\n}","pretty":"thm trubitru() {\n  ⊢ ((T ↔ T)↔ T)\n} = {\n  bitru((T ↔ T))\n  biid(wtru)\n}","parent":["bitru","biid"],"children":["truxortru"]},{"name":"falbitru","content":"A ` <-> ` identity. (Contributed by Anthony Hart, 22-Oct-2010.) (Proof shortened by Andrew Salmon, 13-May-2011.) (Proof shortened by Wolf Lammen, 10-Jul-2020.)","origin":"thm falbitru() {\n  |- wb(wb(wfal, wtru), wfal)\n} = {\n  bicomi(wb(wfal, wtru), wfal)\n  tbtru(wfal)\n}","pretty":"thm falbitru() {\n  ⊢ ((F ↔ T)↔ F)\n} = {\n  bicomi((F ↔ T), wfal)\n  tbtru(wfal)\n}","parent":["bicomi","tbtru"],"children":["trubifal"]},{"name":"trubifal","content":"A ` <-> ` identity. (Contributed by Anthony Hart, 22-Oct-2010.) (Proof shortened by Andrew Salmon, 13-May-2011.) (Proof shortened by Wolf Lammen, 10-Jul-2020.)","origin":"thm trubifal() {\n  |- wb(wb(wtru, wfal), wfal)\n} = {\n  bitri(wb(wtru, wfal), wfal, wb(wfal, wtru))\n  bicom(wtru, wfal)\n  falbitru()\n}","pretty":"thm trubifal() {\n  ⊢ ((T ↔ F)↔ F)\n} = {\n  bitri((T ↔ F), wfal, (F ↔ T))\n  bicom(wtru, wfal)\n  falbitru()\n}","parent":["bitri","bicom","falbitru"],"children":["truxorfal"]},{"name":"falbifal","content":"A ` <-> ` identity. (Contributed by Anthony Hart, 22-Oct-2010.) (Proof shortened by Andrew Salmon, 13-May-2011.)","origin":"thm falbifal() {\n  |- wb(wb(wfal, wfal), wtru)\n} = {\n  bitru(wb(wfal, wfal))\n  biid(wfal)\n}","pretty":"thm falbifal() {\n  ⊢ ((F ↔ F)↔ T)\n} = {\n  bitru((F ↔ F))\n  biid(wfal)\n}","parent":["bitru","biid"],"children":["falxorfal"]}]}