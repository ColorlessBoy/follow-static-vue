{"index":999,"title":"Mathbox for Jonathan Ben-Naim","content":"Note: On 4-Sep-2016 and after, 745 unused theorems were deleted from this mathbox, and 359 theorems used only once or twice were merged into their referencing theorems. The originals can be recovered from set.mm versions prior to this date.","blocks":[{"name":"w-bnj17","content":"Extend wff notation with the 4-way conjunction. (New usage is discouraged.)","origin":"prop wff w-bnj17(wff w0, wff w1, wff w2, wff w3) { (w0 ‚àß w1 ‚àß w2 ‚àß w3) }","pretty":"","parent":[],"children":[]},{"name":"diff.w-bnj17.s","content":"","origin":"axiom diff.w-bnj17.s(setvar sBase, wff w0, wff w1, wff w2, wff w3) {\n  |- diffsw(sBase, w-bnj17(w0, w1, w2, w3))\n  -| diffsw(sBase, w0)\n  -| diffsw(sBase, w1)\n  -| diffsw(sBase, w2)\n  -| diffsw(sBase, w3)\n}","pretty":"axiom diff.w-bnj17.s(setvar sBase, wff w0, wff w1, wff w2, wff w3) {\n  ‚ä¢ d(sBase,(w0 ‚àß w1 ‚àß w2 ‚àß w3))\n  ‚ä£ d(sBase, w0)\n  ‚ä£ d(sBase, w1)\n  ‚ä£ d(sBase, w2)\n  ‚ä£ d(sBase, w3)\n}","parent":[],"children":[]},{"name":"diff.w-bnj17.c","content":"","origin":"axiom diff.w-bnj17.c(class cBase, wff w0, wff w1, wff w2, wff w3) {\n  |- diffcw(cBase, w-bnj17(w0, w1, w2, w3))\n  -| diffcw(cBase, w0)\n  -| diffcw(cBase, w1)\n  -| diffcw(cBase, w2)\n  -| diffcw(cBase, w3)\n}","pretty":"axiom diff.w-bnj17.c(class cBase, wff w0, wff w1, wff w2, wff w3) {\n  ‚ä¢ d(cBase,(w0 ‚àß w1 ‚àß w2 ‚àß w3))\n  ‚ä£ d(cBase, w0)\n  ‚ä£ d(cBase, w1)\n  ‚ä£ d(cBase, w2)\n  ‚ä£ d(cBase, w3)\n}","parent":[],"children":[]},{"name":"diff.w-bnj17.w","content":"","origin":"axiom diff.w-bnj17.w(wff wBase, wff w0, wff w1, wff w2, wff w3) {\n  |- diffww(wBase, w-bnj17(w0, w1, w2, w3))\n  -| diffww(wBase, w0)\n  -| diffww(wBase, w1)\n  -| diffww(wBase, w2)\n  -| diffww(wBase, w3)\n}","pretty":"axiom diff.w-bnj17.w(wff wBase, wff w0, wff w1, wff w2, wff w3) {\n  ‚ä¢ d(wBase,(w0 ‚àß w1 ‚àß w2 ‚àß w3))\n  ‚ä£ d(wBase, w0)\n  ‚ä£ d(wBase, w1)\n  ‚ä£ d(wBase, w2)\n  ‚ä£ d(wBase, w3)\n}","parent":[],"children":[]},{"name":"df-bnj17","content":"Define the 4-way conjunction. (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) (New usage is discouraged.)","origin":"axiom df-bnj17(wff w0, wff w1, wff w2, wff w3) {\n  |- wb(w-bnj17(w0, w1, w2, w3), wa(w3a(w0, w1, w2), w3))\n}","pretty":"axiom df-bnj17(wff w0, wff w1, wff w2, wff w3) {\n  ‚ä¢ ((w0 ‚àß w1 ‚àß w2 ‚àß w3)‚Üî((w0 ‚àß w1 ‚àß w2)‚àß w3))\n}","parent":[],"children":["bnj248","bnj250","bnj258","bnj268","bnj291","bnj312","bnj446","bnj645","bnj658","bnj887","bnj919","bnj945","bnj951","bnj982","bnj1019","bnj518","bnj571","bnj594","bnj916","bnj966","bnj967","bnj1006","bnj1018","bnj1040","bnj1174","bnj1175","bnj1311"]},{"name":"c-bnj14","content":"Extend class notation with the function giving: the class of all elements of ` A ` that are \"smaller\" than ` X ` according to ` R ` . (New usage is discouraged.)","origin":"prop class c-bnj14(class c0, class c1, class c2) { _pred(c0, c1, c2) }","pretty":"","parent":[],"children":[]},{"name":"diff.c-bnj14.s","content":"","origin":"axiom diff.c-bnj14.s(setvar sBase, class c0, class c1, class c2) {\n  |- diffsc(sBase, c-bnj14(c0, c1, c2))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n  -| diffsc(sBase, c2)\n}","pretty":"axiom diff.c-bnj14.s(setvar sBase, class c0, class c1, class c2) {\n  ‚ä¢ d(sBase, _pred(c0, c1, c2))\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n  ‚ä£ d(sBase, c2)\n}","parent":[],"children":[]},{"name":"diff.c-bnj14.c","content":"","origin":"axiom diff.c-bnj14.c(class cBase, class c0, class c1, class c2) {\n  |- diffcc(cBase, c-bnj14(c0, c1, c2))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n  -| diffcc(cBase, c2)\n}","pretty":"axiom diff.c-bnj14.c(class cBase, class c0, class c1, class c2) {\n  ‚ä¢ d(cBase, _pred(c0, c1, c2))\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n  ‚ä£ d(cBase, c2)\n}","parent":[],"children":[]},{"name":"diff.c-bnj14.w","content":"","origin":"axiom diff.c-bnj14.w(wff wBase, class c0, class c1, class c2) {\n  |- diffcw(c-bnj14(c0, c1, c2), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n  -| diffcw(c2, wBase)\n}","pretty":"axiom diff.c-bnj14.w(wff wBase, class c0, class c1, class c2) {\n  ‚ä¢ d(_pred(c0, c1, c2), wBase)\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n  ‚ä£ d(c2, wBase)\n}","parent":[],"children":[]},{"name":"df-bnj14","content":"Define the function giving: the class of all elements of ` A ` that are \"smaller\" than ` X ` according to ` R ` . (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) (New usage is discouraged.)","origin":"axiom df-bnj14(setvar s0, class c0, class c1, class c2) {\n  |- wceq(c-bnj14(c0, c1, c2), crab(s0, c1, wbr(cv(s0), c2, c0)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n}","pretty":"axiom df-bnj14(setvar s0, class c0, class c1, class c2) {\n  ‚ä¢ _pred(c0, c1, c2)= { s0 ‚àà c1 | s0[c2]c0 }\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n}","parent":[],"children":["bnj213","bnj602","bnj1152","bnj1279","bnj1418"]},{"name":"w-bnj13","content":"Extend wff notation with the following predicate: ` R ` is set-like on ` A ` . (New usage is discouraged.)","origin":"prop wff w-bnj13(class c0, class c1) { c0[_Se]c1 }","pretty":"","parent":[],"children":[]},{"name":"diff.w-bnj13.s","content":"","origin":"axiom diff.w-bnj13.s(setvar sBase, class c0, class c1) {\n  |- diffsw(sBase, w-bnj13(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.w-bnj13.s(setvar sBase, class c0, class c1) {\n  ‚ä¢ d(sBase, c0[_Se]c1)\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.w-bnj13.c","content":"","origin":"axiom diff.w-bnj13.c(class cBase, class c0, class c1) {\n  |- diffcw(cBase, w-bnj13(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.w-bnj13.c(class cBase, class c0, class c1) {\n  ‚ä¢ d(cBase, c0[_Se]c1)\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.w-bnj13.w","content":"","origin":"axiom diff.w-bnj13.w(wff wBase, class c0, class c1) {\n  |- diffww(wBase, w-bnj13(c0, c1))\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.w-bnj13.w(wff wBase, class c0, class c1) {\n  ‚ä¢ d(wBase, c0[_Se]c1)\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"df-bnj13","content":"Define the following predicate: ` R ` is set-like on ` A ` . (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) (New usage is discouraged.)","origin":"axiom df-bnj13(setvar s0, class c0, class c1) {\n  |- wb(w-bnj13(c0, c1), wral(s0, c1, wcel(c-bnj14(cv(s0), c1, c0), universe)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n}","pretty":"axiom df-bnj13(setvar s0, class c0, class c1) {\n  ‚ä¢ (c0[_Se]c1 ‚Üî ‚àÄ(s0 ‚àà c1, _pred(s0, c1, c0)‚àà ùïå))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n}","parent":[],"children":["bnj93","bnj1489"]},{"name":"w-bnj15","content":"Extend wff notation with the following predicate: ` R ` is both well-founded and set-like on ` A ` . (New usage is discouraged.)","origin":"prop wff w-bnj15(class c0, class c1) { c0[_FrSe]c1 }","pretty":"","parent":[],"children":[]},{"name":"diff.w-bnj15.s","content":"","origin":"axiom diff.w-bnj15.s(setvar sBase, class c0, class c1) {\n  |- diffsw(sBase, w-bnj15(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.w-bnj15.s(setvar sBase, class c0, class c1) {\n  ‚ä¢ d(sBase, c0[_FrSe]c1)\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.w-bnj15.c","content":"","origin":"axiom diff.w-bnj15.c(class cBase, class c0, class c1) {\n  |- diffcw(cBase, w-bnj15(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.w-bnj15.c(class cBase, class c0, class c1) {\n  ‚ä¢ d(cBase, c0[_FrSe]c1)\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.w-bnj15.w","content":"","origin":"axiom diff.w-bnj15.w(wff wBase, class c0, class c1) {\n  |- diffww(wBase, w-bnj15(c0, c1))\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.w-bnj15.w(wff wBase, class c0, class c1) {\n  ‚ä¢ d(wBase, c0[_FrSe]c1)\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"df-bnj15","content":"Define the following predicate: ` R ` is both well-founded and set-like on ` A ` . (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) (New usage is discouraged.)","origin":"axiom df-bnj15(class c0, class c1) {\n  |- wb(w-bnj15(c0, c1), wa(wfr(c0, c1), w-bnj13(c0, c1)))\n}","pretty":"axiom df-bnj15(class c0, class c1) {\n  ‚ä¢ (c0[_FrSe]c1 ‚Üî(c0[Fr]c1 ‚àß c0[_Se]c1))\n}","parent":[],"children":["bnj93","bnj1177","bnj1364","bnj1417"]},{"name":"c-bnj18","content":"Extend class notation with the function giving: the transitive closure of ` X ` in ` A ` by ` R ` . (New usage is discouraged.)","origin":"prop class c-bnj18(class c0, class c1, class c2) { _trCl(c0, c1, c2) }","pretty":"","parent":[],"children":[]},{"name":"diff.c-bnj18.s","content":"","origin":"axiom diff.c-bnj18.s(setvar sBase, class c0, class c1, class c2) {\n  |- diffsc(sBase, c-bnj18(c0, c1, c2))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n  -| diffsc(sBase, c2)\n}","pretty":"axiom diff.c-bnj18.s(setvar sBase, class c0, class c1, class c2) {\n  ‚ä¢ d(sBase, _trCl(c0, c1, c2))\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n  ‚ä£ d(sBase, c2)\n}","parent":[],"children":[]},{"name":"diff.c-bnj18.c","content":"","origin":"axiom diff.c-bnj18.c(class cBase, class c0, class c1, class c2) {\n  |- diffcc(cBase, c-bnj18(c0, c1, c2))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n  -| diffcc(cBase, c2)\n}","pretty":"axiom diff.c-bnj18.c(class cBase, class c0, class c1, class c2) {\n  ‚ä¢ d(cBase, _trCl(c0, c1, c2))\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n  ‚ä£ d(cBase, c2)\n}","parent":[],"children":[]},{"name":"diff.c-bnj18.w","content":"","origin":"axiom diff.c-bnj18.w(wff wBase, class c0, class c1, class c2) {\n  |- diffcw(c-bnj18(c0, c1, c2), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n  -| diffcw(c2, wBase)\n}","pretty":"axiom diff.c-bnj18.w(wff wBase, class c0, class c1, class c2) {\n  ‚ä¢ d(_trCl(c0, c1, c2), wBase)\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n  ‚ä£ d(c2, wBase)\n}","parent":[],"children":[]},{"name":"df-bnj18","content":"Define the function giving: the transitive closure of ` X ` in ` A ` by ` R ` . This definition has been designed for facilitating verification that it is eliminable and that the $d restrictions are sound and complete. For a more readable definition see ~ bnj882 . (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) (New usage is discouraged.)","origin":"axiom df-bnj18(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1, class c2) {\n  |- wceq(c-bnj18(c0, c1, c2), ciun(s0, cab(s0, wrex(s1, cdif(com, csn(emptycls)), w3a(wfn(cv(s0), cv(s1)), wceq(cfv(cv(s0), emptycls), c-bnj14(c0, c1, c2)), wral(s2, com, wi(wcel(csuc(cv(s2)), cv(s1)), wceq(cfv(cv(s0), csuc(cv(s2))), ciun(s3, cfv(cv(s0), cv(s2)), c-bnj14(cv(s3), c1, c2)))))))), ciun(s2, cdm(cv(s0)), cfv(cv(s0), cv(s2)))))\n  -| diffss(s0, s2)\n  -| diffss(s0, s1)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s2, s3)\n  -| diffss(s1, s3)\n  -| diffsc(s0, c0)\n  -| diffsc(s2, c0)\n  -| diffsc(s1, c0)\n  -| diffsc(s3, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s2, c1)\n  -| diffsc(s1, c1)\n  -| diffsc(s3, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s2, c2)\n  -| diffsc(s1, c2)\n  -| diffsc(s3, c2)\n}","pretty":"axiom df-bnj18(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1, class c2) {\n  ‚ä¢ _trCl(c0, c1, c2)= ‚ãÉ(s0 ‚àà { s0 | ‚àÉ(s1 ‚àà(_om \\ { ‚àÖ }),(s0[Fn]s1 ‚àß(s0 ` ‚àÖ)= _pred(c0, c1, c2)‚àß ‚àÄ(s2 ‚àà _om,(suc(s2)‚àà s1 ‚Üí(s0 ` suc(s2))= ‚ãÉ(s3 ‚àà(s0 ` s2), _pred(s3, c1, c2))))))}, ‚ãÉ(s2 ‚àà dom(s0),(s0 ` s2)))\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s3)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s2, s3)\n  ‚ä£ d(s1, s3)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s2, c0)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s3, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s2, c1)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s3, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s2, c2)\n  ‚ä£ d(s1, c2)\n  ‚ä£ d(s3, c2)\n}","parent":[],"children":["bnj882","bnj18eq1"]},{"name":"w-bnj19","content":"Extend wff notation with the following predicate: ` B ` is transitive for ` A ` and ` R ` . (New usage is discouraged.)","origin":"prop wff w-bnj19(class c0, class c1, class c2) { _TrFo(c0, c1, c2) }","pretty":"","parent":[],"children":[]},{"name":"diff.w-bnj19.s","content":"","origin":"axiom diff.w-bnj19.s(setvar sBase, class c0, class c1, class c2) {\n  |- diffsw(sBase, w-bnj19(c0, c1, c2))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n  -| diffsc(sBase, c2)\n}","pretty":"axiom diff.w-bnj19.s(setvar sBase, class c0, class c1, class c2) {\n  ‚ä¢ d(sBase, _TrFo(c0, c1, c2))\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n  ‚ä£ d(sBase, c2)\n}","parent":[],"children":[]},{"name":"diff.w-bnj19.c","content":"","origin":"axiom diff.w-bnj19.c(class cBase, class c0, class c1, class c2) {\n  |- diffcw(cBase, w-bnj19(c0, c1, c2))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n  -| diffcc(cBase, c2)\n}","pretty":"axiom diff.w-bnj19.c(class cBase, class c0, class c1, class c2) {\n  ‚ä¢ d(cBase, _TrFo(c0, c1, c2))\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n  ‚ä£ d(cBase, c2)\n}","parent":[],"children":[]},{"name":"diff.w-bnj19.w","content":"","origin":"axiom diff.w-bnj19.w(wff wBase, class c0, class c1, class c2) {\n  |- diffww(wBase, w-bnj19(c0, c1, c2))\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n  -| diffcw(c2, wBase)\n}","pretty":"axiom diff.w-bnj19.w(wff wBase, class c0, class c1, class c2) {\n  ‚ä¢ d(wBase, _TrFo(c0, c1, c2))\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n  ‚ä£ d(c2, wBase)\n}","parent":[],"children":[]},{"name":"df-bnj19","content":"Define the following predicate: ` B ` is transitive for ` A ` and ` R ` . (Contributed by Jonathan Ben-Naim, 3-Jun-2011.) (New usage is discouraged.)","origin":"axiom df-bnj19(setvar s0, class c0, class c1, class c2) {\n  |- wb(w-bnj19(c0, c1, c2), wral(s0, c0, wss(c-bnj14(cv(s0), c1, c2), c0)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n}","pretty":"axiom df-bnj19(setvar s0, class c0, class c1, class c2) {\n  ‚ä¢ (_TrFo(c0, c1, c2)‚Üî ‚àÄ(s0 ‚àà c0, _pred(s0, c1, c2)‚äÜ c0))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n}","parent":[],"children":["bnj978","bnj1118","bnj1125","bnj1137","bnj1408"]}]}