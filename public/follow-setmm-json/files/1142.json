{"index":1142,"title":"Proposal for the definitions of class membership and class equality","content":"In this section, we show ( ~ bj-ax8 and ~ bj-ax9 ) that the current forms of the definitions of class membership ( ~ df-clel ) and class equality ( ~ df-cleq ) are too powerful, and we propose alternate definitions ( ~ bj-df-clel and ~ bj-df-cleq ) which also have the advantage of making it clear that these definitions are conservative.","blocks":[{"name":"bj-ax8","content":"Proof of ~ ax-8 from ~ df-clel (and FOL). This shows that ~ df-clel is \"too powerful\". A possible definition is given by ~ bj-df-clel . (Contributed by BJ, 27-Jun-2019.) Also a direct consequence of ~ eleq1w , which has essentially the same proof. (Proof modification is discouraged.)","origin":"thm bj-ax8(setvar s0, setvar s1, setvar s2) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wcel(cv(s0), cv(s2)), wcel(cv(s1), cv(s2))))\n} = {\n  biimpd(wceq(cv(s0), cv(s1)), wcel(cv(s0), cv(s2)), wcel(cv(s1), cv(s2)))\n  3bitr4g(wceq(cv(s0), cv(s1)), wcel(cv(s0), cv(s2)), wcel(cv(s1), cv(s2)), wex(hs0, wa(wceq(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s2)))), wex(hs0, wa(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), cv(s2)))))\n  exbidv(hs0, wceq(cv(s0), cv(s1)), wa(wceq(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s2))), wa(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), cv(s2))))\n  anbi1d(wceq(cv(s0), cv(s1)), wceq(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s2)), wceq(cv(hs0), cv(s1)))\n  equequ2(s0, s1, hs0)\n  df-clel(hs0, cv(s0), cv(s2))\n  df-clel(hs0, cv(s1), cv(s2))\n  diff.hs0.w(wceq(cv(s0), cv(s1)))\n  diff.hs0.c(cv(s0))\n  diff.hs0.c(cv(s2))\n  diff.hs0.c(cv(s1))\n}","pretty":"thm bj-ax8(setvar s0, setvar s1, setvar s2) {\n  ⊢ (s0 = s1 →(s0 ∈ s2 → s1 ∈ s2))\n} = {\n  biimpd(s0 = s1, s0 ∈ s2, s1 ∈ s2)\n  3bitr4g(s0 = s1, s0 ∈ s2, s1 ∈ s2, ∃(hs0,(hs0 = s0 ∧ hs0 ∈ s2)), ∃(hs0,(hs0 = s1 ∧ hs0 ∈ s2)))\n  exbidv(hs0, s0 = s1, (hs0 = s0 ∧ hs0 ∈ s2), (hs0 = s1 ∧ hs0 ∈ s2))\n  anbi1d(s0 = s1, hs0 = s0, hs0 ∈ s2, hs0 = s1)\n  equequ2(s0, s1, hs0)\n  df-clel(hs0, s0, s2)\n  df-clel(hs0, s1, s2)\n  diff.hs0.w(s0 = s1)\n  diff.hs0.c(s0)\n  diff.hs0.c(s2)\n  diff.hs0.c(s1)\n}","parent":["biimpd","3bitr4g","exbidv","anbi1d","equequ2","df-clel","diff.hs0.w","diff.hs0.c"],"children":[]},{"name":"bj-df-clel","content":"Candidate definition for ~ df-clel (the need for it is exposed in ~ bj-ax8 ). The similarity of the hypothesis ` |- A. u A. v ( u e. v <-> E. w ( w = u /\\ w e. v ) ) ` and the conclusion, together with all possible disjoint variable conditions, makes it clear that this definition merely extends to class variables something that is true for setvar variables, hence is conservative. This definition should be directly referenced only by ~ bj-dfclel , which should be used instead. The proof is irrelevant since this is a proposal for an axiom. Note: the current definition ~ df-clel already mentions ~ cleljust as a justification; here, we merely propose to put it (more preciesly: its universal closure) as a hypothesis to make things more explicit. (Contributed by BJ, 27-Jun-2019.) (Proof modification is discouraged.)","origin":"thm bj-df-clel(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1) {\n  |- wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1))))\n  -| wal(s1, wal(s2, wb(wcel(cv(s1), cv(s2)), wex(s3, wa(wceq(cv(s3), cv(s1)), wcel(cv(s3), cv(s2)))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n  -| diffsc(s3, c0)\n  -| diffsc(s3, c1)\n} = {\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), wal(s1, wal(s2, wb(wcel(cv(s1), cv(s2)), wex(s3, wa(wceq(cv(s3), cv(s1)), wcel(cv(s3), cv(s2))))))))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s0, s1))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s0, s2))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s0, s3))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s1, s2))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s1, s3))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s2, s3))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s1, c0))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s1, c1))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s2, c0))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s2, c1))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s3, c0))\n  a1ii(wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s3, c1))\n  df-clel(s0, c0, c1)\n}","pretty":"thm bj-df-clel(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1) {\n  ⊢ (c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1)))\n  ⊣ ∀(s1, ∀(s2,(s1 ∈ s2 ↔ ∃(s3,(s3 = s1 ∧ s3 ∈ s2)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c1)\n  ⊣ d(s3, c0)\n  ⊣ d(s3, c1)\n} = {\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), ∀(s1, ∀(s2,(s1 ∈ s2 ↔ ∃(s3,(s3 = s1 ∧ s3 ∈ s2))))))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s0, s1))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s0, s2))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s0, s3))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s1, s2))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s1, s3))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s2, s3))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s1, c0))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s1, c1))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s2, c0))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s2, c1))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s3, c0))\n  a1ii((c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1))), d(s3, c1))\n  df-clel(s0, c0, c1)\n}","parent":["a1ii","df-clel"],"children":["bj-dfclel"]},{"name":"bj-dfclel","content":"Characterization of the elements of a class. Note: ~ cleljust could be relabeled \"clelhyp\". (Contributed by BJ, 27-Jun-2019.) (Proof modification is discouraged.)","origin":"thm bj-dfclel(setvar s0, class c0, class c1) {\n  |- wb(wcel(c0, c1), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), c1))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  bj-df-clel(s0, hs2, hs1, hs0, c0, c1)\n  gen2(hs2, hs1, wb(wcel(cv(hs2), cv(hs1)), wex(hs0, wa(wceq(cv(hs0), cv(hs2)), wcel(cv(hs0), cv(hs1))))))\n  cleljust(hs2, hs1, hs0)\n  diffss.ex(s0, hs2)\n  diff.hs2.s(s0)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs2.s(hs1)\n  diff.hs2.s(hs0)\n  diff.hs1.s(hs0)\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","pretty":"thm bj-dfclel(setvar s0, class c0, class c1) {\n  ⊢ (c0 ∈ c1 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ c1)))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  bj-df-clel(s0, hs2, hs1, hs0, c0, c1)\n  gen2(hs2, hs1, (hs2 ∈ hs1 ↔ ∃(hs0,(hs0 = hs2 ∧ hs0 ∈ hs1))))\n  cleljust(hs2, hs1, hs0)\n  diffss.ex(s0, hs2)\n  diff.hs2.s(s0)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs2.s(hs1)\n  diff.hs2.s(hs0)\n  diff.hs1.s(hs0)\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","parent":["bj-df-clel","gen2","cleljust","diffss.ex","diff.hs2.s","diff.hs1.s","diff.hs0.s","diff.hs2.c","diff.hs1.c","diff.hs0.c"],"children":[]},{"name":"bj-ax9","content":"Proof of ~ ax-9 from Tarski's FOL=, ~ sp , ~ df-cleq and ~ ax-ext (with two extra disjoint variable conditions on ` x , z ` and ` y , z ` ). For a version without these disjoint variable conditions, see ~ bj-ax9-2 . This shows that ~ df-cleq is \"too powerful\". A possible definition is given by ~ bj-df-cleq . (Contributed by BJ, 24-Jun-2019.) (Proof modification is discouraged.)","origin":"thm bj-ax9(setvar s0, setvar s1, setvar s2) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  sylbi(wceq(cv(s0), cv(s1)), wi(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))), wal(s2, wb(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n  df-cleq(s2, hs0, hs1, cv(s0), cv(s1))\n  ax-ext(s2, hs0, hs1)\n  sps(s2, wb(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))), wi(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))))\n  biimp(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diffss.ex(s2, hs1)\n  diff.hs1.s(s2)\n  diff.hs0.s(hs1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm bj-ax9(setvar s0, setvar s1, setvar s2) {\n  ⊢ (s0 = s1 →(s2 ∈ s0 → s2 ∈ s1))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  sylbi(s0 = s1, (s2 ∈ s0 → s2 ∈ s1), ∀(s2,(s2 ∈ s0 ↔ s2 ∈ s1)))\n  df-cleq(s2, hs0, hs1, s0, s1)\n  ax-ext(s2, hs0, hs1)\n  sps(s2, (s2 ∈ s0 ↔ s2 ∈ s1), (s2 ∈ s0 → s2 ∈ s1))\n  biimp(s2 ∈ s0, s2 ∈ s1)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diffss.ex(s2, hs1)\n  diff.hs1.s(s2)\n  diff.hs0.s(hs1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["sylbi","df-cleq","ax-ext","sps","biimp","diffss.ex","diff.hs0.s","diff.hs1.s","diff.cv.s"],"children":[]},{"name":"bj-ax9-2","content":"Proof of ~ ax-9 from Tarski's FOL=, ~ ax-8 (specifically, ~ ax8v1 and ~ ax8v2 ) , ~ df-cleq and ~ ax-ext . For a version not using ~ ax-8 , see ~ bj-ax9 . This shows that ~ df-cleq is \"too powerful\". A possible definition is given by ~ bj-df-cleq . (Contributed by BJ, 24-Jun-2019.) (Proof modification is discouraged.)","origin":"thm bj-ax9-2(setvar s0, setvar s1, setvar s2) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))))\n} = {\n  syl(wceq(cv(s0), cv(s1)), wi(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))), wal(hs0, wi(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1)))))\n  sylg(hs0, wceq(cv(s0), cv(s1)), wi(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1))), wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1))))\n  biimpi(wceq(cv(s0), cv(s1)), wal(hs0, wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1)))))\n  df-cleq(hs0, hs1, hs2, cv(s0), cv(s1))\n  ax-ext(hs0, hs1, hs2)\n  biimp(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1)))\n  spimvw(hs0, s2, wi(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1))), wi(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))))\n  imim12d(wceq(cv(hs0), cv(s2)), wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1)), wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))\n  equcoms(hs0, s2, wi(wcel(cv(s2), cv(s0)), wcel(cv(hs0), cv(s0))))\n  ax8v2(s2, hs0, s0)\n  ax8v1(hs0, s2, s1)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(cv(s0))\n  diff.hs0.c(cv(s1))\n  diff.hs0.w(wi(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1))))\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.s(s0)\n  diff.hs0.s(s1)\n}","pretty":"thm bj-ax9-2(setvar s0, setvar s1, setvar s2) {\n  ⊢ (s0 = s1 →(s2 ∈ s0 → s2 ∈ s1))\n} = {\n  syl(s0 = s1, (s2 ∈ s0 → s2 ∈ s1), ∀(hs0,(hs0 ∈ s0 → hs0 ∈ s1)))\n  sylg(hs0, s0 = s1, (hs0 ∈ s0 → hs0 ∈ s1), (hs0 ∈ s0 ↔ hs0 ∈ s1))\n  biimpi(s0 = s1, ∀(hs0,(hs0 ∈ s0 ↔ hs0 ∈ s1)))\n  df-cleq(hs0, hs1, hs2, s0, s1)\n  ax-ext(hs0, hs1, hs2)\n  biimp(hs0 ∈ s0, hs0 ∈ s1)\n  spimvw(hs0, s2, (hs0 ∈ s0 → hs0 ∈ s1), (s2 ∈ s0 → s2 ∈ s1))\n  imim12d(hs0 = s2, hs0 ∈ s0, hs0 ∈ s1, s2 ∈ s0, s2 ∈ s1)\n  equcoms(hs0, s2, (s2 ∈ s0 → hs0 ∈ s0))\n  ax8v2(s2, hs0, s0)\n  ax8v1(hs0, s2, s1)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(s0)\n  diff.hs0.c(s1)\n  diff.hs0.w((s2 ∈ s0 → s2 ∈ s1))\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.s(s0)\n  diff.hs0.s(s1)\n}","parent":["syl","sylg","biimpi","df-cleq","ax-ext","biimp","spimvw","imim12d","equcoms","ax8v2","ax8v1","diff.hs0.s","diff.hs1.s","diff.hs0.c","diff.hs0.w","diffss.ex"],"children":[]},{"name":"bj-cleqhyp","content":"The hypothesis of ~ bj-df-cleq . Note that the hypothesis of ~ bj-df-cleq actually has an additional disjoint variable condition on ` x , y ` and therefore is provable by simply using ~ ax-ext in place of ~ axext3 in the current proof. (Contributed by BJ, 24-Jun-2019.) (Proof modification is discouraged.)","origin":"thm bj-cleqhyp(setvar s0, setvar s1, setvar s2) {\n  |- wb(wceq(cv(s0), cv(s1)), wal(s2, wb(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  impbii(wceq(cv(s0), cv(s1)), wal(s2, wb(wcel(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n  bj-elequ2g(s0, s1, s2)\n  axext3(s2, s0, s1)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n}","pretty":"thm bj-cleqhyp(setvar s0, setvar s1, setvar s2) {\n  ⊢ (s0 = s1 ↔ ∀(s2,(s2 ∈ s0 ↔ s2 ∈ s1)))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  impbii(s0 = s1, ∀(s2,(s2 ∈ s0 ↔ s2 ∈ s1)))\n  bj-elequ2g(s0, s1, s2)\n  axext3(s2, s0, s1)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n}","parent":["impbii","bj-elequ2g","axext3","diffss.ex"],"children":["bj-dfcleq"]},{"name":"bj-df-cleq","content":"Candidate definition for ~ df-cleq (the need for it is exposed in ~ bj-ax9 ). The similarity of the hypothesis ` |- A. u A. v ( u = v <-> A. w ( w e. u <-> w e. v ) ) ` and the conclusion makes it clear that this definition merely extends to class variables something that is true for setvar variables, hence is conservative. This definition should be directly referenced only by ~ bj-dfcleq , which should be used instead. The proof is irrelevant since this is a proposal for an axiom. Another definition, which would give finer control, is actually the pair of definitions where each has one implication of the present biconditional as hypothesis and conclusion. They assert that extensionality (respectively, the left-substitution axiom for the membership predicate) extends from setvars to classes. (Contributed by BJ, 24-Jun-2019.) (Proof modification is discouraged.)","origin":"thm bj-df-cleq(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1) {\n  |- wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1))))\n  -| wal(s1, wal(s2, wb(wceq(cv(s1), cv(s2)), wal(s3, wb(wcel(cv(s3), cv(s1)), wcel(cv(s3), cv(s2)))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n  -| diffsc(s3, c0)\n  -| diffsc(s3, c1)\n} = {\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), wal(s1, wal(s2, wb(wceq(cv(s1), cv(s2)), wal(s3, wb(wcel(cv(s3), cv(s1)), wcel(cv(s3), cv(s2))))))))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s0, s1))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s0, s2))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s0, s3))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s1, s2))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s1, s3))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffss(s2, s3))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s1, c0))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s1, c1))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s2, c0))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s2, c1))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s3, c0))\n  a1ii(wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1)))), diffsc(s3, c1))\n  dfcleq(s0, c0, c1)\n}","pretty":"thm bj-df-cleq(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1) {\n  ⊢ (c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1)))\n  ⊣ ∀(s1, ∀(s2,(s1 = s2 ↔ ∀(s3,(s3 ∈ s1 ↔ s3 ∈ s2)))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c1)\n  ⊣ d(s3, c0)\n  ⊣ d(s3, c1)\n} = {\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), ∀(s1, ∀(s2,(s1 = s2 ↔ ∀(s3,(s3 ∈ s1 ↔ s3 ∈ s2))))))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s0, s1))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s0, s2))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s0, s3))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s1, s2))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s1, s3))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s2, s3))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s1, c0))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s1, c1))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s2, c0))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s2, c1))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s3, c0))\n  a1ii((c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1))), d(s3, c1))\n  dfcleq(s0, c0, c1)\n}","parent":["a1ii","dfcleq"],"children":["bj-dfcleq"]},{"name":"bj-dfcleq","content":"Proof of class extensionality from the axiom of set extensionality ( ~ ax-ext ) and the definition of class equality ( ~ bj-df-cleq ). (Contributed by BJ, 24-Jun-2019.) (Proof modification is discouraged.)","origin":"thm bj-dfcleq(setvar s0, class c0, class c1) {\n  |- wb(wceq(c0, c1), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), c1))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  bj-df-cleq(s0, hs2, hs1, hs0, c0, c1)\n  gen2(hs2, hs1, wb(wceq(cv(hs2), cv(hs1)), wal(hs0, wb(wcel(cv(hs0), cv(hs2)), wcel(cv(hs0), cv(hs1))))))\n  bj-cleqhyp(hs2, hs1, hs0)\n  diffss.ex(s0, hs2)\n  diff.hs2.s(s0)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs2.s(hs1)\n  diff.hs2.s(hs0)\n  diff.hs1.s(hs0)\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","pretty":"thm bj-dfcleq(setvar s0, class c0, class c1) {\n  ⊢ (c0 = c1 ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ c1)))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  bj-df-cleq(s0, hs2, hs1, hs0, c0, c1)\n  gen2(hs2, hs1, (hs2 = hs1 ↔ ∀(hs0,(hs0 ∈ hs2 ↔ hs0 ∈ hs1))))\n  bj-cleqhyp(hs2, hs1, hs0)\n  diffss.ex(s0, hs2)\n  diff.hs2.s(s0)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs2.s(hs1)\n  diff.hs2.s(hs0)\n  diff.hs1.s(hs0)\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","parent":["bj-df-cleq","gen2","bj-cleqhyp","diffss.ex","diff.hs2.s","diff.hs1.s","diff.hs0.s","diff.hs2.c","diff.hs1.c","diff.hs0.c"],"children":[]}]}