{"index":1155,"title":"Elementwise operations","content":"","blocks":[{"name":"celwise","content":"Syntax for elementwise operations.","origin":"const class celwise { elwise }","pretty":"","parent":[],"children":[]},{"name":"diff.celwise.s","content":"","origin":"axiom diff.celwise.s(setvar s0) {\n  |- diffsc(s0, celwise)\n}","pretty":"axiom diff.celwise.s(setvar s0) {\n  ‚ä¢ d(s0, elwise)\n}","parent":[],"children":[]},{"name":"diff.celwise.c","content":"","origin":"axiom diff.celwise.c(class c0) {\n  |- diffcc(celwise, c0)\n}","pretty":"axiom diff.celwise.c(class c0) {\n  ‚ä¢ d(elwise, c0)\n}","parent":[],"children":[]},{"name":"diff.celwise.w","content":"","origin":"axiom diff.celwise.w(wff w0) {\n  |- diffcw(celwise, w0)\n}","pretty":"axiom diff.celwise.w(wff w0) {\n  ‚ä¢ d(elwise, w0)\n}","parent":[],"children":[]},{"name":"df-elwise","content":"Define the elementwise operation associated with a given operation. For instance, ` + ` is the addition of complex numbers ( ~ axaddf ), so if ` A ` and ` B ` are sets of complex numbers, then ` ( A ( elwise `` + ) B ) ` is the set of numbers of the form ` ( x + y ) ` with ` x e. A ` and ` y e. B ` . The set of odd natural numbers is ` ( ( { 2 } ( elwise `` x. ) NN0 ) ( elwise `` + ) { 1 } ) ` , or less formally ` 2 NN0 + 1 ` . (Contributed by BJ, 22-Dec-2021.)","origin":"axiom df-elwise(setvar s0, setvar s1, setvar s2, setvar s3, setvar s4, setvar s5) {\n  |- wceq(celwise, cmpt(s0, universe, cmpo(s1, s2, universe, universe, cab(s3, wrex(s4, cv(s1), wrex(s5, cv(s2), wceq(cv(s3), co(cv(s4), cv(s0), cv(s5)))))))))\n  -| diffss(s0, s4)\n  -| diffss(s0, s5)\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s4, s5)\n  -| diffss(s1, s4)\n  -| diffss(s2, s4)\n  -| diffss(s3, s4)\n  -| diffss(s1, s5)\n  -| diffss(s2, s5)\n  -| diffss(s3, s5)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n}","pretty":"axiom df-elwise(setvar s0, setvar s1, setvar s2, setvar s3, setvar s4, setvar s5) {\n  ‚ä¢ elwise =(s0 ‚àà ùïå ‚Ü¶(s1 ‚àà ùïå, s2 ‚àà ùïå ‚Ü¶ { s3 | ‚àÉ(s4 ‚àà s1, ‚àÉ(s5 ‚àà s2, s3 =(s4[s0]s5)))}))\n  ‚ä£ d(s0, s4)\n  ‚ä£ d(s0, s5)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s0, s3)\n  ‚ä£ d(s4, s5)\n  ‚ä£ d(s1, s4)\n  ‚ä£ d(s2, s4)\n  ‚ä£ d(s3, s4)\n  ‚ä£ d(s1, s5)\n  ‚ä£ d(s2, s5)\n  ‚ä£ d(s3, s5)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s1, s3)\n  ‚ä£ d(s2, s3)\n}","parent":[],"children":[""]}]}