{"index":108,"title":"Ordered-pair class abstractions (class builders)","content":"","blocks":[{"name":"copab","content":"Extend class notation to include ordered-pair class abstraction (class builder).","origin":"prop class copab(setvar s0, setvar s1, wff w0) { { < s0, s1 > | w0 } }","pretty":"","parent":[],"children":[]},{"name":"diff.copab.s","content":"","origin":"axiom diff.copab.s(setvar sBase, setvar s0, setvar s1, wff w0) {\n  |- diffsc(sBase, copab(s0, s1, w0))\n  -| diffss(sBase, s0)\n  -| diffss(sBase, s1)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.copab.s(setvar sBase, setvar s0, setvar s1, wff w0) {\n  ⊢ d(sBase, { < s0, s1 > | w0 })\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, s1)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.copab.c","content":"","origin":"axiom diff.copab.c(class cBase, setvar s0, setvar s1, wff w0) {\n  |- diffcc(cBase, copab(s0, s1, w0))\n  -| diffsc(s0, cBase)\n  -| diffsc(s1, cBase)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.copab.c(class cBase, setvar s0, setvar s1, wff w0) {\n  ⊢ d(cBase, { < s0, s1 > | w0 })\n  ⊣ d(s0, cBase)\n  ⊣ d(s1, cBase)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.copab.w","content":"","origin":"axiom diff.copab.w(wff wBase, setvar s0, setvar s1, wff w0) {\n  |- diffcw(copab(s0, s1, w0), wBase)\n  -| diffsw(s0, wBase)\n  -| diffsw(s1, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.copab.w(wff wBase, setvar s0, setvar s1, wff w0) {\n  ⊢ d({ < s0, s1 > | w0 }, wBase)\n  ⊣ d(s0, wBase)\n  ⊣ d(s1, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"df-opab","content":"Define the class abstraction of a collection of ordered pairs. Definition 3.3 of [Monk1] p. 34. Usually ` x ` and ` y ` are distinct, although the definition doesn't strictly require it (see ~ dfid2 for a case where they are not distinct). The brace notation is called \"class abstraction\" by Quine; it is also (more commonly) called a \"class builder\" in the literature. An alternate definition using no existential quantifiers is shown by ~ dfopab2 . For example, ` R = { <. x , y >. | ( x e. CC /\\ y e. CC /\\ ( x + 1 ) = y ) } ` ` -> 3 R 4 ` ( ~ ex-opab ). (Contributed by NM, 4-Jul-1994.)","origin":"axiom df-opab(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wceq(copab(s0, s1, w0), cab(s2, wex(s0, wex(s1, wa(wceq(cv(s2), cop(cv(s0), cv(s1))), w0)))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s2, w0)\n}","pretty":"axiom df-opab(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ { < s0, s1 > | w0 } = { s2 | ∃(s0, ∃(s1,(s2 = < s0, s1 > ∧ w0)))}\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s2, w0)\n}","parent":[],"children":["opabss","opabbid","nfopab","nfopab1","nfopab2","cbvopab","cbvopab1","cbvopab2","cbvopab1s","cbvopab2v","unopab","opabid","elopab","ssopab2","iunopab","dfid3","elxpi","rabxp","csbxp","ssrel","relopabi","relopabiALT","opabssxpd","cnv0","dfoprab2","dmoprab","dfopab2","brdom7disj","brdom6disj","opabssi","cnvoprabOLD","cnfinltrel","rnxrn","dropab1","dropab2","csbxpgVD","relopabVD"]},{"name":"opabss","content":"The collection of ordered pairs in a class is a subclass of it. (Contributed by NM, 27-Dec-1996.) (Proof shortened by Andrew Salmon, 9-Jul-2011.)","origin":"thm opabss(setvar s0, setvar s1, class c0) {\n  |- wss(copab(s0, s1, wbr(cv(s0), c0, cv(s1))), c0)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  eqsstri(copab(s0, s1, wbr(cv(s0), c0, cv(s1))), c0, cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wbr(cv(s0), c0, cv(s1)))))))\n  df-opab(s0, s1, hs0, wbr(cv(s0), c0, cv(s1)))\n  abssi(hs0, c0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wbr(cv(s0), c0, cv(s1))))))\n  exlimivv(s0, s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wbr(cv(s0), c0, cv(s1))), wcel(cv(hs0), c0))\n  sylan2b(wceq(cv(hs0), cop(cv(s0), cv(s1))), wbr(cv(s0), c0, cv(s1)), wcel(cv(hs0), c0), wcel(cop(cv(s0), cv(s1)), c0))\n  df-br(cv(s0), c0, cv(s1))\n  biimpar(wceq(cv(hs0), cop(cv(s0), cv(s1))), wcel(cop(cv(s0), cv(s1)), c0), wcel(cv(hs0), c0))\n  eleq1(cv(hs0), cop(cv(s0), cv(s1)), c0)\n  diff.hs0.w(wbr(cv(s0), c0, cv(s1)))\n  diff.hs0.c(c0)\n  diff.wcel.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wcel.s(s1, cv(hs0), c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","pretty":"thm opabss(setvar s0, setvar s1, class c0) {\n  ⊢ { < s0, s1 > | s0[c0]s1 } ⊆ c0\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  eqsstri({ < s0, s1 > | s0[c0]s1 }, c0, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ s0[c0]s1)))})\n  df-opab(s0, s1, hs0, s0[c0]s1)\n  abssi(hs0, c0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ s0[c0]s1))))\n  exlimivv(s0, s1, (hs0 = < s0, s1 > ∧ s0[c0]s1), hs0 ∈ c0)\n  sylan2b(hs0 = < s0, s1 >, s0[c0]s1, hs0 ∈ c0, < s0, s1 > ∈ c0)\n  df-br(s0, c0, s1)\n  biimpar(hs0 = < s0, s1 >, < s0, s1 > ∈ c0, hs0 ∈ c0)\n  eleq1(hs0, < s0, s1 >, c0)\n  diff.hs0.w(s0[c0]s1)\n  diff.hs0.c(c0)\n  diff.wcel.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wcel.s(s1, hs0, c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","parent":["eqsstri","df-opab","abssi","exlimivv","sylan2b","df-br","biimpar","eleq1","diff.hs0.w","diff.hs0.c","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["aceq3lem","fullfunc","fthfunc","isfull","isfth"]},{"name":"opabbid","content":"Equivalent wff's yield equal ordered-pair class abstractions (deduction form). (Contributed by NM, 21-Feb-2004.) (Proof shortened by Andrew Salmon, 9-Jul-2011.)","origin":"thm opabbid(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wceq(copab(s0, s1, w1), copab(s0, s1, w2)))\n  -| wnf(s0, w0)\n  -| wnf(s1, w0)\n  -| wi(w0, wb(w1, w2))\n} = {\n  3eqtr4g(copab(s0, s1, w1), copab(s0, s1, w2), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)))), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w2)))), w0)\n  abbidv(hs0, w0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))), wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w2))))\n  exbid(s0, w0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)), wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w2)))\n  exbid(s1, w0, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1), wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w2))\n  anbi2d(w0, wceq(cv(hs0), cop(cv(s0), cv(s1))), w1, w2)\n  df-opab(s0, s1, hs0, w1)\n  df-opab(s0, s1, hs0, w2)\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w1)\n  diff.hs0.w(w2)\n}","pretty":"thm opabbid(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → { < s0, s1 > | w1 } = { < s0, s1 > | w2 })\n  ⊣ F/(s0, w0)\n  ⊣ F/(s1, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  3eqtr4g({ < s0, s1 > | w1 }, { < s0, s1 > | w2 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1)))}, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w2)))}, w0)\n  abbidv(hs0, w0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1))), ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w2))))\n  exbid(s0, w0, ∃(s1,(hs0 = < s0, s1 > ∧ w1)), ∃(s1,(hs0 = < s0, s1 > ∧ w2)))\n  exbid(s1, w0, (hs0 = < s0, s1 > ∧ w1), (hs0 = < s0, s1 > ∧ w2))\n  anbi2d(w0, hs0 = < s0, s1 >, w1, w2)\n  df-opab(s0, s1, hs0, w1)\n  df-opab(s0, s1, hs0, w2)\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w1)\n  diff.hs0.w(w2)\n}","parent":["3eqtr4g","abbidv","exbid","anbi2d","df-opab","diff.hs0.w","diffss.ex","diff.hs0.s"],"children":["opabbidv","mpteq12f","mpteq12df","feqmptdf","fnoprabg","sprsymrelfo"]},{"name":"opabbidv","content":"Equivalent wff's yield equal ordered-pair class abstractions (deduction form). (Contributed by NM, 15-May-1995.)","origin":"thm opabbidv(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wceq(copab(s0, s1, w1), copab(s0, s1, w2)))\n  -| wi(w0, wb(w1, w2))\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n} = {\n  opabbid(s0, s1, w0, w1, w2)\n  nfv(s0, w0)\n  nfv(s1, w0)\n}","pretty":"thm opabbidv(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → { < s0, s1 > | w1 } = { < s0, s1 > | w2 })\n  ⊣ (w0 →(w1 ↔ w2))\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n} = {\n  opabbid(s0, s1, w0, w1, w2)\n  nfv(s0, w0)\n  nfv(s1, w0)\n}","parent":["opabbid","nfv"],"children":["opabbii","csbopab","csbopabgALT","csbmpt12","xpeq1","xpeq2","opabbi2dv","csbcnvgALT","resopab2","mptcnv","cores","xpco","dffn5","f1oiso2","fvmptopab","f1ocnvd","ofreq","mptmpt2opabbrd","bropopvvv","bropfvvvv","fnwelem","sprmpt2d","mpt2curryd","wemapwe","xpcogend","shftfval","2shfti","prdsval","pwsle","sectffval","sectfval","isfunc","isfull","isfth","ipoval","eqgfval","dvdsrval","dvdsrpropd","ltbval","opsrval","lmfval","xkocnv","tgphaus","isphtpc","bcthlem1","bcth","ulmval","lgsquadlem3","iscgrg","legval","ishlg","perpln1","perpln2","isperp","ishpg","iscgra","isinag","isleag","wksfval","upgrtrls","upgrspthswlk","ajfval","f1o3d","f1od2","inftmrel","isinftm","metidval","faeval","eulerpartlemgvv","eulerpart","afsval","cureq","curf","curunc","fnopabeqd","cosseq","lcvfbr","cmtfvalN","cvrfval","dicffval","dicfval","dicval","prjspval","prjspnval2","0prjspn","dnwech","aomclem8","rfovcnvfvd","fsovrfovd","dfafn5a","sprsymrelfv","sprsymrelfo","upwlksfval"]},{"name":"opabbii","content":"Equivalent wff's yield equal class abstractions. (Contributed by NM, 15-May-1995.)","origin":"thm opabbii(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wceq(copab(s0, s1, w0), copab(s0, s1, w1))\n  -| wb(w0, w1)\n} = {\n  ax-mp(wceq(copab(s0, s1, w0), copab(s0, s1, w1)), wceq(cv(hs0), cv(hs0)))\n  eqid(cv(hs0))\n  opabbidv(s0, s1, wceq(cv(hs0), cv(hs0)), w0, w1)\n  a1i(wceq(cv(hs0), cv(hs0)), wb(w0, w1))\n  diff.wceq.s(s0, cv(hs0), cv(hs0))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wceq.s(s1, cv(hs0), cv(hs0))\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","pretty":"thm opabbii(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ { < s0, s1 > | w0 } = { < s0, s1 > | w1 }\n  ⊣ (w0 ↔ w1)\n} = {\n  ax-mp({ < s0, s1 > | w0 } = { < s0, s1 > | w1 }, hs0 = hs0)\n  eqid(hs0)\n  opabbidv(s0, s1, hs0 = hs0, w0, w1)\n  a1i(hs0 = hs0, (w0 ↔ w1))\n  diff.wceq.s(s0, hs0, hs0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wceq.s(s1, hs0, hs0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","parent":["ax-mp","eqid","opabbidv","a1i","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["mptv","2rbropap","dfid4","fconstmpt","xpundi","xpundir","inxp","csbcnv","cnvco","resopab","opabresid","cnvi","cnvun","cnvxp","cnvcnv3","coundi","coundir","mptun","fvopab6","fmptsng","fmptsnd","cbvoprab1","cbvoprab12","dmoprabss","mpt2mptx","resoprab","elrnmpt2res","ov6g","1st2val","2nd2val","dfoprab3s","dfoprab3","dfoprab4","opabn1stprc","mptmpt2opabbrd","fsplit","mapsncnv","xpcomco","marypha2lem2","oemapso","leweon","r0weon","compsscnv","fpwwe","ltrelxr","ltxrlt","ltxr","shftidt2","prdsle","prdsless","prdsleval","dfiso2","joindm","meetdm","gaorb","efgcpbllema","frgpuplem","ltbval","ltbwe","opsrle","opsrtoslem1","opsrtoslem2","dvdsrzring","pjfval2","lmfval","lmbr","lgsquadlem3","perpln1","outpasch","ishpg","axcontlem2","wksfval","wlkson","pthsfval","ispth","dfadj2","dmadjss","cnvadj","mpt2mptxf","fneer","bj-dfmpt2a","bj-mpt2mptALT","cnfinltrel","opropabco","cnvepres","inxp2","xrninxp","xrninxp2","rnxrnres","rnxrncnvepres","rnxrnidres","dfcoss2","dfcoss3","1cossres","dfcoels","br1cosscnvxrn","1cosscnvxrn","coss0","cossid","dfssr2","cmtfvalN","cmtvalN","cvrfval","cvrval","dicval2","fgraphopab","fgraphxp","dfnelbr2","opabbrfex0d","opabbrfexd","upwlksfval","xpsnopab","mpt2mptx2"]},{"name":"nfopab","content":"Bound-variable hypothesis builder for class abstraction. (Contributed by NM, 1-Sep-1999.) Remove disjoint variable conditions. (Revised by Andrew Salmon, 11-Jul-2011.)","origin":"thm nfopab(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wnfc(s0, copab(s1, s2, w0))\n  -| wnf(s0, w0)\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n} = {\n  nfcxfr(s0, copab(s1, s2, w0), cab(hs0, wex(s1, wex(s2, wa(wceq(cv(hs0), cop(cv(s1), cv(s2))), w0)))))\n  df-opab(s1, s2, hs0, w0)\n  nfab(s0, hs0, wex(s1, wex(s2, wa(wceq(cv(hs0), cop(cv(s1), cv(s2))), w0))))\n  nfex(s0, s1, wex(s2, wa(wceq(cv(hs0), cop(cv(s1), cv(s2))), w0)))\n  nfex(s0, s2, wa(wceq(cv(hs0), cop(cv(s1), cv(s2))), w0))\n  nfan(s0, wceq(cv(hs0), cop(cv(s1), cv(s2))), w0)\n  nfv(s0, wceq(cv(hs0), cop(cv(s1), cv(s2))))\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w0)\n  diff.wceq.s(s0, cv(hs0), cop(cv(s1), cv(s2)))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cop.s(s0, cv(s1), cv(s2))\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, s2)\n}","pretty":"thm nfopab(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ F/(s0, { < s1, s2 > | w0 })\n  ⊣ F/(s0, w0)\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n} = {\n  nfcxfr(s0, { < s1, s2 > | w0 }, { hs0 | ∃(s1, ∃(s2,(hs0 = < s1, s2 > ∧ w0)))})\n  df-opab(s1, s2, hs0, w0)\n  nfab(s0, hs0, ∃(s1, ∃(s2,(hs0 = < s1, s2 > ∧ w0))))\n  nfex(s0, s1, ∃(s2,(hs0 = < s1, s2 > ∧ w0)))\n  nfex(s0, s2, (hs0 = < s1, s2 > ∧ w0))\n  nfan(s0, hs0 = < s1, s2 >, w0)\n  nfv(s0, hs0 = < s1, s2 >)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w0)\n  diff.wceq.s(s0, hs0, < s1, s2 >)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cop.s(s0, s1, s2)\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, s2)\n}","parent":["nfcxfr","df-opab","nfab","nfex","nfan","nfv","diffss.ex","diff.hs0.s","diff.hs0.w","diff.wceq.s","diff.cv.s","diff.cop.s"],"children":["nfmpt","csbopab","csbopabgALT","nfxp","nfco","nfcnv","nfofr"]},{"name":"nfopab1","content":"The first abstraction variable in an ordered-pair class abstraction (class builder) is effectively not free. (Contributed by NM, 16-May-1995.) (Revised by Mario Carneiro, 14-Oct-2016.)","origin":"thm nfopab1(setvar s0, setvar s1, wff w0) {\n  |- wnfc(s0, copab(s0, s1, w0))\n} = {\n  nfcxfr(s0, copab(s0, s1, w0), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))))\n  df-opab(s0, s1, hs0, w0)\n  nfab(s0, hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))))\n  nfe1(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n}","pretty":"thm nfopab1(setvar s0, setvar s1, wff w0) {\n  ⊢ F/(s0, { < s0, s1 > | w0 })\n} = {\n  nfcxfr(s0, { < s0, s1 > | w0 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))})\n  df-opab(s0, s1, hs0, w0)\n  nfab(s0, hs0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))))\n  nfe1(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n}","parent":["nfcxfr","df-opab","nfab","nfe1","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["nfmpt1","opelopabsb","ssopab2b","0nelopab","dmopab","rnopab","funopab","fvopab5","zfrep6","opabdm","opabrn","fpwrelmap","vvdifopab","aomclem8","sprsymrelf"]},{"name":"nfopab2","content":"The second abstraction variable in an ordered-pair class abstraction (class builder) is effectively not free. (Contributed by NM, 16-May-1995.) (Revised by Mario Carneiro, 14-Oct-2016.)","origin":"thm nfopab2(setvar s0, setvar s1, wff w0) {\n  |- wnfc(s0, copab(s1, s0, w0))\n} = {\n  nfcxfr(s0, copab(s1, s0, w0), cab(hs0, wex(s1, wex(s0, wa(wceq(cv(hs0), cop(cv(s1), cv(s0))), w0)))))\n  df-opab(s1, s0, hs0, w0)\n  nfab(s0, hs0, wex(s1, wex(s0, wa(wceq(cv(hs0), cop(cv(s1), cv(s0))), w0))))\n  nfex(s0, s1, wex(s0, wa(wceq(cv(hs0), cop(cv(s1), cv(s0))), w0)))\n  nfe1(s0, wa(wceq(cv(hs0), cop(cv(s1), cv(s0))), w0))\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","pretty":"thm nfopab2(setvar s0, setvar s1, wff w0) {\n  ⊢ F/(s0, { < s1, s0 > | w0 })\n} = {\n  nfcxfr(s0, { < s1, s0 > | w0 }, { hs0 | ∃(s1, ∃(s0,(hs0 = < s1, s0 > ∧ w0)))})\n  df-opab(s1, s0, hs0, w0)\n  nfab(s0, hs0, ∃(s1, ∃(s0,(hs0 = < s1, s0 > ∧ w0))))\n  nfex(s0, s1, ∃(s0,(hs0 = < s1, s0 > ∧ w0)))\n  nfe1(s0, (hs0 = < s1, s0 > ∧ w0))\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","parent":["nfcxfr","df-opab","nfab","nfex","nfe1","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["opelopabsb","ssopab2b","0nelopab","dmopab","rnopab","funopab","fvopab5","zfrep6","opabdm","opabrn","fpwrelmap","vvdifopab","aomclem8","areaquad","sprsymrelf"]},{"name":"cbvopab","content":"Rule used to change bound variables in an ordered-pair class abstraction, using implicit substitution. (Contributed by NM, 14-Sep-2003.)","origin":"thm cbvopab(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1) {\n  |- wceq(copab(s0, s1, w0), copab(s2, s3, w1))\n  -| wnf(s2, w0)\n  -| wnf(s3, w0)\n  -| wnf(s0, w1)\n  -| wnf(s1, w1)\n  -| wi(wa(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s3))), wb(w0, w1))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n} = {\n  3eqtr4i(copab(s0, s1, w0), copab(s2, s3, w1), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s2, wex(s3, wa(wceq(cv(hs0), cop(cv(s2), cv(s3))), w1)))))\n  abbii(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s2, wex(s3, wa(wceq(cv(hs0), cop(cv(s2), cv(s3))), w1))))\n  cbvex2(s0, s1, s2, s3, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(s2), cv(s3))), w1))\n  nfan(s2, wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)\n  nfv(s2, wceq(cv(hs0), cop(cv(s0), cv(s1))))\n  nfan(s3, wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)\n  nfv(s3, wceq(cv(hs0), cop(cv(s0), cv(s1))))\n  nfan(s0, wceq(cv(hs0), cop(cv(s2), cv(s3))), w1)\n  nfv(s0, wceq(cv(hs0), cop(cv(s2), cv(s3))))\n  nfan(s1, wceq(cv(hs0), cop(cv(s2), cv(s3))), w1)\n  nfv(s1, wceq(cv(hs0), cop(cv(s2), cv(s3))))\n  anbi12d(wa(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s3))), wceq(cv(hs0), cop(cv(s0), cv(s1))), w0, wceq(cv(hs0), cop(cv(s2), cv(s3))), w1)\n  eqeq2d(cv(hs0), cop(cv(s0), cv(s1)), cop(cv(s2), cv(s3)), wa(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s3))))\n  opeq12(cv(s0), cv(s2), cv(s1), cv(s3))\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s2, s3, hs0, w1)\n  diff.wceq.s(s2, cv(hs0), cop(cv(s0), cv(s1)))\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.wceq.s(s3, cv(hs0), cop(cv(s0), cv(s1)))\n  diff.cv.s(s3, hs0)\n  diff.cop.s(s3, cv(s0), cv(s1))\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.wceq.s(s0, cv(hs0), cop(cv(s2), cv(s3)))\n  diff.cv.s(s0, hs0)\n  diff.cop.s(s0, cv(s2), cv(s3))\n  diff.cv.s(s0, s2)\n  diff.cv.s(s0, s3)\n  diff.wceq.s(s1, cv(hs0), cop(cv(s2), cv(s3)))\n  diff.cv.s(s1, hs0)\n  diff.cop.s(s1, cv(s2), cv(s3))\n  diff.cv.s(s1, s2)\n  diff.cv.s(s1, s3)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diffss.ex(s3, hs0)\n  diff.hs0.s(s3)\n  diff.hs0.w(w1)\n}","pretty":"thm cbvopab(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1) {\n  ⊢ { < s0, s1 > | w0 } = { < s2, s3 > | w1 }\n  ⊣ F/(s2, w0)\n  ⊣ F/(s3, w0)\n  ⊣ F/(s0, w1)\n  ⊣ F/(s1, w1)\n  ⊣ ((s0 = s2 ∧ s1 = s3)→(w0 ↔ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n} = {\n  3eqtr4i({ < s0, s1 > | w0 }, { < s2, s3 > | w1 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))}, { hs0 | ∃(s2, ∃(s3,(hs0 = < s2, s3 > ∧ w1)))})\n  abbii(hs0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))), ∃(s2, ∃(s3,(hs0 = < s2, s3 > ∧ w1))))\n  cbvex2(s0, s1, s2, s3, (hs0 = < s0, s1 > ∧ w0), (hs0 = < s2, s3 > ∧ w1))\n  nfan(s2, hs0 = < s0, s1 >, w0)\n  nfv(s2, hs0 = < s0, s1 >)\n  nfan(s3, hs0 = < s0, s1 >, w0)\n  nfv(s3, hs0 = < s0, s1 >)\n  nfan(s0, hs0 = < s2, s3 >, w1)\n  nfv(s0, hs0 = < s2, s3 >)\n  nfan(s1, hs0 = < s2, s3 >, w1)\n  nfv(s1, hs0 = < s2, s3 >)\n  anbi12d((s0 = s2 ∧ s1 = s3), hs0 = < s0, s1 >, w0, hs0 = < s2, s3 >, w1)\n  eqeq2d(hs0, < s0, s1 >, < s2, s3 >, (s0 = s2 ∧ s1 = s3))\n  opeq12(s0, s2, s1, s3)\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s2, s3, hs0, w1)\n  diff.wceq.s(s2, hs0, < s0, s1 >)\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.wceq.s(s3, hs0, < s0, s1 >)\n  diff.cv.s(s3, hs0)\n  diff.cop.s(s3, s0, s1)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.wceq.s(s0, hs0, < s2, s3 >)\n  diff.cv.s(s0, hs0)\n  diff.cop.s(s0, s2, s3)\n  diff.cv.s(s0, s2)\n  diff.cv.s(s0, s3)\n  diff.wceq.s(s1, hs0, < s2, s3 >)\n  diff.cv.s(s1, hs0)\n  diff.cop.s(s1, s2, s3)\n  diff.cv.s(s1, s2)\n  diff.cv.s(s1, s3)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diffss.ex(s3, hs0)\n  diff.hs0.s(s3)\n  diff.hs0.w(w1)\n}","parent":["3eqtr4i","abbii","cbvex2","nfan","nfv","anbi12d","eqeq2d","opeq12","df-opab","diff.wceq.s","diff.cv.s","diff.cop.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["cbvopabv","dfrel4","aomclem8"]},{"name":"cbvopabv","content":"Rule used to change bound variables in an ordered-pair class abstraction, using implicit substitution. (Contributed by NM, 15-Oct-1996.)","origin":"thm cbvopabv(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1) {\n  |- wceq(copab(s0, s1, w0), copab(s2, s3, w1))\n  -| wi(wa(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s3))), wb(w0, w1))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n  -| diffsw(s0, w1)\n  -| diffsw(s1, w1)\n  -| diffsw(s2, w0)\n  -| diffsw(s3, w0)\n} = {\n  cbvopab(s0, s1, s2, s3, w0, w1)\n  nfv(s2, w0)\n  nfv(s3, w0)\n  nfv(s0, w1)\n  nfv(s1, w1)\n}","pretty":"thm cbvopabv(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1) {\n  ⊢ { < s0, s1 > | w0 } = { < s2, s3 > | w1 }\n  ⊣ ((s0 = s2 ∧ s1 = s3)→(w0 ↔ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n  ⊣ d(s0, w1)\n  ⊣ d(s1, w1)\n  ⊣ d(s2, w0)\n  ⊣ d(s3, w0)\n} = {\n  cbvopab(s0, s1, s2, s3, w0, w1)\n  nfv(s2, w0)\n  nfv(s3, w0)\n  nfv(s0, w1)\n  nfv(s1, w1)\n}","parent":["cbvopab","nfv"],"children":["cantnf","infxpen","axdc2","fpwwe2cbv","fpwwecbv","sylow1","bcth","vitali","lgsquadlem3","lgsquad","islnopp","ishpg","hpgbr","trgcopy","trgcopyeu","acopyeu","tgasa1","axcontlem1","eulerpartlemgvv","eulerpart","cvmlift2lem13","pellex","aomclem8","sprsymrelf"]},{"name":"cbvopab1","content":"Change first bound variable in an ordered-pair class abstraction, using explicit substitution. (Contributed by NM, 6-Oct-2004.) (Revised by Mario Carneiro, 14-Oct-2016.)","origin":"thm cbvopab1(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  |- wceq(copab(s0, s1, w0), copab(s2, s1, w1))\n  -| wnf(s2, w0)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s2)), wb(w0, w1))\n  -| diffss(s0, s1)\n  -| diffss(s1, s2)\n} = {\n  3eqtr4i(copab(s0, s1, w0), copab(s2, s1, w1), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s2, wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), w1)))))\n  abbii(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s2, wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), w1))))\n  bitri(wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s2, wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), w1))), wex(hs1, wex(s1, wa(wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0)))))\n  cbvexv1(s0, hs1, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s1, wa(wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0))))\n  nfv(hs1, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))\n  nfex(s0, s1, wa(wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0)))\n  nfan(s0, wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0))\n  nfv(s0, wceq(cv(hs0), cop(cv(hs1), cv(s1))))\n  nfs1v(s0, hs1, w0)\n  exbidv(s1, wceq(cv(s0), cv(hs1)), wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0)))\n  anbi12d(wceq(cv(s0), cv(hs1)), wceq(cv(hs0), cop(cv(s0), cv(s1))), w0, wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0))\n  eqeq2d(cv(hs0), cop(cv(s0), cv(s1)), cop(cv(hs1), cv(s1)), wceq(cv(s0), cv(hs1)))\n  opeq1(cv(s0), cv(hs1), cv(s1))\n  sbequ12(s0, hs1, w0)\n  cbvexv1(hs1, s2, wex(s1, wa(wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0))), wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), w1)))\n  nfex(s2, s1, wa(wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0)))\n  nfan(s2, wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0))\n  nfv(s2, wceq(cv(hs0), cop(cv(hs1), cv(s1))))\n  nfsb(s2, hs1, s0, w0)\n  nfv(hs1, wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), w1)))\n  exbidv(s1, wceq(cv(hs1), cv(s2)), wa(wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0)), wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), w1))\n  anbi12d(wceq(cv(hs1), cv(s2)), wceq(cv(hs0), cop(cv(hs1), cv(s1))), wsb(hs1, s0, w0), wceq(cv(hs0), cop(cv(s2), cv(s1))), w1)\n  eqeq2d(cv(hs0), cop(cv(hs1), cv(s1)), cop(cv(s2), cv(s1)), wceq(cv(hs1), cv(s2)))\n  opeq1(cv(hs1), cv(s2), cv(s1))\n  syl6bb(wceq(cv(hs1), cv(s2)), wsb(hs1, s0, w0), w1, wsb(s2, s0, w0))\n  sbequ(hs1, s2, s0, w0)\n  sbie(s2, s0, w0, w1)\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s2, s1, hs0, w1)\n  diff.hs1.w(wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))\n  diff.wceq.s(s0, cv(hs0), cop(cv(hs1), cv(s1)))\n  diff.cv.s(s0, hs0)\n  diff.cop.s(s0, cv(hs1), cv(s1))\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cv.s(s0, s1)\n  diff.wceq.s(s1, cv(s0), cv(hs1))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.wceq.s(s2, cv(hs0), cop(cv(hs1), cv(s1)))\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, cv(hs1), cv(s1))\n  diff.cv.s(s2, hs1)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diffss.ex(s2, hs1)\n  diff.hs1.s(s2)\n  diff.hs1.w(wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), w1)))\n  diff.wceq.s(s1, cv(hs1), cv(s2))\n  diff.cv.s(s1, hs1)\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n  diff.cv.s(s1, s2)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w1)\n}","pretty":"thm cbvopab1(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  ⊢ { < s0, s1 > | w0 } = { < s2, s1 > | w1 }\n  ⊣ F/(s2, w0)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s2 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, s2)\n} = {\n  3eqtr4i({ < s0, s1 > | w0 }, { < s2, s1 > | w1 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))}, { hs0 | ∃(s2, ∃(s1,(hs0 = < s2, s1 > ∧ w1)))})\n  abbii(hs0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))), ∃(s2, ∃(s1,(hs0 = < s2, s1 > ∧ w1))))\n  bitri(∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))), ∃(s2, ∃(s1,(hs0 = < s2, s1 > ∧ w1))), ∃(hs1, ∃(s1,(hs0 = < hs1, s1 > ∧[hs1 / s0]w0))))\n  cbvexv1(s0, hs1, ∃(s1,(hs0 = < s0, s1 > ∧ w0)), ∃(s1,(hs0 = < hs1, s1 > ∧[hs1 / s0]w0)))\n  nfv(hs1, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))\n  nfex(s0, s1, (hs0 = < hs1, s1 > ∧[hs1 / s0]w0))\n  nfan(s0, hs0 = < hs1, s1 >, [hs1 / s0]w0)\n  nfv(s0, hs0 = < hs1, s1 >)\n  nfs1v(s0, hs1, w0)\n  exbidv(s1, s0 = hs1, (hs0 = < s0, s1 > ∧ w0), (hs0 = < hs1, s1 > ∧[hs1 / s0]w0))\n  anbi12d(s0 = hs1, hs0 = < s0, s1 >, w0, hs0 = < hs1, s1 >, [hs1 / s0]w0)\n  eqeq2d(hs0, < s0, s1 >, < hs1, s1 >, s0 = hs1)\n  opeq1(s0, hs1, s1)\n  sbequ12(s0, hs1, w0)\n  cbvexv1(hs1, s2, ∃(s1,(hs0 = < hs1, s1 > ∧[hs1 / s0]w0)), ∃(s1,(hs0 = < s2, s1 > ∧ w1)))\n  nfex(s2, s1, (hs0 = < hs1, s1 > ∧[hs1 / s0]w0))\n  nfan(s2, hs0 = < hs1, s1 >, [hs1 / s0]w0)\n  nfv(s2, hs0 = < hs1, s1 >)\n  nfsb(s2, hs1, s0, w0)\n  nfv(hs1, ∃(s1,(hs0 = < s2, s1 > ∧ w1)))\n  exbidv(s1, hs1 = s2, (hs0 = < hs1, s1 > ∧[hs1 / s0]w0), (hs0 = < s2, s1 > ∧ w1))\n  anbi12d(hs1 = s2, hs0 = < hs1, s1 >, [hs1 / s0]w0, hs0 = < s2, s1 >, w1)\n  eqeq2d(hs0, < hs1, s1 >, < s2, s1 >, hs1 = s2)\n  opeq1(hs1, s2, s1)\n  syl6bb(hs1 = s2, [hs1 / s0]w0, w1, [s2 / s0]w0)\n  sbequ(hs1, s2, s0, w0)\n  sbie(s2, s0, w0, w1)\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s2, s1, hs0, w1)\n  diff.hs1.w(∃(s1,(hs0 = < s0, s1 > ∧ w0)))\n  diff.wceq.s(s0, hs0, < hs1, s1 >)\n  diff.cv.s(s0, hs0)\n  diff.cop.s(s0, hs1, s1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cv.s(s0, s1)\n  diff.wceq.s(s1, s0, hs1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.wceq.s(s2, hs0, < hs1, s1 >)\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, hs1, s1)\n  diff.cv.s(s2, hs1)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diffss.ex(s2, hs1)\n  diff.hs1.s(s2)\n  diff.hs1.w(∃(s1,(hs0 = < s2, s1 > ∧ w1)))\n  diff.wceq.s(s1, hs1, s2)\n  diff.cv.s(s1, hs1)\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n  diff.cv.s(s1, s2)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w1)\n}","parent":["3eqtr4i","abbii","bitri","cbvexv1","nfv","nfex","nfan","nfs1v","exbidv","anbi12d","eqeq2d","opeq1","sbequ12","nfsb","syl6bb","sbequ","sbie","df-opab","diff.hs1.w","diff.wceq.s","diff.cv.s","diff.cop.s","diffss.ex","diff.hs1.s","diff.hs0.s","diff.hs0.w"],"children":["cbvopab1v","cbvmptf","cbvmpt","phpreu","poimirlem26","mbfposadd"]},{"name":"cbvopab2","content":"Change second bound variable in an ordered-pair class abstraction, using explicit substitution. (Contributed by NM, 22-Aug-2013.)","origin":"thm cbvopab2(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  |- wceq(copab(s0, s1, w0), copab(s0, s2, w1))\n  -| wnf(s2, w0)\n  -| wnf(s1, w1)\n  -| wi(wceq(cv(s1), cv(s2)), wb(w0, w1))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  3eqtr4i(copab(s0, s1, w0), copab(s0, s2, w1), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s0, wex(s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)))))\n  abbii(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s0, wex(s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1))))\n  exbii(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)))\n  cbvexv1(s1, s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1))\n  nfan(s2, wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)\n  nfv(s2, wceq(cv(hs0), cop(cv(s0), cv(s1))))\n  nfan(s1, wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)\n  nfv(s1, wceq(cv(hs0), cop(cv(s0), cv(s2))))\n  anbi12d(wceq(cv(s1), cv(s2)), wceq(cv(hs0), cop(cv(s0), cv(s1))), w0, wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)\n  eqeq2d(cv(hs0), cop(cv(s0), cv(s1)), cop(cv(s0), cv(s2)), wceq(cv(s1), cv(s2)))\n  opeq2(cv(s1), cv(s2), cv(s0))\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s0, s2, hs0, w1)\n  diff.wceq.s(s2, cv(hs0), cop(cv(s0), cv(s1)))\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.wceq.s(s1, cv(hs0), cop(cv(s0), cv(s2)))\n  diff.cv.s(s1, hs0)\n  diff.cop.s(s1, cv(s0), cv(s2))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w1)\n}","pretty":"thm cbvopab2(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  ⊢ { < s0, s1 > | w0 } = { < s0, s2 > | w1 }\n  ⊣ F/(s2, w0)\n  ⊣ F/(s1, w1)\n  ⊣ (s1 = s2 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  3eqtr4i({ < s0, s1 > | w0 }, { < s0, s2 > | w1 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))}, { hs0 | ∃(s0, ∃(s2,(hs0 = < s0, s2 > ∧ w1)))})\n  abbii(hs0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))), ∃(s0, ∃(s2,(hs0 = < s0, s2 > ∧ w1))))\n  exbii(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)), ∃(s2,(hs0 = < s0, s2 > ∧ w1)))\n  cbvexv1(s1, s2, (hs0 = < s0, s1 > ∧ w0), (hs0 = < s0, s2 > ∧ w1))\n  nfan(s2, hs0 = < s0, s1 >, w0)\n  nfv(s2, hs0 = < s0, s1 >)\n  nfan(s1, hs0 = < s0, s2 >, w1)\n  nfv(s1, hs0 = < s0, s2 >)\n  anbi12d(s1 = s2, hs0 = < s0, s1 >, w0, hs0 = < s0, s2 >, w1)\n  eqeq2d(hs0, < s0, s1 >, < s0, s2 >, s1 = s2)\n  opeq2(s1, s2, s0)\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s0, s2, hs0, w1)\n  diff.wceq.s(s2, hs0, < s0, s1 >)\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.wceq.s(s1, hs0, < s0, s2 >)\n  diff.cv.s(s1, hs0)\n  diff.cop.s(s1, s0, s2)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w1)\n}","parent":["3eqtr4i","abbii","exbii","cbvexv1","nfan","nfv","anbi12d","eqeq2d","opeq2","df-opab","diff.wceq.s","diff.cv.s","diff.cop.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["cbvoprab3"]},{"name":"cbvopab1s","content":"Change first bound variable in an ordered-pair class abstraction, using explicit substitution. (Contributed by NM, 31-Jul-2003.)","origin":"thm cbvopab1s(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wceq(copab(s0, s1, w0), copab(s2, s1, wsb(s2, s0, w0)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s2, w0)\n} = {\n  3eqtr4i(copab(s0, s1, w0), copab(s2, s1, wsb(s2, s0, w0)), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s2, wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), wsb(s2, s0, w0))))))\n  abbii(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s2, wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), wsb(s2, s0, w0)))))\n  cbvexv1(s0, s2, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), wsb(s2, s0, w0))))\n  nfv(s2, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))\n  nfex(s0, s1, wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), wsb(s2, s0, w0)))\n  nfan(s0, wceq(cv(hs0), cop(cv(s2), cv(s1))), wsb(s2, s0, w0))\n  nfv(s0, wceq(cv(hs0), cop(cv(s2), cv(s1))))\n  nfs1v(s0, s2, w0)\n  exbidv(s1, wceq(cv(s0), cv(s2)), wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(s2), cv(s1))), wsb(s2, s0, w0)))\n  anbi12d(wceq(cv(s0), cv(s2)), wceq(cv(hs0), cop(cv(s0), cv(s1))), w0, wceq(cv(hs0), cop(cv(s2), cv(s1))), wsb(s2, s0, w0))\n  eqeq2d(cv(hs0), cop(cv(s0), cv(s1)), cop(cv(s2), cv(s1)), wceq(cv(s0), cv(s2)))\n  opeq1(cv(s0), cv(s2), cv(s1))\n  sbequ12(s0, s2, w0)\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s2, s1, hs0, wsb(s2, s0, w0))\n  diff.wex.s(s2, s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))\n  diff.wa.s(s2, wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)\n  diff.wceq.s(s2, cv(hs0), cop(cv(s0), cv(s1)))\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.wceq.s(s0, cv(hs0), cop(cv(s2), cv(s1)))\n  diff.cv.s(s0, hs0)\n  diff.cop.s(s0, cv(s2), cv(s1))\n  diff.cv.s(s0, s2)\n  diff.cv.s(s0, s1)\n  diff.wceq.s(s1, cv(s0), cv(s2))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(wsb(s2, s0, w0))\n}","pretty":"thm cbvopab1s(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ { < s0, s1 > | w0 } = { < s2, s1 > |[s2 / s0]w0 }\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s2, w0)\n} = {\n  3eqtr4i({ < s0, s1 > | w0 }, { < s2, s1 > |[s2 / s0]w0 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))}, { hs0 | ∃(s2, ∃(s1,(hs0 = < s2, s1 > ∧[s2 / s0]w0)))})\n  abbii(hs0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))), ∃(s2, ∃(s1,(hs0 = < s2, s1 > ∧[s2 / s0]w0))))\n  cbvexv1(s0, s2, ∃(s1,(hs0 = < s0, s1 > ∧ w0)), ∃(s1,(hs0 = < s2, s1 > ∧[s2 / s0]w0)))\n  nfv(s2, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))\n  nfex(s0, s1, (hs0 = < s2, s1 > ∧[s2 / s0]w0))\n  nfan(s0, hs0 = < s2, s1 >, [s2 / s0]w0)\n  nfv(s0, hs0 = < s2, s1 >)\n  nfs1v(s0, s2, w0)\n  exbidv(s1, s0 = s2, (hs0 = < s0, s1 > ∧ w0), (hs0 = < s2, s1 > ∧[s2 / s0]w0))\n  anbi12d(s0 = s2, hs0 = < s0, s1 >, w0, hs0 = < s2, s1 >, [s2 / s0]w0)\n  eqeq2d(hs0, < s0, s1 >, < s2, s1 >, s0 = s2)\n  opeq1(s0, s2, s1)\n  sbequ12(s0, s2, w0)\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s2, s1, hs0, [s2 / s0]w0)\n  diff.wex.s(s2, s1, (hs0 = < s0, s1 > ∧ w0))\n  diff.wa.s(s2, hs0 = < s0, s1 >, w0)\n  diff.wceq.s(s2, hs0, < s0, s1 >)\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.wceq.s(s0, hs0, < s2, s1 >)\n  diff.cv.s(s0, hs0)\n  diff.cop.s(s0, s2, s1)\n  diff.cv.s(s0, s2)\n  diff.cv.s(s0, s1)\n  diff.wceq.s(s1, s0, s2)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w([s2 / s0]w0)\n}","parent":["3eqtr4i","abbii","cbvexv1","nfv","nfex","nfan","nfs1v","exbidv","anbi12d","eqeq2d","opeq1","sbequ12","df-opab","diff.wex.s","diff.wa.s","diff.wceq.s","diff.cv.s","diff.cop.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":[]},{"name":"cbvopab1v","content":"Rule used to change the first bound variable in an ordered pair abstraction, using implicit substitution. (Contributed by NM, 31-Jul-2003.) (Proof shortened by Eric Schmidt, 4-Apr-2007.)","origin":"thm cbvopab1v(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  |- wceq(copab(s0, s1, w0), copab(s2, s1, w1))\n  -| wi(wceq(cv(s0), cv(s2)), wb(w0, w1))\n  -| diffss(s0, s1)\n  -| diffss(s1, s2)\n  -| diffsw(s0, w1)\n  -| diffsw(s2, w0)\n} = {\n  cbvopab1(s0, s1, s2, w0, w1)\n  nfv(s2, w0)\n  nfv(s0, w1)\n}","pretty":"thm cbvopab1v(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  ⊢ { < s0, s1 > | w0 } = { < s2, s1 > | w1 }\n  ⊣ (s0 = s2 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, w1)\n  ⊣ d(s2, w0)\n} = {\n  cbvopab1(s0, s1, s2, w0, w1)\n  nfv(s2, w0)\n  nfv(s0, w1)\n}","parent":["cbvopab1","nfv"],"children":[]},{"name":"cbvopab2v","content":"Rule used to change the second bound variable in an ordered pair abstraction, using implicit substitution. (Contributed by NM, 2-Sep-1999.)","origin":"thm cbvopab2v(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  |- wceq(copab(s0, s1, w0), copab(s0, s2, w1))\n  -| wi(wceq(cv(s1), cv(s2)), wb(w0, w1))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s1, w1)\n  -| diffsw(s2, w0)\n} = {\n  3eqtr4i(copab(s0, s1, w0), copab(s0, s2, w1), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s0, wex(s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)))))\n  abbii(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s0, wex(s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1))))\n  exbii(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)))\n  cbvexvw(s1, s2, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(s0), cv(s2))), w1))\n  anbi12d(wceq(cv(s1), cv(s2)), wceq(cv(hs0), cop(cv(s0), cv(s1))), w0, wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)\n  eqeq2d(cv(hs0), cop(cv(s0), cv(s1)), cop(cv(s0), cv(s2)), wceq(cv(s1), cv(s2)))\n  opeq2(cv(s1), cv(s2), cv(s0))\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s0, s2, hs0, w1)\n  diff.wa.s(s1, wceq(cv(hs0), cop(cv(s0), cv(s2))), w1)\n  diff.wceq.s(s1, cv(hs0), cop(cv(s0), cv(s2)))\n  diff.cv.s(s1, hs0)\n  diff.cop.s(s1, cv(s0), cv(s2))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n  diff.wa.s(s2, wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)\n  diff.wceq.s(s2, cv(hs0), cop(cv(s0), cv(s1)))\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w1)\n}","pretty":"thm cbvopab2v(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  ⊢ { < s0, s1 > | w0 } = { < s0, s2 > | w1 }\n  ⊣ (s1 = s2 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, w1)\n  ⊣ d(s2, w0)\n} = {\n  3eqtr4i({ < s0, s1 > | w0 }, { < s0, s2 > | w1 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))}, { hs0 | ∃(s0, ∃(s2,(hs0 = < s0, s2 > ∧ w1)))})\n  abbii(hs0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))), ∃(s0, ∃(s2,(hs0 = < s0, s2 > ∧ w1))))\n  exbii(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)), ∃(s2,(hs0 = < s0, s2 > ∧ w1)))\n  cbvexvw(s1, s2, (hs0 = < s0, s1 > ∧ w0), (hs0 = < s0, s2 > ∧ w1))\n  anbi12d(s1 = s2, hs0 = < s0, s1 >, w0, hs0 = < s0, s2 >, w1)\n  eqeq2d(hs0, < s0, s1 >, < s0, s2 >, s1 = s2)\n  opeq2(s1, s2, s0)\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s0, s2, hs0, w1)\n  diff.wa.s(s1, hs0 = < s0, s2 >, w1)\n  diff.wceq.s(s1, hs0, < s0, s2 >)\n  diff.cv.s(s1, hs0)\n  diff.cop.s(s1, s0, s2)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n  diff.wa.s(s2, hs0 = < s0, s1 >, w0)\n  diff.wceq.s(s2, hs0, < s0, s1 >)\n  diff.cv.s(s2, hs0)\n  diff.cop.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w1)\n}","parent":["3eqtr4i","abbii","exbii","cbvexvw","anbi12d","eqeq2d","opeq2","df-opab","diff.wa.s","diff.wceq.s","diff.cv.s","diff.cop.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":[]},{"name":"unopab","content":"Union of two ordered pair class abstractions. (Contributed by NM, 30-Sep-2002.)","origin":"thm unopab(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wceq(cun(copab(s0, s1, w0), copab(s0, s1, w1)), copab(s0, s1, wo(w0, w1)))\n} = {\n  3eqtr4i(cun(copab(s0, s1, w0), copab(s0, s1, w1)), copab(s0, s1, wo(w0, w1)), cun(cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))))), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wo(w0, w1))))))\n  eqtri(cun(cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))))), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wo(w0, w1))))), cab(hs0, wo(wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))))))\n  unab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))))\n  abbii(hs0, wo(wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)))), wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wo(w0, w1)))))\n  bitr3i(wo(wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0))), wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)))), wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wo(w0, w1)))), wex(s0, wo(wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)))))\n  19.43(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)))\n  exbii(s0, wo(wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))), wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wo(w0, w1))))\n  bitr2i(wo(wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)), wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))), wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wo(w0, w1))), wex(s1, wo(wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))))\n  exbii(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), wo(w0, w1)), wo(wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)))\n  andi(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0, w1)\n  19.43(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0), wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1))\n  uneq12i(copab(s0, s1, w0), copab(s0, s1, w1), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w0)))), cab(hs0, wex(s0, wex(s1, wa(wceq(cv(hs0), cop(cv(s0), cv(s1))), w1)))))\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s0, s1, hs0, w1)\n  df-opab(s0, s1, hs0, wo(w0, w1))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diff.hs0.w(w1)\n  diff.hs0.w(wo(w0, w1))\n}","pretty":"thm unopab(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ({ < s0, s1 > | w0 } ⋃ { < s0, s1 > | w1 })= { < s0, s1 > |(w0 ∨ w1)}\n} = {\n  3eqtr4i(({ < s0, s1 > | w0 } ⋃ { < s0, s1 > | w1 }), { < s0, s1 > |(w0 ∨ w1)}, ({ hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))} ⋃ { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1)))}), { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧(w0 ∨ w1))))})\n  eqtri(({ hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))} ⋃ { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1)))}), { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧(w0 ∨ w1))))}, { hs0 |(∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))∨ ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1))))})\n  unab(hs0, ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0))), ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1))))\n  abbii(hs0, (∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))∨ ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1)))), ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧(w0 ∨ w1)))))\n  bitr3i((∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))∨ ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1)))), ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧(w0 ∨ w1)))), ∃(s0,(∃(s1,(hs0 = < s0, s1 > ∧ w0))∨ ∃(s1,(hs0 = < s0, s1 > ∧ w1)))))\n  19.43(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)), ∃(s1,(hs0 = < s0, s1 > ∧ w1)))\n  exbii(s0, (∃(s1,(hs0 = < s0, s1 > ∧ w0))∨ ∃(s1,(hs0 = < s0, s1 > ∧ w1))), ∃(s1,(hs0 = < s0, s1 > ∧(w0 ∨ w1))))\n  bitr2i((∃(s1,(hs0 = < s0, s1 > ∧ w0))∨ ∃(s1,(hs0 = < s0, s1 > ∧ w1))), ∃(s1,(hs0 = < s0, s1 > ∧(w0 ∨ w1))), ∃(s1,((hs0 = < s0, s1 > ∧ w0)∨(hs0 = < s0, s1 > ∧ w1))))\n  exbii(s1, (hs0 = < s0, s1 > ∧(w0 ∨ w1)), ((hs0 = < s0, s1 > ∧ w0)∨(hs0 = < s0, s1 > ∧ w1)))\n  andi(hs0 = < s0, s1 >, w0, w1)\n  19.43(s1, (hs0 = < s0, s1 > ∧ w0), (hs0 = < s0, s1 > ∧ w1))\n  uneq12i({ < s0, s1 > | w0 }, { < s0, s1 > | w1 }, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w0)))}, { hs0 | ∃(s0, ∃(s1,(hs0 = < s0, s1 > ∧ w1)))})\n  df-opab(s0, s1, hs0, w0)\n  df-opab(s0, s1, hs0, w1)\n  df-opab(s0, s1, hs0, (w0 ∨ w1))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n  diff.hs0.w(w1)\n  diff.hs0.w((w0 ∨ w1))\n}","parent":["3eqtr4i","eqtri","unab","abbii","bitr3i","19.43","exbii","bitr2i","andi","uneq12i","df-opab","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["xpundi","xpundir","cnvun","coundi","coundir","mptun","opsrtoslem1","lgsquadlem3","cnfinltrel"]}]}