{"index":1364,"title":"Misc","content":"","blocks":[{"name":"neqcomd","content":"Commute an inequality. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm neqcomd(class c0, class c1, wff w0) {\n  |- wi(w0, wn(wceq(c0, c1)))\n  -| wi(w0, wn(wceq(c1, c0)))\n} = {\n  sylnib(w0, wceq(c0, c1), wceq(c1, c0))\n  eqcom(c1, c0)\n}","pretty":"thm neqcomd(class c0, class c1, wff w0) {\n  ⊢ (w0 → ¬ c0 = c1)\n  ⊣ (w0 → ¬ c1 = c0)\n} = {\n  sylnib(w0, c0 = c1, c1 = c0)\n  eqcom(c1, c0)\n}","parent":["sylnib","eqcom"],"children":["rr-phpd","rr-php2d","simpgnsgd"]},{"name":"rr-rspce","content":"Prove a restricted existential. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm rr-rspce(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wi(w0, wrex(s0, c0, w1))\n  -| wi(wa(w0, wceq(cv(s0), c1)), w1)\n  -| wi(w0, wcel(c1, c0))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsw(s0, w0)\n} = {\n  rspcedvd(s0, c0, c1, w0, w1, w0)\n  2thd(wa(w0, wceq(cv(s0), c1)), w1, w0)\n  simpl(w0, wceq(cv(s0), c1))\n  id(w0)\n}","pretty":"thm rr-rspce(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ (w0 → ∃(s0 ∈ c0, w1))\n  ⊣ ((w0 ∧ s0 = c1)→ w1)\n  ⊣ (w0 → c1 ∈ c0)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, w0)\n} = {\n  rspcedvd(s0, c0, c1, w0, w1, w0)\n  2thd((w0 ∧ s0 = c1), w1, w0)\n  simpl(w0, s0 = c1)\n  id(w0)\n}","parent":["rspcedvd","2thd","simpl","id"],"children":["rr-elrnmptd"]},{"name":"rexlimdvaacbv","content":"Unpack a restricted existential antecedent while changing the variable with implicit substitution. The equivalent of this theorem without the bound variable change is ~ rexlimdvaa . (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm rexlimdvaacbv(setvar s0, setvar s1, class c0, wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wi(wrex(s0, c0, w1), w2))\n  -| wi(wceq(cv(s0), cv(s1)), wb(w1, w3))\n  -| wi(wa(w0, wa(wcel(cv(s1), c0), w3)), w2)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsw(s0, w3)\n  -| diffsw(s1, w0)\n  -| diffsw(s1, w1)\n  -| diffsw(s1, w2)\n} = {\n  syl5bi(w0, wrex(s0, c0, w1), w2, wrex(s1, c0, w3))\n  cbvrexv(s0, s1, c0, w1, w3)\n  rexlimdvaa(s1, c0, w0, w3, w2)\n}","pretty":"thm rexlimdvaacbv(setvar s0, setvar s1, class c0, wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(∃(s0 ∈ c0, w1)→ w2))\n  ⊣ (s0 = s1 →(w1 ↔ w3))\n  ⊣ ((w0 ∧(s1 ∈ c0 ∧ w3))→ w2)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s0, w3)\n  ⊣ d(s1, w0)\n  ⊣ d(s1, w1)\n  ⊣ d(s1, w2)\n} = {\n  syl5bi(w0, ∃(s0 ∈ c0, w1), w2, ∃(s1 ∈ c0, w3))\n  cbvrexv(s0, s1, c0, w1, w3)\n  rexlimdvaa(s1, c0, w0, w3, w2)\n}","parent":["syl5bi","cbvrexv","rexlimdvaa"],"children":["rexlimddvcbv"]},{"name":"rexlimddvcbv","content":"Unpack a restricted existential assumption while changing the variable with implicit substitution. Similar to ~ rexlimdvaacbv . The equivalent of this theorem without the bound variable change is ~ rexlimddv . (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm rexlimddvcbv(setvar s0, setvar s1, class c0, wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, w1)\n  -| wi(w0, wrex(s0, c0, w2))\n  -| wi(wa(w0, wa(wcel(cv(s1), c0), w3)), w1)\n  -| wi(wceq(cv(s0), cv(s1)), wb(w2, w3))\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsw(s0, w3)\n  -| diffsw(s1, w0)\n  -| diffsw(s1, w1)\n  -| diffsw(s1, w2)\n} = {\n  mpd(w0, w1, wrex(s0, c0, w2))\n  rexlimdvaacbv(s0, s1, c0, w0, w2, w1, w3)\n}","pretty":"thm rexlimddvcbv(setvar s0, setvar s1, class c0, wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 → ∃(s0 ∈ c0, w2))\n  ⊣ ((w0 ∧(s1 ∈ c0 ∧ w3))→ w1)\n  ⊣ (s0 = s1 →(w2 ↔ w3))\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s0, w3)\n  ⊣ d(s1, w0)\n  ⊣ d(s1, w1)\n  ⊣ d(s1, w2)\n} = {\n  mpd(w0, w1, ∃(s0 ∈ c0, w2))\n  rexlimdvaacbv(s0, s1, c0, w0, w2, w1, w3)\n}","parent":["mpd","rexlimdvaacbv"],"children":["ablsimpgcygd","ablsimpgfindlem1"]},{"name":"rr-elrnmptd","content":"Elementhood in an image set. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm rr-elrnmptd(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wcel(c0, crn(c1)))\n  -| wceq(c1, cmpt(s0, c2, c3))\n  -| wi(w0, wcel(c4, c2))\n  -| wi(w0, wcel(c0, c5))\n  -| wi(wa(w0, wceq(cv(s0), c4)), wceq(c0, c3))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c4)\n  -| diffsw(s0, w0)\n} = {\n  mpbird(w0, wcel(c0, crn(c1)), wrex(s0, c2, wceq(c0, c3)))\n  rr-rspce(s0, c2, c4, w0, wceq(c0, c3))\n  syl(w0, wb(wcel(c0, crn(c1)), wrex(s0, c2, wceq(c0, c3))), wcel(c0, c5))\n  elrnmpt(s0, c0, c5, c1, c2, c3)\n}","pretty":"thm rr-elrnmptd(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ⊢ (w0 → c0 ∈ ran(c1))\n  ⊣ c1 =(s0 ∈ c2 ↦ c3)\n  ⊣ (w0 → c4 ∈ c2)\n  ⊣ (w0 → c0 ∈ c5)\n  ⊣ ((w0 ∧ s0 = c4)→ c0 = c3)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c2)\n  ⊣ d(s0, c4)\n  ⊣ d(s0, w0)\n} = {\n  mpbird(w0, c0 ∈ ran(c1), ∃(s0 ∈ c2, c0 = c3))\n  rr-rspce(s0, c2, c4, w0, c0 = c3)\n  syl(w0, (c0 ∈ ran(c1)↔ ∃(s0 ∈ c2, c0 = c3)), c0 ∈ c5)\n  elrnmpt(s0, c0, c5, c1, c2, c3)\n}","parent":["mpbird","rr-rspce","syl","elrnmpt"],"children":["cycsubggend"]},{"name":"rr-elrnmpt2d","content":"Elementhood in an image set. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm rr-elrnmpt2d(setvar s0, class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(w0, wrex(s0, c0, wceq(c1, c2)))\n  -| wceq(c3, cmpt(s0, c0, c2))\n  -| wi(w0, wcel(c1, crn(c3)))\n  -| diffsc(s0, c1)\n} = {\n  syl(w0, wrex(s0, c0, wceq(c1, c2)), wcel(c1, crn(c3)))\n  ibi(wcel(c1, crn(c3)), wrex(s0, c0, wceq(c1, c2)))\n  elrnmpt(s0, c1, crn(c3), c3, c0, c2)\n}","pretty":"thm rr-elrnmpt2d(setvar s0, class c0, class c1, class c2, class c3, wff w0) {\n  ⊢ (w0 → ∃(s0 ∈ c0, c1 = c2))\n  ⊣ c3 =(s0 ∈ c0 ↦ c2)\n  ⊣ (w0 → c1 ∈ ran(c3))\n  ⊣ d(s0, c1)\n} = {\n  syl(w0, ∃(s0 ∈ c0, c1 = c2), c1 ∈ ran(c3))\n  ibi(c1 ∈ ran(c3), ∃(s0 ∈ c0, c1 = c2))\n  elrnmpt(s0, c1, ran(c3), c3, c0, c2)\n}","parent":["syl","ibi","elrnmpt"],"children":["ablsimpg1gend"]},{"name":"enpr2d","content":"A pair with distinct elements is equinumerous to ordinal two. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm enpr2d(class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(w0, wbr(cpr(c0, c1), cen, c2o))\n  -| wi(w0, wcel(c0, c2))\n  -| wi(w0, wcel(c1, c3))\n  -| wi(w0, wn(wceq(c0, c1)))\n} = {\n  syl6breqr(cpr(c0, c1), cen, c2o, csuc(c1o), w0)\n  3brtr4g(cpr(c0, c1), cen, csuc(c1o), cun(csn(c0), csn(c1)), cun(c1o, csn(c1o)), w0)\n  syl22anc(w0, wbr(cun(csn(c0), csn(c1)), cen, cun(c1o, csn(c1o))), wbr(csn(c0), cen, c1o), wbr(csn(c1), cen, csn(c1o)), wceq(cin(csn(c0), csn(c1)), emptycls), wceq(cin(c1o, csn(c1o)), emptycls))\n  syl(w0, wbr(csn(c0), cen, c1o), wcel(c0, c2))\n  ensn1g(c0, c2)\n  sylancl(w0, wbr(csn(c1), cen, csn(c1o)), wcel(c1, c3), wcel(c1o, con0))\n  en2sn(c1, c3, c1o, con0)\n  syl(w0, wceq(cin(csn(c0), csn(c1)), emptycls), wne(c0, c1))\n  neqned(c0, c1, w0)\n  disjsn2(c0, c1)\n  sylibr(w0, wceq(cin(c1o, csn(c1o)), emptycls), wn(wcel(c1o, c1o)))\n  a1i(w0, wn(wcel(c1o, c1o)))\n  onirri(c1o)\n  1on()\n  disjsn(c1o, c1o)\n  unen(csn(c0), c1o, csn(c1), csn(c1o))\n  df-pr(c0, c1)\n  df-suc(c1o)\n  df-2o()\n}","pretty":"thm enpr2d(class c0, class c1, class c2, class c3, wff w0) {\n  ⊢ (w0 → { c0, c1 }[≅]2o)\n  ⊣ (w0 → c0 ∈ c2)\n  ⊣ (w0 → c1 ∈ c3)\n  ⊣ (w0 → ¬ c0 = c1)\n} = {\n  syl6breqr({ c0, c1 }, cen, c2o, suc(1o), w0)\n  3brtr4g({ c0, c1 }, cen, suc(1o), ({ c0 } ⋃ { c1 }), (1o ⋃ { 1o }), w0)\n  syl22anc(w0, ({ c0 } ⋃ { c1 })[≅](1o ⋃ { 1o }), { c0 }[≅]1o, { c1 }[≅]{ 1o }, ({ c0 } ⋂ { c1 })= ∅, (1o ⋂ { 1o })= ∅)\n  syl(w0, { c0 }[≅]1o, c0 ∈ c2)\n  ensn1g(c0, c2)\n  sylancl(w0, { c1 }[≅]{ 1o }, c1 ∈ c3, 1o ∈ On)\n  en2sn(c1, c3, c1o, con0)\n  syl(w0, ({ c0 } ⋂ { c1 })= ∅, c0 ≠ c1)\n  neqned(c0, c1, w0)\n  disjsn2(c0, c1)\n  sylibr(w0, (1o ⋂ { 1o })= ∅, ¬ 1o ∈ 1o)\n  a1i(w0, ¬ 1o ∈ 1o)\n  onirri(c1o)\n  1on()\n  disjsn(c1o, c1o)\n  unen({ c0 }, c1o, { c1 }, { 1o })\n  df-pr(c0, c1)\n  df-suc(c1o)\n  df-2o()\n}","parent":["syl6breqr","3brtr4g","syl22anc","syl","ensn1g","sylancl","en2sn","neqned","disjsn2","sylibr","a1i","onirri","1on","disjsn","unen","df-pr","df-suc","df-2o"],"children":["simpgnsgd","2nsgsimpgd"]},{"name":"rr-phpd","content":"Equivalent of ~ php without negation. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm rr-phpd(class c0, class c1, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wi(w0, wcel(c0, com))\n  -| wi(w0, wss(c1, c0))\n  -| wi(w0, wbr(c0, cen, c1))\n} = {\n  mt4d(w0, wceq(c0, c1), wbr(c0, cen, c1))\n  ex(w0, wn(wceq(c0, c1)), wn(wbr(c0, cen, c1)))\n  syl2an2r(w0, wn(wceq(c0, c1)), wn(wbr(c0, cen, c1)), wcel(c0, com), wpss(c1, c0))\n  sylanbrc(wa(w0, wn(wceq(c0, c1))), wpss(c1, c0), wss(c1, c0), wn(wceq(c1, c0)))\n  adantr(w0, wn(wceq(c0, c1)), wss(c1, c0))\n  neqcomd(c1, c0, wa(w0, wn(wceq(c0, c1))))\n  simpr(w0, wn(wceq(c0, c1)))\n  dfpss2(c1, c0)\n  php(c0, c1)\n}","pretty":"thm rr-phpd(class c0, class c1, wff w0) {\n  ⊢ (w0 → c0 = c1)\n  ⊣ (w0 → c0 ∈ _om)\n  ⊣ (w0 → c1 ⊆ c0)\n  ⊣ (w0 → c0[≅]c1)\n} = {\n  mt4d(w0, c0 = c1, c0[≅]c1)\n  ex(w0, ¬ c0 = c1, ¬ c0[≅]c1)\n  syl2an2r(w0, ¬ c0 = c1, ¬ c0[≅]c1, c0 ∈ _om, c1 ⊊ c0)\n  sylanbrc((w0 ∧ ¬ c0 = c1), c1 ⊊ c0, c1 ⊆ c0, ¬ c1 = c0)\n  adantr(w0, ¬ c0 = c1, c1 ⊆ c0)\n  neqcomd(c1, c0, (w0 ∧ ¬ c0 = c1))\n  simpr(w0, ¬ c0 = c1)\n  dfpss2(c1, c0)\n  php(c0, c1)\n}","parent":["mt4d","ex","syl2an2r","sylanbrc","adantr","neqcomd","simpr","dfpss2","php"],"children":[]},{"name":"rr-php2d","content":"Strengthening of ~ php expressed without negation. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm rr-php2d(class c0, class c1, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wi(w0, wcel(c0, cfn))\n  -| wi(w0, wss(c1, c0))\n  -| wi(w0, wbr(c0, cen, c1))\n} = {\n  mt4d(w0, wceq(c0, c1), wbr(c0, cen, c1))\n  ex(w0, wn(wceq(c0, c1)), wn(wbr(c0, cen, c1)))\n  syl(wa(w0, wn(wceq(c0, c1))), wn(wbr(c0, cen, c1)), wbr(c1, csdm, c0))\n  syl2an2r(w0, wn(wceq(c0, c1)), wbr(c1, csdm, c0), wcel(c0, cfn), wpss(c1, c0))\n  sylanbrc(wa(w0, wn(wceq(c0, c1))), wpss(c1, c0), wss(c1, c0), wn(wceq(c1, c0)))\n  adantr(w0, wn(wceq(c0, c1)), wss(c1, c0))\n  neqcomd(c1, c0, wa(w0, wn(wceq(c0, c1))))\n  simpr(w0, wn(wceq(c0, c1)))\n  dfpss2(c1, c0)\n  php3(c0, c1)\n  nsyl(wbr(c1, csdm, c0), wbr(c0, cen, c1), wbr(c1, cen, c0))\n  sdomnen(c1, c0)\n  ensym(c0, c1)\n}","pretty":"thm rr-php2d(class c0, class c1, wff w0) {\n  ⊢ (w0 → c0 = c1)\n  ⊣ (w0 → c0 ∈ Fin)\n  ⊣ (w0 → c1 ⊆ c0)\n  ⊣ (w0 → c0[≅]c1)\n} = {\n  mt4d(w0, c0 = c1, c0[≅]c1)\n  ex(w0, ¬ c0 = c1, ¬ c0[≅]c1)\n  syl((w0 ∧ ¬ c0 = c1), ¬ c0[≅]c1, c1[≺]c0)\n  syl2an2r(w0, ¬ c0 = c1, c1[≺]c0, c0 ∈ Fin, c1 ⊊ c0)\n  sylanbrc((w0 ∧ ¬ c0 = c1), c1 ⊊ c0, c1 ⊆ c0, ¬ c1 = c0)\n  adantr(w0, ¬ c0 = c1, c1 ⊆ c0)\n  neqcomd(c1, c0, (w0 ∧ ¬ c0 = c1))\n  simpr(w0, ¬ c0 = c1)\n  dfpss2(c1, c0)\n  php3(c0, c1)\n  nsyl(c1[≺]c0, c0[≅]c1, c1[≅]c0)\n  sdomnen(c1, c0)\n  ensym(c0, c1)\n}","parent":["mt4d","ex","syl","syl2an2r","sylanbrc","adantr","neqcomd","simpr","dfpss2","php3","nsyl","sdomnen","ensym"],"children":["phphashd","simpgnsgd"]},{"name":"phphashd","content":"Equivalent of ~ rr-php2d expressed using the hash function. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm phphashd(class c0, class c1, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wi(w0, wcel(c0, cfn))\n  -| wi(w0, wss(c1, c0))\n  -| wi(w0, wceq(cfv(chash, c0), cfv(chash, c1)))\n} = {\n  rr-php2d(c0, c1, w0)\n  mpbid(w0, wbr(c0, cen, c1), wceq(cfv(chash, c0), cfv(chash, c1)))\n  syl2anc(w0, wb(wceq(cfv(chash, c0), cfv(chash, c1)), wbr(c0, cen, c1)), wcel(c0, cfn), wcel(c1, cfn))\n  ssfid(c1, c0, w0)\n  hashen(c0, c1)\n}","pretty":"thm phphashd(class c0, class c1, wff w0) {\n  ⊢ (w0 → c0 = c1)\n  ⊣ (w0 → c0 ∈ Fin)\n  ⊣ (w0 → c1 ⊆ c0)\n  ⊣ (w0 →(# ` c0)=(# ` c1))\n} = {\n  rr-php2d(c0, c1, w0)\n  mpbid(w0, c0[≅]c1, (# ` c0)=(# ` c1))\n  syl2anc(w0, ((# ` c0)=(# ` c1)↔ c0[≅]c1), c0 ∈ Fin, c1 ∈ Fin)\n  ssfid(c1, c0, w0)\n  hashen(c0, c1)\n}","parent":["rr-php2d","mpbid","syl2anc","ssfid","hashen"],"children":["phphash2d"]},{"name":"phphash2d","content":"Equivalent of ~ phphashd with reversed arguments. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm phphash2d(class c0, class c1, wff w0) {\n  |- wi(w0, wceq(c0, c1))\n  -| wi(w0, wcel(c1, cfn))\n  -| wi(w0, wss(c0, c1))\n  -| wi(w0, wceq(cfv(chash, c0), cfv(chash, c1)))\n} = {\n  eqcomd(c0, c1, w0)\n  phphashd(c1, c0, w0)\n  eqcomd(cfv(chash, c1), cfv(chash, c0), w0)\n}","pretty":"thm phphash2d(class c0, class c1, wff w0) {\n  ⊢ (w0 → c0 = c1)\n  ⊣ (w0 → c1 ∈ Fin)\n  ⊣ (w0 → c0 ⊆ c1)\n  ⊣ (w0 →(# ` c0)=(# ` c1))\n} = {\n  eqcomd(c0, c1, w0)\n  phphashd(c1, c0, w0)\n  eqcomd((# ` c1), (# ` c0), w0)\n}","parent":["eqcomd","phphashd"],"children":["prmgrpsimpgd"]},{"name":"hashelne0d","content":"A set with an element has nonzero size. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm hashelne0d(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wn(wceq(cfv(chash, c0), nat0)))\n  -| wi(w0, wcel(c1, c0))\n  -| wi(w0, wcel(c0, c2))\n} = {\n  mtbird(w0, wceq(cfv(chash, c0), nat0), wceq(c0, emptycls))\n  neneqd(c0, emptycls, w0)\n  ne0d(c0, c1, w0)\n  syl(w0, wb(wceq(cfv(chash, c0), nat0), wceq(c0, emptycls)), wcel(c0, c2))\n  hasheq0(c0, c2)\n}","pretty":"thm hashelne0d(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 → ¬(# ` c0)= 0)\n  ⊣ (w0 → c1 ∈ c0)\n  ⊣ (w0 → c0 ∈ c2)\n} = {\n  mtbird(w0, (# ` c0)= 0, c0 = ∅)\n  neneqd(c0, emptycls, w0)\n  ne0d(c0, c1, w0)\n  syl(w0, ((# ` c0)= 0 ↔ c0 = ∅), c0 ∈ c2)\n  hasheq0(c0, c2)\n}","parent":["mtbird","neneqd","ne0d","syl","hasheq0"],"children":["hashfinmndnn","fincygsubgodd","prmgrpsimpgd"]},{"name":"hash1elsn","content":"A set of size 1 with a known element is the singleton of that element. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm hash1elsn(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(c0, csn(c1)))\n  -| wi(w0, wceq(cfv(chash, c0), nat1))\n  -| wi(w0, wcel(c1, c0))\n  -| wi(w0, wcel(c0, c2))\n} = {\n  exlimddv(hs0, w0, wceq(c0, csn(c1)), wceq(c0, csn(cv(hs0))))\n  sylib(w0, wex(hs0, wceq(c0, csn(cv(hs0)))), wbr(c0, cen, c1o))\n  mpbid(w0, wbr(c0, cen, c1o), wceq(cfv(chash, c0), nat1))\n  syl(w0, wb(wceq(cfv(chash, c0), nat1), wbr(c0, cen, c1o)), wcel(c0, c2))\n  hashen1(c0, c2)\n  en1(hs0, c0)\n  eqtr4d(c0, csn(c1), csn(cv(hs0)), wa(w0, wceq(c0, csn(cv(hs0)))))\n  sneqd(c1, cv(hs0), wa(w0, wceq(c0, csn(cv(hs0)))))\n  syl(wa(w0, wceq(c0, csn(cv(hs0)))), wceq(c1, cv(hs0)), wcel(c1, csn(cv(hs0))))\n  eleqtrd(c1, csn(cv(hs0)), c0, wa(w0, wceq(c0, csn(cv(hs0)))))\n  adantr(w0, wceq(c0, csn(cv(hs0))), wcel(c1, c0))\n  simpr(w0, wceq(c0, csn(cv(hs0))))\n  elsni(c1, cv(hs0))\n  diff.hs0.w(w0)\n  diff.hs0.w(wceq(c0, csn(c1)))\n  diff.hs0.c(c0)\n}","pretty":"thm hash1elsn(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 → c0 = { c1 })\n  ⊣ (w0 →(# ` c0)= 1)\n  ⊣ (w0 → c1 ∈ c0)\n  ⊣ (w0 → c0 ∈ c2)\n} = {\n  exlimddv(hs0, w0, c0 = { c1 }, c0 = { hs0 })\n  sylib(w0, ∃(hs0, c0 = { hs0 }), c0[≅]1o)\n  mpbid(w0, c0[≅]1o, (# ` c0)= 1)\n  syl(w0, ((# ` c0)= 1 ↔ c0[≅]1o), c0 ∈ c2)\n  hashen1(c0, c2)\n  en1(hs0, c0)\n  eqtr4d(c0, { c1 }, { hs0 }, (w0 ∧ c0 = { hs0 }))\n  sneqd(c1, hs0, (w0 ∧ c0 = { hs0 }))\n  syl((w0 ∧ c0 = { hs0 }), c1 = hs0, c1 ∈ { hs0 })\n  eleqtrd(c1, { hs0 }, c0, (w0 ∧ c0 = { hs0 }))\n  adantr(w0, c0 = { hs0 }, c1 ∈ c0)\n  simpr(w0, c0 = { hs0 })\n  elsni(c1, hs0)\n  diff.hs0.w(w0)\n  diff.hs0.w(c0 = { c1 })\n  diff.hs0.c(c0)\n}","parent":["exlimddv","sylib","mpbid","syl","hashen1","en1","eqtr4d","sneqd","eleqtrd","adantr","simpr","elsni","diff.hs0.w","diff.hs0.c"],"children":["prmgrpsimpgd","ablsimpgprmd"]},{"name":"gcdmuld","content":"The greatest common divisor of a nonnegative integer and a multiple of it is itself. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm gcdmuld(class c0, class c1, wff w0) {\n  |- wi(w0, wceq(co(c0, cgcd, co(c1, cmul, c0)), c0))\n  -| wi(w0, wcel(c0, cn0))\n  -| wi(w0, wcel(c1, cz))\n} = {\n  3eqtr3rd(co(c0, cgcd, co(c1, cmul, c0)), c0, co(c0, cgcd, nat0), co(c0, cgcd, co(nat0, caddc, co(c1, cmul, c0))), w0)\n  syl3anc(w0, wceq(co(c0, cgcd, nat0), co(c0, cgcd, co(nat0, caddc, co(c1, cmul, c0)))), wcel(c1, cz), wcel(c0, cz), wcel(nat0, cz))\n  0zd(w0)\n  gcdaddm(c1, c0, nat0)\n  syl(w0, wceq(co(c0, cgcd, nat0), c0), wcel(c0, cn0))\n  nn0gcdid0(c0)\n  oveq2d(c0, cgcd, co(nat0, caddc, co(c1, cmul, c0)), co(c1, cmul, c0), w0)\n  addid2d(co(c1, cmul, c0), w0)\n  zcnd(co(c1, cmul, c0), w0)\n  zmulcld(c1, c0, w0)\n  nn0zd(c0, w0)\n}","pretty":"thm gcdmuld(class c0, class c1, wff w0) {\n  ⊢ (w0 →(c0[gcd](c1[×]c0))= c0)\n  ⊣ (w0 → c0 ∈ ℕ0)\n  ⊣ (w0 → c1 ∈ ℤ)\n} = {\n  3eqtr3rd((c0[gcd](c1[×]c0)), c0, (c0[gcd]0), (c0[gcd](0[+](c1[×]c0))), w0)\n  syl3anc(w0, (c0[gcd]0)=(c0[gcd](0[+](c1[×]c0))), c1 ∈ ℤ, c0 ∈ ℤ, 0 ∈ ℤ)\n  0zd(w0)\n  gcdaddm(c1, c0, nat0)\n  syl(w0, (c0[gcd]0)= c0, c0 ∈ ℕ0)\n  nn0gcdid0(c0)\n  oveq2d(c0, cgcd, (0[+](c1[×]c0)), (c1[×]c0), w0)\n  addid2d((c1[×]c0), w0)\n  zcnd((c1[×]c0), w0)\n  zmulcld(c1, c0, w0)\n  nn0zd(c0, w0)\n}","parent":["3eqtr3rd","syl3anc","0zd","gcdaddm","syl","nn0gcdid0","oveq2d","addid2d","zcnd","zmulcld","nn0zd"],"children":["gcddvdsd"]},{"name":"gcddvdsd","content":"The greatest common divisor of a positive integer and another integer it divides is itself. (Contributed by Rohan Ridenour, 3-Aug-2023.)","origin":"thm gcddvdsd(class c0, class c1, wff w0) {\n  |- wi(w0, wceq(co(c0, cgcd, c1), c0))\n  -| wi(w0, wcel(c0, cn))\n  -| wi(w0, wcel(c1, cz))\n  -| wi(w0, wbr(c0, cdvds, c1))\n} = {\n  eqtr3d(co(c0, cgcd, c1), c0, co(c0, cgcd, co(co(c1, cdiv, c0), cmul, c0)), w0)\n  oveq2d(c0, cgcd, co(co(c1, cdiv, c0), cmul, c0), c1, w0)\n  divcan1d(c1, c0, w0)\n  zcnd(c1, w0)\n  nncnd(c0, w0)\n  gcdmuld(c0, co(c1, cdiv, c0), w0)\n  nnnn0d(c0, w0)\n  mpbid(w0, wcel(co(c1, cdiv, c0), cz), wbr(c0, cdvds, c1))\n  syl3anc(w0, wb(wbr(c0, cdvds, c1), wcel(co(c1, cdiv, c0), cz)), wcel(c0, cz), wne(c0, nat0), wcel(c1, cz))\n  nnzd(c0, w0)\n  nnne0d(c0, w0)\n  dvdsval2(c0, c1)\n}","pretty":"thm gcddvdsd(class c0, class c1, wff w0) {\n  ⊢ (w0 →(c0[gcd]c1)= c0)\n  ⊣ (w0 → c0 ∈ ℕ)\n  ⊣ (w0 → c1 ∈ ℤ)\n  ⊣ (w0 → c0[||]c1)\n} = {\n  eqtr3d((c0[gcd]c1), c0, (c0[gcd]((c1[÷]c0)[×]c0)), w0)\n  oveq2d(c0, cgcd, ((c1[÷]c0)[×]c0), c1, w0)\n  divcan1d(c1, c0, w0)\n  zcnd(c1, w0)\n  nncnd(c0, w0)\n  gcdmuld(c0, (c1[÷]c0), w0)\n  nnnn0d(c0, w0)\n  mpbid(w0, (c1[÷]c0)∈ ℤ, c0[||]c1)\n  syl3anc(w0, (c0[||]c1 ↔(c1[÷]c0)∈ ℤ), c0 ∈ ℤ, c0 ≠ 0, c1 ∈ ℤ)\n  nnzd(c0, w0)\n  nnne0d(c0, w0)\n  dvdsval2(c0, c1)\n}","parent":["eqtr3d","oveq2d","divcan1d","zcnd","nncnd","gcdmuld","nnnn0d","mpbid","syl3anc","nnzd","nnne0d","dvdsval2"],"children":["fincygsubgodd"]}]}