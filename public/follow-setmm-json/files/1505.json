{"index":1505,"title":"Magmas and Semigroups (extension)","content":"","blocks":[{"name":"plusfreseq","content":"If the empty set is not contained in the range of the group addition function of an extensible structure (not necessarily a magma), the restriction of the addition operation to (the Cartesian square of) the base set is the functionalization of it. (Contributed by AV, 28-Jan-2020.)","origin":"thm plusfreseq(class c0, class c1, class c2, class c3) {\n  |- wi(wnel(emptycls, crn(c0)), wceq(cres(c1, cxp(c2, c2)), c0))\n  -| wceq(c2, cfv(cbs, c3))\n  -| wceq(c1, cfv(cplusg, c3))\n  -| wceq(c0, cfv(cplusf, c3))\n} = {\n  syl3anc(wnel(emptycls, crn(c0)), wceq(cres(c1, cxp(c2, c2)), c0), wfun(c0), wnel(emptycls, crn(c0)), wral(hs0, cxp(c2, c2), wceq(cfv(c1, cv(hs0)), cfv(c0, cv(hs0)))))\n  a1i(wnel(emptycls, crn(c0)), wfun(c0))\n  ax-mp(wfun(c0), wfn(c0, cxp(c2, c2)))\n  fnfun(c0, cxp(c2, c2))\n  id(wnel(emptycls, crn(c0)))\n  sylibr(wnel(emptycls, crn(c0)), wral(hs0, cxp(c2, c2), wceq(cfv(c1, cv(hs0)), cfv(c0, cv(hs0)))), wral(hs1, c2, wral(hs2, c2, wceq(co(cv(hs1), c1, cv(hs2)), co(cv(hs1), c0, cv(hs2))))))\n  a1i(wnel(emptycls, crn(c0)), wral(hs1, c2, wral(hs2, c2, wceq(co(cv(hs1), c1, cv(hs2)), co(cv(hs1), c0, cv(hs2))))))\n  rgen2a(hs1, hs2, c2, wceq(co(cv(hs1), c1, cv(hs2)), co(cv(hs1), c0, cv(hs2))))\n  eqcomd(co(cv(hs1), c1, cv(hs2)), co(cv(hs1), c0, cv(hs2)), wa(wcel(cv(hs1), c2), wcel(cv(hs2), c2)))\n  plusfval(cv(hs1), c2, cv(hs2), c0, c1, c3)\n  ralxp(hs0, hs1, hs2, c2, c2, wceq(cfv(c1, cv(hs0)), cfv(c0, cv(hs0))), wceq(co(cv(hs1), c1, cv(hs2)), co(cv(hs1), c0, cv(hs2))))\n  eqeq12d(cfv(c1, cv(hs0)), cfv(c0, cv(hs0)), co(cv(hs1), c1, cv(hs2)), co(cv(hs1), c0, cv(hs2)), wceq(cv(hs0), cop(cv(hs1), cv(hs2))))\n  syl6eqr(cfv(c1, cv(hs0)), co(cv(hs1), c1, cv(hs2)), cfv(c1, cop(cv(hs1), cv(hs2))), wceq(cv(hs0), cop(cv(hs1), cv(hs2))))\n  fveq2(cv(hs0), cop(cv(hs1), cv(hs2)), c1)\n  df-ov(cv(hs1), c1, cv(hs2))\n  syl6eqr(cfv(c0, cv(hs0)), co(cv(hs1), c0, cv(hs2)), cfv(c0, cop(cv(hs1), cv(hs2))), wceq(cv(hs0), cop(cv(hs1), cv(hs2))))\n  fveq2(cv(hs0), cop(cv(hs1), cv(hs2)), c0)\n  df-ov(cv(hs1), c0, cv(hs2))\n  fveqressseq(hs0, c0, cxp(c2, c2), c1)\n  ax-mp(wceq(cxp(c2, c2), cdm(c0)), wfn(c0, cxp(c2, c2)))\n  plusffn(c0, c2, c3)\n  eqcomd(cxp(c2, c2), cdm(c0), wfn(c0, cxp(c2, c2)))\n  fndm(c0, cxp(c2, c2))\n  diff.hs2.c(c2)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(c2)\n  diff.hs1.c(c2)\n  diff.hs0.w(wceq(co(cv(hs1), c1, cv(hs2)), co(cv(hs1), c0, cv(hs2))))\n  diff.hs1.w(wceq(cfv(c1, cv(hs0)), cfv(c0, cv(hs0))))\n  diff.hs2.w(wceq(cfv(c1, cv(hs0)), cfv(c0, cv(hs0))))\n  diff.hs0.c(c0)\n  diff.hs0.c(cxp(c2, c2))\n  diff.hs0.c(c1)\n}","pretty":"thm plusfreseq(class c0, class c1, class c2, class c3) {\n  ⊢ (∅ ∉ ran(c0)→(c1 |`(c2 × c2))= c0)\n  ⊣ c2 =(Base ` c3)\n  ⊣ c1 =(+ ` c3)\n  ⊣ c0 =(+f ` c3)\n} = {\n  syl3anc(∅ ∉ ran(c0), (c1 |`(c2 × c2))= c0, Fun(c0), ∅ ∉ ran(c0), ∀(hs0 ∈(c2 × c2),(c1 ` hs0)=(c0 ` hs0)))\n  a1i(∅ ∉ ran(c0), Fun(c0))\n  ax-mp(Fun(c0), c0[Fn](c2 × c2))\n  fnfun(c0, (c2 × c2))\n  id(∅ ∉ ran(c0))\n  sylibr(∅ ∉ ran(c0), ∀(hs0 ∈(c2 × c2),(c1 ` hs0)=(c0 ` hs0)), ∀(hs1 ∈ c2, ∀(hs2 ∈ c2,(hs1[c1]hs2)=(hs1[c0]hs2))))\n  a1i(∅ ∉ ran(c0), ∀(hs1 ∈ c2, ∀(hs2 ∈ c2,(hs1[c1]hs2)=(hs1[c0]hs2))))\n  rgen2a(hs1, hs2, c2, (hs1[c1]hs2)=(hs1[c0]hs2))\n  eqcomd((hs1[c1]hs2), (hs1[c0]hs2), (hs1 ∈ c2 ∧ hs2 ∈ c2))\n  plusfval(hs1, c2, hs2, c0, c1, c3)\n  ralxp(hs0, hs1, hs2, c2, c2, (c1 ` hs0)=(c0 ` hs0), (hs1[c1]hs2)=(hs1[c0]hs2))\n  eqeq12d((c1 ` hs0), (c0 ` hs0), (hs1[c1]hs2), (hs1[c0]hs2), hs0 = < hs1, hs2 >)\n  syl6eqr((c1 ` hs0), (hs1[c1]hs2), (c1 ` < hs1, hs2 >), hs0 = < hs1, hs2 >)\n  fveq2(hs0, < hs1, hs2 >, c1)\n  df-ov(hs1, c1, hs2)\n  syl6eqr((c0 ` hs0), (hs1[c0]hs2), (c0 ` < hs1, hs2 >), hs0 = < hs1, hs2 >)\n  fveq2(hs0, < hs1, hs2 >, c0)\n  df-ov(hs1, c0, hs2)\n  fveqressseq(hs0, c0, (c2 × c2), c1)\n  ax-mp((c2 × c2)= dom(c0), c0[Fn](c2 × c2))\n  plusffn(c0, c2, c3)\n  eqcomd((c2 × c2), dom(c0), c0[Fn](c2 × c2))\n  fndm(c0, (c2 × c2))\n  diff.hs2.c(c2)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(c2)\n  diff.hs1.c(c2)\n  diff.hs0.w((hs1[c1]hs2)=(hs1[c0]hs2))\n  diff.hs1.w((c1 ` hs0)=(c0 ` hs0))\n  diff.hs2.w((c1 ` hs0)=(c0 ` hs0))\n  diff.hs0.c(c0)\n  diff.hs0.c((c2 × c2))\n  diff.hs0.c(c1)\n}","parent":["syl3anc","a1i","ax-mp","fnfun","id","sylibr","rgen2a","eqcomd","plusfval","ralxp","eqeq12d","syl6eqr","fveq2","df-ov","fveqressseq","plusffn","fndm","diff.hs2.c","diff.hs0.s","diff.hs1.s","diff.hs0.c","diff.hs1.c","diff.hs0.w","diff.hs1.w","diff.hs2.w"],"children":["mgmplusfreseq"]},{"name":"mgmplusfreseq","content":"If the empty set is not contained in the base set of a magma, the restriction of the addition operation to (the Cartesian square of) the base set is the functionalization of it. (Contributed by AV, 28-Jan-2020.)","origin":"thm mgmplusfreseq(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, cmgm), wnel(emptycls, c1)), wceq(cres(c2, cxp(c1, c1)), c3))\n  -| wceq(c1, cfv(cbs, c0))\n  -| wceq(c2, cfv(cplusg, c0))\n  -| wceq(c3, cfv(cplusf, c0))\n} = {\n  syl(wa(wcel(c0, cmgm), wnel(emptycls, c1)), wceq(cres(c2, cxp(c1, c1)), c3), wnel(emptycls, crn(c3)))\n  imp(wcel(c0, cmgm), wnel(emptycls, c1), wnel(emptycls, crn(c3)))\n  3syl(wcel(c0, cmgm), wi(wnel(emptycls, c1), wnel(emptycls, crn(c3))), wf(c3, cxp(c1, c1), c1), wss(crn(c3), c1))\n  mgmplusf(c0, c3, c1)\n  frn(c3, cxp(c1, c1), c1)\n  nelcon3d(emptycls, c1, emptycls, crn(c3), wss(crn(c3), c1))\n  ssel(crn(c3), c1, emptycls)\n  plusfreseq(c3, c2, c1, c0)\n}","pretty":"thm mgmplusfreseq(class c0, class c1, class c2, class c3) {\n  ⊢ ((c0 ∈ Mgm ∧ ∅ ∉ c1)→(c2 |`(c1 × c1))= c3)\n  ⊣ c1 =(Base ` c0)\n  ⊣ c2 =(+ ` c0)\n  ⊣ c3 =(+f ` c0)\n} = {\n  syl((c0 ∈ Mgm ∧ ∅ ∉ c1), (c2 |`(c1 × c1))= c3, ∅ ∉ ran(c3))\n  imp(c0 ∈ Mgm, ∅ ∉ c1, ∅ ∉ ran(c3))\n  3syl(c0 ∈ Mgm, (∅ ∉ c1 → ∅ ∉ ran(c3)), (c3 :(c1 × c1)→ c1), ran(c3)⊆ c1)\n  mgmplusf(c0, c3, c1)\n  frn(c3, (c1 × c1), c1)\n  nelcon3d(emptycls, c1, emptycls, ran(c3), ran(c3)⊆ c1)\n  ssel(ran(c3), c1, emptycls)\n  plusfreseq(c3, c2, c1, c0)\n}","parent":["syl","imp","3syl","mgmplusf","frn","nelcon3d","ssel","plusfreseq"],"children":[]},{"name":"0mgm","content":"A set with an empty base set is always a magma\". (Contributed by AV, 25-Feb-2020.)","origin":"thm 0mgm(class c0, class c1) {\n  |- wi(wcel(c0, c1), wcel(c0, cmgm))\n  -| wceq(cfv(cbs, c0), emptycls)\n} = {\n  mpbiri(wcel(c0, c1), wcel(c0, cmgm), wral(hs0, emptycls, wral(hs1, emptycls, wcel(co(cv(hs0), cfv(cplusg, c0), cv(hs1)), emptycls))))\n  ral0(hs0, wral(hs1, emptycls, wcel(co(cv(hs0), cfv(cplusg, c0), cv(hs1)), emptycls)))\n  ismgm(hs0, hs1, c0, c1, emptycls, cfv(cplusg, c0))\n  eqcomi(emptycls, cfv(cbs, c0))\n  eqid(cfv(cplusg, c0))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(emptycls)\n  diff.hs0.c(cfv(cplusg, c0))\n  diff.hs1.c(c0)\n  diff.hs1.c(emptycls)\n  diff.hs1.c(cfv(cplusg, c0))\n}","pretty":"thm 0mgm(class c0, class c1) {\n  ⊢ (c0 ∈ c1 → c0 ∈ Mgm)\n  ⊣ (Base ` c0)= ∅\n} = {\n  mpbiri(c0 ∈ c1, c0 ∈ Mgm, ∀(hs0 ∈ ∅, ∀(hs1 ∈ ∅,(hs0[(+ ` c0)]hs1)∈ ∅)))\n  ral0(hs0, ∀(hs1 ∈ ∅,(hs0[(+ ` c0)]hs1)∈ ∅))\n  ismgm(hs0, hs1, c0, c1, emptycls, (+ ` c0))\n  eqcomi(emptycls, (Base ` c0))\n  eqid((+ ` c0))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(emptycls)\n  diff.hs0.c((+ ` c0))\n  diff.hs1.c(c0)\n  diff.hs1.c(emptycls)\n  diff.hs1.c((+ ` c0))\n}","parent":["mpbiri","ral0","ismgm","eqcomi","eqid","diff.hs0.s","diff.hs0.c","diff.hs1.c"],"children":[]},{"name":"mgmpropd","content":"If two structures have the same (nonempty) base set, and the values of their group (addition) operations are equal for all pairs of elements of the base set, one is a magma iff the other one is. (Contributed by AV, 25-Feb-2020.)","origin":"thm mgmpropd(setvar s0, setvar s1, class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wb(wcel(c0, cmgm), wcel(c1, cmgm)))\n  -| wi(w0, wceq(c2, cfv(cbs, c0)))\n  -| wi(w0, wceq(c2, cfv(cbs, c1)))\n  -| wi(w0, wne(c2, emptycls))\n  -| wi(wa(w0, wa(wcel(cv(s0), c2), wcel(cv(s1), c2))), wceq(co(cv(s0), cfv(cplusg, c0), cv(s1)), co(cv(s0), cfv(cplusg, c1), cv(s1))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n} = {\n  3bitr4d(w0, wcel(c0, cmgm), wcel(c1, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0)))), wral(s0, cfv(cbs, c1), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1)))))\n  bitrd(w0, wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0)))), wral(s0, cfv(cbs, c1), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1)))), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c0)))))\n  2ralbidva(s0, s1, cfv(cbs, c0), cfv(cbs, c0), w0, wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0)), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c0)))\n  eleq1d(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0), co(cv(s0), cfv(cplusg, c1), cv(s1)), wa(w0, wa(wcel(cv(s0), cfv(cbs, c0)), wcel(cv(s1), cfv(cbs, c0)))))\n  syl12anc(wa(w0, wa(wcel(cv(s0), cfv(cbs, c0)), wcel(cv(s1), cfv(cbs, c0)))), wceq(co(cv(s0), cfv(cplusg, c0), cv(s1)), co(cv(s0), cfv(cplusg, c1), cv(s1))), w0, wcel(cv(s0), c2), wcel(cv(s1), c2))\n  simpl(w0, wa(wcel(cv(s0), cfv(cbs, c0)), wcel(cv(s1), cfv(cbs, c0))))\n  impcom(w0, wa(wcel(cv(s0), cfv(cbs, c0)), wcel(cv(s1), cfv(cbs, c0))), wcel(cv(s0), c2))\n  adantr(wcel(cv(s0), cfv(cbs, c0)), wcel(cv(s1), cfv(cbs, c0)), wi(w0, wcel(cv(s0), c2)))\n  biimpcd(wcel(cv(s0), cfv(cbs, c0)), w0, wcel(cv(s0), c2))\n  eleq2d(cv(s0), cfv(cbs, c0), c2, w0)\n  imp(w0, wa(wcel(cv(s0), cfv(cbs, c0)), wcel(cv(s1), cfv(cbs, c0))), wcel(cv(s1), c2))\n  adantld(w0, wcel(cv(s0), cfv(cbs, c0)), wcel(cv(s1), cfv(cbs, c0)), wcel(cv(s1), c2))\n  biimpd(w0, wcel(cv(s1), cfv(cbs, c0)), wcel(cv(s1), c2))\n  eleq2d(cv(s1), cfv(cbs, c0), c2, w0)\n  eqcomd(cfv(cbs, c0), c2, w0)\n  raleqbidv(s0, cfv(cbs, c0), cfv(cbs, c1), w0, wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c0))), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1))))\n  raleqbidv(s1, cfv(cbs, c0), cfv(cbs, c1), w0, wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c0)), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1)))\n  eleq2d(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c0), cfv(cbs, c1), w0)\n  eqtr3d(cfv(cbs, c0), cfv(cbs, c1), c2, w0)\n  mpd(w0, wb(wcel(c0, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0))))), wne(c2, emptycls))\n  syl5bi(w0, wne(c2, emptycls), wb(wcel(c0, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0))))), wex(hs0, wcel(cv(hs0), c2)))\n  exlimdv(hs0, w0, wcel(cv(hs0), c2), wb(wcel(c0, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0))))))\n  syl6bi(w0, wcel(cv(hs0), c2), wb(wcel(c0, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0))))), wcel(cv(hs0), cfv(cbs, c0)))\n  eleq2d(cv(hs0), c2, cfv(cbs, c0), w0)\n  ismgmn0(s0, s1, cv(hs0), cfv(cbs, c0), c0, cfv(cplusg, c0))\n  eqid(cfv(cbs, c0))\n  eqid(cfv(cplusg, c0))\n  mpd(w0, wb(wcel(c1, cmgm), wral(s0, cfv(cbs, c1), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1))))), wne(c2, emptycls))\n  syl5bi(w0, wne(c2, emptycls), wb(wcel(c1, cmgm), wral(s0, cfv(cbs, c1), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1))))), wex(hs0, wcel(cv(hs0), c2)))\n  n0(hs0, c2)\n  exlimdv(hs0, w0, wcel(cv(hs0), c2), wb(wcel(c1, cmgm), wral(s0, cfv(cbs, c1), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1))))))\n  syl6bi(w0, wcel(cv(hs0), c2), wb(wcel(c1, cmgm), wral(s0, cfv(cbs, c1), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1))))), wcel(cv(hs0), cfv(cbs, c1)))\n  eleq2d(cv(hs0), c2, cfv(cbs, c1), w0)\n  ismgmn0(s0, s1, cv(hs0), cfv(cbs, c1), c1, cfv(cplusg, c1))\n  eqid(cfv(cbs, c1))\n  eqid(cfv(cplusg, c1))\n  diff.cfv.s(s1, cbs, c0)\n  diff.hs0.c(c2)\n  diff.hs0.w(w0)\n  diff.hs0.w(wb(wcel(c0, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0))))))\n  diff.cfv.s(s0, cbs, c0)\n  diff.cfv.s(s0, cplusg, c0)\n  diff.cfv.s(s1, cplusg, c0)\n  diff.hs0.w(wb(wcel(c1, cmgm), wral(s0, cfv(cbs, c1), wral(s1, cfv(cbs, c1), wcel(co(cv(s0), cfv(cplusg, c1), cv(s1)), cfv(cbs, c1))))))\n  diff.cfv.s(s0, cbs, c1)\n  diff.cbs.s(s0)\n  diff.cfv.s(s0, cplusg, c1)\n  diff.cplusg.s(s0)\n  diff.cfv.s(s1, cbs, c1)\n  diff.cbs.s(s1)\n  diff.cfv.s(s1, cplusg, c1)\n  diff.cplusg.s(s1)\n}","pretty":"thm mgmpropd(setvar s0, setvar s1, class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 ∈ Mgm ↔ c1 ∈ Mgm))\n  ⊣ (w0 → c2 =(Base ` c0))\n  ⊣ (w0 → c2 =(Base ` c1))\n  ⊣ (w0 → c2 ≠ ∅)\n  ⊣ ((w0 ∧(s0 ∈ c2 ∧ s1 ∈ c2))→(s0[(+ ` c0)]s1)=(s0[(+ ` c1)]s1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n} = {\n  3bitr4d(w0, c0 ∈ Mgm, c1 ∈ Mgm, ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0))), ∀(s0 ∈(Base ` c1), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1))))\n  bitrd(w0, ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0))), ∀(s0 ∈(Base ` c1), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1))), ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c1)]s1)∈(Base ` c0))))\n  2ralbidva(s0, s1, (Base ` c0), (Base ` c0), w0, (s0[(+ ` c0)]s1)∈(Base ` c0), (s0[(+ ` c1)]s1)∈(Base ` c0))\n  eleq1d((s0[(+ ` c0)]s1), (Base ` c0), (s0[(+ ` c1)]s1), (w0 ∧(s0 ∈(Base ` c0)∧ s1 ∈(Base ` c0))))\n  syl12anc((w0 ∧(s0 ∈(Base ` c0)∧ s1 ∈(Base ` c0))), (s0[(+ ` c0)]s1)=(s0[(+ ` c1)]s1), w0, s0 ∈ c2, s1 ∈ c2)\n  simpl(w0, (s0 ∈(Base ` c0)∧ s1 ∈(Base ` c0)))\n  impcom(w0, (s0 ∈(Base ` c0)∧ s1 ∈(Base ` c0)), s0 ∈ c2)\n  adantr(s0 ∈(Base ` c0), s1 ∈(Base ` c0), (w0 → s0 ∈ c2))\n  biimpcd(s0 ∈(Base ` c0), w0, s0 ∈ c2)\n  eleq2d(s0, (Base ` c0), c2, w0)\n  imp(w0, (s0 ∈(Base ` c0)∧ s1 ∈(Base ` c0)), s1 ∈ c2)\n  adantld(w0, s0 ∈(Base ` c0), s1 ∈(Base ` c0), s1 ∈ c2)\n  biimpd(w0, s1 ∈(Base ` c0), s1 ∈ c2)\n  eleq2d(s1, (Base ` c0), c2, w0)\n  eqcomd((Base ` c0), c2, w0)\n  raleqbidv(s0, (Base ` c0), (Base ` c1), w0, ∀(s1 ∈(Base ` c0),(s0[(+ ` c1)]s1)∈(Base ` c0)), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1)))\n  raleqbidv(s1, (Base ` c0), (Base ` c1), w0, (s0[(+ ` c1)]s1)∈(Base ` c0), (s0[(+ ` c1)]s1)∈(Base ` c1))\n  eleq2d((s0[(+ ` c1)]s1), (Base ` c0), (Base ` c1), w0)\n  eqtr3d((Base ` c0), (Base ` c1), c2, w0)\n  mpd(w0, (c0 ∈ Mgm ↔ ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0)))), c2 ≠ ∅)\n  syl5bi(w0, c2 ≠ ∅, (c0 ∈ Mgm ↔ ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0)))), ∃(hs0, hs0 ∈ c2))\n  exlimdv(hs0, w0, hs0 ∈ c2, (c0 ∈ Mgm ↔ ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0)))))\n  syl6bi(w0, hs0 ∈ c2, (c0 ∈ Mgm ↔ ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0)))), hs0 ∈(Base ` c0))\n  eleq2d(hs0, c2, (Base ` c0), w0)\n  ismgmn0(s0, s1, hs0, (Base ` c0), c0, (+ ` c0))\n  eqid((Base ` c0))\n  eqid((+ ` c0))\n  mpd(w0, (c1 ∈ Mgm ↔ ∀(s0 ∈(Base ` c1), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1)))), c2 ≠ ∅)\n  syl5bi(w0, c2 ≠ ∅, (c1 ∈ Mgm ↔ ∀(s0 ∈(Base ` c1), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1)))), ∃(hs0, hs0 ∈ c2))\n  n0(hs0, c2)\n  exlimdv(hs0, w0, hs0 ∈ c2, (c1 ∈ Mgm ↔ ∀(s0 ∈(Base ` c1), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1)))))\n  syl6bi(w0, hs0 ∈ c2, (c1 ∈ Mgm ↔ ∀(s0 ∈(Base ` c1), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1)))), hs0 ∈(Base ` c1))\n  eleq2d(hs0, c2, (Base ` c1), w0)\n  ismgmn0(s0, s1, hs0, (Base ` c1), c1, (+ ` c1))\n  eqid((Base ` c1))\n  eqid((+ ` c1))\n  diff.cfv.s(s1, cbs, c0)\n  diff.hs0.c(c2)\n  diff.hs0.w(w0)\n  diff.hs0.w((c0 ∈ Mgm ↔ ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0)))))\n  diff.cfv.s(s0, cbs, c0)\n  diff.cfv.s(s0, cplusg, c0)\n  diff.cfv.s(s1, cplusg, c0)\n  diff.hs0.w((c1 ∈ Mgm ↔ ∀(s0 ∈(Base ` c1), ∀(s1 ∈(Base ` c1),(s0[(+ ` c1)]s1)∈(Base ` c1)))))\n  diff.cfv.s(s0, cbs, c1)\n  diff.cbs.s(s0)\n  diff.cfv.s(s0, cplusg, c1)\n  diff.cplusg.s(s0)\n  diff.cfv.s(s1, cbs, c1)\n  diff.cbs.s(s1)\n  diff.cfv.s(s1, cplusg, c1)\n  diff.cplusg.s(s1)\n}","parent":["3bitr4d","bitrd","2ralbidva","eleq1d","syl12anc","simpl","impcom","adantr","biimpcd","eleq2d","imp","adantld","biimpd","eqcomd","raleqbidv","eqtr3d","mpd","syl5bi","exlimdv","syl6bi","ismgmn0","eqid","n0","diff.cfv.s","diff.hs0.c","diff.hs0.w","diff.cbs.s","diff.cplusg.s"],"children":["mgmhmpropd"]},{"name":"ismgmd","content":"Deduce a magma from its properties. (Contributed by AV, 25-Feb-2020.)","origin":"thm ismgmd(setvar s0, setvar s1, class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(w0, wcel(c0, cmgm))\n  -| wi(w0, wceq(c1, cfv(cbs, c0)))\n  -| wi(w0, wcel(c0, c2))\n  -| wi(w0, wceq(c3, cfv(cplusg, c0)))\n  -| wi(w3a(w0, wcel(cv(s0), c1), wcel(cv(s1), c1)), wcel(co(cv(s0), c3, cv(s1)), c1))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n} = {\n  a1ii(wi(w0, wcel(c0, cmgm)), diffsc(s0, c1))\n  mpbird(w0, wcel(c0, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0)))))\n  mpbid(w0, wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0)))), wral(s0, c1, wral(s1, c1, wcel(co(cv(s0), c3, cv(s1)), c1))))\n  ralrimivva(s0, s1, c1, c1, w0, wcel(co(cv(s0), c3, cv(s1)), c1))\n  3expb(w0, wcel(cv(s0), c1), wcel(cv(s1), c1), wcel(co(cv(s0), c3, cv(s1)), c1))\n  raleqbidv(s0, c1, cfv(cbs, c0), w0, wral(s1, c1, wcel(co(cv(s0), c3, cv(s1)), c1)), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0))))\n  raleqbidv(s1, c1, cfv(cbs, c0), w0, wcel(co(cv(s0), c3, cv(s1)), c1), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0)))\n  eleq12d(co(cv(s0), c3, cv(s1)), c1, co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0), w0)\n  oveqd(cv(s0), c3, cv(s1), cfv(cplusg, c0), w0)\n  syl(w0, wb(wcel(c0, cmgm), wral(s0, cfv(cbs, c0), wral(s1, cfv(cbs, c0), wcel(co(cv(s0), cfv(cplusg, c0), cv(s1)), cfv(cbs, c0))))), wcel(c0, c2))\n  ismgm(s0, s1, c0, c2, cfv(cbs, c0), cfv(cplusg, c0))\n  eqid(cfv(cbs, c0))\n  eqid(cfv(cplusg, c0))\n  diff.cfv.s(s0, cbs, c0)\n  diff.cbs.s(s0)\n  diff.cfv.s(s0, cplusg, c0)\n  diff.cplusg.s(s0)\n  diff.cfv.s(s1, cbs, c0)\n  diff.cbs.s(s1)\n  diff.cfv.s(s1, cplusg, c0)\n  diff.cplusg.s(s1)\n}","pretty":"thm ismgmd(setvar s0, setvar s1, class c0, class c1, class c2, class c3, wff w0) {\n  ⊢ (w0 → c0 ∈ Mgm)\n  ⊣ (w0 → c1 =(Base ` c0))\n  ⊣ (w0 → c0 ∈ c2)\n  ⊣ (w0 → c3 =(+ ` c0))\n  ⊣ ((w0 ∧ s0 ∈ c1 ∧ s1 ∈ c1)→(s0[c3]s1)∈ c1)\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n} = {\n  a1ii((w0 → c0 ∈ Mgm), d(s0, c1))\n  mpbird(w0, c0 ∈ Mgm, ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0))))\n  mpbid(w0, ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0))), ∀(s0 ∈ c1, ∀(s1 ∈ c1,(s0[c3]s1)∈ c1)))\n  ralrimivva(s0, s1, c1, c1, w0, (s0[c3]s1)∈ c1)\n  3expb(w0, s0 ∈ c1, s1 ∈ c1, (s0[c3]s1)∈ c1)\n  raleqbidv(s0, c1, (Base ` c0), w0, ∀(s1 ∈ c1,(s0[c3]s1)∈ c1), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0)))\n  raleqbidv(s1, c1, (Base ` c0), w0, (s0[c3]s1)∈ c1, (s0[(+ ` c0)]s1)∈(Base ` c0))\n  eleq12d((s0[c3]s1), c1, (s0[(+ ` c0)]s1), (Base ` c0), w0)\n  oveqd(s0, c3, s1, (+ ` c0), w0)\n  syl(w0, (c0 ∈ Mgm ↔ ∀(s0 ∈(Base ` c0), ∀(s1 ∈(Base ` c0),(s0[(+ ` c0)]s1)∈(Base ` c0)))), c0 ∈ c2)\n  ismgm(s0, s1, c0, c2, (Base ` c0), (+ ` c0))\n  eqid((Base ` c0))\n  eqid((+ ` c0))\n  diff.cfv.s(s0, cbs, c0)\n  diff.cbs.s(s0)\n  diff.cfv.s(s0, cplusg, c0)\n  diff.cplusg.s(s0)\n  diff.cfv.s(s1, cbs, c0)\n  diff.cbs.s(s1)\n  diff.cfv.s(s1, cplusg, c0)\n  diff.cplusg.s(s1)\n}","parent":["a1ii","mpbird","mpbid","ralrimivva","3expb","raleqbidv","eleq12d","oveqd","syl","ismgm","eqid","diff.cfv.s","diff.cbs.s","diff.cplusg.s"],"children":["issubmgm2"]}]}