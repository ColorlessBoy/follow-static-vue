{"index":1581,"title":"Algebra helper examples","content":"Examples using the algebra helpers.","blocks":[{"name":"i2linesi","content":"Solve for the intersection of two lines expressed in Y = MX+B form (note that the lines cannot be vertical). Here we use inference form. We just solve for X, since Y can be trivially found by using X. This is an example of how to use the algebra helpers. Notice that because this proof uses algebra helpers, the main steps of the proof are higher level and easier to follow by a human reader. (Contributed by David A. Wheeler, 11-Oct-2018.)","origin":"thm i2linesi(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wceq(c0, co(co(c1, cmin, c2), cdiv, co(c3, cmin, c4)))\n  -| wcel(c3, cc)\n  -| wcel(c2, cc)\n  -| wcel(c4, cc)\n  -| wcel(c1, cc)\n  -| wcel(c0, cc)\n  -| wceq(c5, co(co(c3, cmul, c0), caddc, c2))\n  -| wceq(c5, co(co(c4, cmul, c0), caddc, c1))\n  -| wne(co(c3, cmin, c4), nat0)\n} = {\n  mvllmuli(c0, co(c1, cmin, c2), co(c3, cmin, c4))\n  subcli(c3, c4)\n  joinlmulsubmuli(c3, c4, c0, co(c1, cmin, c2))\n  mvrladdi(co(c3, cmul, c0), co(c4, cmul, c0), co(c1, cmin, c2))\n  subcli(c1, c2)\n  assraddsubi(co(c3, cmul, c0), co(c4, cmul, c0), c1, c2)\n  mulcli(c4, c0)\n  mvlraddi(co(c3, cmul, c0), co(co(c4, cmul, c0), caddc, c1), c2)\n  mulcli(c3, c0)\n  eqtr3i(co(co(c3, cmul, c0), caddc, c2), co(co(c4, cmul, c0), caddc, c1), c5)\n}","pretty":"thm i2linesi(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ c0 =((c1[-]c2)[÷](c3[-]c4))\n  ⊣ c3 ∈ ℂ\n  ⊣ c2 ∈ ℂ\n  ⊣ c4 ∈ ℂ\n  ⊣ c1 ∈ ℂ\n  ⊣ c0 ∈ ℂ\n  ⊣ c5 =((c3[×]c0)[+]c2)\n  ⊣ c5 =((c4[×]c0)[+]c1)\n  ⊣ (c3[-]c4)≠ 0\n} = {\n  mvllmuli(c0, (c1[-]c2), (c3[-]c4))\n  subcli(c3, c4)\n  joinlmulsubmuli(c3, c4, c0, (c1[-]c2))\n  mvrladdi((c3[×]c0), (c4[×]c0), (c1[-]c2))\n  subcli(c1, c2)\n  assraddsubi((c3[×]c0), (c4[×]c0), c1, c2)\n  mulcli(c4, c0)\n  mvlraddi((c3[×]c0), ((c4[×]c0)[+]c1), c2)\n  mulcli(c3, c0)\n  eqtr3i(((c3[×]c0)[+]c2), ((c4[×]c0)[+]c1), c5)\n}","parent":["mvllmuli","subcli","joinlmulsubmuli","mvrladdi","assraddsubi","mulcli","mvlraddi","eqtr3i"],"children":[]},{"name":"i2linesd","content":"Solve for the intersection of two lines expressed in Y = MX+B form (note that the lines cannot be vertical). Here we use deduction form. We just solve for X, since Y can be trivially found by using X. This is an example of how to use the algebra helpers. Notice that because this proof uses algebra helpers, the main steps of the proof are higher level and easier to follow by a human reader. (Contributed by David A. Wheeler, 15-Oct-2018.)","origin":"thm i2linesd(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(c0, co(co(c1, cmin, c2), cdiv, co(c3, cmin, c4))))\n  -| wi(w0, wcel(c3, cc))\n  -| wi(w0, wcel(c2, cc))\n  -| wi(w0, wcel(c4, cc))\n  -| wi(w0, wcel(c1, cc))\n  -| wi(w0, wcel(c0, cc))\n  -| wi(w0, wceq(c5, co(co(c3, cmul, c0), caddc, c2)))\n  -| wi(w0, wceq(c5, co(co(c4, cmul, c0), caddc, c1)))\n  -| wi(w0, wne(co(c3, cmin, c4), nat0))\n} = {\n  mvllmuld(c0, co(c1, cmin, c2), co(c3, cmin, c4), w0)\n  subcld(c3, c4, w0)\n  joinlmulsubmuld(c3, c4, c0, co(c1, cmin, c2), w0)\n  mvrladdd(co(c3, cmul, c0), co(c4, cmul, c0), co(c1, cmin, c2), w0)\n  subcld(c1, c2, w0)\n  assraddsubd(co(c3, cmul, c0), co(c4, cmul, c0), c1, c2, w0)\n  mulcld(c4, c0, w0)\n  mvlraddd(co(c3, cmul, c0), co(co(c4, cmul, c0), caddc, c1), c2, w0)\n  mulcld(c3, c0, w0)\n  eqtr3d(co(co(c3, cmul, c0), caddc, c2), co(co(c4, cmul, c0), caddc, c1), c5, w0)\n}","pretty":"thm i2linesd(class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ⊢ (w0 → c0 =((c1[-]c2)[÷](c3[-]c4)))\n  ⊣ (w0 → c3 ∈ ℂ)\n  ⊣ (w0 → c2 ∈ ℂ)\n  ⊣ (w0 → c4 ∈ ℂ)\n  ⊣ (w0 → c1 ∈ ℂ)\n  ⊣ (w0 → c0 ∈ ℂ)\n  ⊣ (w0 → c5 =((c3[×]c0)[+]c2))\n  ⊣ (w0 → c5 =((c4[×]c0)[+]c1))\n  ⊣ (w0 →(c3[-]c4)≠ 0)\n} = {\n  mvllmuld(c0, (c1[-]c2), (c3[-]c4), w0)\n  subcld(c3, c4, w0)\n  joinlmulsubmuld(c3, c4, c0, (c1[-]c2), w0)\n  mvrladdd((c3[×]c0), (c4[×]c0), (c1[-]c2), w0)\n  subcld(c1, c2, w0)\n  assraddsubd((c3[×]c0), (c4[×]c0), c1, c2, w0)\n  mulcld(c4, c0, w0)\n  mvlraddd((c3[×]c0), ((c4[×]c0)[+]c1), c2, w0)\n  mulcld(c3, c0, w0)\n  eqtr3d(((c3[×]c0)[+]c2), ((c4[×]c0)[+]c1), c5, w0)\n}","parent":["mvllmuld","subcld","joinlmulsubmuld","mvrladdd","assraddsubd","mulcld","mvlraddd","eqtr3d"],"children":[]}]}