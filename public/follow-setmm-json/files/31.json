{"index":31,"title":"Full adder: sum","content":"","blocks":[{"name":"whad","content":"Syntax for the \"sum\" output of the full adder. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"prop wff whad(wff w0, wff w1, wff w2) { hadd(w0, w1, w2) }","pretty":"","parent":[],"children":[]},{"name":"diff.whad.s","content":"","origin":"axiom diff.whad.s(setvar sBase, wff w0, wff w1, wff w2) {\n  |- diffsw(sBase, whad(w0, w1, w2))\n  -| diffsw(sBase, w0)\n  -| diffsw(sBase, w1)\n  -| diffsw(sBase, w2)\n}","pretty":"axiom diff.whad.s(setvar sBase, wff w0, wff w1, wff w2) {\n  ⊢ d(sBase, hadd(w0, w1, w2))\n  ⊣ d(sBase, w0)\n  ⊣ d(sBase, w1)\n  ⊣ d(sBase, w2)\n}","parent":[],"children":[]},{"name":"diff.whad.c","content":"","origin":"axiom diff.whad.c(class cBase, wff w0, wff w1, wff w2) {\n  |- diffcw(cBase, whad(w0, w1, w2))\n  -| diffcw(cBase, w0)\n  -| diffcw(cBase, w1)\n  -| diffcw(cBase, w2)\n}","pretty":"axiom diff.whad.c(class cBase, wff w0, wff w1, wff w2) {\n  ⊢ d(cBase, hadd(w0, w1, w2))\n  ⊣ d(cBase, w0)\n  ⊣ d(cBase, w1)\n  ⊣ d(cBase, w2)\n}","parent":[],"children":[]},{"name":"diff.whad.w","content":"","origin":"axiom diff.whad.w(wff wBase, wff w0, wff w1, wff w2) {\n  |- diffww(wBase, whad(w0, w1, w2))\n  -| diffww(wBase, w0)\n  -| diffww(wBase, w1)\n  -| diffww(wBase, w2)\n}","pretty":"axiom diff.whad.w(wff wBase, wff w0, wff w1, wff w2) {\n  ⊢ d(wBase, hadd(w0, w1, w2))\n  ⊣ d(wBase, w0)\n  ⊣ d(wBase, w1)\n  ⊣ d(wBase, w2)\n}","parent":[],"children":[]},{"name":"df-had","content":"Definition of the \"sum\" output of the full adder (triple exclusive disjunction, or XOR3). (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"axiom df-had(wff w0, wff w1, wff w2) {\n  |- wb(whad(w0, w1, w2), wxo(wxo(w0, w1), w2))\n}","pretty":"axiom df-had(wff w0, wff w1, wff w2) {\n  ⊢ (hadd(w0, w1, w2)↔((w0 ⊻ w1)⊻ w2))\n}","parent":[],"children":["hadbi123d","hadass","hadbi","hadcoma"]},{"name":"hadbi123d","content":"Equality theorem for the adder sum. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm hadbi123d(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5, wff w6) {\n  |- wi(w0, wb(whad(w1, w2, w3), whad(w4, w5, w6)))\n  -| wi(w0, wb(w1, w4))\n  -| wi(w0, wb(w2, w5))\n  -| wi(w0, wb(w3, w6))\n} = {\n  3bitr4g(w0, whad(w1, w2, w3), whad(w4, w5, w6), wxo(wxo(w1, w2), w3), wxo(wxo(w4, w5), w6))\n  xorbi12d(w0, wxo(w1, w2), w3, wxo(w4, w5), w6)\n  xorbi12d(w0, w1, w2, w4, w5)\n  df-had(w1, w2, w3)\n  df-had(w4, w5, w6)\n}","pretty":"thm hadbi123d(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5, wff w6) {\n  ⊢ (w0 →(hadd(w1, w2, w3)↔ hadd(w4, w5, w6)))\n  ⊣ (w0 →(w1 ↔ w4))\n  ⊣ (w0 →(w2 ↔ w5))\n  ⊣ (w0 →(w3 ↔ w6))\n} = {\n  3bitr4g(w0, hadd(w1, w2, w3), hadd(w4, w5, w6), ((w1 ⊻ w2)⊻ w3), ((w4 ⊻ w5)⊻ w6))\n  xorbi12d(w0, (w1 ⊻ w2), w3, (w4 ⊻ w5), w6)\n  xorbi12d(w0, w1, w2, w4, w5)\n  df-had(w1, w2, w3)\n  df-had(w4, w5, w6)\n}","parent":["3bitr4g","xorbi12d","df-had"],"children":["hadbi123i","sadfval","sadval"]},{"name":"hadbi123i","content":"Equality theorem for the adder sum. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm hadbi123i(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  |- wb(whad(w0, w1, w2), whad(w3, w4, w5))\n  -| wb(w0, w3)\n  -| wb(w1, w4)\n  -| wb(w2, w5)\n} = {\n  mptru(wb(whad(w0, w1, w2), whad(w3, w4, w5)))\n  hadbi123d(wtru, w0, w1, w2, w3, w4, w5)\n  a1i(wtru, wb(w0, w3))\n  a1i(wtru, wb(w1, w4))\n  a1i(wtru, wb(w2, w5))\n}","pretty":"thm hadbi123i(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  ⊢ (hadd(w0, w1, w2)↔ hadd(w3, w4, w5))\n  ⊣ (w0 ↔ w3)\n  ⊣ (w1 ↔ w4)\n  ⊣ (w2 ↔ w5)\n} = {\n  mptru((hadd(w0, w1, w2)↔ hadd(w3, w4, w5)))\n  hadbi123d(wtru, w0, w1, w2, w3, w4, w5)\n  a1i(wtru, (w0 ↔ w3))\n  a1i(wtru, (w1 ↔ w4))\n  a1i(wtru, (w2 ↔ w5))\n}","parent":["mptru","hadbi123d","a1i"],"children":[]},{"name":"hadass","content":"Associative law for the adder sum. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm hadass(wff w0, wff w1, wff w2) {\n  |- wb(whad(w0, w1, w2), wxo(w0, wxo(w1, w2)))\n} = {\n  bitri(whad(w0, w1, w2), wxo(w0, wxo(w1, w2)), wxo(wxo(w0, w1), w2))\n  df-had(w0, w1, w2)\n  xorass(w0, w1, w2)\n}","pretty":"thm hadass(wff w0, wff w1, wff w2) {\n  ⊢ (hadd(w0, w1, w2)↔(w0 ⊻(w1 ⊻ w2)))\n} = {\n  bitri(hadd(w0, w1, w2), (w0 ⊻(w1 ⊻ w2)), ((w0 ⊻ w1)⊻ w2))\n  df-had(w0, w1, w2)\n  xorass(w0, w1, w2)\n}","parent":["bitri","df-had","xorass"],"children":["hadcomb"]},{"name":"hadbi","content":"The adder sum is the same as the triple biconditional. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm hadbi(wff w0, wff w1, wff w2) {\n  |- wb(whad(w0, w1, w2), wb(wb(w0, w1), w2))\n} = {\n  3bitr4i(whad(w0, w1, w2), wb(wb(w0, w1), w2), wxo(wxo(w0, w1), w2), wn(wb(wxo(w0, w1), w2)))\n  df-xor(wxo(w0, w1), w2)\n  df-had(w0, w1, w2)\n  bitri(wb(wb(w0, w1), w2), wn(wb(wxo(w0, w1), w2)), wb(wn(wxo(w0, w1)), w2))\n  bibi1i(wb(w0, w1), w2, wn(wxo(w0, w1)))\n  xnor(w0, w1)\n  nbbn(wxo(w0, w1), w2)\n}","pretty":"thm hadbi(wff w0, wff w1, wff w2) {\n  ⊢ (hadd(w0, w1, w2)↔((w0 ↔ w1)↔ w2))\n} = {\n  3bitr4i(hadd(w0, w1, w2), ((w0 ↔ w1)↔ w2), ((w0 ⊻ w1)⊻ w2), ¬((w0 ⊻ w1)↔ w2))\n  df-xor((w0 ⊻ w1), w2)\n  df-had(w0, w1, w2)\n  bitri(((w0 ↔ w1)↔ w2), ¬((w0 ⊻ w1)↔ w2), (¬(w0 ⊻ w1)↔ w2))\n  bibi1i((w0 ↔ w1), w2, ¬(w0 ⊻ w1))\n  xnor(w0, w1)\n  nbbn((w0 ⊻ w1), w2)\n}","parent":["3bitr4i","df-xor","df-had","bitri","bibi1i","xnor","nbbn"],"children":["hadnot","had1"]},{"name":"hadcoma","content":"Commutative law for the adder sum. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm hadcoma(wff w0, wff w1, wff w2) {\n  |- wb(whad(w0, w1, w2), whad(w1, w0, w2))\n} = {\n  3bitr4i(whad(w0, w1, w2), whad(w1, w0, w2), wxo(wxo(w0, w1), w2), wxo(wxo(w1, w0), w2))\n  xorbi12i(wxo(w0, w1), w2, wxo(w1, w0), w2)\n  xorcom(w0, w1)\n  biid(w2)\n  df-had(w0, w1, w2)\n  df-had(w1, w0, w2)\n}","pretty":"thm hadcoma(wff w0, wff w1, wff w2) {\n  ⊢ (hadd(w0, w1, w2)↔ hadd(w1, w0, w2))\n} = {\n  3bitr4i(hadd(w0, w1, w2), hadd(w1, w0, w2), ((w0 ⊻ w1)⊻ w2), ((w1 ⊻ w0)⊻ w2))\n  xorbi12i((w0 ⊻ w1), w2, (w1 ⊻ w0), w2)\n  xorcom(w0, w1)\n  biid(w2)\n  df-had(w0, w1, w2)\n  df-had(w1, w0, w2)\n}","parent":["3bitr4i","xorbi12i","xorcom","biid","df-had"],"children":["hadrot","sadcom"]},{"name":"hadcomb","content":"Commutative law for the adders sum. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm hadcomb(wff w0, wff w1, wff w2) {\n  |- wb(whad(w0, w1, w2), whad(w0, w2, w1))\n} = {\n  3bitr4i(whad(w0, w1, w2), whad(w0, w2, w1), wxo(w0, wxo(w1, w2)), wxo(w0, wxo(w2, w1)))\n  xorbi12i(w0, wxo(w1, w2), w0, wxo(w2, w1))\n  biid(w0)\n  xorcom(w1, w2)\n  hadass(w0, w1, w2)\n  hadass(w0, w2, w1)\n}","pretty":"thm hadcomb(wff w0, wff w1, wff w2) {\n  ⊢ (hadd(w0, w1, w2)↔ hadd(w0, w2, w1))\n} = {\n  3bitr4i(hadd(w0, w1, w2), hadd(w0, w2, w1), (w0 ⊻(w1 ⊻ w2)), (w0 ⊻(w2 ⊻ w1)))\n  xorbi12i(w0, (w1 ⊻ w2), w0, (w2 ⊻ w1))\n  biid(w0)\n  xorcom(w1, w2)\n  hadass(w0, w1, w2)\n  hadass(w0, w2, w1)\n}","parent":["3bitr4i","xorbi12i","biid","xorcom","hadass"],"children":["hadrot"]},{"name":"hadrot","content":"Rotation law for the adder sum. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm hadrot(wff w0, wff w1, wff w2) {\n  |- wb(whad(w0, w1, w2), whad(w1, w2, w0))\n} = {\n  bitri(whad(w0, w1, w2), whad(w1, w2, w0), whad(w1, w0, w2))\n  hadcoma(w0, w1, w2)\n  hadcomb(w1, w0, w2)\n}","pretty":"thm hadrot(wff w0, wff w1, wff w2) {\n  ⊢ (hadd(w0, w1, w2)↔ hadd(w1, w2, w0))\n} = {\n  bitri(hadd(w0, w1, w2), hadd(w1, w2, w0), hadd(w1, w0, w2))\n  hadcoma(w0, w1, w2)\n  hadcomb(w1, w0, w2)\n}","parent":["bitri","hadcoma","hadcomb"],"children":["had1","sadadd2lem2","saddisjlem"]},{"name":"hadnot","content":"The adder sum distributes over negation. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 11-Jul-2020.)","origin":"thm hadnot(wff w0, wff w1, wff w2) {\n  |- wb(wn(whad(w0, w1, w2)), whad(wn(w0), wn(w1), wn(w2)))\n} = {\n  3bitr4i(wn(whad(w0, w1, w2)), whad(wn(w0), wn(w1), wn(w2)), wb(wb(w0, w1), wn(w2)), wb(wb(wn(w0), wn(w1)), wn(w2)))\n  bibi1i(wb(w0, w1), wn(w2), wb(wn(w0), wn(w1)))\n  notbi(w0, w1)\n  xchnxbir(whad(w0, w1, w2), wb(wb(w0, w1), wn(w2)), wb(wb(w0, w1), w2))\n  xor3(wb(w0, w1), w2)\n  hadbi(w0, w1, w2)\n  hadbi(wn(w0), wn(w1), wn(w2))\n}","pretty":"thm hadnot(wff w0, wff w1, wff w2) {\n  ⊢ (¬ hadd(w0, w1, w2)↔ hadd(¬ w0, ¬ w1, ¬ w2))\n} = {\n  3bitr4i(¬ hadd(w0, w1, w2), hadd(¬ w0, ¬ w1, ¬ w2), ((w0 ↔ w1)↔ ¬ w2), ((¬ w0 ↔ ¬ w1)↔ ¬ w2))\n  bibi1i((w0 ↔ w1), ¬ w2, (¬ w0 ↔ ¬ w1))\n  notbi(w0, w1)\n  xchnxbir(hadd(w0, w1, w2), ((w0 ↔ w1)↔ ¬ w2), ((w0 ↔ w1)↔ w2))\n  xor3((w0 ↔ w1), w2)\n  hadbi(w0, w1, w2)\n  hadbi(¬ w0, ¬ w1, ¬ w2)\n}","parent":["3bitr4i","bibi1i","notbi","xchnxbir","xor3","hadbi"],"children":["had0"]},{"name":"had1","content":"If the first input is true, then the adder sum is equivalent to the biconditionality of the other two inputs. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 11-Jul-2020.)","origin":"thm had1(wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(whad(w0, w1, w2), wb(w1, w2)))\n} = {\n  biimpri(w0, wb(whad(w0, w1, w2), wb(w1, w2)))\n  mpbir(wb(wb(whad(w0, w1, w2), wb(w1, w2)), w0), wb(whad(w0, w1, w2), wb(wb(w1, w2), w0)))\n  bitri(whad(w0, w1, w2), wb(wb(w1, w2), w0), whad(w1, w2, w0))\n  hadrot(w0, w1, w2)\n  hadbi(w1, w2, w0)\n  biass(whad(w0, w1, w2), wb(w1, w2), w0)\n}","pretty":"thm had1(wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(hadd(w0, w1, w2)↔(w1 ↔ w2)))\n} = {\n  biimpri(w0, (hadd(w0, w1, w2)↔(w1 ↔ w2)))\n  mpbir(((hadd(w0, w1, w2)↔(w1 ↔ w2))↔ w0), (hadd(w0, w1, w2)↔((w1 ↔ w2)↔ w0)))\n  bitri(hadd(w0, w1, w2), ((w1 ↔ w2)↔ w0), hadd(w1, w2, w0))\n  hadrot(w0, w1, w2)\n  hadbi(w1, w2, w0)\n  biass(hadd(w0, w1, w2), (w1 ↔ w2), w0)\n}","parent":["biimpri","mpbir","bitri","hadrot","hadbi","biass"],"children":["had0","hadifp","sadadd2lem2"]},{"name":"had0","content":"If the first input is false, then the adder sum is equivalent to the exclusive disjunction of the other two inputs. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 12-Jul-2020.)","origin":"thm had0(wff w0, wff w1, wff w2) {\n  |- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n} = {\n  con4bid(wn(w0), whad(w0, w1, w2), wxo(w1, w2))\n  3bitr4g(wn(w0), wn(whad(w0, w1, w2)), wn(wxo(w1, w2)), whad(wn(w0), wn(w1), wn(w2)), wb(wn(w1), wn(w2)))\n  had1(wn(w0), wn(w1), wn(w2))\n  hadnot(w0, w1, w2)\n  bitr3i(wn(wxo(w1, w2)), wb(wn(w1), wn(w2)), wb(w1, w2))\n  xnor(w1, w2)\n  notbi(w1, w2)\n}","pretty":"thm had0(wff w0, wff w1, wff w2) {\n  ⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n} = {\n  con4bid(¬ w0, hadd(w0, w1, w2), (w1 ⊻ w2))\n  3bitr4g(¬ w0, ¬ hadd(w0, w1, w2), ¬(w1 ⊻ w2), hadd(¬ w0, ¬ w1, ¬ w2), (¬ w1 ↔ ¬ w2))\n  had1(¬ w0, ¬ w1, ¬ w2)\n  hadnot(w0, w1, w2)\n  bitr3i(¬(w1 ⊻ w2), (¬ w1 ↔ ¬ w2), (w1 ↔ w2))\n  xnor(w1, w2)\n  notbi(w1, w2)\n}","parent":["con4bid","3bitr4g","had1","hadnot","bitr3i","xnor","notbi"],"children":["hadifp","sadadd2lem2","saddisjlem"]},{"name":"hadifp","content":"The value of the adder sum is, if the first input is true, the biconditionality, and if the first input is false, the exclusive disjunction, of the other two inputs. (Contributed by BJ, 11-Aug-2020.)","origin":"thm hadifp(wff w0, wff w1, wff w2) {\n  |- wb(whad(w0, w1, w2), wif(w0, wb(w1, w2), wxo(w1, w2)))\n} = {\n  casesifp(whad(w0, w1, w2), w0, wb(w1, w2), wxo(w1, w2))\n  had1(w0, w1, w2)\n  had0(w0, w1, w2)\n}","pretty":"thm hadifp(wff w0, wff w1, wff w2) {\n  ⊢ (hadd(w0, w1, w2)↔ if(w0,(w1 ↔ w2),(w1 ⊻ w2)))\n} = {\n  casesifp(hadd(w0, w1, w2), w0, (w1 ↔ w2), (w1 ⊻ w2))\n  had1(w0, w1, w2)\n  had0(w0, w1, w2)\n}","parent":["casesifp","had1","had0"],"children":[]}]}