{"index":21,"title":"The false constant","content":"","blocks":[{"name":"wfal","content":"The constant ` F. ` is a wff.","origin":"const wff wfal { F }","pretty":"","parent":[],"children":[]},{"name":"diff.wfal.s","content":"","origin":"axiom diff.wfal.s(setvar s0) {\n  |- diffsw(s0, wfal)\n}","pretty":"axiom diff.wfal.s(setvar s0) {\n  ⊢ d(s0, F)\n}","parent":[],"children":[]},{"name":"diff.wfal.c","content":"","origin":"axiom diff.wfal.c(class c0) {\n  |- diffcw(c0, wfal)\n}","pretty":"axiom diff.wfal.c(class c0) {\n  ⊢ d(c0, F)\n}","parent":[],"children":[]},{"name":"diff.wfal.w","content":"","origin":"axiom diff.wfal.w(wff w0) {\n  |- diffww(wfal, w0)\n}","pretty":"axiom diff.wfal.w(wff w0) {\n  ⊢ d(F, w0)\n}","parent":[],"children":[]},{"name":"df-fal","content":"Definition of the truth value \"false\", or \"falsum\", denoted by ` F. ` . See also ~ df-tru . (Contributed by Anthony Hart, 22-Oct-2010.)","origin":"axiom df-fal() {\n  |- wb(wfal, wn(wtru))\n}","pretty":"axiom df-fal() {\n  ⊢ (F ↔ ¬ T)\n}","parent":[],"children":["fal","nottru"]},{"name":"fal","content":"The truth value ` F. ` is refutable. (Contributed by Anthony Hart, 22-Oct-2010.) (Proof shortened by Mel L. O'Cat, 11-Mar-2012.)","origin":"thm fal() {\n  |- wn(wfal)\n} = {\n  mtbir(wfal, wn(wtru))\n  notnoti(wtru)\n  tru()\n  df-fal()\n}","pretty":"thm fal() {\n  ⊢ ¬ F\n} = {\n  mtbir(wfal, ¬ T)\n  notnoti(wtru)\n  tru()\n  df-fal()\n}","parent":["mtbir","notnoti","tru","df-fal"],"children":["nbfal","bifal","falim","dfnot","notfal","falantru","nffal","alfal","nonconne","csbprc","axnulALT","axnul","canthp1","rlimno1","1stccnp","nexfal","negsym1","nandsym1","subsym1","bj-falor","orfa","fald","dihglblem6","ifpdfan","ifpnot","ifpid2","ifpdfxor"]},{"name":"nbfal","content":"The negation of a proposition is equivalent to itself being equivalent to ` F. ` . (Contributed by Anthony Hart, 14-Aug-2011.)","origin":"thm nbfal(wff w0) {\n  |- wb(wn(w0), wb(w0, wfal))\n} = {\n  nbn(w0, wfal)\n  fal()\n}","pretty":"thm nbfal(wff w0) {\n  ⊢ (¬ w0 ↔(w0 ↔ F))\n} = {\n  nbn(w0, wfal)\n  fal()\n}","parent":["nbn","fal"],"children":["nulmo","nulmoOLD","zfnuleuOLD","bisym1","aisfina","aifftbifffaibifff","lindslinindsimp2"]},{"name":"bifal","content":"A contradiction is equivalent to falsehood. (Contributed by Mario Carneiro, 9-May-2015.)","origin":"thm bifal(wff w0) {\n  |- wb(w0, wfal)\n  -| wn(w0)\n} = {\n  2false(w0, wfal)\n  fal()\n}","pretty":"thm bifal(wff w0) {\n  ⊢ (w0 ↔ F)\n  ⊣ ¬ w0\n} = {\n  2false(w0, wfal)\n  fal()\n}","parent":["2false","fal"],"children":["falantru","ralnralall","tgcgr4","frgrregord013","bj-df-nul","bicontr","aibnbaif","aifftbifffaibif","atnaiana"]},{"name":"falim","content":"The truth value ` F. ` implies anything. Also called the \"principle of explosion\", or \"ex falso [[sequitur]] quodlibet\" (Latin for \"from falsehood, anything [[follows]]\"). Dual statement of ~ trud . (Contributed by FL, 20-Mar-2011.) (Proof shortened by Anthony Hart, 1-Aug-2011.)","origin":"thm falim(wff w0) {\n  |- wi(wfal, w0)\n} = {\n  pm2.21i(wfal, w0)\n  fal()\n}","pretty":"thm falim(wff w0) {\n  ⊢ (F → w0)\n} = {\n  pm2.21i(wfal, w0)\n  fal()\n}","parent":["pm2.21i","fal"],"children":["falimd","tbw-bijust","tbw-negdf","tbw-ax4","merco1","merco2","csbprc","ralnralall","tgcgr4","frgrregord013","nalfal","imsym1","consym1","dissym1","unisym1","exisym1","bj-falor2","orfa1","orfa2","bifald","botel","lindslinindsimp2"]},{"name":"falimd","content":"The truth value ` F. ` implies anything. (Contributed by Mario Carneiro, 9-Feb-2017.)","origin":"thm falimd(wff w0, wff w1) {\n  |- wi(wa(w0, wfal), w1)\n} = {\n  adantl(w0, wfal, w1)\n  falim(w1)\n}","pretty":"thm falimd(wff w0, wff w1) {\n  ⊢ ((w0 ∧ F)→ w1)\n} = {\n  adantl(w0, wfal, w1)\n  falim(w1)\n}","parent":["adantl","falim"],"children":[]},{"name":"dfnot","content":"Given falsum ` F. ` , we can define the negation of a wff ` ph ` as the statement that ` F. ` follows from assuming ` ph ` . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof shortened by Wolf Lammen, 21-Jul-2019.)","origin":"thm dfnot(wff w0) {\n  |- wb(wn(w0), wi(w0, wfal))\n} = {\n  ax-mp(wb(wn(w0), wi(w0, wfal)), wn(wfal))\n  fal()\n  mtt(wfal, w0)\n}","pretty":"thm dfnot(wff w0) {\n  ⊢ (¬ w0 ↔(w0 → F))\n} = {\n  ax-mp((¬ w0 ↔(w0 → F)), ¬ F)\n  fal()\n  mtt(wfal, w0)\n}","parent":["ax-mp","fal","mtt"],"children":["inegd","bj-godellob"]},{"name":"inegd","content":"Negation introduction rule from natural deduction. (Contributed by Mario Carneiro, 9-Feb-2017.)","origin":"thm inegd(wff w0, wff w1) {\n  |- wi(w0, wn(w1))\n  -| wi(wa(w0, w1), wfal)\n} = {\n  sylibr(w0, wn(w1), wi(w1, wfal))\n  ex(w0, w1, wfal)\n  dfnot(w1)\n}","pretty":"thm inegd(wff w0, wff w1) {\n  ⊢ (w0 → ¬ w1)\n  ⊣ ((w0 ∧ w1)→ F)\n} = {\n  sylibr(w0, ¬ w1, (w1 → F))\n  ex(w0, w1, wfal)\n  dfnot(w1)\n}","parent":["sylibr","ex","dfnot"],"children":["efald","tglndim0","archiabllem2c","lindsun"]},{"name":"efald","content":"Deduction based on reductio ad absurdum. (Contributed by Mario Carneiro, 9-Feb-2017.)","origin":"thm efald(wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(wa(w0, wn(w1)), wfal)\n} = {\n  notnotrd(w0, w1)\n  inegd(w0, wn(w1))\n}","pretty":"thm efald(wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ ((w0 ∧ ¬ w1)→ F)\n} = {\n  notnotrd(w0, w1)\n  inegd(w0, ¬ w1)\n}","parent":["notnotrd","inegd"],"children":["efald2","ablsimpgfind"]},{"name":"pm2.21fal","content":"If a wff and its negation are provable, then falsum is provable. (Contributed by Mario Carneiro, 9-Feb-2017.)","origin":"thm pm2.21fal(wff w0, wff w1) {\n  |- wi(w0, wfal)\n  -| wi(w0, w1)\n  -| wi(w0, wn(w1))\n} = {\n  pm2.21dd(w0, wfal, w1)\n}","pretty":"thm pm2.21fal(wff w0, wff w1) {\n  ⊢ (w0 → F)\n  ⊣ (w0 → w1)\n  ⊣ (w0 → ¬ w1)\n} = {\n  pm2.21dd(w0, wfal, w1)\n}","parent":["pm2.21dd"],"children":["archiabllem2c","lindsunlem","negel","dihglblem6"]}]}