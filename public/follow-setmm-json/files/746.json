{"index":746,"title":"Examples of complex vector spaces","content":"","blocks":[{"name":"cnaddabloOLD","content":"Obsolete version of ~ cnaddabl . Complex number addition is an Abelian group operation. (Contributed by NM, 5-Nov-2006.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm cnaddabloOLD() {\n  |- wcel(caddc, cablo)\n} = {\n  isabloi(hs0, hs1, caddc, cc)\n  isgrpoi(hs0, hs1, hs2, caddc, cc, nat0, cneg(cv(hs0)))\n  cnex()\n  addass(cv(hs0), cv(hs1), cv(hs2))\n  0cn()\n  addid2(cv(hs0))\n  eqtr3d(co(cneg(cv(hs0)), caddc, cv(hs0)), nat0, co(cv(hs0), caddc, cneg(cv(hs0))), wcel(cv(hs0), cc))\n  mpdan(wcel(cv(hs0), cc), wceq(co(cv(hs0), caddc, cneg(cv(hs0))), co(cneg(cv(hs0)), caddc, cv(hs0))), wcel(cneg(cv(hs0)), cc))\n  negcl(cv(hs0))\n  addcom(cv(hs0), cneg(cv(hs0)))\n  negid(cv(hs0))\n  fdmi(caddc, cxp(cc, cc), cc)\n  ax-addf()\n  addcom(cv(hs0), cv(hs1))\n  diff.hs0.s(hs1)\n  diff.hs0.c(caddc)\n  diff.hs0.c(cc)\n  diff.hs1.c(caddc)\n  diff.hs1.c(cc)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(nat0)\n  diff.hs1.c(nat0)\n  diff.hs1.c(cneg(cv(hs0)))\n  diff.hs2.c(caddc)\n  diff.hs2.c(cc)\n  diff.hs2.c(nat0)\n}","pretty":"thm cnaddabloOLD() {\n  ⊢ + ∈ AbelOp\n} = {\n  isabloi(hs0, hs1, caddc, cc)\n  isgrpoi(hs0, hs1, hs2, caddc, cc, nat0, -u(hs0))\n  cnex()\n  addass(hs0, hs1, hs2)\n  0cn()\n  addid2(hs0)\n  eqtr3d((-u(hs0)[+]hs0), nat0, (hs0[+]-u(hs0)), hs0 ∈ ℂ)\n  mpdan(hs0 ∈ ℂ, (hs0[+]-u(hs0))=(-u(hs0)[+]hs0), -u(hs0)∈ ℂ)\n  negcl(hs0)\n  addcom(hs0, -u(hs0))\n  negid(hs0)\n  fdmi(caddc, (ℂ × ℂ), cc)\n  ax-addf()\n  addcom(hs0, hs1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(caddc)\n  diff.hs0.c(cc)\n  diff.hs1.c(caddc)\n  diff.hs1.c(cc)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(nat0)\n  diff.hs1.c(nat0)\n  diff.hs1.c(-u(hs0))\n  diff.hs2.c(caddc)\n  diff.hs2.c(cc)\n  diff.hs2.c(nat0)\n}","parent":["isabloi","isgrpoi","cnex","addass","0cn","addid2","eqtr3d","mpdan","negcl","addcom","negid","fdmi","ax-addf","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs1.s","diff.hs2.c"],"children":["cnidOLD","cncvcOLD","cnnv","cnnvba","cncph"]},{"name":"cnidOLD","content":"Obsolete version of ~ cnaddid . The group identity element of complex number addition is zero. (Contributed by Steve Rodriguez, 3-Dec-2006.) (Revised by Mario Carneiro, 21-Dec-2013.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm cnidOLD() {\n  |- wceq(nat0, cfv(cgi, caddc))\n} = {\n  eqtr2i(nat0, cfv(cgi, caddc), crio(hs0, cc, wral(hs1, cc, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1)))))\n  ax-mp(wceq(cfv(cgi, caddc), crio(hs0, cc, wral(hs1, cc, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1))))), wcel(caddc, cgr))\n  grpoidval(hs0, hs1, caddc, cfv(cgi, caddc), cc)\n  eqid(cfv(cgi, caddc))\n  mpbi(wceq(crio(hs0, cc, wral(hs1, cc, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1)))), nat0), wral(hs1, cc, wceq(co(nat0, caddc, cv(hs1)), cv(hs1))))\n  rgen(hs1, cc, wceq(co(nat0, caddc, cv(hs1)), cv(hs1)))\n  addid2(cv(hs1))\n  mp2an(wb(wral(hs1, cc, wceq(co(nat0, caddc, cv(hs1)), cv(hs1))), wceq(crio(hs0, cc, wral(hs1, cc, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1)))), nat0)), wcel(nat0, cc), wreu(hs0, cc, wral(hs1, cc, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1)))))\n  0cn()\n  ax-mp(wreu(hs0, cc, wral(hs1, cc, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1)))), wcel(caddc, cgr))\n  grpoideu(hs0, hs1, caddc, cc)\n  grporn(cc, caddc)\n  ax-mp(wcel(caddc, cgr), wcel(caddc, cablo))\n  cnaddabloOLD()\n  ablogrpo(caddc)\n  fdmi(caddc, cxp(cc, cc), cc)\n  ax-addf()\n  riota2(hs0, nat0, cc, wral(hs1, cc, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1))), wral(hs1, cc, wceq(co(nat0, caddc, cv(hs1)), cv(hs1))))\n  ralbidv(hs1, cc, wceq(cv(hs0), nat0), wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs1)), wceq(co(nat0, caddc, cv(hs1)), cv(hs1)))\n  eqeq1d(co(cv(hs0), caddc, cv(hs1)), cv(hs1), co(nat0, caddc, cv(hs1)), wceq(cv(hs0), nat0))\n  oveq1(cv(hs0), nat0, caddc, cv(hs1))\n  diff.hs0.s(hs1)\n  diff.hs0.c(caddc)\n  diff.hs0.c(cfv(cgi, caddc))\n  diff.hs0.c(cc)\n  diff.hs1.c(caddc)\n  diff.hs1.c(cfv(cgi, caddc))\n  diff.hs1.c(cc)\n  diff.hs0.c(nat0)\n  diff.hs0.w(wral(hs1, cc, wceq(co(nat0, caddc, cv(hs1)), cv(hs1))))\n  diff.hs1.w(wceq(cv(hs0), nat0))\n}","pretty":"thm cnidOLD() {\n  ⊢ 0 =(GId ` +)\n} = {\n  eqtr2i(nat0, (GId ` +), iota(hs0 ∈ ℂ, ∀(hs1 ∈ ℂ,(hs0[+]hs1)= hs1)))\n  ax-mp((GId ` +)= iota(hs0 ∈ ℂ, ∀(hs1 ∈ ℂ,(hs0[+]hs1)= hs1)), + ∈ GrpOp)\n  grpoidval(hs0, hs1, caddc, (GId ` +), cc)\n  eqid((GId ` +))\n  mpbi(iota(hs0 ∈ ℂ, ∀(hs1 ∈ ℂ,(hs0[+]hs1)= hs1))= 0, ∀(hs1 ∈ ℂ,(0[+]hs1)= hs1))\n  rgen(hs1, cc, (0[+]hs1)= hs1)\n  addid2(hs1)\n  mp2an((∀(hs1 ∈ ℂ,(0[+]hs1)= hs1)↔ iota(hs0 ∈ ℂ, ∀(hs1 ∈ ℂ,(hs0[+]hs1)= hs1))= 0), 0 ∈ ℂ, ∃!(hs0 ∈ ℂ, ∀(hs1 ∈ ℂ,(hs0[+]hs1)= hs1)))\n  0cn()\n  ax-mp(∃!(hs0 ∈ ℂ, ∀(hs1 ∈ ℂ,(hs0[+]hs1)= hs1)), + ∈ GrpOp)\n  grpoideu(hs0, hs1, caddc, cc)\n  grporn(cc, caddc)\n  ax-mp(+ ∈ GrpOp, + ∈ AbelOp)\n  cnaddabloOLD()\n  ablogrpo(caddc)\n  fdmi(caddc, (ℂ × ℂ), cc)\n  ax-addf()\n  riota2(hs0, nat0, cc, ∀(hs1 ∈ ℂ,(hs0[+]hs1)= hs1), ∀(hs1 ∈ ℂ,(0[+]hs1)= hs1))\n  ralbidv(hs1, cc, hs0 = 0, (hs0[+]hs1)= hs1, (0[+]hs1)= hs1)\n  eqeq1d((hs0[+]hs1), hs1, (0[+]hs1), hs0 = 0)\n  oveq1(hs0, nat0, caddc, hs1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(caddc)\n  diff.hs0.c((GId ` +))\n  diff.hs0.c(cc)\n  diff.hs1.c(caddc)\n  diff.hs1.c((GId ` +))\n  diff.hs1.c(cc)\n  diff.hs0.c(nat0)\n  diff.hs0.w(∀(hs1 ∈ ℂ,(0[+]hs1)= hs1))\n  diff.hs1.w(hs0 = 0)\n}","parent":["eqtr2i","ax-mp","grpoidval","eqid","mpbi","rgen","addid2","mp2an","0cn","grpoideu","grporn","cnaddabloOLD","ablogrpo","fdmi","ax-addf","riota2","ralbidv","eqeq1d","oveq1","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs0.w","diff.hs1.w"],"children":["cnnv"]},{"name":"cncvcOLD","content":"Obsolete version of ~ cncvs . The set of complex numbers is a complex vector space. The vector operation is ` + ` , and the scalar product is ` x. ` . (Contributed by NM, 5-Nov-2006.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm cncvcOLD() {\n  |- wcel(cop(caddc, cmul), cvc)\n} = {\n  isvciOLD(hs0, hs1, hs2, cop(caddc, cmul), caddc, cc, cmul)\n  cnaddabloOLD()\n  fdmi(caddc, cxp(cc, cc), cc)\n  ax-addf()\n  ax-mulf()\n  mulid2(cv(hs0))\n  adddi(cv(hs1), cv(hs0), cv(hs2))\n  adddir(cv(hs1), cv(hs2), cv(hs0))\n  mulass(cv(hs1), cv(hs2), cv(hs0))\n  eqid(cop(caddc, cmul))\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(caddc)\n  diff.hs0.c(cc)\n  diff.hs0.c(cmul)\n  diff.hs1.c(caddc)\n  diff.hs1.c(cc)\n  diff.hs1.c(cmul)\n  diff.hs2.c(caddc)\n  diff.hs2.c(cc)\n  diff.hs2.c(cmul)\n}","pretty":"thm cncvcOLD() {\n  ⊢ < +, × > ∈ CVecOLD\n} = {\n  isvciOLD(hs0, hs1, hs2, < +, × >, caddc, cc, cmul)\n  cnaddabloOLD()\n  fdmi(caddc, (ℂ × ℂ), cc)\n  ax-addf()\n  ax-mulf()\n  mulid2(hs0)\n  adddi(hs1, hs0, hs2)\n  adddir(hs1, hs2, hs0)\n  mulass(hs1, hs2, hs0)\n  eqid(< +, × >)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.s(hs2)\n  diff.hs0.c(caddc)\n  diff.hs0.c(cc)\n  diff.hs0.c(cmul)\n  diff.hs1.c(caddc)\n  diff.hs1.c(cc)\n  diff.hs1.c(cmul)\n  diff.hs2.c(caddc)\n  diff.hs2.c(cc)\n  diff.hs2.c(cmul)\n}","parent":["isvciOLD","cnaddabloOLD","fdmi","ax-addf","ax-mulf","mulid2","adddi","adddir","mulass","eqid","diff.hs0.s","diff.hs1.s","diff.hs0.c","diff.hs1.c","diff.hs2.c"],"children":["cnnv"]}]}