{"index":1112,"title":"Provability logic","content":"In this section, we assume that, on top of propositional calculus, there is given a provability predicate ` Prv ` satisfying the three axioms ~ ax-prv1 and ~ ax-prv2 and ~ ax-prv3 . Note the similarity with ~ ax-gen , ~ ax-4 and ~ hba1 respectively. These three properties of ` Prv ` are often called the Hilbert&ndash;Bernays&ndash;L&ouml;b derivability conditions, or the Hilbert&ndash;Bernays provability conditions. This corresponds to the modal logic (K4) (see previous section for modal logic). The interpretation of provability logic is the following: we are given a background first-order theory T, the wff ` Prv ph ` means \" ` ph ` is provable in T\", and the turnstile ` |- ` indicates provability in T. Beware that \"provability logic\" often means (K) augmented with the G&ouml;del&ndash;L&ouml;b axiom GL, which we do not assume here (at least for the moment). See for instance ~ https://plato.stanford.edu/entries/logic-provability/ . Provability logic is worth studying because whenever T is a first-order theory containing Robinson arithmetic (a fragment of Peano arithmetic), one can prove (using G&ouml;del numbering, and in the much weaker primitive recursive arithmetic) that there exists in T a provability predicate ` Prv ` satisfying the above three axioms. (We do not construct this predicate in this section; this is still a project.) The main theorems of this section are the \"easy parts\" of the proofs of G&ouml;del's second incompleteness theorem ( ~ bj-babygodel ) and L&ouml;b's theorem ( ~ bj-babylob ). See the comments of these theorems for details.","blocks":[{"name":"cprvb","content":"Syntax for the provability predicate.","origin":"prop wff cprvb(wff w0) { Prv(w0) }","pretty":"","parent":[],"children":[]},{"name":"diff.cprvb.s","content":"","origin":"axiom diff.cprvb.s(setvar sBase, wff w0) {\n  |- diffsw(sBase, cprvb(w0))\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.cprvb.s(setvar sBase, wff w0) {\n  ⊢ d(sBase, Prv(w0))\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.cprvb.c","content":"","origin":"axiom diff.cprvb.c(class cBase, wff w0) {\n  |- diffcw(cBase, cprvb(w0))\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.cprvb.c(class cBase, wff w0) {\n  ⊢ d(cBase, Prv(w0))\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.cprvb.w","content":"","origin":"axiom diff.cprvb.w(wff wBase, wff w0) {\n  |- diffww(wBase, cprvb(w0))\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.cprvb.w(wff wBase, wff w0) {\n  ⊢ d(wBase, Prv(w0))\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"ax-prv1","content":"First property of three of the provability predicate. (Contributed by BJ, 3-Apr-2019.)","origin":"axiom ax-prv1(wff w0) {\n  |- cprvb(w0)\n  -| w0\n}","pretty":"axiom ax-prv1(wff w0) {\n  ⊢ Prv(w0)\n  ⊣ w0\n}","parent":[],"children":["prvlem1","bj-babygodel","bj-babylob"]},{"name":"ax-prv2","content":"Second property of three of the provability predicate. (Contributed by BJ, 3-Apr-2019.)","origin":"axiom ax-prv2(wff w0, wff w1) {\n  |- wi(cprvb(wi(w0, w1)), wi(cprvb(w0), cprvb(w1)))\n}","pretty":"axiom ax-prv2(wff w0, wff w1) {\n  ⊢ (Prv((w0 → w1))→(Prv(w0)→ Prv(w1)))\n}","parent":[],"children":["prvlem1","prvlem2"]},{"name":"ax-prv3","content":"Third property of three of the provability predicate. (Contributed by BJ, 3-Apr-2019.)","origin":"axiom ax-prv3(wff w0) {\n  |- wi(cprvb(w0), cprvb(cprvb(w0)))\n}","pretty":"axiom ax-prv3(wff w0) {\n  ⊢ (Prv(w0)→ Prv(Prv(w0)))\n}","parent":[],"children":["bj-babygodel","bj-babylob"]},{"name":"prvlem1","content":"An elementary property of the provability predicate. (Contributed by BJ, 3-Apr-2019.)","origin":"thm prvlem1(wff w0, wff w1) {\n  |- wi(cprvb(w0), cprvb(w1))\n  -| wi(w0, w1)\n} = {\n  ax-mp(wi(cprvb(w0), cprvb(w1)), cprvb(wi(w0, w1)))\n  ax-prv1(wi(w0, w1))\n  ax-prv2(w0, w1)\n}","pretty":"thm prvlem1(wff w0, wff w1) {\n  ⊢ (Prv(w0)→ Prv(w1))\n  ⊣ (w0 → w1)\n} = {\n  ax-mp((Prv(w0)→ Prv(w1)), Prv((w0 → w1)))\n  ax-prv1((w0 → w1))\n  ax-prv2(w0, w1)\n}","parent":["ax-mp","ax-prv1","ax-prv2"],"children":["prvlem2","bj-babygodel"]},{"name":"prvlem2","content":"An elementary property of the provability predicate. (Contributed by BJ, 3-Apr-2019.)","origin":"thm prvlem2(wff w0, wff w1, wff w2) {\n  |- wi(cprvb(w0), wi(cprvb(w1), cprvb(w2)))\n  -| wi(w0, wi(w1, w2))\n} = {\n  syl(cprvb(w0), wi(cprvb(w1), cprvb(w2)), cprvb(wi(w1, w2)))\n  prvlem1(w0, wi(w1, w2))\n  ax-prv2(w1, w2)\n}","pretty":"thm prvlem2(wff w0, wff w1, wff w2) {\n  ⊢ (Prv(w0)→(Prv(w1)→ Prv(w2)))\n  ⊣ (w0 →(w1 → w2))\n} = {\n  syl(Prv(w0), (Prv(w1)→ Prv(w2)), Prv((w1 → w2)))\n  prvlem1(w0, (w1 → w2))\n  ax-prv2(w1, w2)\n}","parent":["syl","prvlem1","ax-prv2"],"children":["bj-babygodel","bj-babylob"]},{"name":"bj-babygodel","content":"See the section header comments for the context. The first hypothesis reads \" ` ph ` is true if and only if it is not provable in T\" (and having this first hypothesis means that we can prove this fact in T). The wff ` ph ` is a formal version of the sentence \"This sentence is not provable\". The hard part of the proof of G&ouml;del's theorem is to construct such a ` ph ` , called a \"G&ouml;del&ndash;Rosser sentence\", for a first-order theory T which is effectively axiomatizable and contains Robinson arithmetic, through G&ouml;del diagonalization (this can be done in primitive recursive arithmetic). The second hypothesis means that ` F. ` is not provable in T, that is, that the theory T is consistent (and having this second hypothesis means that we can prove in T that the theory T is consistent). The conclusion is the falsity, so having the conclusion means that T can prove the falsity, that is, T is inconsistent. Therefore, taking the contrapositive, this theorem expresses that if a first-order theory is consistent (and one can prove in it that some formula is true if and only if it is not provable in it), then this theory does not prove its own consistency. This proof is due to George Boolos, _G&ouml;del's Second Incompleteness Theorem Explained in Words of One Syllable_, Mind, New Series, Vol. 103, No. 409 (January 1994), pp. 1--3. (Contributed by BJ, 3-Apr-2019.)","origin":"thm bj-babygodel(wff w0) {\n  |- wfal\n  -| wb(w0, wn(cprvb(w0)))\n  -| wn(cprvb(wfal))\n} = {\n  pm2.24ii(wfal, cprvb(wfal))\n  mp2b(cprvb(wfal), cprvb(wn(cprvb(wfal))), cprvb(w0))\n  ax-prv1(wn(cprvb(wfal)))\n  prvlem1(wn(cprvb(wfal)), w0)\n  sylibr(wn(cprvb(wfal)), w0, wn(cprvb(w0)))\n  con3i(cprvb(wfal), cprvb(w0))\n  sylc(cprvb(w0), cprvb(wfal), cprvb(wn(cprvb(w0))), cprvb(cprvb(w0)))\n  prvlem1(w0, wn(cprvb(w0)))\n  biimpi(w0, wn(cprvb(w0)))\n  ax-prv3(w0)\n  prvlem2(wn(cprvb(w0)), cprvb(w0), wfal)\n  pm2.21(cprvb(w0), wfal)\n}","pretty":"thm bj-babygodel(wff w0) {\n  ⊢ wfal\n  ⊣ (w0 ↔ ¬ Prv(w0))\n  ⊣ ¬ Prv(F)\n} = {\n  pm2.24ii(wfal, Prv(F))\n  mp2b(Prv(F), Prv(¬ Prv(F)), Prv(w0))\n  ax-prv1(¬ Prv(F))\n  prvlem1(¬ Prv(F), w0)\n  sylibr(¬ Prv(F), w0, ¬ Prv(w0))\n  con3i(Prv(F), Prv(w0))\n  sylc(Prv(w0), Prv(F), Prv(¬ Prv(w0)), Prv(Prv(w0)))\n  prvlem1(w0, ¬ Prv(w0))\n  biimpi(w0, ¬ Prv(w0))\n  ax-prv3(w0)\n  prvlem2(¬ Prv(w0), Prv(w0), wfal)\n  pm2.21(Prv(w0), wfal)\n}","parent":["pm2.24ii","mp2b","ax-prv1","prvlem1","sylibr","con3i","sylc","biimpi","ax-prv3","prvlem2","pm2.21"],"children":[]},{"name":"bj-babylob","content":"See the section header comments for the context, as well as the comments for ~ bj-babygodel . L&ouml;b's theorem when the L&ouml;b sentence is given as a hypothesis (the hard part of the proof of L&ouml;b's theorem is to construct this L&ouml;b sentence; this can be done, using G&ouml;del diagonalization, for any first-order effectively axiomatizable theory containing Robinson arithmetic). More precisely, the present theorem states that if a first-order theory proves that the provability of a given sentence entails its truth (and if one can construct in this theory a provability predicate and a L&ouml;b sentence, given here as the first hypothesis), then the theory actually proves that sentence. See for instance, Eliezer Yudkowsky, _The Cartoon Guide to L&ouml;b's Theorem_ (available at ~ http://yudkowsky.net/rational/lobs-theorem/ ). (Contributed by BJ, 20-Apr-2019.)","origin":"thm bj-babylob(wff w0, wff w1) {\n  |- w0\n  -| wb(w1, wi(cprvb(w1), w0))\n  -| wi(cprvb(w0), w0)\n} = {\n  ax-mp(w0, cprvb(w1))\n  ax-prv1(w1)\n  mpbir(w1, wi(cprvb(w1), w0))\n  syl(cprvb(w1), w0, cprvb(w0))\n  mpd(cprvb(w1), cprvb(w0), cprvb(cprvb(w1)))\n  ax-prv3(w1)\n  prvlem2(w1, cprvb(w1), w0)\n  biimpi(w1, wi(cprvb(w1), w0))\n}","pretty":"thm bj-babylob(wff w0, wff w1) {\n  ⊢ w0\n  ⊣ (w1 ↔(Prv(w1)→ w0))\n  ⊣ (Prv(w0)→ w0)\n} = {\n  ax-mp(w0, Prv(w1))\n  ax-prv1(w1)\n  mpbir(w1, (Prv(w1)→ w0))\n  syl(Prv(w1), w0, Prv(w0))\n  mpd(Prv(w1), Prv(w0), Prv(Prv(w1)))\n  ax-prv3(w1)\n  prvlem2(w1, Prv(w1), w0)\n  biimpi(w1, (Prv(w1)→ w0))\n}","parent":["ax-mp","ax-prv1","mpbir","syl","mpd","ax-prv3","prvlem2","biimpi"],"children":["bj-godellob"]},{"name":"bj-godellob","content":"Proof of G&ouml;del's theorem from L&ouml;b's theorem (see comments at ~ bj-babygodel and ~ bj-babylob for details). (Contributed by BJ, 20-Apr-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-godellob(wff w0) {\n  |- wfal\n  -| wb(w0, wn(cprvb(w0)))\n  -| wn(cprvb(wfal))\n} = {\n  bj-babylob(wfal, w0)\n  bitri(w0, wi(cprvb(w0), wfal), wn(cprvb(w0)))\n  dfnot(cprvb(w0))\n  pm2.21i(cprvb(wfal), wfal)\n}","pretty":"thm bj-godellob(wff w0) {\n  ⊢ wfal\n  ⊣ (w0 ↔ ¬ Prv(w0))\n  ⊣ ¬ Prv(F)\n} = {\n  bj-babylob(wfal, w0)\n  bitri(w0, (Prv(w0)→ F), ¬ Prv(w0))\n  dfnot(Prv(w0))\n  pm2.21i(Prv(F), wfal)\n}","parent":["bj-babylob","bitri","dfnot","pm2.21i"],"children":[]}]}