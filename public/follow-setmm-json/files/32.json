{"index":32,"title":"Full adder: carry","content":"","blocks":[{"name":"wcad","content":"Syntax for the \"carry\" output of the full adder. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"prop wff wcad(wff w0, wff w1, wff w2) { cadd(w0, w1, w2) }","pretty":"","parent":[],"children":[]},{"name":"diff.wcad.s","content":"","origin":"axiom diff.wcad.s(setvar sBase, wff w0, wff w1, wff w2) {\n  |- diffsw(sBase, wcad(w0, w1, w2))\n  -| diffsw(sBase, w0)\n  -| diffsw(sBase, w1)\n  -| diffsw(sBase, w2)\n}","pretty":"axiom diff.wcad.s(setvar sBase, wff w0, wff w1, wff w2) {\n  ⊢ d(sBase, cadd(w0, w1, w2))\n  ⊣ d(sBase, w0)\n  ⊣ d(sBase, w1)\n  ⊣ d(sBase, w2)\n}","parent":[],"children":[]},{"name":"diff.wcad.c","content":"","origin":"axiom diff.wcad.c(class cBase, wff w0, wff w1, wff w2) {\n  |- diffcw(cBase, wcad(w0, w1, w2))\n  -| diffcw(cBase, w0)\n  -| diffcw(cBase, w1)\n  -| diffcw(cBase, w2)\n}","pretty":"axiom diff.wcad.c(class cBase, wff w0, wff w1, wff w2) {\n  ⊢ d(cBase, cadd(w0, w1, w2))\n  ⊣ d(cBase, w0)\n  ⊣ d(cBase, w1)\n  ⊣ d(cBase, w2)\n}","parent":[],"children":[]},{"name":"diff.wcad.w","content":"","origin":"axiom diff.wcad.w(wff wBase, wff w0, wff w1, wff w2) {\n  |- diffww(wBase, wcad(w0, w1, w2))\n  -| diffww(wBase, w0)\n  -| diffww(wBase, w1)\n  -| diffww(wBase, w2)\n}","pretty":"axiom diff.wcad.w(wff wBase, wff w0, wff w1, wff w2) {\n  ⊢ d(wBase, cadd(w0, w1, w2))\n  ⊣ d(wBase, w0)\n  ⊣ d(wBase, w1)\n  ⊣ d(wBase, w2)\n}","parent":[],"children":[]},{"name":"df-cad","content":"Definition of the \"carry\" output of the full adder. It is true when at least two arguments are true, so it is equal to the \"majority\" function on three variables. See ~ cador and ~ cadan for alternate definitions. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"axiom df-cad(wff w0, wff w1, wff w2) {\n  |- wb(wcad(w0, w1, w2), wo(wa(w0, w1), wa(w2, wxo(w0, w1))))\n}","pretty":"axiom df-cad(wff w0, wff w1, wff w2) {\n  ⊢ (cadd(w0, w1, w2)↔((w0 ∧ w1)∨(w2 ∧(w0 ⊻ w1))))\n}","parent":[],"children":["cador","cadbi123d","cadcoma","cad0","cad11"]},{"name":"cador","content":"The adder carry in disjunctive normal form. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 11-Jul-2020.)","origin":"thm cador(wff w0, wff w1, wff w2) {\n  |- wb(wcad(w0, w1, w2), w3o(wa(w0, w1), wa(w0, w2), wa(w1, w2)))\n} = {\n  3bitr4i(wcad(w0, w1, w2), w3o(wa(w0, w1), wa(w0, w2), wa(w1, w2)), wo(wa(w0, w1), wa(w2, wxo(w0, w1))), wo(wa(w0, w1), wo(wa(w0, w2), wa(w1, w2))))\n  3bitr4i(wo(wa(w0, w1), wa(w2, wxo(w0, w1))), wo(wa(w0, w1), wo(wa(w0, w2), wa(w1, w2))), wi(wn(wa(w0, w1)), wa(w2, wxo(w0, w1))), wi(wn(wa(w0, w1)), wo(wa(w0, w2), wa(w1, w2))))\n  pm5.74i(wn(wa(w0, w1)), wa(w2, wxo(w0, w1)), wo(wa(w0, w2), wa(w1, w2)))\n  3bitr3g(wn(wa(w0, w1)), wa(w2, wxo(w0, w1)), wo(wa(w0, w2), wa(w1, w2)), wa(wxo(w0, w1), w2), wa(wo(w0, w1), w2))\n  anbi1d(wn(wa(w0, w1)), wxo(w0, w1), w2, wo(w0, w1))\n  rbaib(wn(wa(w0, w1)), wxo(w0, w1), wo(w0, w1))\n  xor2(w0, w1)\n  ancom(wxo(w0, w1), w2)\n  andir(w0, w1, w2)\n  df-or(wa(w0, w1), wa(w2, wxo(w0, w1)))\n  df-or(wa(w0, w1), wo(wa(w0, w2), wa(w1, w2)))\n  df-cad(w0, w1, w2)\n  3orass(wa(w0, w1), wa(w0, w2), wa(w1, w2))\n}","pretty":"thm cador(wff w0, wff w1, wff w2) {\n  ⊢ (cadd(w0, w1, w2)↔((w0 ∧ w1)∨(w0 ∧ w2)∨(w1 ∧ w2)))\n} = {\n  3bitr4i(cadd(w0, w1, w2), ((w0 ∧ w1)∨(w0 ∧ w2)∨(w1 ∧ w2)), ((w0 ∧ w1)∨(w2 ∧(w0 ⊻ w1))), ((w0 ∧ w1)∨((w0 ∧ w2)∨(w1 ∧ w2))))\n  3bitr4i(((w0 ∧ w1)∨(w2 ∧(w0 ⊻ w1))), ((w0 ∧ w1)∨((w0 ∧ w2)∨(w1 ∧ w2))), (¬(w0 ∧ w1)→(w2 ∧(w0 ⊻ w1))), (¬(w0 ∧ w1)→((w0 ∧ w2)∨(w1 ∧ w2))))\n  pm5.74i(¬(w0 ∧ w1), (w2 ∧(w0 ⊻ w1)), ((w0 ∧ w2)∨(w1 ∧ w2)))\n  3bitr3g(¬(w0 ∧ w1), (w2 ∧(w0 ⊻ w1)), ((w0 ∧ w2)∨(w1 ∧ w2)), ((w0 ⊻ w1)∧ w2), ((w0 ∨ w1)∧ w2))\n  anbi1d(¬(w0 ∧ w1), (w0 ⊻ w1), w2, (w0 ∨ w1))\n  rbaib(¬(w0 ∧ w1), (w0 ⊻ w1), (w0 ∨ w1))\n  xor2(w0, w1)\n  ancom((w0 ⊻ w1), w2)\n  andir(w0, w1, w2)\n  df-or((w0 ∧ w1), (w2 ∧(w0 ⊻ w1)))\n  df-or((w0 ∧ w1), ((w0 ∧ w2)∨(w1 ∧ w2)))\n  df-cad(w0, w1, w2)\n  3orass((w0 ∧ w1), (w0 ∧ w2), (w1 ∧ w2))\n}","parent":["3bitr4i","pm5.74i","3bitr3g","anbi1d","rbaib","xor2","ancom","andir","df-or","df-cad","3orass"],"children":["cadan","cadnot"]},{"name":"cadan","content":"The adder carry in conjunctive normal form. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 25-Sep-2018.)","origin":"thm cadan(wff w0, wff w1, wff w2) {\n  |- wb(wcad(w0, w1, w2), w3a(wo(w0, w1), wo(w0, w2), wo(w1, w2)))\n} = {\n  bitr4i(wcad(w0, w1, w2), w3a(wo(w0, w1), wo(w0, w2), wo(w1, w2)), wa(wa(wo(w0, w1), wo(w0, w2)), wo(w1, w2)))\n  3bitri(wcad(w0, w1, w2), wa(wa(wo(w0, w1), wo(w0, w2)), wo(w1, w2)), wo(wa(w0, wo(w1, w2)), wa(w1, w2)), wa(wo(w0, wa(w1, w2)), wo(wo(w1, w2), wa(w1, w2))))\n  3bitr4i(wcad(w0, w1, w2), wo(wa(w0, wo(w1, w2)), wa(w1, w2)), w3o(wa(w0, w1), wa(w0, w2), wa(w1, w2)), wo(wo(wa(w0, w1), wa(w0, w2)), wa(w1, w2)))\n  df-3or(wa(w0, w1), wa(w0, w2), wa(w1, w2))\n  cador(w0, w1, w2)\n  orbi1i(wa(w0, wo(w1, w2)), wa(w1, w2), wo(wa(w0, w1), wa(w0, w2)))\n  andi(w0, w1, w2)\n  ordir(w0, wo(w1, w2), wa(w1, w2))\n  anbi12i(wo(w0, wa(w1, w2)), wo(wo(w1, w2), wa(w1, w2)), wa(wo(w0, w1), wo(w0, w2)), wo(w1, w2))\n  ordi(w0, w1, w2)\n  bitr4i(wo(wo(w1, w2), wa(w1, w2)), wo(w1, w2), wo(wa(w1, w2), wo(w1, w2)))\n  orcom(wo(w1, w2), wa(w1, w2))\n  mpbi(wb(wo(w1, w2), wo(wa(w1, w2), wo(w1, w2))), wi(wa(w1, w2), wo(w1, w2)))\n  animorl(w1, w2, w2)\n  pm4.72(wa(w1, w2), wo(w1, w2))\n  df-3an(wo(w0, w1), wo(w0, w2), wo(w1, w2))\n}","pretty":"thm cadan(wff w0, wff w1, wff w2) {\n  ⊢ (cadd(w0, w1, w2)↔((w0 ∨ w1)∧(w0 ∨ w2)∧(w1 ∨ w2)))\n} = {\n  bitr4i(cadd(w0, w1, w2), ((w0 ∨ w1)∧(w0 ∨ w2)∧(w1 ∨ w2)), (((w0 ∨ w1)∧(w0 ∨ w2))∧(w1 ∨ w2)))\n  3bitri(cadd(w0, w1, w2), (((w0 ∨ w1)∧(w0 ∨ w2))∧(w1 ∨ w2)), ((w0 ∧(w1 ∨ w2))∨(w1 ∧ w2)), ((w0 ∨(w1 ∧ w2))∧((w1 ∨ w2)∨(w1 ∧ w2))))\n  3bitr4i(cadd(w0, w1, w2), ((w0 ∧(w1 ∨ w2))∨(w1 ∧ w2)), ((w0 ∧ w1)∨(w0 ∧ w2)∨(w1 ∧ w2)), (((w0 ∧ w1)∨(w0 ∧ w2))∨(w1 ∧ w2)))\n  df-3or((w0 ∧ w1), (w0 ∧ w2), (w1 ∧ w2))\n  cador(w0, w1, w2)\n  orbi1i((w0 ∧(w1 ∨ w2)), (w1 ∧ w2), ((w0 ∧ w1)∨(w0 ∧ w2)))\n  andi(w0, w1, w2)\n  ordir(w0, (w1 ∨ w2), (w1 ∧ w2))\n  anbi12i((w0 ∨(w1 ∧ w2)), ((w1 ∨ w2)∨(w1 ∧ w2)), ((w0 ∨ w1)∧(w0 ∨ w2)), (w1 ∨ w2))\n  ordi(w0, w1, w2)\n  bitr4i(((w1 ∨ w2)∨(w1 ∧ w2)), (w1 ∨ w2), ((w1 ∧ w2)∨(w1 ∨ w2)))\n  orcom((w1 ∨ w2), (w1 ∧ w2))\n  mpbi(((w1 ∨ w2)↔((w1 ∧ w2)∨(w1 ∨ w2))), ((w1 ∧ w2)→(w1 ∨ w2)))\n  animorl(w1, w2, w2)\n  pm4.72((w1 ∧ w2), (w1 ∨ w2))\n  df-3an((w0 ∨ w1), (w0 ∨ w2), (w1 ∨ w2))\n}","parent":["bitr4i","3bitri","3bitr4i","df-3or","cador","orbi1i","andi","ordir","anbi12i","ordi","orcom","mpbi","animorl","pm4.72","df-3an"],"children":["cadcomb","cadnot","cad1"]},{"name":"cadbi123d","content":"Equality theorem for the adder carry. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm cadbi123d(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5, wff w6) {\n  |- wi(w0, wb(wcad(w1, w2, w3), wcad(w4, w5, w6)))\n  -| wi(w0, wb(w1, w4))\n  -| wi(w0, wb(w2, w5))\n  -| wi(w0, wb(w3, w6))\n} = {\n  3bitr4g(w0, wcad(w1, w2, w3), wcad(w4, w5, w6), wo(wa(w1, w2), wa(w3, wxo(w1, w2))), wo(wa(w4, w5), wa(w6, wxo(w4, w5))))\n  orbi12d(w0, wa(w1, w2), wa(w3, wxo(w1, w2)), wa(w4, w5), wa(w6, wxo(w4, w5)))\n  anbi12d(w0, w1, w2, w4, w5)\n  anbi12d(w0, w3, wxo(w1, w2), w6, wxo(w4, w5))\n  xorbi12d(w0, w1, w2, w4, w5)\n  df-cad(w1, w2, w3)\n  df-cad(w4, w5, w6)\n}","pretty":"thm cadbi123d(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5, wff w6) {\n  ⊢ (w0 →(cadd(w1, w2, w3)↔ cadd(w4, w5, w6)))\n  ⊣ (w0 →(w1 ↔ w4))\n  ⊣ (w0 →(w2 ↔ w5))\n  ⊣ (w0 →(w3 ↔ w6))\n} = {\n  3bitr4g(w0, cadd(w1, w2, w3), cadd(w4, w5, w6), ((w1 ∧ w2)∨(w3 ∧(w1 ⊻ w2))), ((w4 ∧ w5)∨(w6 ∧(w4 ⊻ w5))))\n  orbi12d(w0, (w1 ∧ w2), (w3 ∧(w1 ⊻ w2)), (w4 ∧ w5), (w6 ∧(w4 ⊻ w5)))\n  anbi12d(w0, w1, w2, w4, w5)\n  anbi12d(w0, w3, (w1 ⊻ w2), w6, (w4 ⊻ w5))\n  xorbi12d(w0, w1, w2, w4, w5)\n  df-cad(w1, w2, w3)\n  df-cad(w4, w5, w6)\n}","parent":["3bitr4g","orbi12d","anbi12d","xorbi12d","df-cad"],"children":["cadbi123i","sadfval","sadcp1"]},{"name":"cadbi123i","content":"Equality theorem for the adder carry. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm cadbi123i(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  |- wb(wcad(w0, w1, w2), wcad(w3, w4, w5))\n  -| wb(w0, w3)\n  -| wb(w1, w4)\n  -| wb(w2, w5)\n} = {\n  mptru(wb(wcad(w0, w1, w2), wcad(w3, w4, w5)))\n  cadbi123d(wtru, w0, w1, w2, w3, w4, w5)\n  a1i(wtru, wb(w0, w3))\n  a1i(wtru, wb(w1, w4))\n  a1i(wtru, wb(w2, w5))\n}","pretty":"thm cadbi123i(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  ⊢ (cadd(w0, w1, w2)↔ cadd(w3, w4, w5))\n  ⊣ (w0 ↔ w3)\n  ⊣ (w1 ↔ w4)\n  ⊣ (w2 ↔ w5)\n} = {\n  mptru((cadd(w0, w1, w2)↔ cadd(w3, w4, w5)))\n  cadbi123d(wtru, w0, w1, w2, w3, w4, w5)\n  a1i(wtru, (w0 ↔ w3))\n  a1i(wtru, (w1 ↔ w4))\n  a1i(wtru, (w2 ↔ w5))\n}","parent":["mptru","cadbi123d","a1i"],"children":[]},{"name":"cadcoma","content":"Commutative law for the adder carry. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm cadcoma(wff w0, wff w1, wff w2) {\n  |- wb(wcad(w0, w1, w2), wcad(w1, w0, w2))\n} = {\n  3bitr4i(wcad(w0, w1, w2), wcad(w1, w0, w2), wo(wa(w0, w1), wa(w2, wxo(w0, w1))), wo(wa(w1, w0), wa(w2, wxo(w1, w0))))\n  orbi12i(wa(w0, w1), wa(w2, wxo(w0, w1)), wa(w1, w0), wa(w2, wxo(w1, w0)))\n  ancom(w0, w1)\n  anbi2i(w2, wxo(w0, w1), wxo(w1, w0))\n  xorcom(w0, w1)\n  df-cad(w0, w1, w2)\n  df-cad(w1, w0, w2)\n}","pretty":"thm cadcoma(wff w0, wff w1, wff w2) {\n  ⊢ (cadd(w0, w1, w2)↔ cadd(w1, w0, w2))\n} = {\n  3bitr4i(cadd(w0, w1, w2), cadd(w1, w0, w2), ((w0 ∧ w1)∨(w2 ∧(w0 ⊻ w1))), ((w1 ∧ w0)∨(w2 ∧(w1 ⊻ w0))))\n  orbi12i((w0 ∧ w1), (w2 ∧(w0 ⊻ w1)), (w1 ∧ w0), (w2 ∧(w1 ⊻ w0)))\n  ancom(w0, w1)\n  anbi2i(w2, (w0 ⊻ w1), (w1 ⊻ w0))\n  xorcom(w0, w1)\n  df-cad(w0, w1, w2)\n  df-cad(w1, w0, w2)\n}","parent":["3bitr4i","orbi12i","ancom","anbi2i","xorcom","df-cad"],"children":["cadrot","sadcom"]},{"name":"cadcomb","content":"Commutative law for the adder carry. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 11-Jul-2020.)","origin":"thm cadcomb(wff w0, wff w1, wff w2) {\n  |- wb(wcad(w0, w1, w2), wcad(w0, w2, w1))\n} = {\n  bitr4i(wcad(w0, w1, w2), wcad(w0, w2, w1), w3a(wo(w0, w2), wo(w0, w1), wo(w2, w1)))\n  3bitri(wcad(w0, w1, w2), w3a(wo(w0, w2), wo(w0, w1), wo(w2, w1)), w3a(wo(w0, w1), wo(w0, w2), wo(w1, w2)), w3a(wo(w0, w2), wo(w0, w1), wo(w1, w2)))\n  cadan(w0, w1, w2)\n  3ancoma(wo(w0, w1), wo(w0, w2), wo(w1, w2))\n  3anbi3i(wo(w0, w2), wo(w0, w1), wo(w1, w2), wo(w2, w1))\n  orcom(w1, w2)\n  cadan(w0, w2, w1)\n}","pretty":"thm cadcomb(wff w0, wff w1, wff w2) {\n  ⊢ (cadd(w0, w1, w2)↔ cadd(w0, w2, w1))\n} = {\n  bitr4i(cadd(w0, w1, w2), cadd(w0, w2, w1), ((w0 ∨ w2)∧(w0 ∨ w1)∧(w2 ∨ w1)))\n  3bitri(cadd(w0, w1, w2), ((w0 ∨ w2)∧(w0 ∨ w1)∧(w2 ∨ w1)), ((w0 ∨ w1)∧(w0 ∨ w2)∧(w1 ∨ w2)), ((w0 ∨ w2)∧(w0 ∨ w1)∧(w1 ∨ w2)))\n  cadan(w0, w1, w2)\n  3ancoma((w0 ∨ w1), (w0 ∨ w2), (w1 ∨ w2))\n  3anbi3i((w0 ∨ w2), (w0 ∨ w1), (w1 ∨ w2), (w2 ∨ w1))\n  orcom(w1, w2)\n  cadan(w0, w2, w1)\n}","parent":["bitr4i","3bitri","cadan","3ancoma","3anbi3i","orcom"],"children":["cadrot"]},{"name":"cadrot","content":"Rotation law for the adder carry. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm cadrot(wff w0, wff w1, wff w2) {\n  |- wb(wcad(w0, w1, w2), wcad(w1, w2, w0))\n} = {\n  bitri(wcad(w0, w1, w2), wcad(w1, w2, w0), wcad(w1, w0, w2))\n  cadcoma(w0, w1, w2)\n  cadcomb(w1, w0, w2)\n}","pretty":"thm cadrot(wff w0, wff w1, wff w2) {\n  ⊢ (cadd(w0, w1, w2)↔ cadd(w1, w2, w0))\n} = {\n  bitri(cadd(w0, w1, w2), cadd(w1, w2, w0), cadd(w1, w0, w2))\n  cadcoma(w0, w1, w2)\n  cadcomb(w1, w0, w2)\n}","parent":["bitri","cadcoma","cadcomb"],"children":[]},{"name":"cadnot","content":"The adder carry distributes over negation. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 11-Jul-2020.)","origin":"thm cadnot(wff w0, wff w1, wff w2) {\n  |- wb(wn(wcad(w0, w1, w2)), wcad(wn(w0), wn(w1), wn(w2)))\n} = {\n  3bitr4i(wn(wcad(w0, w1, w2)), wcad(wn(w0), wn(w1), wn(w2)), w3a(wn(wa(w0, w1)), wn(wa(w0, w2)), wn(wa(w1, w2))), w3a(wo(wn(w0), wn(w1)), wo(wn(w0), wn(w2)), wo(wn(w1), wn(w2))))\n  3anbi123i(wn(wa(w0, w1)), wn(wa(w0, w2)), wn(wa(w1, w2)), wo(wn(w0), wn(w1)), wo(wn(w0), wn(w2)), wo(wn(w1), wn(w2)))\n  ianor(w0, w1)\n  ianor(w0, w2)\n  ianor(w1, w2)\n  xchnxbir(wcad(w0, w1, w2), w3a(wn(wa(w0, w1)), wn(wa(w0, w2)), wn(wa(w1, w2))), w3o(wa(w0, w1), wa(w0, w2), wa(w1, w2)))\n  3ioran(wa(w0, w1), wa(w0, w2), wa(w1, w2))\n  cador(w0, w1, w2)\n  cadan(wn(w0), wn(w1), wn(w2))\n}","pretty":"thm cadnot(wff w0, wff w1, wff w2) {\n  ⊢ (¬ cadd(w0, w1, w2)↔ cadd(¬ w0, ¬ w1, ¬ w2))\n} = {\n  3bitr4i(¬ cadd(w0, w1, w2), cadd(¬ w0, ¬ w1, ¬ w2), (¬(w0 ∧ w1)∧ ¬(w0 ∧ w2)∧ ¬(w1 ∧ w2)), ((¬ w0 ∨ ¬ w1)∧(¬ w0 ∨ ¬ w2)∧(¬ w1 ∨ ¬ w2)))\n  3anbi123i(¬(w0 ∧ w1), ¬(w0 ∧ w2), ¬(w1 ∧ w2), (¬ w0 ∨ ¬ w1), (¬ w0 ∨ ¬ w2), (¬ w1 ∨ ¬ w2))\n  ianor(w0, w1)\n  ianor(w0, w2)\n  ianor(w1, w2)\n  xchnxbir(cadd(w0, w1, w2), (¬(w0 ∧ w1)∧ ¬(w0 ∧ w2)∧ ¬(w1 ∧ w2)), ((w0 ∧ w1)∨(w0 ∧ w2)∨(w1 ∧ w2)))\n  3ioran((w0 ∧ w1), (w0 ∧ w2), (w1 ∧ w2))\n  cador(w0, w1, w2)\n  cadan(¬ w0, ¬ w1, ¬ w2)\n}","parent":["3bitr4i","3anbi123i","ianor","xchnxbir","3ioran","cador","cadan"],"children":[]},{"name":"cad1","content":"If one input is true, then the adder carry is true exactly when at least one of the other two inputs is true. (Contributed by Mario Carneiro, 8-Sep-2016.) (Proof shortened by Wolf Lammen, 19-Jun-2020.)","origin":"thm cad1(wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wcad(w1, w2, w0), wo(w1, w2)))\n} = {\n  syl6rbbr(w0, wcad(w1, w2, w0), wo(w1, w2), wa(wo(w1, w2), wa(wo(w1, w0), wo(w2, w0))))\n  biantrud(w0, wo(w1, w2), wa(wo(w1, w0), wo(w2, w0)))\n  jca(w0, wo(w1, w0), wo(w2, w0))\n  olc(w0, w1)\n  olc(w0, w2)\n  bitri(wcad(w1, w2, w0), wa(wo(w1, w2), wa(wo(w1, w0), wo(w2, w0))), w3a(wo(w1, w2), wo(w1, w0), wo(w2, w0)))\n  cadan(w1, w2, w0)\n  3anass(wo(w1, w2), wo(w1, w0), wo(w2, w0))\n}","pretty":"thm cad1(wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(cadd(w1, w2, w0)↔(w1 ∨ w2)))\n} = {\n  syl6rbbr(w0, cadd(w1, w2, w0), (w1 ∨ w2), ((w1 ∨ w2)∧((w1 ∨ w0)∧(w2 ∨ w0))))\n  biantrud(w0, (w1 ∨ w2), ((w1 ∨ w0)∧(w2 ∨ w0)))\n  jca(w0, (w1 ∨ w0), (w2 ∨ w0))\n  olc(w0, w1)\n  olc(w0, w2)\n  bitri(cadd(w1, w2, w0), ((w1 ∨ w2)∧((w1 ∨ w0)∧(w2 ∨ w0))), ((w1 ∨ w2)∧(w1 ∨ w0)∧(w2 ∨ w0)))\n  cadan(w1, w2, w0)\n  3anass((w1 ∨ w2), (w1 ∨ w0), (w2 ∨ w0))\n}","parent":["syl6rbbr","biantrud","jca","olc","bitri","cadan","3anass"],"children":["cadifp","sadadd2lem2","sadcaddlem"]},{"name":"cad0","content":"If one input is false, then the adder carry is true exactly when both of the other two inputs are true. (Contributed by Mario Carneiro, 8-Sep-2016.)","origin":"thm cad0(wff w0, wff w1, wff w2) {\n  |- wi(wn(w0), wb(wcad(w1, w2, w0), wa(w1, w2)))\n} = {\n  syl5bb(wn(w0), wcad(w1, w2, w0), wa(w1, w2), wo(wa(w1, w2), wa(w0, wxo(w1, w2))))\n  df-cad(w1, w2, w0)\n  impbid1(wn(w0), wo(wa(w1, w2), wa(w0, wxo(w1, w2))), wa(w1, w2))\n  jaod(wn(w0), wa(w1, w2), wa(w0, wxo(w1, w2)), wa(w1, w2))\n  idd(wn(w0), wa(w1, w2))\n  adantrd(wn(w0), w0, wxo(w1, w2), wa(w1, w2))\n  pm2.21(w0, wa(w1, w2))\n  orc(wa(w1, w2), wa(w0, wxo(w1, w2)))\n}","pretty":"thm cad0(wff w0, wff w1, wff w2) {\n  ⊢ (¬ w0 →(cadd(w1, w2, w0)↔(w1 ∧ w2)))\n} = {\n  syl5bb(¬ w0, cadd(w1, w2, w0), (w1 ∧ w2), ((w1 ∧ w2)∨(w0 ∧(w1 ⊻ w2))))\n  df-cad(w1, w2, w0)\n  impbid1(¬ w0, ((w1 ∧ w2)∨(w0 ∧(w1 ⊻ w2))), (w1 ∧ w2))\n  jaod(¬ w0, (w1 ∧ w2), (w0 ∧(w1 ⊻ w2)), (w1 ∧ w2))\n  idd(¬ w0, (w1 ∧ w2))\n  adantrd(¬ w0, w0, (w1 ⊻ w2), (w1 ∧ w2))\n  pm2.21(w0, (w1 ∧ w2))\n  orc((w1 ∧ w2), (w0 ∧(w1 ⊻ w2)))\n}","parent":["syl5bb","df-cad","impbid1","jaod","idd","adantrd","pm2.21","orc"],"children":["cadifp","sadadd2lem2","sadcaddlem","saddisjlem"]},{"name":"cadifp","content":"The value of the carry is, if the input carry is true, the disjunction, and if the input carry is false, the conjunction, of the other two inputs. (Contributed by BJ, 8-Oct-2019.)","origin":"thm cadifp(wff w0, wff w1, wff w2) {\n  |- wb(wcad(w0, w1, w2), wif(w2, wo(w0, w1), wa(w0, w1)))\n} = {\n  casesifp(wcad(w0, w1, w2), w2, wo(w0, w1), wa(w0, w1))\n  cad1(w2, w0, w1)\n  cad0(w2, w0, w1)\n}","pretty":"thm cadifp(wff w0, wff w1, wff w2) {\n  ⊢ (cadd(w0, w1, w2)↔ if(w2,(w0 ∨ w1),(w0 ∧ w1)))\n} = {\n  casesifp(cadd(w0, w1, w2), w2, (w0 ∨ w1), (w0 ∧ w1))\n  cad1(w2, w0, w1)\n  cad0(w2, w0, w1)\n}","parent":["casesifp","cad1","cad0"],"children":[]},{"name":"cad11","content":"If (at least) two inputs are true, then the adder carry is true. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm cad11(wff w0, wff w1, wff w2) {\n  |- wi(wa(w0, w1), wcad(w0, w1, w2))\n} = {\n  sylibr(wa(w0, w1), wcad(w0, w1, w2), wo(wa(w0, w1), wa(w2, wxo(w0, w1))))\n  orc(wa(w0, w1), wa(w2, wxo(w0, w1)))\n  df-cad(w0, w1, w2)\n}","pretty":"thm cad11(wff w0, wff w1, wff w2) {\n  ⊢ ((w0 ∧ w1)→ cadd(w0, w1, w2))\n} = {\n  sylibr((w0 ∧ w1), cadd(w0, w1, w2), ((w0 ∧ w1)∨(w2 ∧(w0 ⊻ w1))))\n  orc((w0 ∧ w1), (w2 ∧(w0 ⊻ w1)))\n  df-cad(w0, w1, w2)\n}","parent":["sylibr","orc","df-cad"],"children":["cadtru"]},{"name":"cadtru","content":"The adder carry is true as soon as its first two inputs are the truth constant. (Contributed by Mario Carneiro, 4-Sep-2016.)","origin":"thm cadtru(wff w0) {\n  |- wcad(wtru, wtru, w0)\n} = {\n  mp2an(wcad(wtru, wtru, w0), wtru, wtru)\n  tru()\n  cad11(wtru, wtru, w0)\n}","pretty":"thm cadtru(wff w0) {\n  ⊢ cadd(T, T, w0)\n} = {\n  mp2an(cadd(T, T, w0), wtru, wtru)\n  tru()\n  cad11(wtru, wtru, w0)\n}","parent":["mp2an","tru","cad11"],"children":[]}]}