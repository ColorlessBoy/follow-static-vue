{"index":1329,"title":"RP ADDTO: First and second members of an ordered pair","content":"","blocks":[{"name":"elcnvlem","content":"Two ways to say a set is a member of the converse of a class. (Contributed by RP, 19-Aug-2020.)","origin":"thm elcnvlem(setvar s0, class c0, class c1, class c2) {\n  |- wb(wcel(c0, ccnv(c1)), wa(wcel(c0, cxp(universe, universe)), wcel(cfv(c2, c0), c1)))\n  -| wceq(c2, cmpt(s0, cxp(universe, universe), cop(cfv(c2nd, cv(s0)), cfv(c1st, cv(s0)))))\n} = {\n  bitri(wcel(c0, ccnv(c1)), wa(wcel(c0, cxp(universe, universe)), wcel(cfv(c2, c0), c1)), wex(hs0, wex(hs1, wa(wceq(c0, cop(cv(hs0), cv(hs1))), wcel(cop(cv(hs1), cv(hs0)), c1)))))\n  elcnv2(hs0, hs1, c0, c1)\n  copsex2gb(hs0, hs1, c0, wcel(cop(cv(hs1), cv(hs0)), c1), wcel(cfv(c2, c0), c1))\n  eleq1d(cfv(c2, c0), c1, cop(cv(hs1), cv(hs0)), wceq(c0, cop(cv(hs0), cv(hs1))))\n  syl6eq(cfv(c2, c0), cop(cv(hs1), cv(hs0)), cfv(c2, cop(cv(hs0), cv(hs1))), wceq(c0, cop(cv(hs0), cv(hs1))))\n  fveq2(c0, cop(cv(hs0), cv(hs1)), c2)\n  ax-mp(wceq(cfv(c2, cop(cv(hs0), cv(hs1))), cop(cv(hs1), cv(hs0))), wcel(cop(cv(hs0), cv(hs1)), cxp(universe, universe)))\n  opelvv(cv(hs0), cv(hs1))\n  fvmpt(s0, cop(cv(hs0), cv(hs1)), cxp(universe, universe), c2, cop(cv(hs1), cv(hs0)), cop(cfv(c2nd, cv(s0)), cfv(c1st, cv(s0))))\n  opeq12d(cfv(c2nd, cv(s0)), cfv(c1st, cv(s0)), cv(hs1), cv(hs0), wceq(cv(s0), cop(cv(hs0), cv(hs1))))\n  op2ndd(cv(s0), cv(hs0), cv(hs1))\n  op1std(cv(s0), cv(hs0), cv(hs1))\n  vex(hs0)\n  vex(hs1)\n  opex(cv(hs1), cv(hs0))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.w(wcel(cfv(c2, c0), c1))\n  diff.hs1.w(wcel(cfv(c2, c0), c1))\n  diff.cop.s(s0, cv(hs0), cv(hs1))\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.cop.s(s0, cv(hs1), cv(hs0))\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm elcnvlem(setvar s0, class c0, class c1, class c2) {\n  ⊢ (c0 ∈ `' c1 ↔(c0 ∈(𝕌 × 𝕌)∧(c2 ` c0)∈ c1))\n  ⊣ c2 =(s0 ∈(𝕌 × 𝕌)↦ <(2nd ` s0),(1st ` s0)>)\n} = {\n  bitri(c0 ∈ `' c1, (c0 ∈(𝕌 × 𝕌)∧(c2 ` c0)∈ c1), ∃(hs0, ∃(hs1,(c0 = < hs0, hs1 > ∧ < hs1, hs0 > ∈ c1))))\n  elcnv2(hs0, hs1, c0, c1)\n  copsex2gb(hs0, hs1, c0, < hs1, hs0 > ∈ c1, (c2 ` c0)∈ c1)\n  eleq1d((c2 ` c0), c1, < hs1, hs0 >, c0 = < hs0, hs1 >)\n  syl6eq((c2 ` c0), < hs1, hs0 >, (c2 ` < hs0, hs1 >), c0 = < hs0, hs1 >)\n  fveq2(c0, < hs0, hs1 >, c2)\n  ax-mp((c2 ` < hs0, hs1 >)= < hs1, hs0 >, < hs0, hs1 > ∈(𝕌 × 𝕌))\n  opelvv(hs0, hs1)\n  fvmpt(s0, < hs0, hs1 >, (𝕌 × 𝕌), c2, < hs1, hs0 >, <(2nd ` s0),(1st ` s0)>)\n  opeq12d((2nd ` s0), (1st ` s0), hs1, hs0, s0 = < hs0, hs1 >)\n  op2ndd(s0, hs0, hs1)\n  op1std(s0, hs0, hs1)\n  vex(hs0)\n  vex(hs1)\n  opex(hs1, hs0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.w((c2 ` c0)∈ c1)\n  diff.hs1.w((c2 ` c0)∈ c1)\n  diff.cop.s(s0, hs0, hs1)\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.cop.s(s0, hs1, hs0)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["bitri","elcnv2","copsex2gb","eleq1d","syl6eq","fveq2","ax-mp","opelvv","fvmpt","opeq12d","op2ndd","op1std","vex","opex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs0.w","diff.hs1.w","diff.cop.s","diff.cxp.s","diff.universe.s","diff.cv.s","diffss.ex","diff.hs1.s"],"children":["elcnvintab"]},{"name":"elcnvintab","content":"Two ways of saying a set is an element of the converse of the intersection of a class. (Contributed by RP, 19-Aug-2020.)","origin":"thm elcnvintab(setvar s0, class c0, wff w0) {\n  |- wb(wcel(c0, ccnv(cint(cab(s0, w0)))), wa(wcel(c0, cxp(universe, universe)), wal(s0, wi(w0, wcel(c0, ccnv(cv(s0)))))))\n  -| diffsc(s0, c0)\n} = {\n  elmapintab(s0, c0, ccnv(cint(cab(s0, w0))), cxp(universe, universe), ccnv(cv(s0)), cmpt(hs0, cxp(universe, universe), cop(cfv(c2nd, cv(hs0)), cfv(c1st, cv(hs0)))), w0)\n  elcnvlem(hs0, c0, cint(cab(s0, w0)), cmpt(hs0, cxp(universe, universe), cop(cfv(c2nd, cv(hs0)), cfv(c1st, cv(hs0)))))\n  elcnvlem(hs0, c0, cv(s0), cmpt(hs0, cxp(universe, universe), cop(cfv(c2nd, cv(hs0)), cfv(c1st, cv(hs0)))))\n  eqid(cmpt(hs0, cxp(universe, universe), cop(cfv(c2nd, cv(hs0)), cfv(c1st, cv(hs0)))))\n  diff.cmpt.s(s0, hs0, cxp(universe, universe), cop(cfv(c2nd, cv(hs0)), cfv(c1st, cv(hs0))))\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.cop.s(s0, cfv(c2nd, cv(hs0)), cfv(c1st, cv(hs0)))\n  diff.cfv.s(s0, c2nd, cv(hs0))\n  diff.c2nd.s(s0)\n  diff.cfv.s(s0, c1st, cv(hs0))\n  diff.c1st.s(s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm elcnvintab(setvar s0, class c0, wff w0) {\n  ⊢ (c0 ∈ `' ⋂ { s0 | w0 } ↔(c0 ∈(𝕌 × 𝕌)∧ ∀(s0,(w0 → c0 ∈ `' s0))))\n  ⊣ d(s0, c0)\n} = {\n  elmapintab(s0, c0, `' ⋂ { s0 | w0 }, (𝕌 × 𝕌), `' s0, (hs0 ∈(𝕌 × 𝕌)↦ <(2nd ` hs0),(1st ` hs0)>), w0)\n  elcnvlem(hs0, c0, ⋂ { s0 | w0 }, (hs0 ∈(𝕌 × 𝕌)↦ <(2nd ` hs0),(1st ` hs0)>))\n  elcnvlem(hs0, c0, s0, (hs0 ∈(𝕌 × 𝕌)↦ <(2nd ` hs0),(1st ` hs0)>))\n  eqid((hs0 ∈(𝕌 × 𝕌)↦ <(2nd ` hs0),(1st ` hs0)>))\n  diff.cmpt.s(s0, hs0, (𝕌 × 𝕌), <(2nd ` hs0),(1st ` hs0)>)\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.cop.s(s0, (2nd ` hs0), (1st ` hs0))\n  diff.cfv.s(s0, c2nd, hs0)\n  diff.c2nd.s(s0)\n  diff.cfv.s(s0, c1st, hs0)\n  diff.c1st.s(s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["elmapintab","elcnvlem","eqid","diff.cmpt.s","diff.cxp.s","diff.universe.s","diff.cop.s","diff.cfv.s","diff.c2nd.s","diff.c1st.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["cnvintabd"]},{"name":"cnvintabd","content":"Value of the converse of the intersection of a nonempty class. (Contributed by RP, 20-Aug-2020.)","origin":"thm cnvintabd(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wceq(ccnv(cint(cab(s0, w1))), cint(crab(s1, cpw(cxp(universe, universe)), wex(s0, wa(wceq(cv(s1), ccnv(cv(s0))), w1))))))\n  -| wi(w0, wex(s0, w1))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w1)\n} = {\n  eqrdv(hs0, ccnv(cint(cab(s0, w1))), cint(crab(s1, cpw(cxp(universe, universe)), wex(s0, wa(wceq(cv(s1), ccnv(cv(s0))), w1)))), w0)\n  3bitr4g(w0, wcel(cv(hs0), ccnv(cint(cab(s0, w1)))), wcel(cv(hs0), cint(crab(s1, cpw(cxp(universe, universe)), wex(s0, wa(wceq(cv(s1), ccnv(cv(s0))), w1))))), wa(wcel(cv(hs0), cxp(universe, universe)), wal(s0, wi(w1, wcel(cv(hs0), ccnv(cv(s0)))))), wa(wi(wex(s0, w1), wcel(cv(hs0), cxp(universe, universe))), wal(s0, wi(w1, wcel(cv(hs0), ccnv(cv(s0)))))))\n  anbi1d(w0, wcel(cv(hs0), cxp(universe, universe)), wal(s0, wi(w1, wcel(cv(hs0), ccnv(cv(s0))))), wi(wex(s0, w1), wcel(cv(hs0), cxp(universe, universe))))\n  bicomd(w0, wcel(cv(hs0), cxp(universe, universe)), wi(wex(s0, w1), wcel(cv(hs0), cxp(universe, universe))))\n  syl(w0, wb(wi(wex(s0, w1), wcel(cv(hs0), cxp(universe, universe))), wcel(cv(hs0), cxp(universe, universe))), wex(s0, w1))\n  pm5.5(wex(s0, w1), wcel(cv(hs0), cxp(universe, universe)))\n  elcnvintab(s0, cv(hs0), w1)\n  ax-mp(wb(wcel(cv(hs0), cint(crab(s1, cpw(cxp(universe, universe)), wex(s0, wa(wceq(cv(s1), ccnv(cv(s0))), w1))))), wa(wi(wex(s0, w1), wcel(cv(hs0), cxp(universe, universe))), wal(s0, wi(w1, wcel(cv(hs0), ccnv(cv(s0))))))), wcel(cv(hs0), universe))\n  vex(hs0)\n  elmapintrab(s1, s0, cv(hs0), universe, cxp(universe, universe), ccnv(cv(s0)), w1)\n  cnvex(cv(s0))\n  vex(s0)\n  mpbi(wss(ccnv(cv(s0)), cxp(universe, universe)), wrel(ccnv(cv(s0))))\n  relcnv(cv(s0))\n  df-rel(ccnv(cv(s0)))\n  diff.hs0.c(ccnv(cint(cab(s0, w1))))\n  diff.hs0.c(cint(crab(s1, cpw(cxp(universe, universe)), wex(s0, wa(wceq(cv(s1), ccnv(cv(s0))), w1)))))\n  diff.hs0.w(w0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.cxp.s(s1, universe, universe)\n  diff.universe.s(s1)\n  diff.ccnv.s(s1, cv(s0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n}","pretty":"thm cnvintabd(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → `' ⋂ { s0 | w1 } = ⋂ { s1 ∈ P((𝕌 × 𝕌))| ∃(s0,(s1 = `' s0 ∧ w1))})\n  ⊣ (w0 → ∃(s0, w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w1)\n} = {\n  eqrdv(hs0, `' ⋂ { s0 | w1 }, ⋂ { s1 ∈ P((𝕌 × 𝕌))| ∃(s0,(s1 = `' s0 ∧ w1))}, w0)\n  3bitr4g(w0, hs0 ∈ `' ⋂ { s0 | w1 }, hs0 ∈ ⋂ { s1 ∈ P((𝕌 × 𝕌))| ∃(s0,(s1 = `' s0 ∧ w1))}, (hs0 ∈(𝕌 × 𝕌)∧ ∀(s0,(w1 → hs0 ∈ `' s0))), ((∃(s0, w1)→ hs0 ∈(𝕌 × 𝕌))∧ ∀(s0,(w1 → hs0 ∈ `' s0))))\n  anbi1d(w0, hs0 ∈(𝕌 × 𝕌), ∀(s0,(w1 → hs0 ∈ `' s0)), (∃(s0, w1)→ hs0 ∈(𝕌 × 𝕌)))\n  bicomd(w0, hs0 ∈(𝕌 × 𝕌), (∃(s0, w1)→ hs0 ∈(𝕌 × 𝕌)))\n  syl(w0, ((∃(s0, w1)→ hs0 ∈(𝕌 × 𝕌))↔ hs0 ∈(𝕌 × 𝕌)), ∃(s0, w1))\n  pm5.5(∃(s0, w1), hs0 ∈(𝕌 × 𝕌))\n  elcnvintab(s0, hs0, w1)\n  ax-mp((hs0 ∈ ⋂ { s1 ∈ P((𝕌 × 𝕌))| ∃(s0,(s1 = `' s0 ∧ w1))} ↔((∃(s0, w1)→ hs0 ∈(𝕌 × 𝕌))∧ ∀(s0,(w1 → hs0 ∈ `' s0)))), hs0 ∈ 𝕌)\n  vex(hs0)\n  elmapintrab(s1, s0, hs0, universe, (𝕌 × 𝕌), `' s0, w1)\n  cnvex(s0)\n  vex(s0)\n  mpbi(`' s0 ⊆(𝕌 × 𝕌), Rel(`' s0))\n  relcnv(s0)\n  df-rel(`' s0)\n  diff.hs0.c(`' ⋂ { s0 | w1 })\n  diff.hs0.c(⋂ { s1 ∈ P((𝕌 × 𝕌))| ∃(s0,(s1 = `' s0 ∧ w1))})\n  diff.hs0.w(w0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.cxp.s(s1, universe, universe)\n  diff.universe.s(s1)\n  diff.ccnv.s(s1, s0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n}","parent":["eqrdv","3bitr4g","anbi1d","bicomd","syl","pm5.5","elcnvintab","ax-mp","vex","elmapintrab","cnvex","mpbi","relcnv","df-rel","diff.hs0.c","diff.hs0.w","diff.cv.s","diffss.ex","diff.hs0.s","diff.cxp.s","diff.universe.s","diff.ccnv.s"],"children":["clcnvlem"]}]}