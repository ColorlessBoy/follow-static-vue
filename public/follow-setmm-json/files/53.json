{"index":53,"title":"Equality predicate (continued)","content":"The equality predicate was introduced above in ~ wceq for use by ~ df-tru . See the comments in that section. In this section, we continue with its first \"real\" use.","blocks":[{"name":"equs3OLD","content":"Obsolete as of 12-Aug-2023. Use ~ alinexa or ~ sbn instead. Lemma used in proofs of substitution properties. (Contributed by NM, 10-May-1993.) (Proof modificatio is discouraged.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm equs3OLD(setvar s0, setvar s1, wff w0) {\n  |- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wn(wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0)))))\n} = {\n  con2bii(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), wn(w0))))\n  alinexa(s0, wceq(cv(s0), cv(s1)), w0)\n}","pretty":"thm equs3OLD(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ¬ ∀(s0,(s0 = s1 → ¬ w0)))\n} = {\n  con2bii(∃(s0,(s0 = s1 ∧ w0)), ∀(s0,(s0 = s1 → ¬ w0)))\n  alinexa(s0, s0 = s1, w0)\n}","parent":["con2bii","alinexa"],"children":[]},{"name":"speimfw","content":"Specialization, with additional weakening (compared to ~ 19.2 ) to allow bundling of ` x ` and ` y ` . Uses only Tarski's FOL axiom schemes. (Contributed by NM, 23-Apr-2017.) (Proof shortened by Wolf Lammen, 5-Dec-2017.)","origin":"thm speimfw(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wi(wal(s0, w0), wex(s0, w1)))\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n} = {\n  syl5com(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wal(s0, w0), wex(s0, w1), wex(s0, wceq(cv(s0), cv(s1))))\n  biimpri(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wex(s0, wceq(cv(s0), cv(s1))))\n  df-ex(s0, wceq(cv(s0), cv(s1)))\n  aleximi(s0, w0, wceq(cv(s0), cv(s1)), w1)\n  com12(w0, wceq(cv(s0), cv(s1)), w1)\n}","pretty":"thm speimfw(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (¬ ∀(s0, ¬ s0 = s1)→(∀(s0, w0)→ ∃(s0, w1)))\n  ⊣ (s0 = s1 →(w0 → w1))\n} = {\n  syl5com(¬ ∀(s0, ¬ s0 = s1), ∀(s0, w0), ∃(s0, w1), ∃(s0, s0 = s1))\n  biimpri(¬ ∀(s0, ¬ s0 = s1), ∃(s0, s0 = s1))\n  df-ex(s0, s0 = s1)\n  aleximi(s0, w0, s0 = s1, w1)\n  com12(w0, s0 = s1, w1)\n}","parent":["syl5com","biimpri","df-ex","aleximi","com12"],"children":["spimfw"]},{"name":"speimfwALT","content":"Alternate proof of ~ speimfw (longer compressed proof, but fewer essential steps). (Contributed by NM, 23-Apr-2017.) (Proof shortened by Wolf Lammen, 5-Aug-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm speimfwALT(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wi(wal(s0, w0), wex(s0, w1)))\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n} = {\n  3imtr3i(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wi(wal(s0, w0), wex(s0, w1)), wex(s0, wceq(cv(s0), cv(s1))), wex(s0, wi(w0, w1)))\n  eximi(s0, wceq(cv(s0), cv(s1)), wi(w0, w1))\n  df-ex(s0, wceq(cv(s0), cv(s1)))\n  19.35(s0, w0, w1)\n}","pretty":"thm speimfwALT(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (¬ ∀(s0, ¬ s0 = s1)→(∀(s0, w0)→ ∃(s0, w1)))\n  ⊣ (s0 = s1 →(w0 → w1))\n} = {\n  3imtr3i(¬ ∀(s0, ¬ s0 = s1), (∀(s0, w0)→ ∃(s0, w1)), ∃(s0, s0 = s1), ∃(s0,(w0 → w1)))\n  eximi(s0, s0 = s1, (w0 → w1))\n  df-ex(s0, s0 = s1)\n  19.35(s0, w0, w1)\n}","parent":["3imtr3i","eximi","df-ex","19.35"],"children":[]},{"name":"spimfw","content":"Specialization, with additional weakening (compared to ~ sp ) to allow bundling of ` x ` and ` y ` . Uses only Tarski's FOL axiom schemes. (Contributed by NM, 23-Apr-2017.) (Proof shortened by Wolf Lammen, 7-Aug-2017.)","origin":"thm spimfw(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wi(wal(s0, w0), w1))\n  -| wi(wn(w1), wal(s0, wn(w1)))\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n} = {\n  syl6(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wal(s0, w0), w1, wex(s0, w1))\n  speimfw(s0, s1, w0, w1)\n  sylbi(wex(s0, w1), w1, wn(wal(s0, wn(w1))))\n  df-ex(s0, w1)\n  con1i(wal(s0, wn(w1)), w1)\n}","pretty":"thm spimfw(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (¬ ∀(s0, ¬ s0 = s1)→(∀(s0, w0)→ w1))\n  ⊣ (¬ w1 → ∀(s0, ¬ w1))\n  ⊣ (s0 = s1 →(w0 → w1))\n} = {\n  syl6(¬ ∀(s0, ¬ s0 = s1), ∀(s0, w0), w1, ∃(s0, w1))\n  speimfw(s0, s1, w0, w1)\n  sylbi(∃(s0, w1), w1, ¬ ∀(s0, ¬ w1))\n  df-ex(s0, w1)\n  con1i(∀(s0, ¬ w1), w1)\n}","parent":["syl6","speimfw","sylbi","df-ex","con1i"],"children":["spimw"]},{"name":"ax12i","content":"Inference that has ~ ax-12 (without ` A. y ` ) as its conclusion. Uses only Tarski's FOL axiom schemes. The hypotheses may be eliminable without using ~ ax-12 in special cases. Proof similar to Lemma 16 of [Tarski] p. 70. (Contributed by NM, 20-May-2008.)","origin":"thm ax12i(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n  -| wi(w1, wal(s0, w1))\n} = {\n  syl6bi(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1)\n  alrimih(s0, w1, wi(wceq(cv(s0), cv(s1)), w0))\n  biimprcd(w1, wceq(cv(s0), cv(s1)), w0)\n}","pretty":"thm ax12i(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n  ⊣ (w1 → ∀(s0, w1))\n} = {\n  syl6bi(s0 = s1, w0, ∀(s0,(s0 = s1 → w0)), w1)\n  alrimih(s0, w1, (s0 = s1 → w0))\n  biimprcd(w1, s0 = s1, w0)\n}","parent":["syl6bi","alrimih","biimprcd"],"children":["ax12wlem"]}]}