{"index":1212,"title":"Tools for automatic proof building","content":"The results in this section are mostly meant for being used by automatic proof building programs. As a result, they might appear less useful or meaningful than others to human beings.","blocks":[{"name":"efald2","content":"A proof by contradiction. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm efald2(wff w0) {\n  |- w0\n  -| wi(wn(w0), wfal)\n} = {\n  mptru(w0)\n  efald(wtru, w0)\n  adantl(wtru, wn(w0), wfal)\n}","pretty":"thm efald2(wff w0) {\n  ⊢ w0\n  ⊣ (¬ w0 → F)\n} = {\n  mptru(w0)\n  efald(wtru, w0)\n  adantl(wtru, ¬ w0, wfal)\n}","parent":["mptru","efald","adantl"],"children":["mpt2bi123f","mptbi12f","ac6s6"]},{"name":"notbinot1","content":"Simplification rule of negation across a biimplication. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm notbinot1(wff w0, wff w1) {\n  |- wb(wn(wb(wn(w0), w1)), wb(w0, w1))\n} = {\n  con1bii(wb(wn(w0), w1), wb(w0, w1))\n  bicomi(wn(wb(w0, w1)), wb(wn(w0), w1))\n  nbbn(w0, w1)\n}","pretty":"thm notbinot1(wff w0, wff w1) {\n  ⊢ (¬(¬ w0 ↔ w1)↔(w0 ↔ w1))\n} = {\n  con1bii((¬ w0 ↔ w1), (w0 ↔ w1))\n  bicomi(¬(w0 ↔ w1), (¬ w0 ↔ w1))\n  nbbn(w0, w1)\n}","parent":["con1bii","bicomi","nbbn"],"children":["bicontr"]},{"name":"bicontr","content":"Biimplication of its own negation is a contradiction. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm bicontr(wff w0) {\n  |- wb(wb(wn(w0), w0), wfal)\n} = {\n  bifal(wb(wn(w0), w0))\n  mpbir(wn(wb(wn(w0), w0)), wb(w0, w0))\n  biid(w0)\n  notbinot1(w0, w0)\n}","pretty":"thm bicontr(wff w0) {\n  ⊢ ((¬ w0 ↔ w0)↔ F)\n} = {\n  bifal((¬ w0 ↔ w0))\n  mpbir(¬(¬ w0 ↔ w0), (w0 ↔ w0))\n  biid(w0)\n  notbinot1(w0, w0)\n}","parent":["bifal","mpbir","biid","notbinot1"],"children":[]},{"name":"impor","content":"An equivalent formula for implying a disjunction. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm impor(wff w0, wff w1, wff w2) {\n  |- wb(wi(w0, wo(w1, w2)), wo(wo(wn(w0), w1), w2))\n} = {\n  bitr4i(wi(w0, wo(w1, w2)), wo(wo(wn(w0), w1), w2), wo(wn(w0), wo(w1, w2)))\n  imor(w0, wo(w1, w2))\n  orass(wn(w0), w1, w2)\n}","pretty":"thm impor(wff w0, wff w1, wff w2) {\n  ⊢ ((w0 →(w1 ∨ w2))↔((¬ w0 ∨ w1)∨ w2))\n} = {\n  bitr4i((w0 →(w1 ∨ w2)), ((¬ w0 ∨ w1)∨ w2), (¬ w0 ∨(w1 ∨ w2)))\n  imor(w0, (w1 ∨ w2))\n  orass(¬ w0, w1, w2)\n}","parent":["bitr4i","imor","orass"],"children":[]},{"name":"orfa","content":"The falsum ` F. ` can be removed from a disjunction. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm orfa(wff w0) {\n  |- wb(wo(w0, wfal), w0)\n} = {\n  impbii(wo(w0, wfal), w0)\n  sylbi(wo(w0, wfal), w0, wi(wn(wfal), w0))\n  bitri(wo(w0, wfal), wi(wn(wfal), w0), wo(wfal, w0))\n  orcom(w0, wfal)\n  df-or(wfal, w0)\n  ax-mp(wi(wi(wn(wfal), w0), w0), wn(wfal))\n  fal()\n  pm2.27(wn(wfal), w0)\n  orc(w0, wfal)\n}","pretty":"thm orfa(wff w0) {\n  ⊢ ((w0 ∨ F)↔ w0)\n} = {\n  impbii((w0 ∨ F), w0)\n  sylbi((w0 ∨ F), w0, (¬ F → w0))\n  bitri((w0 ∨ F), (¬ F → w0), (F ∨ w0))\n  orcom(w0, wfal)\n  df-or(wfal, w0)\n  ax-mp(((¬ F → w0)→ w0), ¬ F)\n  fal()\n  pm2.27(¬ F, w0)\n  orc(w0, wfal)\n}","parent":["impbii","sylbi","bitri","orcom","df-or","ax-mp","fal","pm2.27","orc"],"children":[]},{"name":"notbinot2","content":"Commutation rule between negation and biimplication. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm notbinot2(wff w0, wff w1) {\n  |- wb(wn(wb(w0, w1)), wb(wn(w0), w1))\n} = {\n  bicomi(wn(wb(w0, w1)), wb(wn(w0), w1))\n  nbbn(w0, w1)\n}","pretty":"thm notbinot2(wff w0, wff w1) {\n  ⊢ (¬(w0 ↔ w1)↔(¬ w0 ↔ w1))\n} = {\n  bicomi(¬(w0 ↔ w1), (¬ w0 ↔ w1))\n  nbbn(w0, w1)\n}","parent":["bicomi","nbbn"],"children":["biimpor"]},{"name":"biimpor","content":"A rewriting rule for biimplication. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm biimpor(wff w0, wff w1, wff w2) {\n  |- wb(wi(wb(w0, w1), w2), wo(wb(wn(w0), w1), w2))\n} = {\n  bitri(wi(wb(w0, w1), w2), wo(wb(wn(w0), w1), w2), wo(wn(wb(w0, w1)), w2))\n  imor(wb(w0, w1), w2)\n  orbi1i(wn(wb(w0, w1)), w2, wb(wn(w0), w1))\n  notbinot2(w0, w1)\n}","pretty":"thm biimpor(wff w0, wff w1, wff w2) {\n  ⊢ (((w0 ↔ w1)→ w2)↔((¬ w0 ↔ w1)∨ w2))\n} = {\n  bitri(((w0 ↔ w1)→ w2), ((¬ w0 ↔ w1)∨ w2), (¬(w0 ↔ w1)∨ w2))\n  imor((w0 ↔ w1), w2)\n  orbi1i(¬(w0 ↔ w1), w2, (¬ w0 ↔ w1))\n  notbinot2(w0, w1)\n}","parent":["bitri","imor","orbi1i","notbinot2"],"children":[]},{"name":"unitresl","content":"A lemma for Conjunctive Normal Form unit propagation, in deduction form. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm unitresl(wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wi(w0, wo(w1, w2))\n  -| wi(w0, wn(w2))\n} = {\n  sylc(w0, w1, wo(w1, w2), wn(w2))\n  sylbb(wo(w1, w2), wi(wn(w2), w1), wo(w2, w1))\n  orcom(w1, w2)\n  df-or(w2, w1)\n}","pretty":"thm unitresl(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 →(w1 ∨ w2))\n  ⊣ (w0 → ¬ w2)\n} = {\n  sylc(w0, w1, (w1 ∨ w2), ¬ w2)\n  sylbb((w1 ∨ w2), (¬ w2 → w1), (w2 ∨ w1))\n  orcom(w1, w2)\n  df-or(w2, w1)\n}","parent":["sylc","sylbb","orcom","df-or"],"children":["unitresr"]},{"name":"unitresr","content":"A lemma for Conjunctive Normal Form unit propagation, in deduction form. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm unitresr(wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wi(w0, wo(w2, w1))\n  -| wi(w0, wn(w2))\n} = {\n  unitresl(w0, w1, w2)\n  orcomd(w0, w1, w2)\n}","pretty":"thm unitresr(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 →(w2 ∨ w1))\n  ⊣ (w0 → ¬ w2)\n} = {\n  unitresl(w0, w1, w2)\n  orcomd(w0, w1, w2)\n}","parent":["unitresl","orcomd"],"children":[]},{"name":"orfa1","content":"Add a contradicting disjunct to an antecedent. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm orfa1(wff w0, wff w1) {\n  |- wi(wo(w0, wfal), w1)\n  -| wi(w0, w1)\n} = {\n  jaoi(w0, wfal, w1)\n  falim(w1)\n}","pretty":"thm orfa1(wff w0, wff w1) {\n  ⊢ ((w0 ∨ F)→ w1)\n  ⊣ (w0 → w1)\n} = {\n  jaoi(w0, wfal, w1)\n  falim(w1)\n}","parent":["jaoi","falim"],"children":[]},{"name":"orfa2","content":"Remove a contradicting disjunct from an antecedent. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm orfa2(wff w0, wff w1) {\n  |- wi(wo(w0, w1), w1)\n  -| wi(w0, wfal)\n} = {\n  syl(wo(w0, w1), w1, wo(wfal, w1))\n  orim1i(w0, w1, wfal)\n  jaoi(wfal, w1, w1)\n  falim(w1)\n  id(w1)\n}","pretty":"thm orfa2(wff w0, wff w1) {\n  ⊢ ((w0 ∨ w1)→ w1)\n  ⊣ (w0 → F)\n} = {\n  syl((w0 ∨ w1), w1, (F ∨ w1))\n  orim1i(w0, w1, wfal)\n  jaoi(wfal, w1, w1)\n  falim(w1)\n  id(w1)\n}","parent":["syl","orim1i","jaoi","falim","id"],"children":[]},{"name":"bifald","content":"Infer the equivalence to a contradiction from a negation, in deduction form. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm bifald(wff w0, wff w1) {\n  |- wi(w0, wb(w1, wfal))\n  -| wi(w0, wn(w1))\n} = {\n  syl(w0, wb(w1, wfal), wn(w1))\n  pm5.21ni(w1, w1, wfal)\n  id(w1)\n  falim(w1)\n}","pretty":"thm bifald(wff w0, wff w1) {\n  ⊢ (w0 →(w1 ↔ F))\n  ⊣ (w0 → ¬ w1)\n} = {\n  syl(w0, (w1 ↔ F), ¬ w1)\n  pm5.21ni(w1, w1, wfal)\n  id(w1)\n  falim(w1)\n}","parent":["syl","pm5.21ni","id","falim"],"children":[]},{"name":"orsild","content":"A lemma for not-or-not elimination, in deduction form. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm orsild(wff w0, wff w1, wff w2) {\n  |- wi(w0, wn(w1))\n  -| wi(w0, wn(wo(w1, w2)))\n} = {\n  simpld(w0, wn(w1), wn(w2))\n  sylib(w0, wa(wn(w1), wn(w2)), wn(wo(w1, w2)))\n  ioran(w1, w2)\n}","pretty":"thm orsild(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → ¬ w1)\n  ⊣ (w0 → ¬(w1 ∨ w2))\n} = {\n  simpld(w0, ¬ w1, ¬ w2)\n  sylib(w0, (¬ w1 ∧ ¬ w2), ¬(w1 ∨ w2))\n  ioran(w1, w2)\n}","parent":["simpld","sylib","ioran"],"children":[]},{"name":"orsird","content":"A lemma for not-or-not elimination, in deduction form. (Contributed by Giovanni Mascellani, 15-Sep-2017.)","origin":"thm orsird(wff w0, wff w1, wff w2) {\n  |- wi(w0, wn(w1))\n  -| wi(w0, wn(wo(w2, w1)))\n} = {\n  simprd(w0, wn(w1), wn(w2))\n  sylib(w0, wa(wn(w2), wn(w1)), wn(wo(w2, w1)))\n  ioran(w2, w1)\n}","pretty":"thm orsird(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → ¬ w1)\n  ⊣ (w0 → ¬(w2 ∨ w1))\n} = {\n  simprd(w0, ¬ w1, ¬ w2)\n  sylib(w0, (¬ w2 ∧ ¬ w1), ¬(w2 ∨ w1))\n  ioran(w2, w1)\n}","parent":["simprd","sylib","ioran"],"children":[]},{"name":"cnf1dd","content":"A lemma for Conjunctive Normal Form unit propagation, in double deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm cnf1dd(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wi(w1, w2))\n  -| wi(w0, wi(w1, wn(w3)))\n  -| wi(w0, wi(w1, wo(w3, w2)))\n} = {\n  syl6(w0, w1, w2, wa(wn(w3), wo(w3, w2)))\n  jcad(w0, w1, wn(w3), wo(w3, w2))\n  sylan2b(wn(w3), wo(w3, w2), w2, wi(wn(w3), w2))\n  df-or(w3, w2)\n  pm3.35(wn(w3), w2)\n}","pretty":"thm cnf1dd(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 → w2))\n  ⊣ (w0 →(w1 → ¬ w3))\n  ⊣ (w0 →(w1 →(w3 ∨ w2)))\n} = {\n  syl6(w0, w1, w2, (¬ w3 ∧(w3 ∨ w2)))\n  jcad(w0, w1, ¬ w3, (w3 ∨ w2))\n  sylan2b(¬ w3, (w3 ∨ w2), w2, (¬ w3 → w2))\n  df-or(w3, w2)\n  pm3.35(¬ w3, w2)\n}","parent":["syl6","jcad","sylan2b","df-or","pm3.35"],"children":["cnf2dd","cnfn1dd","mpt2bi123f","mptbi12f","ac6s6"]},{"name":"cnf2dd","content":"A lemma for Conjunctive Normal Form unit propagation, in double deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm cnf2dd(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wi(w1, w2))\n  -| wi(w0, wi(w1, wn(w3)))\n  -| wi(w0, wi(w1, wo(w2, w3)))\n} = {\n  cnf1dd(w0, w1, w2, w3)\n  syl6(w0, w1, wo(w3, w2), wo(w2, w3))\n  pm1.4(w2, w3)\n}","pretty":"thm cnf2dd(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 → w2))\n  ⊣ (w0 →(w1 → ¬ w3))\n  ⊣ (w0 →(w1 →(w2 ∨ w3)))\n} = {\n  cnf1dd(w0, w1, w2, w3)\n  syl6(w0, w1, (w3 ∨ w2), (w2 ∨ w3))\n  pm1.4(w2, w3)\n}","parent":["cnf1dd","syl6","pm1.4"],"children":["cnfn2dd","mpt2bi123f","mptbi12f","ac6s6"]},{"name":"cnfn1dd","content":"A lemma for Conjunctive Normal Form unit propagation, in double deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm cnfn1dd(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wi(w1, w2))\n  -| wi(w0, wi(w1, w3))\n  -| wi(w0, wi(w1, wo(wn(w3), w2)))\n} = {\n  cnf1dd(w0, w1, w2, wn(w3))\n  syl6(w0, w1, wn(wn(w3)), w3)\n  notnot(w3)\n}","pretty":"thm cnfn1dd(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 → w2))\n  ⊣ (w0 →(w1 → w3))\n  ⊣ (w0 →(w1 →(¬ w3 ∨ w2)))\n} = {\n  cnf1dd(w0, w1, w2, ¬ w3)\n  syl6(w0, w1, ¬ ¬ w3, w3)\n  notnot(w3)\n}","parent":["cnf1dd","syl6","notnot"],"children":["mpt2bi123f","mptbi12f","ac6s6"]},{"name":"cnfn2dd","content":"A lemma for Conjunctive Normal Form unit propagation, in double deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm cnfn2dd(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wi(w1, w2))\n  -| wi(w0, wi(w1, w3))\n  -| wi(w0, wi(w1, wo(w2, wn(w3))))\n} = {\n  cnf2dd(w0, w1, w2, wn(w3))\n  syl6(w0, w1, wn(wn(w3)), w3)\n  notnot(w3)\n}","pretty":"thm cnfn2dd(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 → w2))\n  ⊣ (w0 →(w1 → w3))\n  ⊣ (w0 →(w1 →(w2 ∨ ¬ w3)))\n} = {\n  cnf2dd(w0, w1, w2, ¬ w3)\n  syl6(w0, w1, ¬ ¬ w3, w3)\n  notnot(w3)\n}","parent":["cnf2dd","syl6","notnot"],"children":["mpt2bi123f","mptbi12f","ac6s6"]},{"name":"or32dd","content":"A rearrangement of disjuncts, in double deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm or32dd(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wi(w0, wi(w1, wo(wo(w2, w3), w4)))\n  -| wi(w0, wi(w1, wo(wo(w2, w4), w3)))\n} = {\n  syl6ibr(w0, w1, wo(wo(w2, w3), w4), wo(wo(w2, w4), w3))\n  or32(w2, w3, w4)\n}","pretty":"thm or32dd(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ (w0 →(w1 →((w2 ∨ w3)∨ w4)))\n  ⊣ (w0 →(w1 →((w2 ∨ w4)∨ w3)))\n} = {\n  syl6ibr(w0, w1, ((w2 ∨ w3)∨ w4), ((w2 ∨ w4)∨ w3))\n  or32(w2, w3, w4)\n}","parent":["syl6ibr","or32"],"children":["mpt2bi123f","mptbi12f","ac6s6"]},{"name":"notornotel1","content":"A lemma for not-or-not elimination, in deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm notornotel1(wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wi(w0, wn(wo(wn(w1), w2)))\n} = {\n  syl(w0, w1, wn(wo(wn(w1), w2)))\n  3syl(wn(wo(wn(w1), w2)), w1, wa(wn(wn(w1)), wn(w2)), wn(wn(w1)))\n  biimpi(wn(wo(wn(w1), w2)), wa(wn(wn(w1)), wn(w2)))\n  ioran(wn(w1), w2)\n  simpl(wn(wn(w1)), wn(w2))\n  notnotr(w1)\n}","pretty":"thm notornotel1(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 → ¬(¬ w1 ∨ w2))\n} = {\n  syl(w0, w1, ¬(¬ w1 ∨ w2))\n  3syl(¬(¬ w1 ∨ w2), w1, (¬ ¬ w1 ∧ ¬ w2), ¬ ¬ w1)\n  biimpi(¬(¬ w1 ∨ w2), (¬ ¬ w1 ∧ ¬ w2))\n  ioran(¬ w1, w2)\n  simpl(¬ ¬ w1, ¬ w2)\n  notnotr(w1)\n}","parent":["syl","3syl","biimpi","ioran","simpl","notnotr"],"children":["notornotel2","ac6s6"]},{"name":"notornotel2","content":"A lemma for not-or-not elimination, in deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm notornotel2(wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wi(w0, wn(wo(w2, wn(w1))))\n} = {\n  notornotel1(w0, w1, w2)\n  sylnibr(w0, wo(wn(w1), w2), wo(w2, wn(w1)))\n  orcom(wn(w1), w2)\n}","pretty":"thm notornotel2(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 → ¬(w2 ∨ ¬ w1))\n} = {\n  notornotel1(w0, w1, w2)\n  sylnibr(w0, (¬ w1 ∨ w2), (w2 ∨ ¬ w1))\n  orcom(¬ w1, w2)\n}","parent":["notornotel1","sylnibr","orcom"],"children":["ac6s6"]},{"name":"contrd","content":"A proof by contradiction, in deduction form. (Contributed by Giovanni Mascellani, 19-Mar-2018.)","origin":"thm contrd(wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wi(w0, wi(wn(w1), w2))\n  -| wi(w0, wi(wn(w1), wn(w2)))\n} = {\n  syl(w0, w1, wi(wn(w1), wa(w2, wn(w2))))\n  jcad(w0, wn(w1), w2, wn(w2))\n  pm2.18d(wi(wn(w1), wa(w2, wn(w2))), w1)\n  imim2i(wn(w1), wa(w2, wn(w2)), w1)\n  imp(w2, wn(w2), w1)\n  pm2.24(w2, w1)\n}","pretty":"thm contrd(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 →(¬ w1 → w2))\n  ⊣ (w0 →(¬ w1 → ¬ w2))\n} = {\n  syl(w0, w1, (¬ w1 →(w2 ∧ ¬ w2)))\n  jcad(w0, ¬ w1, w2, ¬ w2)\n  pm2.18d((¬ w1 →(w2 ∧ ¬ w2)), w1)\n  imim2i(¬ w1, (w2 ∧ ¬ w2), w1)\n  imp(w2, ¬ w2, w1)\n  pm2.24(w2, w1)\n}","parent":["syl","jcad","pm2.18d","imim2i","imp","pm2.24"],"children":["mpt2bi123f","mptbi12f","ac6s6"]},{"name":"an12i","content":"An inference from commuting operands in a chain of conjunctions. (Contributed by Giovanni Mascellani, 22-May-2019.)","origin":"thm an12i(wff w0, wff w1, wff w2) {\n  |- wa(w0, wa(w1, w2))\n  -| wa(w1, wa(w0, w2))\n} = {\n  mpbir(wa(w0, wa(w1, w2)), wa(w1, wa(w0, w2)))\n  an12(w0, w1, w2)\n}","pretty":"thm an12i(wff w0, wff w1, wff w2) {\n  ⊢ (w0 ∧(w1 ∧ w2))\n  ⊣ (w1 ∧(w0 ∧ w2))\n} = {\n  mpbir((w0 ∧(w1 ∧ w2)), (w1 ∧(w0 ∧ w2)))\n  an12(w0, w1, w2)\n}","parent":["mpbir","an12"],"children":[]},{"name":"exmid2","content":"An excluded middle law. (Contributed by Giovanni Mascellani, 23-May-2019.)","origin":"thm exmid2(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(wa(w0, w1), w2)\n  -| wi(wa(w3, w0), w2)\n  -| wi(wa(wn(w3), w1), w2)\n} = {\n  pm2.61dan(wa(w0, w1), w2, w3)\n  syl(wa(wa(w0, w1), w3), w2, wa(w3, w0))\n  ancoms(wa(w0, w1), w3, wa(w3, w0))\n  anim2i(w3, wa(w0, w1), w0)\n  simpl(w0, w1)\n  syl(wa(wa(w0, w1), wn(w3)), w2, wa(wn(w3), w1))\n  ancoms(wa(w0, w1), wn(w3), wa(wn(w3), w1))\n  anim2i(wn(w3), wa(w0, w1), w1)\n  simpr(w0, w1)\n}","pretty":"thm exmid2(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ((w0 ∧ w1)→ w2)\n  ⊣ ((w3 ∧ w0)→ w2)\n  ⊣ ((¬ w3 ∧ w1)→ w2)\n} = {\n  pm2.61dan((w0 ∧ w1), w2, w3)\n  syl(((w0 ∧ w1)∧ w3), w2, (w3 ∧ w0))\n  ancoms((w0 ∧ w1), w3, (w3 ∧ w0))\n  anim2i(w3, (w0 ∧ w1), w0)\n  simpl(w0, w1)\n  syl(((w0 ∧ w1)∧ ¬ w3), w2, (¬ w3 ∧ w1))\n  ancoms((w0 ∧ w1), ¬ w3, (¬ w3 ∧ w1))\n  anim2i(¬ w3, (w0 ∧ w1), w1)\n  simpr(w0, w1)\n}","parent":["pm2.61dan","syl","ancoms","anim2i","simpl","simpr"],"children":[]},{"name":"selconj","content":"An inference for selecting one of a list of conjuncts. (Contributed by Giovanni Mascellani, 23-May-2019.)","origin":"thm selconj(wff w0, wff w1, wff w2, wff w3) {\n  |- wb(wa(w0, w1), wa(w2, wa(w0, w3)))\n  -| wb(w1, wa(w2, w3))\n} = {\n  bitr4i(wa(w0, w1), wa(w2, wa(w0, w3)), wa(w0, wa(w2, w3)))\n  anbi2i(w0, w1, wa(w2, w3))\n  an12(w2, w0, w3)\n}","pretty":"thm selconj(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ((w0 ∧ w1)↔(w2 ∧(w0 ∧ w3)))\n  ⊣ (w1 ↔(w2 ∧ w3))\n} = {\n  bitr4i((w0 ∧ w1), (w2 ∧(w0 ∧ w3)), (w0 ∧(w2 ∧ w3)))\n  anbi2i(w0, w1, (w2 ∧ w3))\n  an12(w2, w0, w3)\n}","parent":["bitr4i","anbi2i","an12"],"children":[]},{"name":"truconj","content":"Add true as a conjunct. (Contributed by Giovanni Mascellani, 23-May-2019.)","origin":"thm truconj(wff w0) {\n  |- wb(w0, wa(wtru, w0))\n} = {\n  bicomi(w0, wa(wtru, w0))\n  truan(w0)\n}","pretty":"thm truconj(wff w0) {\n  ⊢ (w0 ↔(T ∧ w0))\n} = {\n  bicomi(w0, (T ∧ w0))\n  truan(w0)\n}","parent":["bicomi","truan"],"children":[]},{"name":"orel","content":"An inference for disjunction elimination. (Contributed by Giovanni Mascellani, 24-May-2019.)","origin":"thm orel(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  |- wi(wa(w0, wa(w1, w2)), w3)\n  -| wi(wa(w4, w1), w3)\n  -| wi(wa(w5, w2), w3)\n  -| wi(w0, wo(w4, w5))\n} = {\n  mpjaodan(wa(w0, wa(w1, w2)), w3, w4, w5)\n  sylan(wa(w0, wa(w1, w2)), w4, w3, w1)\n  simprl(w0, w1, w2)\n  ancoms(w1, w4, w3)\n  sylan(wa(w0, wa(w1, w2)), w5, w3, w2)\n  simprr(w0, w1, w2)\n  ancoms(w2, w5, w3)\n  adantr(w0, wa(w1, w2), wo(w4, w5))\n}","pretty":"thm orel(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  ⊢ ((w0 ∧(w1 ∧ w2))→ w3)\n  ⊣ ((w4 ∧ w1)→ w3)\n  ⊣ ((w5 ∧ w2)→ w3)\n  ⊣ (w0 →(w4 ∨ w5))\n} = {\n  mpjaodan((w0 ∧(w1 ∧ w2)), w3, w4, w5)\n  sylan((w0 ∧(w1 ∧ w2)), w4, w3, w1)\n  simprl(w0, w1, w2)\n  ancoms(w1, w4, w3)\n  sylan((w0 ∧(w1 ∧ w2)), w5, w3, w2)\n  simprr(w0, w1, w2)\n  ancoms(w2, w5, w3)\n  adantr(w0, (w1 ∧ w2), (w4 ∨ w5))\n}","parent":["mpjaodan","sylan","simprl","ancoms","simprr","adantr"],"children":[]},{"name":"negel","content":"An inference for negation elimination. (Contributed by Giovanni Mascellani, 24-May-2019.)","origin":"thm negel(wff w0, wff w1, wff w2) {\n  |- wi(wa(w0, w1), wfal)\n  -| wi(w1, w2)\n  -| wi(w0, wn(w2))\n} = {\n  pm2.21fal(wa(w0, w1), w2)\n  adantl(w0, w1, w2)\n  adantr(w0, w1, wn(w2))\n}","pretty":"thm negel(wff w0, wff w1, wff w2) {\n  ⊢ ((w0 ∧ w1)→ F)\n  ⊣ (w1 → w2)\n  ⊣ (w0 → ¬ w2)\n} = {\n  pm2.21fal((w0 ∧ w1), w2)\n  adantl(w0, w1, w2)\n  adantr(w0, w1, ¬ w2)\n}","parent":["pm2.21fal","adantl","adantr"],"children":[]},{"name":"botel","content":"An inference for bottom elimination. (Contributed by Giovanni Mascellani, 24-May-2019.)","origin":"thm botel(wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(w0, wfal)\n} = {\n  syl(w0, w1, wfal)\n  falim(w1)\n}","pretty":"thm botel(wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 → F)\n} = {\n  syl(w0, w1, wfal)\n  falim(w1)\n}","parent":["syl","falim"],"children":[]},{"name":"tradd","content":"Add top ad a conjunct. (Contributed by Giovanni Mascellani, 24-May-2019.)","origin":"thm tradd(wff w0, wff w1) {\n  |- wb(w0, wa(wtru, w1))\n  -| wb(w0, w1)\n} = {\n  bitr4i(w0, wa(wtru, w1), w1)\n  truan(w1)\n}","pretty":"thm tradd(wff w0, wff w1) {\n  ⊢ (w0 ↔(T ∧ w1))\n  ⊣ (w0 ↔ w1)\n} = {\n  bitr4i(w0, (T ∧ w1), w1)\n  truan(w1)\n}","parent":["bitr4i","truan"],"children":[]},{"name":"sbtru","content":"Substitution does not change truth. (Contributed by Giovanni Mascellani, 24-May-2019.)","origin":"thm sbtru(setvar s0, class c0) {\n  |- wb(wsbc(s0, c0, wtru), wtru)\n  -| wcel(c0, universe)\n} = {\n  ax-mp(wb(wsbc(s0, c0, wtru), wtru), wcel(c0, universe))\n  sbcg(s0, c0, universe, wtru)\n  diff.wtru.s(s0)\n}","pretty":"thm sbtru(setvar s0, class c0) {\n  ⊢ ([c0 / s0]T ↔ T)\n  ⊣ c0 ∈ 𝕌\n} = {\n  ax-mp(([c0 / s0]T ↔ T), c0 ∈ 𝕌)\n  sbcg(s0, c0, universe, wtru)\n  diff.wtru.s(s0)\n}","parent":["ax-mp","sbcg","diff.wtru.s"],"children":[]},{"name":"sbfal","content":"Substitution does not change falsity. (Contributed by Giovanni Mascellani, 24-May-2019.)","origin":"thm sbfal(setvar s0, class c0) {\n  |- wb(wsbc(s0, c0, wfal), wfal)\n  -| wcel(c0, universe)\n} = {\n  ax-mp(wb(wsbc(s0, c0, wfal), wfal), wcel(c0, universe))\n  sbcg(s0, c0, universe, wfal)\n  diff.wfal.s(s0)\n}","pretty":"thm sbfal(setvar s0, class c0) {\n  ⊢ ([c0 / s0]F ↔ F)\n  ⊣ c0 ∈ 𝕌\n} = {\n  ax-mp(([c0 / s0]F ↔ F), c0 ∈ 𝕌)\n  sbcg(s0, c0, universe, wfal)\n  diff.wfal.s(s0)\n}","parent":["ax-mp","sbcg","diff.wfal.s"],"children":[]},{"name":"sbcani","content":"Distribution of class substitution over conjunction, in inference form. (Contributed by Giovanni Mascellani, 27-May-2019.)","origin":"thm sbcani(setvar s0, class c0, wff w0, wff w1, wff w2, wff w3) {\n  |- wb(wsbc(s0, c0, wa(w0, w1)), wa(w2, w3))\n  -| wb(wsbc(s0, c0, w0), w2)\n  -| wb(wsbc(s0, c0, w1), w3)\n} = {\n  bitri(wsbc(s0, c0, wa(w0, w1)), wa(w2, w3), wa(wsbc(s0, c0, w0), wsbc(s0, c0, w1)))\n  sbcan(s0, c0, w0, w1)\n  anbi12i(wsbc(s0, c0, w0), wsbc(s0, c0, w1), w2, w3)\n}","pretty":"thm sbcani(setvar s0, class c0, wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ([c0 / s0](w0 ∧ w1)↔(w2 ∧ w3))\n  ⊣ ([c0 / s0]w0 ↔ w2)\n  ⊣ ([c0 / s0]w1 ↔ w3)\n} = {\n  bitri([c0 / s0](w0 ∧ w1), (w2 ∧ w3), ([c0 / s0]w0 ∧[c0 / s0]w1))\n  sbcan(s0, c0, w0, w1)\n  anbi12i([c0 / s0]w0, [c0 / s0]w1, w2, w3)\n}","parent":["bitri","sbcan","anbi12i"],"children":[]},{"name":"sbcori","content":"Distribution of class substitution over disjunction, in inference form. (Contributed by Giovanni Mascellani, 27-May-2019.)","origin":"thm sbcori(setvar s0, class c0, wff w0, wff w1, wff w2, wff w3) {\n  |- wb(wsbc(s0, c0, wo(w0, w1)), wo(w2, w3))\n  -| wb(wsbc(s0, c0, w0), w2)\n  -| wb(wsbc(s0, c0, w1), w3)\n} = {\n  bitri(wsbc(s0, c0, wo(w0, w1)), wo(w2, w3), wo(wsbc(s0, c0, w0), wsbc(s0, c0, w1)))\n  sbcor(s0, c0, w0, w1)\n  orbi12i(wsbc(s0, c0, w0), wsbc(s0, c0, w1), w2, w3)\n}","pretty":"thm sbcori(setvar s0, class c0, wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ([c0 / s0](w0 ∨ w1)↔(w2 ∨ w3))\n  ⊣ ([c0 / s0]w0 ↔ w2)\n  ⊣ ([c0 / s0]w1 ↔ w3)\n} = {\n  bitri([c0 / s0](w0 ∨ w1), (w2 ∨ w3), ([c0 / s0]w0 ∨[c0 / s0]w1))\n  sbcor(s0, c0, w0, w1)\n  orbi12i([c0 / s0]w0, [c0 / s0]w1, w2, w3)\n}","parent":["bitri","sbcor","orbi12i"],"children":[]},{"name":"sbcimi","content":"Distribution of class substitution over implication, in inference form. (Contributed by Giovanni Mascellani, 27-May-2019.)","origin":"thm sbcimi(setvar s0, class c0, wff w0, wff w1, wff w2, wff w3) {\n  |- wb(wsbc(s0, c0, wi(w0, w1)), wi(w2, w3))\n  -| wcel(c0, universe)\n  -| wb(wsbc(s0, c0, w0), w2)\n  -| wb(wsbc(s0, c0, w1), w3)\n} = {\n  bitri(wsbc(s0, c0, wi(w0, w1)), wi(w2, w3), wi(wsbc(s0, c0, w0), wsbc(s0, c0, w1)))\n  ax-mp(wb(wsbc(s0, c0, wi(w0, w1)), wi(wsbc(s0, c0, w0), wsbc(s0, c0, w1))), wcel(c0, universe))\n  sbcimg(s0, c0, universe, w0, w1)\n  imbi12i(wsbc(s0, c0, w0), wsbc(s0, c0, w1), w2, w3)\n}","pretty":"thm sbcimi(setvar s0, class c0, wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ([c0 / s0](w0 → w1)↔(w2 → w3))\n  ⊣ c0 ∈ 𝕌\n  ⊣ ([c0 / s0]w0 ↔ w2)\n  ⊣ ([c0 / s0]w1 ↔ w3)\n} = {\n  bitri([c0 / s0](w0 → w1), (w2 → w3), ([c0 / s0]w0 →[c0 / s0]w1))\n  ax-mp(([c0 / s0](w0 → w1)↔([c0 / s0]w0 →[c0 / s0]w1)), c0 ∈ 𝕌)\n  sbcimg(s0, c0, universe, w0, w1)\n  imbi12i([c0 / s0]w0, [c0 / s0]w1, w2, w3)\n}","parent":["bitri","ax-mp","sbcimg","imbi12i"],"children":[]},{"name":"sbcni","content":"Move class substitution inside a negation, in inference form. (Contributed by Giovanni Mascellani, 27-May-2019.)","origin":"thm sbcni(setvar s0, class c0, wff w0, wff w1) {\n  |- wb(wsbc(s0, c0, wn(w0)), wn(w1))\n  -| wcel(c0, universe)\n  -| wb(wsbc(s0, c0, w0), w1)\n} = {\n  xchbinx(wsbc(s0, c0, wn(w0)), w1, wsbc(s0, c0, w0))\n  ax-mp(wb(wsbc(s0, c0, wn(w0)), wn(wsbc(s0, c0, w0))), wcel(c0, universe))\n  sbcng(s0, c0, universe, w0)\n}","pretty":"thm sbcni(setvar s0, class c0, wff w0, wff w1) {\n  ⊢ ([c0 / s0]¬ w0 ↔ ¬ w1)\n  ⊣ c0 ∈ 𝕌\n  ⊣ ([c0 / s0]w0 ↔ w1)\n} = {\n  xchbinx([c0 / s0]¬ w0, w1, [c0 / s0]w0)\n  ax-mp(([c0 / s0]¬ w0 ↔ ¬[c0 / s0]w0), c0 ∈ 𝕌)\n  sbcng(s0, c0, universe, w0)\n}","parent":["xchbinx","ax-mp","sbcng"],"children":[]},{"name":"sbali","content":"Discard class substitution in a universal quantification when substituting the quantified variable, in inference form. (Contributed by Giovanni Mascellani, 27-May-2019.)","origin":"thm sbali(setvar s0, class c0, wff w0) {\n  |- wb(wsbc(s0, c0, wal(s0, w0)), wal(s0, w0))\n  -| wcel(c0, universe)\n} = {\n  ax-mp(wb(wsbc(s0, c0, wal(s0, w0)), wal(s0, w0)), wcel(c0, universe))\n  sbcgf(s0, c0, universe, wal(s0, w0))\n  nfa1(s0, w0)\n}","pretty":"thm sbali(setvar s0, class c0, wff w0) {\n  ⊢ ([c0 / s0]∀(s0, w0)↔ ∀(s0, w0))\n  ⊣ c0 ∈ 𝕌\n} = {\n  ax-mp(([c0 / s0]∀(s0, w0)↔ ∀(s0, w0)), c0 ∈ 𝕌)\n  sbcgf(s0, c0, universe, ∀(s0, w0))\n  nfa1(s0, w0)\n}","parent":["ax-mp","sbcgf","nfa1"],"children":[]},{"name":"sbexi","content":"Discard class substitution in an existential quantification when substituting the quantified variable, in inference form. (Contributed by Giovanni Mascellani, 27-May-2019.)","origin":"thm sbexi(setvar s0, class c0, wff w0) {\n  |- wb(wsbc(s0, c0, wex(s0, w0)), wex(s0, w0))\n  -| wcel(c0, universe)\n} = {\n  ax-mp(wb(wsbc(s0, c0, wex(s0, w0)), wex(s0, w0)), wcel(c0, universe))\n  sbcgf(s0, c0, universe, wex(s0, w0))\n  nfe1(s0, w0)\n}","pretty":"thm sbexi(setvar s0, class c0, wff w0) {\n  ⊢ ([c0 / s0]∃(s0, w0)↔ ∃(s0, w0))\n  ⊣ c0 ∈ 𝕌\n} = {\n  ax-mp(([c0 / s0]∃(s0, w0)↔ ∃(s0, w0)), c0 ∈ 𝕌)\n  sbcgf(s0, c0, universe, ∃(s0, w0))\n  nfe1(s0, w0)\n}","parent":["ax-mp","sbcgf","nfe1"],"children":[]},{"name":"sbcalf","content":"Move universal quantifier in and out of class substitution, with an explicit non-free variable condition. (Contributed by Giovanni Mascellani, 29-May-2019.)","origin":"thm sbcalf(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wsbc(s0, c0, wal(s1, w0)), wal(s1, wsbc(s0, c0, w0)))\n  -| wnfc(s1, c0)\n  -| diffss(s0, s1)\n} = {\n  3bitri(wsbc(s0, c0, wal(s1, w0)), wal(s1, wsbc(s0, c0, w0)), wsbc(s0, c0, wal(hs0, wsb(hs0, s1, w0))), wal(hs0, wsbc(s0, c0, wsb(hs0, s1, w0))))\n  sbcbii(s0, c0, wal(s1, w0), wal(hs0, wsb(hs0, s1, w0)))\n  sb8(s1, hs0, w0)\n  nfv(hs0, w0)\n  sbcal(s0, hs0, c0, wsb(hs0, s1, w0))\n  cbvalv1(hs0, s1, wsbc(s0, c0, wsb(hs0, s1, w0)), wsbc(s0, c0, w0))\n  nfsbc(s1, s0, c0, wsb(hs0, s1, w0))\n  nfs1v(s1, hs0, w0)\n  nfv(hs0, wsbc(s0, c0, w0))\n  sbcbidv(s0, c0, wceq(cv(hs0), cv(s1)), wsb(hs0, s1, w0), w0)\n  sbequ12r(hs0, s1, w0)\n  diff.hs0.w(w0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(wsbc(s0, c0, w0))\n  diff.wceq.s(s0, cv(hs0), cv(s1))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s1)\n}","pretty":"thm sbcalf(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ ([c0 / s0]∀(s1, w0)↔ ∀(s1,[c0 / s0]w0))\n  ⊣ F/(s1, c0)\n  ⊣ d(s0, s1)\n} = {\n  3bitri([c0 / s0]∀(s1, w0), ∀(s1,[c0 / s0]w0), [c0 / s0]∀(hs0,[hs0 / s1]w0), ∀(hs0,[c0 / s0][hs0 / s1]w0))\n  sbcbii(s0, c0, ∀(s1, w0), ∀(hs0,[hs0 / s1]w0))\n  sb8(s1, hs0, w0)\n  nfv(hs0, w0)\n  sbcal(s0, hs0, c0, [hs0 / s1]w0)\n  cbvalv1(hs0, s1, [c0 / s0][hs0 / s1]w0, [c0 / s0]w0)\n  nfsbc(s1, s0, c0, [hs0 / s1]w0)\n  nfs1v(s1, hs0, w0)\n  nfv(hs0, [c0 / s0]w0)\n  sbcbidv(s0, c0, hs0 = s1, [hs0 / s1]w0, w0)\n  sbequ12r(hs0, s1, w0)\n  diff.hs0.w(w0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w([c0 / s0]w0)\n  diff.wceq.s(s0, hs0, s1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s1)\n}","parent":["3bitri","sbcbii","sb8","nfv","sbcal","cbvalv1","nfsbc","nfs1v","sbcbidv","sbequ12r","diff.hs0.w","diff.hs0.c","diffss.ex","diff.hs0.s","diff.wceq.s","diff.cv.s"],"children":["sbcalfi"]},{"name":"sbcexf","content":"Move existential quantifier in and out of class substitution, with an explicit non-free variable condition. (Contributed by Giovanni Mascellani, 29-May-2019.)","origin":"thm sbcexf(setvar s0, setvar s1, class c0, wff w0) {\n  |- wb(wsbc(s0, c0, wex(s1, w0)), wex(s1, wsbc(s0, c0, w0)))\n  -| wnfc(s1, c0)\n  -| diffss(s0, s1)\n} = {\n  3bitri(wsbc(s0, c0, wex(s1, w0)), wex(s1, wsbc(s0, c0, w0)), wsbc(s0, c0, wex(hs0, wsb(hs0, s1, w0))), wex(hs0, wsbc(s0, c0, wsb(hs0, s1, w0))))\n  sbcbii(s0, c0, wex(s1, w0), wex(hs0, wsb(hs0, s1, w0)))\n  sb8e(s1, hs0, w0)\n  nfv(hs0, w0)\n  sbcex2(s0, hs0, c0, wsb(hs0, s1, w0))\n  cbvexv1(hs0, s1, wsbc(s0, c0, wsb(hs0, s1, w0)), wsbc(s0, c0, w0))\n  nfsbc(s1, s0, c0, wsb(hs0, s1, w0))\n  nfs1v(s1, hs0, w0)\n  nfv(hs0, wsbc(s0, c0, w0))\n  sbcbidv(s0, c0, wceq(cv(hs0), cv(s1)), wsb(hs0, s1, w0), w0)\n  sbequ12r(hs0, s1, w0)\n  diff.hs0.w(w0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(wsbc(s0, c0, w0))\n  diff.wceq.s(s0, cv(hs0), cv(s1))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s1)\n}","pretty":"thm sbcexf(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ ([c0 / s0]∃(s1, w0)↔ ∃(s1,[c0 / s0]w0))\n  ⊣ F/(s1, c0)\n  ⊣ d(s0, s1)\n} = {\n  3bitri([c0 / s0]∃(s1, w0), ∃(s1,[c0 / s0]w0), [c0 / s0]∃(hs0,[hs0 / s1]w0), ∃(hs0,[c0 / s0][hs0 / s1]w0))\n  sbcbii(s0, c0, ∃(s1, w0), ∃(hs0,[hs0 / s1]w0))\n  sb8e(s1, hs0, w0)\n  nfv(hs0, w0)\n  sbcex2(s0, hs0, c0, [hs0 / s1]w0)\n  cbvexv1(hs0, s1, [c0 / s0][hs0 / s1]w0, [c0 / s0]w0)\n  nfsbc(s1, s0, c0, [hs0 / s1]w0)\n  nfs1v(s1, hs0, w0)\n  nfv(hs0, [c0 / s0]w0)\n  sbcbidv(s0, c0, hs0 = s1, [hs0 / s1]w0, w0)\n  sbequ12r(hs0, s1, w0)\n  diff.hs0.w(w0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w([c0 / s0]w0)\n  diff.wceq.s(s0, hs0, s1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s1)\n}","parent":["3bitri","sbcbii","sb8e","nfv","sbcex2","cbvexv1","nfsbc","nfs1v","sbcbidv","sbequ12r","diff.hs0.w","diff.hs0.c","diffss.ex","diff.hs0.s","diff.wceq.s","diff.cv.s"],"children":["sbcexfi"]},{"name":"sbcalfi","content":"Move universal quantifier in and out of class substitution, with an explicit non-free variable condition and in inference form. (Contributed by Giovanni Mascellani, 30-May-2019.)","origin":"thm sbcalfi(setvar s0, setvar s1, class c0, wff w0, wff w1) {\n  |- wb(wsbc(s0, c0, wal(s1, w0)), wal(s1, w1))\n  -| wnfc(s1, c0)\n  -| wb(wsbc(s0, c0, w0), w1)\n  -| diffss(s0, s1)\n} = {\n  bitri(wsbc(s0, c0, wal(s1, w0)), wal(s1, w1), wal(s1, wsbc(s0, c0, w0)))\n  sbcalf(s0, s1, c0, w0)\n  albii(s1, wsbc(s0, c0, w0), w1)\n}","pretty":"thm sbcalfi(setvar s0, setvar s1, class c0, wff w0, wff w1) {\n  ⊢ ([c0 / s0]∀(s1, w0)↔ ∀(s1, w1))\n  ⊣ F/(s1, c0)\n  ⊣ ([c0 / s0]w0 ↔ w1)\n  ⊣ d(s0, s1)\n} = {\n  bitri([c0 / s0]∀(s1, w0), ∀(s1, w1), ∀(s1,[c0 / s0]w0))\n  sbcalf(s0, s1, c0, w0)\n  albii(s1, [c0 / s0]w0, w1)\n}","parent":["bitri","sbcalf","albii"],"children":[]},{"name":"sbcexfi","content":"Move existential quantifier in and out of class substitution, with an explicit non-free variable condition and in inference form. (Contributed by Giovanni Mascellani, 30-May-2019.)","origin":"thm sbcexfi(setvar s0, setvar s1, class c0, wff w0, wff w1) {\n  |- wb(wsbc(s0, c0, wex(s1, w0)), wex(s1, w1))\n  -| wnfc(s1, c0)\n  -| wb(wsbc(s0, c0, w0), w1)\n  -| diffss(s0, s1)\n} = {\n  bitri(wsbc(s0, c0, wex(s1, w0)), wex(s1, w1), wex(s1, wsbc(s0, c0, w0)))\n  sbcexf(s0, s1, c0, w0)\n  exbii(s1, wsbc(s0, c0, w0), w1)\n}","pretty":"thm sbcexfi(setvar s0, setvar s1, class c0, wff w0, wff w1) {\n  ⊢ ([c0 / s0]∃(s1, w0)↔ ∃(s1, w1))\n  ⊣ F/(s1, c0)\n  ⊣ ([c0 / s0]w0 ↔ w1)\n  ⊣ d(s0, s1)\n} = {\n  bitri([c0 / s0]∃(s1, w0), ∃(s1, w1), ∃(s1,[c0 / s0]w0))\n  sbcexf(s0, s1, c0, w0)\n  exbii(s1, [c0 / s0]w0, w1)\n}","parent":["bitri","sbcexf","exbii"],"children":[]},{"name":"spsbcdi","content":"A lemma for eliminating a universal quantifier, in inference form. (Contributed by Giovanni Mascellani, 30-May-2019.)","origin":"thm spsbcdi(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wcel(c0, universe)\n  -| wi(w0, wal(s0, w2))\n  -| wb(wsbc(s0, c0, w2), w1)\n} = {\n  sylib(w0, w1, wsbc(s0, c0, w2))\n  spsbcd(s0, c0, universe, w0, w2)\n  a1i(w0, wcel(c0, universe))\n}","pretty":"thm spsbcdi(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ c0 ∈ 𝕌\n  ⊣ (w0 → ∀(s0, w2))\n  ⊣ ([c0 / s0]w2 ↔ w1)\n} = {\n  sylib(w0, w1, [c0 / s0]w2)\n  spsbcd(s0, c0, universe, w0, w2)\n  a1i(w0, c0 ∈ 𝕌)\n}","parent":["sylib","spsbcd","a1i"],"children":[]},{"name":"alrimii","content":"A lemma for introducing a universal quantifier, in inference form. (Contributed by Giovanni Mascellani, 30-May-2019.)","origin":"thm alrimii(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wal(s0, w1))\n  -| wnf(s1, w0)\n  -| wi(w0, w2)\n  -| wb(wsbc(s0, cv(s1), w1), w2)\n  -| wnf(s1, w1)\n  -| diffss(s0, s1)\n} = {\n  sylib(w0, wal(s0, w1), wal(s1, wsbc(s0, cv(s1), w1)))\n  alrimi(s1, w0, wsbc(s0, cv(s1), w1))\n  sylibr(w0, wsbc(s0, cv(s1), w1), w2)\n  cbvalv1(s1, s0, wsbc(s0, cv(s1), w1), w1)\n  nfsbc1v(s0, cv(s1), w1)\n  sbceq2a(s0, cv(s1), w1)\n  diffss.ex(s1, s0)\n  diff.cv.s(s0, s1)\n}","pretty":"thm alrimii(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → ∀(s0, w1))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 → w2)\n  ⊣ ([s1 / s0]w1 ↔ w2)\n  ⊣ F/(s1, w1)\n  ⊣ d(s0, s1)\n} = {\n  sylib(w0, ∀(s0, w1), ∀(s1,[s1 / s0]w1))\n  alrimi(s1, w0, [s1 / s0]w1)\n  sylibr(w0, [s1 / s0]w1, w2)\n  cbvalv1(s1, s0, [s1 / s0]w1, w1)\n  nfsbc1v(s0, s1, w1)\n  sbceq2a(s0, s1, w1)\n  diffss.ex(s1, s0)\n  diff.cv.s(s0, s1)\n}","parent":["sylib","alrimi","sylibr","cbvalv1","nfsbc1v","sbceq2a","diffss.ex","diff.cv.s"],"children":[]},{"name":"spesbcdi","content":"A lemma for introducing an existential quantifier, in inference form. (Contributed by Giovanni Mascellani, 30-May-2019.)","origin":"thm spesbcdi(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wex(s0, w1))\n  -| wi(w0, w2)\n  -| wb(wsbc(s0, c0, w1), w2)\n} = {\n  spesbcd(s0, c0, w0, w1)\n  sylibr(w0, wsbc(s0, c0, w1), w2)\n}","pretty":"thm spesbcdi(setvar s0, class c0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → ∃(s0, w1))\n  ⊣ (w0 → w2)\n  ⊣ ([c0 / s0]w1 ↔ w2)\n} = {\n  spesbcd(s0, c0, w0, w1)\n  sylibr(w0, [c0 / s0]w1, w2)\n}","parent":["spesbcd","sylibr"],"children":[]},{"name":"exlimddvf","content":"A lemma for eliminating an existential quantifier. (Contributed by Giovanni Mascellani, 30-May-2019.)","origin":"thm exlimddvf(setvar s0, wff w0, wff w1, wff w2, wff w3) {\n  |- wi(wa(w0, w1), w2)\n  -| wi(w0, wex(s0, w3))\n  -| wnf(s0, w1)\n  -| wi(wa(w3, w1), w2)\n  -| wnf(s0, w2)\n} = {\n  mpan9(w0, w1, w2, wex(s0, w3))\n  exlimd(s0, w1, w3, w2)\n  expcom(w1, w3, w2)\n}","pretty":"thm exlimddvf(setvar s0, wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ((w0 ∧ w1)→ w2)\n  ⊣ (w0 → ∃(s0, w3))\n  ⊣ F/(s0, w1)\n  ⊣ ((w3 ∧ w1)→ w2)\n  ⊣ F/(s0, w2)\n} = {\n  mpan9(w0, w1, w2, ∃(s0, w3))\n  exlimd(s0, w1, w3, w2)\n  expcom(w1, w3, w2)\n}","parent":["mpan9","exlimd","expcom"],"children":["exlimddvfi"]},{"name":"exlimddvfi","content":"A lemma for eliminating an existential quantifier, in inference form. (Contributed by Giovanni Mascellani, 31-May-2019.)","origin":"thm exlimddvfi(setvar s0, setvar s1, wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wi(wa(w0, w1), w2)\n  -| wi(w0, wex(s0, w3))\n  -| wnf(s1, w3)\n  -| wnf(s1, w1)\n  -| wb(wsbc(s0, cv(s1), w3), w4)\n  -| wi(wa(w4, w1), w2)\n  -| wnf(s1, w2)\n} = {\n  exlimddvf(s1, w0, w1, w2, wsb(s1, s0, w3))\n  sylib(w0, wex(s1, wsb(s1, s0, w3)), wex(s0, w3))\n  sb8e(s0, s1, w3)\n  sylanb(wsb(s1, s0, w3), w1, w2, w4)\n  bitri(wsb(s1, s0, w3), w4, wsbc(s0, cv(s1), w3))\n  sbsbc(s1, s0, w3)\n}","pretty":"thm exlimddvfi(setvar s0, setvar s1, wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ ((w0 ∧ w1)→ w2)\n  ⊣ (w0 → ∃(s0, w3))\n  ⊣ F/(s1, w3)\n  ⊣ F/(s1, w1)\n  ⊣ ([s1 / s0]w3 ↔ w4)\n  ⊣ ((w4 ∧ w1)→ w2)\n  ⊣ F/(s1, w2)\n} = {\n  exlimddvf(s1, w0, w1, w2, [s1 / s0]w3)\n  sylib(w0, ∃(s1,[s1 / s0]w3), ∃(s0, w3))\n  sb8e(s0, s1, w3)\n  sylanb([s1 / s0]w3, w1, w2, w4)\n  bitri([s1 / s0]w3, w4, [s1 / s0]w3)\n  sbsbc(s1, s0, w3)\n}","parent":["exlimddvf","sylib","sb8e","sylanb","bitri","sbsbc"],"children":[]},{"name":"sbceq1ddi","content":"A lemma for eliminating inequality, in inference form. (Contributed by Giovanni Mascellani, 31-May-2019.)","origin":"thm sbceq1ddi(setvar s0, class c0, class c1, wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wi(wa(w0, w1), w2)\n  -| wi(w0, wceq(c0, c1))\n  -| wi(w1, w3)\n  -| wb(wsbc(s0, c0, w4), w3)\n  -| wb(wsbc(s0, c1, w4), w2)\n} = {\n  sylib(wa(w0, w1), w2, wsbc(s0, c1, w4))\n  sbceq1dd(s0, c1, c0, wa(w0, w1), w4)\n  adantr(w0, w1, wceq(c0, c1))\n  adantl(w0, w1, wsbc(s0, c0, w4))\n  sylibr(w1, wsbc(s0, c0, w4), w3)\n}","pretty":"thm sbceq1ddi(setvar s0, class c0, class c1, wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ ((w0 ∧ w1)→ w2)\n  ⊣ (w0 → c0 = c1)\n  ⊣ (w1 → w3)\n  ⊣ ([c0 / s0]w4 ↔ w3)\n  ⊣ ([c1 / s0]w4 ↔ w2)\n} = {\n  sylib((w0 ∧ w1), w2, [c1 / s0]w4)\n  sbceq1dd(s0, c1, c0, (w0 ∧ w1), w4)\n  adantr(w0, w1, c0 = c1)\n  adantl(w0, w1, [c0 / s0]w4)\n  sylibr(w1, [c0 / s0]w4, w3)\n}","parent":["sylib","sbceq1dd","adantr","adantl","sylibr"],"children":[]},{"name":"sbccom2lem","content":"Lemma for ~ sbccom2 . (Contributed by Giovanni Mascellani, 31-May-2019.)","origin":"thm sbccom2lem(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wb(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)))\n  -| wcel(c0, universe)\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  3bitr4i(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)), wex(s1, wex(s0, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0)))), wex(s1, wa(wceq(cv(s1), csb(s0, c0, c1)), wsbc(s0, c0, w0))))\n  exbii(s1, wex(s0, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0))), wa(wceq(cv(s1), csb(s0, c0, c1)), wsbc(s0, c0, w0)))\n  3bitr3i(wex(s0, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0))), wa(wceq(cv(s1), csb(s0, c0, c1)), wsbc(s0, c0, w0)), wsbc(s0, c0, wa(wceq(cv(s1), c1), w0)), wa(wsbc(s0, c0, wceq(cv(s1), c1)), wsbc(s0, c0, w0)))\n  sbcan(s0, c0, wceq(cv(s1), c1), w0)\n  sbc5(s0, c0, wa(wceq(cv(s1), c1), w0))\n  anbi1i(wsbc(s0, c0, wceq(cv(s1), c1)), wsbc(s0, c0, w0), wceq(cv(s1), csb(s0, c0, c1)))\n  sbceqi(s0, c0, cv(s1), c1, cv(s1), csb(s0, c0, c1))\n  csbconstgi(s0, s1, c0)\n  eqid(csb(s0, c0, c1))\n  bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wex(s1, wex(s0, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0)))), wex(s0, wa(wceq(cv(s0), c0), wex(s1, wa(wceq(cv(s1), c1), w0)))))\n  bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wex(s0, wa(wceq(cv(s0), c0), wex(s1, wa(wceq(cv(s1), c1), w0)))), wsbc(s0, c0, wex(s1, wa(wceq(cv(s1), c1), w0))))\n  sbcbii(s0, c0, wsbc(s1, c1, w0), wex(s1, wa(wceq(cv(s1), c1), w0)))\n  sbc5(s1, c1, w0)\n  sbc5(s0, c0, wex(s1, wa(wceq(cv(s1), c1), w0)))\n  bitri(wex(s0, wa(wceq(cv(s0), c0), wex(s1, wa(wceq(cv(s1), c1), w0)))), wex(s1, wex(s0, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0)))), wex(s0, wex(s1, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0)))))\n  exbii(s0, wa(wceq(cv(s0), c0), wex(s1, wa(wceq(cv(s1), c1), w0))), wex(s1, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0))))\n  bicomi(wa(wceq(cv(s0), c0), wex(s1, wa(wceq(cv(s1), c1), w0))), wex(s1, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0))))\n  19.42v(s1, wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0))\n  excom(s0, s1, wa(wceq(cv(s0), c0), wa(wceq(cv(s1), c1), w0)))\n  sbc5(s1, csb(s0, c0, c1), wsbc(s0, c0, w0))\n  diff.wceq.s(s1, cv(s0), c0)\n  diff.cv.s(s1, s0)\n  diff.csb.s(s1, s0, c0, c1)\n  diffss.ex(s1, s0)\n}","pretty":"thm sbccom2lem(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ ([c0 / s0][c1 / s1]w0 ↔[[c0 / s0]c1 / s1][c0 / s0]w0)\n  ⊣ c0 ∈ 𝕌\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  3bitr4i([c0 / s0][c1 / s1]w0, [[c0 / s0]c1 / s1][c0 / s0]w0, ∃(s1, ∃(s0,(s0 = c0 ∧(s1 = c1 ∧ w0)))), ∃(s1,(s1 =[c0 / s0]c1 ∧[c0 / s0]w0)))\n  exbii(s1, ∃(s0,(s0 = c0 ∧(s1 = c1 ∧ w0))), (s1 =[c0 / s0]c1 ∧[c0 / s0]w0))\n  3bitr3i(∃(s0,(s0 = c0 ∧(s1 = c1 ∧ w0))), (s1 =[c0 / s0]c1 ∧[c0 / s0]w0), [c0 / s0](s1 = c1 ∧ w0), ([c0 / s0]s1 = c1 ∧[c0 / s0]w0))\n  sbcan(s0, c0, s1 = c1, w0)\n  sbc5(s0, c0, (s1 = c1 ∧ w0))\n  anbi1i([c0 / s0]s1 = c1, [c0 / s0]w0, s1 =[c0 / s0]c1)\n  sbceqi(s0, c0, s1, c1, s1, [c0 / s0]c1)\n  csbconstgi(s0, s1, c0)\n  eqid([c0 / s0]c1)\n  bitri([c0 / s0][c1 / s1]w0, ∃(s1, ∃(s0,(s0 = c0 ∧(s1 = c1 ∧ w0)))), ∃(s0,(s0 = c0 ∧ ∃(s1,(s1 = c1 ∧ w0)))))\n  bitri([c0 / s0][c1 / s1]w0, ∃(s0,(s0 = c0 ∧ ∃(s1,(s1 = c1 ∧ w0)))), [c0 / s0]∃(s1,(s1 = c1 ∧ w0)))\n  sbcbii(s0, c0, [c1 / s1]w0, ∃(s1,(s1 = c1 ∧ w0)))\n  sbc5(s1, c1, w0)\n  sbc5(s0, c0, ∃(s1,(s1 = c1 ∧ w0)))\n  bitri(∃(s0,(s0 = c0 ∧ ∃(s1,(s1 = c1 ∧ w0)))), ∃(s1, ∃(s0,(s0 = c0 ∧(s1 = c1 ∧ w0)))), ∃(s0, ∃(s1,(s0 = c0 ∧(s1 = c1 ∧ w0)))))\n  exbii(s0, (s0 = c0 ∧ ∃(s1,(s1 = c1 ∧ w0))), ∃(s1,(s0 = c0 ∧(s1 = c1 ∧ w0))))\n  bicomi((s0 = c0 ∧ ∃(s1,(s1 = c1 ∧ w0))), ∃(s1,(s0 = c0 ∧(s1 = c1 ∧ w0))))\n  19.42v(s1, s0 = c0, (s1 = c1 ∧ w0))\n  excom(s0, s1, (s0 = c0 ∧(s1 = c1 ∧ w0)))\n  sbc5(s1, [c0 / s0]c1, [c0 / s0]w0)\n  diff.wceq.s(s1, s0, c0)\n  diff.cv.s(s1, s0)\n  diff.csb.s(s1, s0, c0, c1)\n  diffss.ex(s1, s0)\n}","parent":["3bitr4i","exbii","3bitr3i","sbcan","sbc5","anbi1i","sbceqi","csbconstgi","eqid","bitri","sbcbii","bicomi","19.42v","excom","diff.wceq.s","diff.cv.s","diff.csb.s","diffss.ex"],"children":["sbccom2"]},{"name":"sbccom2","content":"Commutative law for double class substitution. (Contributed by Giovanni Mascellani, 31-May-2019.)","origin":"thm sbccom2(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wb(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)))\n  -| wcel(c0, universe)\n  -| diffss(s0, s1)\n  -| diffsc(s1, c0)\n} = {\n  3bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)), wsbc(hs0, csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))), wsbc(hs0, csb(s0, c0, c1), wsbc(s1, cv(hs0), wsbc(s0, c0, w0))))\n  bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(hs0, csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))), wsbc(hs0, csb(hs1, c0, csb(s0, cv(hs1), c1)), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))))\n  3bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(hs0, csb(hs1, c0, csb(s0, cv(hs1), c1)), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))), wsbc(hs1, c0, wsbc(hs0, csb(s0, cv(hs1), c1), wsbc(s0, cv(hs1), wsbc(s1, cv(hs0), w0)))), wsbc(hs0, csb(hs1, c0, csb(s0, cv(hs1), c1)), wsbc(hs1, c0, wsbc(s0, cv(hs1), wsbc(s1, cv(hs0), w0)))))\n  3bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(hs1, c0, wsbc(hs0, csb(s0, cv(hs1), c1), wsbc(s0, cv(hs1), wsbc(s1, cv(hs0), w0)))), wsbc(s0, c0, wsbc(hs0, c1, wsbc(s1, cv(hs0), w0))), wsbc(hs1, c0, wsbc(s0, cv(hs1), wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))))\n  sbcbii(s0, c0, wsbc(s1, c1, w0), wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))\n  bicomi(wsbc(s1, c1, w0), wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))\n  sbcco(hs0, s1, c1, w0)\n  bicomi(wsbc(s0, c0, wsbc(hs0, c1, wsbc(s1, cv(hs0), w0))), wsbc(hs1, c0, wsbc(s0, cv(hs1), wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))))\n  sbcco(hs1, s0, c0, wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))\n  sbcbii(hs1, c0, wsbc(s0, cv(hs1), wsbc(hs0, c1, wsbc(s1, cv(hs0), w0))), wsbc(hs0, csb(s0, cv(hs1), c1), wsbc(s0, cv(hs1), wsbc(s1, cv(hs0), w0))))\n  sbccom2lem(s0, hs0, cv(hs1), c1, wsbc(s1, cv(hs0), w0))\n  vex(hs1)\n  sbccom2lem(hs1, hs0, c0, csb(s0, cv(hs1), c1), wsbc(s0, cv(hs1), wsbc(s1, cv(hs0), w0)))\n  sbcbii(hs0, csb(hs1, c0, csb(s0, cv(hs1), c1)), wsbc(hs1, c0, wsbc(s0, cv(hs1), wsbc(s1, cv(hs0), w0))), wsbc(s0, c0, wsbc(s1, cv(hs0), w0)))\n  sbcco(hs1, s0, c0, wsbc(s1, cv(hs0), w0))\n  ax-mp(wb(wsbc(hs0, csb(hs1, c0, csb(s0, cv(hs1), c1)), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))), wsbc(hs0, csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0)))), wceq(csb(hs1, c0, csb(s0, cv(hs1), c1)), csb(s0, c0, c1)))\n  csbco(hs1, s0, c0, c1)\n  dfsbcq(hs0, csb(hs1, c0, csb(s0, cv(hs1), c1)), csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0)))\n  sbcbii(hs0, csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0)), wsbc(s1, cv(hs0), wsbc(s0, c0, w0)))\n  sbccom(s0, s1, c0, cv(hs0), w0)\n  sbcco(hs0, s1, csb(s0, c0, c1), wsbc(s0, c0, w0))\n  diff.hs0.w(w0)\n  diff.hs1.w(wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.hs0.c(cv(hs1))\n  diff.hs0.c(c1)\n  diff.hs1.s(hs0)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs0.c(csb(s0, cv(hs1), c1))\n  diff.hs1.w(wsbc(s1, cv(hs0), w0))\n  diff.hs1.c(c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wsbc(s0, c0, w0))\n}","pretty":"thm sbccom2(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ ([c0 / s0][c1 / s1]w0 ↔[[c0 / s0]c1 / s1][c0 / s0]w0)\n  ⊣ c0 ∈ 𝕌\n  ⊣ d(s0, s1)\n  ⊣ d(s1, c0)\n} = {\n  3bitri([c0 / s0][c1 / s1]w0, [[c0 / s0]c1 / s1][c0 / s0]w0, [[c0 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0, [[c0 / s0]c1 / hs0][hs0 / s1][c0 / s0]w0)\n  bitri([c0 / s0][c1 / s1]w0, [[c0 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0, [[c0 / hs1][hs1 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0)\n  3bitri([c0 / s0][c1 / s1]w0, [[c0 / hs1][hs1 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0, [c0 / hs1][[hs1 / s0]c1 / hs0][hs1 / s0][hs0 / s1]w0, [[c0 / hs1][hs1 / s0]c1 / hs0][c0 / hs1][hs1 / s0][hs0 / s1]w0)\n  3bitri([c0 / s0][c1 / s1]w0, [c0 / hs1][[hs1 / s0]c1 / hs0][hs1 / s0][hs0 / s1]w0, [c0 / s0][c1 / hs0][hs0 / s1]w0, [c0 / hs1][hs1 / s0][c1 / hs0][hs0 / s1]w0)\n  sbcbii(s0, c0, [c1 / s1]w0, [c1 / hs0][hs0 / s1]w0)\n  bicomi([c1 / s1]w0, [c1 / hs0][hs0 / s1]w0)\n  sbcco(hs0, s1, c1, w0)\n  bicomi([c0 / s0][c1 / hs0][hs0 / s1]w0, [c0 / hs1][hs1 / s0][c1 / hs0][hs0 / s1]w0)\n  sbcco(hs1, s0, c0, [c1 / hs0][hs0 / s1]w0)\n  sbcbii(hs1, c0, [hs1 / s0][c1 / hs0][hs0 / s1]w0, [[hs1 / s0]c1 / hs0][hs1 / s0][hs0 / s1]w0)\n  sbccom2lem(s0, hs0, hs1, c1, [hs0 / s1]w0)\n  vex(hs1)\n  sbccom2lem(hs1, hs0, c0, [hs1 / s0]c1, [hs1 / s0][hs0 / s1]w0)\n  sbcbii(hs0, [c0 / hs1][hs1 / s0]c1, [c0 / hs1][hs1 / s0][hs0 / s1]w0, [c0 / s0][hs0 / s1]w0)\n  sbcco(hs1, s0, c0, [hs0 / s1]w0)\n  ax-mp(([[c0 / hs1][hs1 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0 ↔[[c0 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0), [c0 / hs1][hs1 / s0]c1 =[c0 / s0]c1)\n  csbco(hs1, s0, c0, c1)\n  dfsbcq(hs0, [c0 / hs1][hs1 / s0]c1, [c0 / s0]c1, [c0 / s0][hs0 / s1]w0)\n  sbcbii(hs0, [c0 / s0]c1, [c0 / s0][hs0 / s1]w0, [hs0 / s1][c0 / s0]w0)\n  sbccom(s0, s1, c0, hs0, w0)\n  sbcco(hs0, s1, [c0 / s0]c1, [c0 / s0]w0)\n  diff.hs0.w(w0)\n  diff.hs1.w([c1 / hs0][hs0 / s1]w0)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.hs0.c(hs1)\n  diff.hs0.c(c1)\n  diff.hs1.s(hs0)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs0.c([hs1 / s0]c1)\n  diff.hs1.w([hs0 / s1]w0)\n  diff.hs1.c(c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w([c0 / s0]w0)\n}","parent":["3bitri","bitri","sbcbii","bicomi","sbcco","sbccom2lem","vex","ax-mp","csbco","dfsbcq","sbccom","diff.hs0.w","diff.hs1.w","diff.cv.s","diffss.ex","diff.hs1.s","diff.hs0.c","diff.hs1.c","diff.hs0.s"],"children":["sbccom2f"]},{"name":"sbccom2f","content":"Commutative law for double class substitution, with nonfree variable condition. (Contributed by Giovanni Mascellani, 31-May-2019.)","origin":"thm sbccom2f(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wb(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)))\n  -| wcel(c0, universe)\n  -| wnfc(s1, c0)\n  -| diffss(s0, s1)\n} = {\n  3bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)), wsbc(s0, c0, wsbc(hs0, c1, wsbc(s1, cv(hs0), w0))), wsbc(hs0, csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))))\n  sbcbii(s0, c0, wsbc(s1, c1, w0), wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))\n  bicomi(wsbc(s1, c1, w0), wsbc(hs0, c1, wsbc(s1, cv(hs0), w0)))\n  sbcco(hs0, s1, c1, w0)\n  sbccom2(s0, hs0, c0, c1, wsbc(s1, cv(hs0), w0))\n  bitri(wsbc(hs0, csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)), wsbc(hs0, csb(s0, c0, c1), wsbc(s1, cv(hs0), wsbc(s0, c0, w0))))\n  sbcbii(hs0, csb(s0, c0, c1), wsbc(s0, c0, wsbc(s1, cv(hs0), w0)), wsbc(s1, cv(hs0), wsbc(s0, c0, w0)))\n  bicomi(wsbc(s0, c0, wsbc(s1, cv(hs0), w0)), wsbc(s1, cv(hs0), wsbc(s0, c0, w0)))\n  bitri(wsbc(s1, cv(hs0), wsbc(s0, c0, w0)), wsbc(s0, c0, wsbc(s1, cv(hs0), w0)), wsbc(s0, csb(s1, cv(hs0), c0), wsbc(s1, cv(hs0), w0)))\n  sbccom2(s1, s0, cv(hs0), c0, w0)\n  ax-mp(wb(wsbc(s0, csb(s1, cv(hs0), c0), wsbc(s1, cv(hs0), w0)), wsbc(s0, c0, wsbc(s1, cv(hs0), w0))), wceq(csb(s1, cv(hs0), c0), c0))\n  csbief(s1, cv(hs0), c0, c0)\n  vex(hs0)\n  eqidd(c0, wceq(cv(s1), cv(hs0)))\n  dfsbcq(s0, csb(s1, cv(hs0), c0), c0, wsbc(s1, cv(hs0), w0))\n  sbcco(hs0, s1, csb(s0, c0, c1), wsbc(s0, c0, w0))\n  diff.hs0.w(w0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(wsbc(s0, c0, w0))\n}","pretty":"thm sbccom2f(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ ([c0 / s0][c1 / s1]w0 ↔[[c0 / s0]c1 / s1][c0 / s0]w0)\n  ⊣ c0 ∈ 𝕌\n  ⊣ F/(s1, c0)\n  ⊣ d(s0, s1)\n} = {\n  3bitri([c0 / s0][c1 / s1]w0, [[c0 / s0]c1 / s1][c0 / s0]w0, [c0 / s0][c1 / hs0][hs0 / s1]w0, [[c0 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0)\n  sbcbii(s0, c0, [c1 / s1]w0, [c1 / hs0][hs0 / s1]w0)\n  bicomi([c1 / s1]w0, [c1 / hs0][hs0 / s1]w0)\n  sbcco(hs0, s1, c1, w0)\n  sbccom2(s0, hs0, c0, c1, [hs0 / s1]w0)\n  bitri([[c0 / s0]c1 / hs0][c0 / s0][hs0 / s1]w0, [[c0 / s0]c1 / s1][c0 / s0]w0, [[c0 / s0]c1 / hs0][hs0 / s1][c0 / s0]w0)\n  sbcbii(hs0, [c0 / s0]c1, [c0 / s0][hs0 / s1]w0, [hs0 / s1][c0 / s0]w0)\n  bicomi([c0 / s0][hs0 / s1]w0, [hs0 / s1][c0 / s0]w0)\n  bitri([hs0 / s1][c0 / s0]w0, [c0 / s0][hs0 / s1]w0, [[hs0 / s1]c0 / s0][hs0 / s1]w0)\n  sbccom2(s1, s0, hs0, c0, w0)\n  ax-mp(([[hs0 / s1]c0 / s0][hs0 / s1]w0 ↔[c0 / s0][hs0 / s1]w0), [hs0 / s1]c0 = c0)\n  csbief(s1, hs0, c0, c0)\n  vex(hs0)\n  eqidd(c0, s1 = hs0)\n  dfsbcq(s0, [hs0 / s1]c0, c0, [hs0 / s1]w0)\n  sbcco(hs0, s1, [c0 / s0]c1, [c0 / s0]w0)\n  diff.hs0.w(w0)\n  diff.hs0.c(c0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w([c0 / s0]w0)\n}","parent":["3bitri","sbcbii","bicomi","sbcco","sbccom2","bitri","ax-mp","csbief","vex","eqidd","dfsbcq","diff.hs0.w","diff.hs0.c","diffss.ex","diff.cv.s","diff.hs0.s"],"children":["sbccom2fi"]},{"name":"sbccom2fi","content":"Commutative law for double class substitution, with nonfree variable condition and in inference form. (Contributed by Giovanni Mascellani, 1-Jun-2019.)","origin":"thm sbccom2fi(setvar s0, setvar s1, class c0, class c1, class c2, wff w0, wff w1) {\n  |- wb(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, c2, w1))\n  -| wcel(c0, universe)\n  -| wnfc(s1, c0)\n  -| wceq(csb(s0, c0, c1), c2)\n  -| wb(wsbc(s0, c0, w0), w1)\n  -| diffss(s0, s1)\n} = {\n  3bitri(wsbc(s0, c0, wsbc(s1, c1, w0)), wsbc(s1, c2, w1), wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)), wsbc(s1, c2, wsbc(s0, c0, w0)))\n  sbccom2f(s0, s1, c0, c1, w0)\n  ax-mp(wb(wsbc(s1, csb(s0, c0, c1), wsbc(s0, c0, w0)), wsbc(s1, c2, wsbc(s0, c0, w0))), wceq(csb(s0, c0, c1), c2))\n  dfsbcq(s1, csb(s0, c0, c1), c2, wsbc(s0, c0, w0))\n  sbcbii(s1, c2, wsbc(s0, c0, w0), w1)\n}","pretty":"thm sbccom2fi(setvar s0, setvar s1, class c0, class c1, class c2, wff w0, wff w1) {\n  ⊢ ([c0 / s0][c1 / s1]w0 ↔[c2 / s1]w1)\n  ⊣ c0 ∈ 𝕌\n  ⊣ F/(s1, c0)\n  ⊣ [c0 / s0]c1 = c2\n  ⊣ ([c0 / s0]w0 ↔ w1)\n  ⊣ d(s0, s1)\n} = {\n  3bitri([c0 / s0][c1 / s1]w0, [c2 / s1]w1, [[c0 / s0]c1 / s1][c0 / s0]w0, [c2 / s1][c0 / s0]w0)\n  sbccom2f(s0, s1, c0, c1, w0)\n  ax-mp(([[c0 / s0]c1 / s1][c0 / s0]w0 ↔[c2 / s1][c0 / s0]w0), [c0 / s0]c1 = c2)\n  dfsbcq(s1, [c0 / s0]c1, c2, [c0 / s0]w0)\n  sbcbii(s1, c2, [c0 / s0]w0, w1)\n}","parent":["3bitri","sbccom2f","ax-mp","dfsbcq","sbcbii"],"children":["csbcom2fi"]},{"name":"csbcom2fi","content":"Commutative law for double class substitution in a class, with nonfree variable condition and in inference form. (Contributed by Giovanni Mascellani, 4-Jun-2019.)","origin":"thm csbcom2fi(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4) {\n  |- wceq(csb(s0, c0, csb(s1, c1, c2)), csb(s1, c3, c4))\n  -| wcel(c0, universe)\n  -| wnfc(s1, c0)\n  -| wceq(csb(s0, c0, c1), c3)\n  -| wceq(csb(s0, c0, c2), c4)\n  -| diffss(s0, s1)\n} = {\n  eqriv(hs0, csb(s0, c0, csb(s1, c1, c2)), csb(s1, c3, c4))\n  3bitri(wcel(cv(hs0), csb(s0, c0, csb(s1, c1, c2))), wcel(cv(hs0), csb(s1, c3, c4)), wsbc(s0, c0, wsbc(s1, c1, wcel(cv(hs0), c2))), wsbc(s1, c3, wcel(cv(hs0), c4)))\n  bitri(wcel(cv(hs0), csb(s0, c0, csb(s1, c1, c2))), wsbc(s0, c0, wsbc(s1, c1, wcel(cv(hs0), c2))), wsbc(s0, c0, wcel(cv(hs0), csb(s1, c1, c2))))\n  abeq2i(hs0, csb(s0, c0, csb(s1, c1, c2)), wsbc(s0, c0, wcel(cv(hs0), csb(s1, c1, c2))))\n  df-csb(s0, hs0, c0, csb(s1, c1, c2))\n  sbcbii(s0, c0, wcel(cv(hs0), csb(s1, c1, c2)), wsbc(s1, c1, wcel(cv(hs0), c2)))\n  abeq2i(hs0, csb(s1, c1, c2), wsbc(s1, c1, wcel(cv(hs0), c2)))\n  df-csb(s1, hs0, c1, c2)\n  sbccom2fi(s0, s1, c0, c1, c3, wcel(cv(hs0), c2), wcel(cv(hs0), c4))\n  bitr3i(wsbc(s0, c0, wcel(cv(hs0), c2)), wcel(cv(hs0), c4), wcel(cv(hs0), csb(s0, c0, c2)))\n  abeq2i(hs0, csb(s0, c0, c2), wsbc(s0, c0, wcel(cv(hs0), c2)))\n  df-csb(s0, hs0, c0, c2)\n  eleq2i(cv(hs0), csb(s0, c0, c2), c4)\n  sbcel2(s1, c3, cv(hs0), c4)\n  diff.hs0.c(csb(s0, c0, csb(s1, c1, c2)))\n  diff.hs0.c(csb(s1, c3, c4))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.c(csb(s1, c1, c2))\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","pretty":"thm csbcom2fi(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4) {\n  ⊢ [c0 / s0][c1 / s1]c2 =[c3 / s1]c4\n  ⊣ c0 ∈ 𝕌\n  ⊣ F/(s1, c0)\n  ⊣ [c0 / s0]c1 = c3\n  ⊣ [c0 / s0]c2 = c4\n  ⊣ d(s0, s1)\n} = {\n  eqriv(hs0, [c0 / s0][c1 / s1]c2, [c3 / s1]c4)\n  3bitri(hs0 ∈[c0 / s0][c1 / s1]c2, hs0 ∈[c3 / s1]c4, [c0 / s0][c1 / s1]hs0 ∈ c2, [c3 / s1]hs0 ∈ c4)\n  bitri(hs0 ∈[c0 / s0][c1 / s1]c2, [c0 / s0][c1 / s1]hs0 ∈ c2, [c0 / s0]hs0 ∈[c1 / s1]c2)\n  abeq2i(hs0, [c0 / s0][c1 / s1]c2, [c0 / s0]hs0 ∈[c1 / s1]c2)\n  df-csb(s0, hs0, c0, [c1 / s1]c2)\n  sbcbii(s0, c0, hs0 ∈[c1 / s1]c2, [c1 / s1]hs0 ∈ c2)\n  abeq2i(hs0, [c1 / s1]c2, [c1 / s1]hs0 ∈ c2)\n  df-csb(s1, hs0, c1, c2)\n  sbccom2fi(s0, s1, c0, c1, c3, hs0 ∈ c2, hs0 ∈ c4)\n  bitr3i([c0 / s0]hs0 ∈ c2, hs0 ∈ c4, hs0 ∈[c0 / s0]c2)\n  abeq2i(hs0, [c0 / s0]c2, [c0 / s0]hs0 ∈ c2)\n  df-csb(s0, hs0, c0, c2)\n  eleq2i(hs0, [c0 / s0]c2, c4)\n  sbcel2(s1, c3, hs0, c4)\n  diff.hs0.c([c0 / s0][c1 / s1]c2)\n  diff.hs0.c([c3 / s1]c4)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.c([c1 / s1]c2)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","parent":["eqriv","3bitri","bitri","abeq2i","df-csb","sbcbii","sbccom2fi","bitr3i","eleq2i","sbcel2","diff.hs0.c","diffss.ex","diff.hs0.s","diff.cv.s"],"children":[]}]}