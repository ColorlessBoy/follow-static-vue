{"index":1382,"title":"Arithmetic","content":"","blocks":[{"name":"addcomgi","content":"Generalization of commutative law for addition. Simplifies proofs dealing with vectors. However, it is dependent on our particular definition of ordered pair. (Contributed by Andrew Salmon, 28-Jan-2012.) (Revised by Mario Carneiro, 6-May-2015.)","origin":"thm addcomgi(class c0, class c1) {\n  |- wceq(co(c0, caddc, c1), co(c1, caddc, c0))\n} = {\n  pm2.61i(wceq(co(c0, caddc, c1), co(c1, caddc, c0)), wa(wcel(c0, cc), wcel(c1, cc)))\n  addcom(c0, c1)\n  ndmovcom(c0, cc, c1, caddc)\n  fdmi(caddc, cxp(cc, cc), cc)\n  ax-addf()\n}","pretty":"thm addcomgi(class c0, class c1) {\n  ⊢ (c0[+]c1)=(c1[+]c0)\n} = {\n  pm2.61i((c0[+]c1)=(c1[+]c0), (c0 ∈ ℂ ∧ c1 ∈ ℂ))\n  addcom(c0, c1)\n  ndmovcom(c0, cc, c1, caddc)\n  fdmi(caddc, (ℂ × ℂ), cc)\n  ax-addf()\n}","parent":["pm2.61i","addcom","ndmovcom","fdmi","ax-addf"],"children":["addrcom"]}]}