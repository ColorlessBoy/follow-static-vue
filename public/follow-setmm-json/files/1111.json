{"index":1111,"title":"Modal logic","content":"In this section, we prove some theorems related to modal logic. For modal logic, we refer to ~ https://en.wikipedia.org/wiki/Kripke_semantics , ~ https://en.wikipedia.org/wiki/Modal_logic and ~ https://plato.stanford.edu/entries/logic-modal/ . Monadic first-order logic (i.e., with quantification over only one variable) is bi-interpretable with modal logic, by mapping ` A. x ` to \"necessity\" (generally denoted by a box) and ` E. x ` to \"possibility\" (generally denoted by a diamond). Therefore, we use these quantifiers so as not to introduce new symbols. (To be strictly within modal logic, we should add disjoint variable conditions between ` x ` and any other metavariables appearing in the statements.) For instance, ~ ax-gen corresponds to the necessitation rule of modal logic, and ~ ax-4 corresponds to the distributivity axiom (K) of modal logic, also called the Kripke scheme. Modal logics satisfying these rule and axiom are called \"normal modal logics\", of which the most important modal logics are. The minimal normal modal logic is also denoted by (K). Here are a few normal modal logics with their axiomatizations (on top of (K)): (K) axiomatized by no supplementary axioms; (T) axiomatized by the axiom T; (K4) axiomatized by the axiom 4; (S4) axiomatized by the axioms T,4; (S5) axiomatized by the axioms T,5 or D,B,4; (GL) axiomatized by the axiom GL. The last one, called G&ouml;del&ndash;L&ouml;b logic or provability logic, is important because it describes exactly the properties of provability in Peano arithmetic, as proved by Robert Solovay. See for instance ~ https://plato.stanford.edu/entries/logic-provability/ . A basic result in this logic is ~ bj-gl4 .","blocks":[{"name":"bj-axdd2","content":"This implication, proved using only ~ ax-gen and ~ ax-4 on top of propositional calculus (hence holding, up to the standard interpretation, in any normal modal logic), shows that the axiom scheme ` |- E. x T. ` implies the axiom scheme ` |- ( A. x ph -> E. x ph ) ` . These correspond to the modal axiom (D), and in predicate calculus, they assert that the universe of discourse is nonempty. For the converse, see ~ bj-axd2d . (Contributed by BJ, 16-May-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-axdd2(setvar s0, wff w0, wff w1) {\n  |- wi(wex(s0, w0), wi(wal(s0, w1), wex(s0, w1)))\n} = {\n  com12(wex(s0, w0), wal(s0, w1), wex(s0, w1))\n  syl(wal(s0, w1), wi(wex(s0, w0), wex(s0, w1)), wal(s0, wi(w0, w1)))\n  ala1(s0, w1, w0)\n  exim(s0, w0, w1)\n}","pretty":"thm bj-axdd2(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0, w0)→(∀(s0, w1)→ ∃(s0, w1)))\n} = {\n  com12(∃(s0, w0), ∀(s0, w1), ∃(s0, w1))\n  syl(∀(s0, w1), (∃(s0, w0)→ ∃(s0, w1)), ∀(s0,(w0 → w1)))\n  ala1(s0, w1, w0)\n  exim(s0, w0, w1)\n}","parent":["com12","syl","ala1","exim"],"children":[]},{"name":"bj-axd2d","content":"This implication, proved using only ~ ax-gen on top of propositional calculus (hence holding, up to the standard interpretation, in any modal logic), shows that the axiom scheme ` |- ( A. x ph -> E. x ph ) ` implies the axiom scheme ` |- E. x T. ` . These correspond to the modal axiom (D), and in predicate calculus, they assert that the universe of discourse is nonempty. For the converse, see ~ bj-axdd2 . (Contributed by BJ, 16-May-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-axd2d(setvar s0) {\n  |- wi(wi(wal(s0, wtru), wex(s0, wtru)), wex(s0, wtru))\n} = {\n  mpg(s0, wi(wi(wal(s0, wtru), wex(s0, wtru)), wex(s0, wtru)), wtru)\n  pm2.27(wal(s0, wtru), wex(s0, wtru))\n  tru()\n}","pretty":"thm bj-axd2d(setvar s0) {\n  ⊢ ((∀(s0, T)→ ∃(s0, T))→ ∃(s0, T))\n} = {\n  mpg(s0, ((∀(s0, T)→ ∃(s0, T))→ ∃(s0, T)), wtru)\n  pm2.27(∀(s0, T), ∃(s0, T))\n  tru()\n}","parent":["mpg","pm2.27","tru"],"children":[]},{"name":"bj-axtd","content":"This implication, proved from propositional calculus only (hence holding, up to the standard interpretation, in any modal logic), shows that the axiom scheme ` |- ( A. x ph -> ph ) ` (modal T) implies the axiom scheme ` |- ( A. x ph -> E. x ph ) ` (modal D). See also ~ bj-axdd2 and ~ bj-axd2d . (Contributed by BJ, 16-May-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-axtd(setvar s0, wff w0) {\n  |- wi(wi(wal(s0, wn(w0)), wn(w0)), wi(wi(wal(s0, w0), w0), wi(wal(s0, w0), wex(s0, w0))))\n} = {\n  imim2d(wi(wal(s0, wn(w0)), wn(w0)), wal(s0, w0), w0, wex(s0, w0))\n  syl6ibr(wi(wal(s0, wn(w0)), wn(w0)), w0, wex(s0, w0), wn(wal(s0, wn(w0))))\n  con2(wal(s0, wn(w0)), w0)\n  df-ex(s0, w0)\n}","pretty":"thm bj-axtd(setvar s0, wff w0) {\n  ⊢ ((∀(s0, ¬ w0)→ ¬ w0)→((∀(s0, w0)→ w0)→(∀(s0, w0)→ ∃(s0, w0))))\n} = {\n  imim2d((∀(s0, ¬ w0)→ ¬ w0), ∀(s0, w0), w0, ∃(s0, w0))\n  syl6ibr((∀(s0, ¬ w0)→ ¬ w0), w0, ∃(s0, w0), ¬ ∀(s0, ¬ w0))\n  con2(∀(s0, ¬ w0), w0)\n  df-ex(s0, w0)\n}","parent":["imim2d","syl6ibr","con2","df-ex"],"children":[]},{"name":"bj-gl4lem","content":"Lemma for ~ bj-gl4 . Note that this proof holds in the modal logic (K). (Contributed by BJ, 12-Dec-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-gl4lem(setvar s0, wff w0) {\n  |- wi(wal(s0, w0), wal(s0, wi(wal(s0, wa(wal(s0, w0), w0)), wa(wal(s0, w0), w0))))\n} = {\n  alimi(s0, w0, wi(wal(s0, wa(wal(s0, w0), w0)), wa(wal(s0, w0), w0)))\n  syl5bi(w0, wal(s0, wa(wal(s0, w0), w0)), wa(wal(s0, w0), w0), wa(wal(s0, wal(s0, w0)), wal(s0, w0)))\n  19.26(s0, wal(s0, w0), w0)\n  anc2ri(w0, wa(wal(s0, wal(s0, w0)), wal(s0, w0)), wal(s0, w0))\n  a1i(w0, wi(wa(wal(s0, wal(s0, w0)), wal(s0, w0)), wal(s0, w0)))\n  simpr(wal(s0, wal(s0, w0)), wal(s0, w0))\n}","pretty":"thm bj-gl4lem(setvar s0, wff w0) {\n  ⊢ (∀(s0, w0)→ ∀(s0,(∀(s0,(∀(s0, w0)∧ w0))→(∀(s0, w0)∧ w0))))\n} = {\n  alimi(s0, w0, (∀(s0,(∀(s0, w0)∧ w0))→(∀(s0, w0)∧ w0)))\n  syl5bi(w0, ∀(s0,(∀(s0, w0)∧ w0)), (∀(s0, w0)∧ w0), (∀(s0, ∀(s0, w0))∧ ∀(s0, w0)))\n  19.26(s0, ∀(s0, w0), w0)\n  anc2ri(w0, (∀(s0, ∀(s0, w0))∧ ∀(s0, w0)), ∀(s0, w0))\n  a1i(w0, ((∀(s0, ∀(s0, w0))∧ ∀(s0, w0))→ ∀(s0, w0)))\n  simpr(∀(s0, ∀(s0, w0)), ∀(s0, w0))\n}","parent":["alimi","syl5bi","19.26","anc2ri","a1i","simpr"],"children":["bj-gl4"]},{"name":"bj-gl4","content":"In a normal modal logic, the modal axiom GL implies the modal axiom (4). Note that the antecedent of ~ bj-gl4 is an instance of the axiom GL, with ` ph ` replaced by ` ( A. x ph /\\ ph ) ` , sometimes called the \"strong necessity\" of ` ph ` . (Contributed by BJ, 12-Dec-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-gl4(setvar s0, wff w0) {\n  |- wi(wi(wal(s0, wi(wal(s0, wa(wal(s0, w0), w0)), wa(wal(s0, w0), w0))), wal(s0, wa(wal(s0, w0), w0))), wi(wal(s0, w0), wal(s0, wal(s0, w0))))\n} = {\n  syl6(wi(wal(s0, wi(wal(s0, wa(wal(s0, w0), w0)), wa(wal(s0, w0), w0))), wal(s0, wa(wal(s0, w0), w0))), wal(s0, w0), wal(s0, wal(s0, w0)), wa(wal(s0, wal(s0, w0)), wal(s0, w0)))\n  imim12i(wal(s0, wi(wal(s0, wa(wal(s0, w0), w0)), wa(wal(s0, w0), w0))), wal(s0, wa(wal(s0, w0), w0)), wal(s0, w0), wa(wal(s0, wal(s0, w0)), wal(s0, w0)))\n  bj-gl4lem(s0, w0)\n  biimpi(wal(s0, wa(wal(s0, w0), w0)), wa(wal(s0, wal(s0, w0)), wal(s0, w0)))\n  19.26(s0, wal(s0, w0), w0)\n  simpl(wal(s0, wal(s0, w0)), wal(s0, w0))\n}","pretty":"thm bj-gl4(setvar s0, wff w0) {\n  ⊢ ((∀(s0,(∀(s0,(∀(s0, w0)∧ w0))→(∀(s0, w0)∧ w0)))→ ∀(s0,(∀(s0, w0)∧ w0)))→(∀(s0, w0)→ ∀(s0, ∀(s0, w0))))\n} = {\n  syl6((∀(s0,(∀(s0,(∀(s0, w0)∧ w0))→(∀(s0, w0)∧ w0)))→ ∀(s0,(∀(s0, w0)∧ w0))), ∀(s0, w0), ∀(s0, ∀(s0, w0)), (∀(s0, ∀(s0, w0))∧ ∀(s0, w0)))\n  imim12i(∀(s0,(∀(s0,(∀(s0, w0)∧ w0))→(∀(s0, w0)∧ w0))), ∀(s0,(∀(s0, w0)∧ w0)), ∀(s0, w0), (∀(s0, ∀(s0, w0))∧ ∀(s0, w0)))\n  bj-gl4lem(s0, w0)\n  biimpi(∀(s0,(∀(s0, w0)∧ w0)), (∀(s0, ∀(s0, w0))∧ ∀(s0, w0)))\n  19.26(s0, ∀(s0, w0), w0)\n  simpl(∀(s0, ∀(s0, w0)), ∀(s0, w0))\n}","parent":["syl6","imim12i","bj-gl4lem","biimpi","19.26","simpl"],"children":[]},{"name":"bj-axc4","content":"Over minimal calculus, the modal axiom (4) ( ~ hba1 ) and the modal axiom (K) ( ~ ax-4 ) together imply ~ axc4 . (Contributed by BJ, 29-Nov-2020.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-axc4(setvar s0, wff w0, wff w1) {\n  |- wi(wi(wal(s0, w0), wal(s0, wal(s0, w0))), wi(wi(wal(s0, wi(wal(s0, w0), w1)), wi(wal(s0, wal(s0, w0)), wal(s0, w1))), wi(wal(s0, wi(wal(s0, w0), w1)), wi(wal(s0, w0), wal(s0, w1)))))\n} = {\n  bj-imim21(wal(s0, w0), wal(s0, wal(s0, w0)), wal(s0, wi(wal(s0, w0), w1)), wal(s0, w1))\n}","pretty":"thm bj-axc4(setvar s0, wff w0, wff w1) {\n  ⊢ ((∀(s0, w0)→ ∀(s0, ∀(s0, w0)))→((∀(s0,(∀(s0, w0)→ w1))→(∀(s0, ∀(s0, w0))→ ∀(s0, w1)))→(∀(s0,(∀(s0, w0)→ w1))→(∀(s0, w0)→ ∀(s0, w1)))))\n} = {\n  bj-imim21(∀(s0, w0), ∀(s0, ∀(s0, w0)), ∀(s0,(∀(s0, w0)→ w1)), ∀(s0, w1))\n}","parent":["bj-imim21"],"children":[]}]}