{"index":1231,"title":"Equivalence relations on domain quotients","content":"","blocks":[{"name":"df-ers","content":"Define the class of equivalence relations on domain quotients (or: domain quotients restricted to equivalence relations). The present definition of equivalence relation in set.mm ~ df-er \"is not standard\", \"somewhat cryptic\", has no costant 0-ary class and does not follow the traditional transparent reflexive-symmetric-transitive relation way of definition of equivalence. The definitions ~ df-eqvrels , ~ dfeqvrels2 , ~ dfeqvrels3 and ~ df-eqvrel , ~ dfeqvrel2 , ~ dfeqvrel3 are fully transparent in this regard. However, they lack the domain component ( ` dom R = A ` ) of the present ~ df-er . While we acknowledge the need of a domain component, the present ~ df-er definition does not utilize the results revealed by the new theorems in the Partition-Equivalence Theorem part below (like ~~? pets and ~~? pet ). From those theorems follows that the natural domain of equivalence relations is not ` R Domain A ` (i.e. ` dom R = A ` see ~ brdomaing ), but ` R DomainQss A ` (i.e. ` ( dom R /. R ) = A ` , see ~ brdmqss ), see ~ erim vs. ~ prter3 . While I'm sure we need both equivalence relation ~ df-eqvrels and equivalence relation on domain quotient ~ df-ers , I'm not sure whether we need a third equivalence relation concept with the present ` dom R = A ` component as well: this needs further investigation. As a default I suppose that these two concepts ~ df-eqvrels and ~ df-ers are enough and named the predicate version of the one on domain quotient as the alternate version ~ df-erALTV of the present ~ df-er . (Contributed by Peter Mazsa, 26-Jun-2021.)","origin":"axiom df-ers() {\n  |- wceq(cers, cres(cdmqss, ceqvrels))\n}","pretty":"axiom df-ers() {\n  ⊢ Ers =(DomainQss |` EqvRels)\n}","parent":[],"children":["brers"]},{"name":"df-erALTV","content":"Equivalence relation with natural domain predicate, see also the comment of ~ df-ers . Alternate definition is ~ dferALTV2 . Binary equivalence relation with natural domain and the equivalence relation with natural domain predicate are the same when ` A ` and ` R ` are sets, see ~ brerser . (Contributed by Peter Mazsa, 12-Aug-2021.)","origin":"axiom df-erALTV(class c0, class c1) {\n  |- wb(werALTV(c0, c1), wa(weqvrel(c0), wdmqs(c0, c1)))\n}","pretty":"axiom df-erALTV(class c0, class c1) {\n  ⊢ (c0[ErALTV]c1 ↔(EqvRel(c0)∧ c0[DomainQs]c1))\n}","parent":[],"children":["dferALTV2","brerser"]},{"name":"df-members","content":"Define the class of membership equivalence relations on their domain quotients. (Contributed by Peter Mazsa, 28-Nov-2022.) (Revised by Peter Mazsa, 24-Jul-2023.)","origin":"axiom df-members(setvar s0) {\n  |- wceq(cmembers, cab(s0, wbr(ccoss(cres(ccnv(cep), cv(s0))), cers, cv(s0))))\n}","pretty":"axiom df-members(setvar s0) {\n  ⊢ MembErs = { s0 |, ~((`' ∈ |` s0))[Ers]s0 }\n}","parent":[],"children":[""]},{"name":"df-member","content":"Define the membership equivalence relation on the class ` A ` (or, the restricted elementhood equivalence relation on its domain quotient ` A ` .) Alternate definitions are ~ dfmember2 and ~ dfmember3 . Later on, in an application of set theory I make a distinction between the default elementhood concept and a special membership concept: membership equivalence relation will be an integral part of that membership concept. (Contributed by Peter Mazsa, 26-Jun-2021.) (Revised by Peter Mazsa, 28-Nov-2022.)","origin":"axiom df-member(class c0) {\n  |- wb(wmember(c0), werALTV(ccoss(cres(ccnv(cep), c0)), c0))\n}","pretty":"axiom df-member(class c0) {\n  ⊢ (MembEr(c0)↔, ~((`' ∈ |` c0))[ErALTV]c0)\n}","parent":[],"children":["dfmember"]},{"name":"brers","content":"Binary equivalence relation with natural domain, see the comment of ~ df-ers . (Contributed by Peter Mazsa, 23-Jul-2021.)","origin":"thm brers(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wb(wbr(c2, cers, c0), wa(wcel(c2, ceqvrels), wbr(c2, cdmqss, c0))))\n} = {\n  eqres(c0, c1, c2, cers, ceqvrels, cdmqss)\n  df-ers()\n}","pretty":"thm brers(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c2[Ers]c0 ↔(c2 ∈ EqvRels ∧ c2[DomainQss]c0)))\n} = {\n  eqres(c0, c1, c2, cers, ceqvrels, cdmqss)\n  df-ers()\n}","parent":["eqres","df-ers"],"children":["brerser"]},{"name":"dferALTV2","content":"Equivalence relation with natural domain predicate, see the comment of ~ df-ers . (Contributed by Peter Mazsa, 26-Jun-2021.) (Revised by Peter Mazsa, 30-Aug-2021.)","origin":"thm dferALTV2(class c0, class c1) {\n  |- wb(werALTV(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c1)))\n} = {\n  bitri(werALTV(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c1)), wa(weqvrel(c0), wdmqs(c0, c1)))\n  df-erALTV(c0, c1)\n  anbi2i(weqvrel(c0), wdmqs(c0, c1), wceq(cqs(cdm(c0), c0), c1))\n  df-dmqs(c0, c1)\n}","pretty":"thm dferALTV2(class c0, class c1) {\n  ⊢ (c0[ErALTV]c1 ↔(EqvRel(c0)∧(dom(c0)/. c0)= c1))\n} = {\n  bitri(c0[ErALTV]c1, (EqvRel(c0)∧(dom(c0)/. c0)= c1), (EqvRel(c0)∧ c0[DomainQs]c1))\n  df-erALTV(c0, c1)\n  anbi2i(EqvRel(c0), c0[DomainQs]c1, (dom(c0)/. c0)= c1)\n  df-dmqs(c0, c1)\n}","parent":["bitri","df-erALTV","anbi2i","df-dmqs"],"children":["erALTVeq1","dfmember2","erim"]},{"name":"erALTVeq1","content":"Equality theorem for equivalence relation on domain quotient. (Contributed by Peter Mazsa, 25-Sep-2021.)","origin":"thm erALTVeq1(class c0, class c1, class c2) {\n  |- wi(wceq(c0, c1), wb(werALTV(c0, c2), werALTV(c1, c2)))\n} = {\n  3bitr4g(wceq(c0, c1), werALTV(c0, c2), werALTV(c1, c2), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wa(weqvrel(c1), wceq(cqs(cdm(c1), c1), c2)))\n  anbi12d(wceq(c0, c1), weqvrel(c0), wceq(cqs(cdm(c0), c0), c2), weqvrel(c1), wceq(cqs(cdm(c1), c1), c2))\n  eqvreleq(c0, c1)\n  dmqseqeq1(c0, c1, c2)\n  dferALTV2(c0, c2)\n  dferALTV2(c1, c2)\n}","pretty":"thm erALTVeq1(class c0, class c1, class c2) {\n  ⊢ (c0 = c1 →(c0[ErALTV]c2 ↔ c1[ErALTV]c2))\n} = {\n  3bitr4g(c0 = c1, c0[ErALTV]c2, c1[ErALTV]c2, (EqvRel(c0)∧(dom(c0)/. c0)= c2), (EqvRel(c1)∧(dom(c1)/. c1)= c2))\n  anbi12d(c0 = c1, EqvRel(c0), (dom(c0)/. c0)= c2, EqvRel(c1), (dom(c1)/. c1)= c2)\n  eqvreleq(c0, c1)\n  dmqseqeq1(c0, c1, c2)\n  dferALTV2(c0, c2)\n  dferALTV2(c1, c2)\n}","parent":["3bitr4g","anbi12d","eqvreleq","dmqseqeq1","dferALTV2"],"children":["erALTVeq1i","erALTVeq1d"]},{"name":"erALTVeq1i","content":"Equality theorem for equivalence relation on domain quotient, inference version. (Contributed by Peter Mazsa, 25-Sep-2021.)","origin":"thm erALTVeq1i(class c0, class c1, class c2) {\n  |- wb(werALTV(c0, c1), werALTV(c2, c1))\n  -| wceq(c0, c2)\n} = {\n  ax-mp(wb(werALTV(c0, c1), werALTV(c2, c1)), wceq(c0, c2))\n  erALTVeq1(c0, c2, c1)\n}","pretty":"thm erALTVeq1i(class c0, class c1, class c2) {\n  ⊢ (c0[ErALTV]c1 ↔ c2[ErALTV]c1)\n  ⊣ c0 = c2\n} = {\n  ax-mp((c0[ErALTV]c1 ↔ c2[ErALTV]c1), c0 = c2)\n  erALTVeq1(c0, c2, c1)\n}","parent":["ax-mp","erALTVeq1"],"children":["dfmember"]},{"name":"erALTVeq1d","content":"Equality theorem for equivalence relation on domain quotient, deduction version. (Contributed by Peter Mazsa, 25-Sep-2021.)","origin":"thm erALTVeq1d(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wb(werALTV(c0, c1), werALTV(c2, c1)))\n  -| wi(w0, wceq(c0, c2))\n} = {\n  syl(w0, wb(werALTV(c0, c1), werALTV(c2, c1)), wceq(c0, c2))\n  erALTVeq1(c0, c2, c1)\n}","pretty":"thm erALTVeq1d(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0[ErALTV]c1 ↔ c2[ErALTV]c1))\n  ⊣ (w0 → c0 = c2)\n} = {\n  syl(w0, (c0[ErALTV]c1 ↔ c2[ErALTV]c1), c0 = c2)\n  erALTVeq1(c0, c2, c1)\n}","parent":["syl","erALTVeq1"],"children":[]},{"name":"dfmember","content":"Alternate definition of the membership equivalence relation. (Contributed by Peter Mazsa, 28-Nov-2022.)","origin":"thm dfmember(class c0) {\n  |- wb(wmember(c0), werALTV(ccoels(c0), c0))\n} = {\n  bitr4i(wmember(c0), werALTV(ccoels(c0), c0), werALTV(ccoss(cres(ccnv(cep), c0)), c0))\n  df-member(c0)\n  erALTVeq1i(ccoels(c0), c0, ccoss(cres(ccnv(cep), c0)))\n  df-coels(c0)\n}","pretty":"thm dfmember(class c0) {\n  ⊢ (MembEr(c0)↔ ~(c0)[ErALTV]c0)\n} = {\n  bitr4i(MembEr(c0), ~(c0)[ErALTV]c0, , ~((`' ∈ |` c0))[ErALTV]c0)\n  df-member(c0)\n  erALTVeq1i(~(c0), c0, , ~((`' ∈ |` c0)))\n  df-coels(c0)\n}","parent":["bitr4i","df-member","erALTVeq1i","df-coels"],"children":["dfmember2"]},{"name":"dfmember2","content":"Alternate definition of the membership equivalence relation. (Contributed by Peter Mazsa, 25-Sep-2021.)","origin":"thm dfmember2(class c0) {\n  |- wb(wmember(c0), wa(weqvrel(ccoels(c0)), wceq(cqs(cdm(ccoels(c0)), ccoels(c0)), c0)))\n} = {\n  bitri(wmember(c0), wa(weqvrel(ccoels(c0)), wceq(cqs(cdm(ccoels(c0)), ccoels(c0)), c0)), werALTV(ccoels(c0), c0))\n  dfmember(c0)\n  dferALTV2(ccoels(c0), c0)\n}","pretty":"thm dfmember2(class c0) {\n  ⊢ (MembEr(c0)↔(EqvRel(~(c0))∧(dom(~(c0))/. ~(c0))= c0))\n} = {\n  bitri(MembEr(c0), (EqvRel(~(c0))∧(dom(~(c0))/. ~(c0))= c0), ~(c0)[ErALTV]c0)\n  dfmember(c0)\n  dferALTV2(~(c0), c0)\n}","parent":["bitri","dfmember","dferALTV2"],"children":["dfmember3"]},{"name":"dfmember3","content":"Alternate definition of the membership equivalence relation. (Contributed by Peter Mazsa, 26-Sep-2021.) (Revised by Peter Mazsa, 17-Jul-2023.)","origin":"thm dfmember3(class c0) {\n  |- wb(wmember(c0), wa(wcoeleqvrel(c0), wceq(cqs(cuni(c0), ccoels(c0)), c0)))\n} = {\n  bitri(wmember(c0), wa(wcoeleqvrel(c0), wceq(cqs(cuni(c0), ccoels(c0)), c0)), wa(weqvrel(ccoels(c0)), wceq(cqs(cdm(ccoels(c0)), ccoels(c0)), c0)))\n  dfmember2(c0)\n  anbi12i(weqvrel(ccoels(c0)), wceq(cqs(cdm(ccoels(c0)), ccoels(c0)), c0), wcoeleqvrel(c0), wceq(cqs(cuni(c0), ccoels(c0)), c0))\n  bicomi(weqvrel(ccoels(c0)), wcoeleqvrel(c0))\n  dfcoeleqvrel(c0)\n  dmqscoelseq(c0)\n}","pretty":"thm dfmember3(class c0) {\n  ⊢ (MembEr(c0)↔(CoElEqvRel(c0)∧(⋃ c0 /. ~(c0))= c0))\n} = {\n  bitri(MembEr(c0), (CoElEqvRel(c0)∧(⋃ c0 /. ~(c0))= c0), (EqvRel(~(c0))∧(dom(~(c0))/. ~(c0))= c0))\n  dfmember2(c0)\n  anbi12i(EqvRel(~(c0)), (dom(~(c0))/. ~(c0))= c0, CoElEqvRel(c0), (⋃ c0 /. ~(c0))= c0)\n  bicomi(EqvRel(~(c0)), CoElEqvRel(c0))\n  dfcoeleqvrel(c0)\n  dmqscoelseq(c0)\n}","parent":["bitri","dfmember2","anbi12i","bicomi","dfcoeleqvrel","dmqscoelseq"],"children":[]},{"name":"eqvreldmqs","content":"Two ways to express membership equivalence relation on its domain quotient. (Contributed by Peter Mazsa, 26-Sep-2021.) (Revised by Peter Mazsa, 17-Jul-2023.)","origin":"thm eqvreldmqs(class c0) {\n  |- wb(wa(weqvrel(ccoss(cres(ccnv(cep), c0))), wceq(cqs(cdm(ccoss(cres(ccnv(cep), c0))), ccoss(cres(ccnv(cep), c0))), c0)), wa(wcoeleqvrel(c0), wceq(cqs(cuni(c0), ccoels(c0)), c0)))\n} = {\n  anbi12i(weqvrel(ccoss(cres(ccnv(cep), c0))), wceq(cqs(cdm(ccoss(cres(ccnv(cep), c0))), ccoss(cres(ccnv(cep), c0))), c0), wcoeleqvrel(c0), wceq(cqs(cuni(c0), ccoels(c0)), c0))\n  bicomi(weqvrel(ccoss(cres(ccnv(cep), c0))), wcoeleqvrel(c0))\n  df-coeleqvrel(c0)\n  dmqs1cosscnvepreseq(c0)\n}","pretty":"thm eqvreldmqs(class c0) {\n  ⊢ ((EqvRel(, ~((`' ∈ |` c0)))∧(dom(, ~((`' ∈ |` c0)))/., ~((`' ∈ |` c0)))= c0)↔(CoElEqvRel(c0)∧(⋃ c0 /. ~(c0))= c0))\n} = {\n  anbi12i(EqvRel(, ~((`' ∈ |` c0))), (dom(, ~((`' ∈ |` c0)))/., ~((`' ∈ |` c0)))= c0, CoElEqvRel(c0), (⋃ c0 /. ~(c0))= c0)\n  bicomi(EqvRel(, ~((`' ∈ |` c0))), CoElEqvRel(c0))\n  df-coeleqvrel(c0)\n  dmqs1cosscnvepreseq(c0)\n}","parent":["anbi12i","bicomi","df-coeleqvrel","dmqs1cosscnvepreseq"],"children":[]},{"name":"brerser","content":"Binary equivalence relation with natural domain and the equivalence relation with natural domain predicate are the same when ` A ` and ` R ` are sets. (Contributed by Peter Mazsa, 25-Aug-2021.)","origin":"thm brerser(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wbr(c2, cers, c0), werALTV(c2, c0)))\n} = {\n  bitrd(wa(wcel(c0, c1), wcel(c2, c3)), wbr(c2, cers, c0), werALTV(c2, c0), wa(wcel(c2, ceqvrels), wbr(c2, cdmqss, c0)))\n  adantr(wcel(c0, c1), wcel(c2, c3), wb(wbr(c2, cers, c0), wa(wcel(c2, ceqvrels), wbr(c2, cdmqss, c0))))\n  brers(c0, c1, c2)\n  syl6bbr(wa(wcel(c0, c1), wcel(c2, c3)), wa(wcel(c2, ceqvrels), wbr(c2, cdmqss, c0)), werALTV(c2, c0), wa(weqvrel(c2), wdmqs(c2, c0)))\n  anbi12d(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c2, ceqvrels), wbr(c2, cdmqss, c0), weqvrel(c2), wdmqs(c2, c0))\n  adantl(wcel(c0, c1), wcel(c2, c3), wb(wcel(c2, ceqvrels), weqvrel(c2)))\n  eleqvrelsrel(c2, c3)\n  brdmqssqs(c0, c1, c2, c3)\n  df-erALTV(c2, c0)\n}","pretty":"thm brerser(class c0, class c1, class c2, class c3) {\n  ⊢ ((c0 ∈ c1 ∧ c2 ∈ c3)→(c2[Ers]c0 ↔ c2[ErALTV]c0))\n} = {\n  bitrd((c0 ∈ c1 ∧ c2 ∈ c3), c2[Ers]c0, c2[ErALTV]c0, (c2 ∈ EqvRels ∧ c2[DomainQss]c0))\n  adantr(c0 ∈ c1, c2 ∈ c3, (c2[Ers]c0 ↔(c2 ∈ EqvRels ∧ c2[DomainQss]c0)))\n  brers(c0, c1, c2)\n  syl6bbr((c0 ∈ c1 ∧ c2 ∈ c3), (c2 ∈ EqvRels ∧ c2[DomainQss]c0), c2[ErALTV]c0, (EqvRel(c2)∧ c2[DomainQs]c0))\n  anbi12d((c0 ∈ c1 ∧ c2 ∈ c3), c2 ∈ EqvRels, c2[DomainQss]c0, EqvRel(c2), c2[DomainQs]c0)\n  adantl(c0 ∈ c1, c2 ∈ c3, (c2 ∈ EqvRels ↔ EqvRel(c2)))\n  eleqvrelsrel(c2, c3)\n  brdmqssqs(c0, c1, c2, c3)\n  df-erALTV(c2, c0)\n}","parent":["bitrd","adantr","brers","syl6bbr","anbi12d","adantl","eleqvrelsrel","brdmqssqs","df-erALTV"],"children":[]},{"name":"erim2","content":"Equivalence relation on its natural domain implies that the class of coelements on the domain is equal to the relation (this is ~ prter3 in a more convenient form , see also ~ erim ). (Contributed by Rodolfo Medina, 19-Oct-2010.) (Proof shortened by Mario Carneiro, 12-Aug-2015.) (Revised by Peter Mazsa, 29-Dec-2021.)","origin":"thm erim2(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wi(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wceq(ccoels(c2), c0)))\n} = {\n  ex(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wceq(ccoels(c2), c0))\n  eqbrrdv(hs0, hs1, ccoels(c2), c0, wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))))\n  a1i(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wrel(ccoels(c2)))\n  relcoels(c2)\n  ad2antrl(wcel(c0, c1), weqvrel(c0), wceq(cqs(cdm(c0), c0), c2), wrel(c0))\n  syl5bb(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wbr(cv(hs0), ccoels(c2), cv(hs1)), wbr(cv(hs0), c0, cv(hs1)), wrex(hs2, c2, wa(wcel(cv(hs0), cv(hs2)), wcel(cv(hs1), cv(hs2)))))\n  el2v(hs0, hs1, wb(wbr(cv(hs0), ccoels(c2), cv(hs1)), wrex(hs2, c2, wa(wcel(cv(hs0), cv(hs2)), wcel(cv(hs1), cv(hs2))))))\n  brcoels(hs2, cv(hs0), universe, cv(hs1), universe, c2)\n  bitr4d(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wrex(hs2, c2, wa(wcel(cv(hs0), cv(hs2)), wcel(cv(hs1), cv(hs2)))), wbr(cv(hs0), c0, cv(hs1)), wrex(hs2, c2, wa(wcel(cv(hs0), cv(hs2)), wbr(cv(hs0), c0, cv(hs1)))))\n  adantl(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wb(wrex(hs2, c2, wa(wcel(cv(hs0), cv(hs2)), wcel(cv(hs1), cv(hs2)))), wrex(hs2, c2, wa(wcel(cv(hs0), cv(hs2)), wbr(cv(hs0), c0, cv(hs1))))))\n  rexbidva(hs2, c2, wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wa(wcel(cv(hs0), cv(hs2)), wcel(cv(hs1), cv(hs2))), wa(wcel(cv(hs0), cv(hs2)), wbr(cv(hs0), c0, cv(hs1))))\n  pm5.32da(wa(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wcel(cv(hs2), c2)), wcel(cv(hs0), cv(hs2)), wcel(cv(hs1), cv(hs2)), wbr(cv(hs0), c0, cv(hs1)))\n  anassrs(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2)), wb(wcel(cv(hs1), cv(hs2)), wbr(cv(hs0), c0, cv(hs1))))\n  syl6bb(wa(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wa(wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2)))), wcel(cv(hs1), cv(hs2)), wbr(cv(hs0), c0, cv(hs1)), wcel(cv(hs1), cec(cv(hs0), c0)))\n  eleq2d(cv(hs1), cv(hs2), cec(cv(hs0), c0), wa(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wa(wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2)))))\n  syl3anc(wa(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wa(wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2)))), wceq(cv(hs2), cec(cv(hs0), c0)), weqvrel(c0), wcel(cv(hs2), cqs(cdm(c0), c0)), wcel(cv(hs0), cv(hs2)))\n  simpll(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2), wa(wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2))))\n  eleqtrrd(cv(hs2), cqs(cdm(c0), c0), c2, wa(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wa(wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2)))))\n  simprl(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2)))\n  simplr(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2), wa(wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2))))\n  simprr(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wcel(cv(hs2), c2), wcel(cv(hs0), cv(hs2)))\n  eqvrelqsel(c0, cv(hs2), cdm(c0), cv(hs0))\n  el2v(hs0, hs1, wb(wcel(cv(hs1), cec(cv(hs0), c0)), wbr(cv(hs0), c0, cv(hs1))))\n  elecALTV(cv(hs0), universe, cv(hs1), universe, c0)\n  syl6bbr(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wbr(cv(hs0), c0, cv(hs1)), wrex(hs2, c2, wa(wcel(cv(hs0), cv(hs2)), wbr(cv(hs0), c0, cv(hs1)))), wa(wrex(hs2, c2, wcel(cv(hs0), cv(hs2))), wbr(cv(hs0), c0, cv(hs1))))\n  pm4.71rd(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wbr(cv(hs0), c0, cv(hs1)), wrex(hs2, c2, wcel(cv(hs0), cv(hs2))))\n  ex(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wbr(cv(hs0), c0, cv(hs1)), wrex(hs2, c2, wcel(cv(hs0), cv(hs2))))\n  mpbid(wa(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wbr(cv(hs0), c0, cv(hs1))), wrex(hs2, c2, wcel(cv(hs0), cv(hs2))), wcel(cv(hs0), cdm(c0)))\n  adantll(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wbr(cv(hs0), c0, cv(hs1)), wcel(cv(hs0), cdm(c0)))\n  eqvrelcl(cv(hs0), c0, cv(hs1), wa(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wbr(cv(hs0), c0, cv(hs1))))\n  simpll(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2), wbr(cv(hs0), c0, cv(hs1)))\n  simpr(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)), wbr(cv(hs0), c0, cv(hs1)))\n  adantr(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wbr(cv(hs0), c0, cv(hs1)), wb(wcel(cv(hs0), cdm(c0)), wrex(hs2, c2, wcel(cv(hs0), cv(hs2)))))\n  syl6bb(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wcel(cv(hs0), cdm(c0)), wrex(hs2, c2, wcel(cv(hs0), cv(hs2))), wcel(cv(hs0), cuni(c2)))\n  bitrd(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))), wcel(cv(hs0), cdm(c0)), wcel(cv(hs0), cuni(c2)), wcel(cv(hs0), crn(c0)))\n  eleq2d(cv(hs0), cdm(c0), crn(c0), wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))))\n  ad2antrl(wcel(c0, c1), weqvrel(c0), wceq(cqs(cdm(c0), c0), c2), wceq(cdm(c0), crn(c0)))\n  eqvrelim(c0)\n  imp32(wcel(c0, c1), weqvrel(c0), wceq(cqs(cdm(c0), c0), c2), wb(wcel(cv(hs0), crn(c0)), wcel(cv(hs0), cuni(c2))))\n  syl5(wcel(c0, c1), weqvrel(c0), wi(wceq(cqs(cdm(c0), c0), c2), wb(wcel(cv(hs0), crn(c0)), wcel(cv(hs0), cuni(c2)))), wrel(c0))\n  eqvrelrel(c0)\n  dmqseqim2(c0, c1, c2, cv(hs0))\n  eluni2(hs2, cv(hs0), c2)\n  r19.41v(hs2, c2, wcel(cv(hs0), cv(hs2)), wbr(cv(hs0), c0, cv(hs1)))\n  diff.hs0.s(hs1)\n  diff.hs0.c(ccoels(c2))\n  diff.hs0.c(c0)\n  diff.hs1.c(ccoels(c2))\n  diff.hs1.c(c0)\n  diff.hs0.w(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))))\n  diff.hs1.w(wa(wcel(c0, c1), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2))))\n  diff.hs2.c(cv(hs0))\n  diff.hs2.c(cv(hs1))\n  diff.hs2.c(c2)\n  diff.hs2.w(wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)))\n  diff.hs2.w(wbr(cv(hs0), c0, cv(hs1)))\n}","pretty":"thm erim2(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →((EqvRel(c0)∧(dom(c0)/. c0)= c2)→ ~(c2)= c0))\n} = {\n  ex(c0 ∈ c1, (EqvRel(c0)∧(dom(c0)/. c0)= c2), ~(c2)= c0)\n  eqbrrdv(hs0, hs1, ~(c2), c0, (c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)))\n  a1i((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), Rel(~(c2)))\n  relcoels(c2)\n  ad2antrl(c0 ∈ c1, EqvRel(c0), (dom(c0)/. c0)= c2, Rel(c0))\n  syl5bb((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), hs0[~(c2)]hs1, hs0[c0]hs1, ∃(hs2 ∈ c2,(hs0 ∈ hs2 ∧ hs1 ∈ hs2)))\n  el2v(hs0, hs1, (hs0[~(c2)]hs1 ↔ ∃(hs2 ∈ c2,(hs0 ∈ hs2 ∧ hs1 ∈ hs2))))\n  brcoels(hs2, hs0, universe, hs1, universe, c2)\n  bitr4d((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), ∃(hs2 ∈ c2,(hs0 ∈ hs2 ∧ hs1 ∈ hs2)), hs0[c0]hs1, ∃(hs2 ∈ c2,(hs0 ∈ hs2 ∧ hs0[c0]hs1)))\n  adantl(c0 ∈ c1, (EqvRel(c0)∧(dom(c0)/. c0)= c2), (∃(hs2 ∈ c2,(hs0 ∈ hs2 ∧ hs1 ∈ hs2))↔ ∃(hs2 ∈ c2,(hs0 ∈ hs2 ∧ hs0[c0]hs1))))\n  rexbidva(hs2, c2, (EqvRel(c0)∧(dom(c0)/. c0)= c2), (hs0 ∈ hs2 ∧ hs1 ∈ hs2), (hs0 ∈ hs2 ∧ hs0[c0]hs1))\n  pm5.32da(((EqvRel(c0)∧(dom(c0)/. c0)= c2)∧ hs2 ∈ c2), hs0 ∈ hs2, hs1 ∈ hs2, hs0[c0]hs1)\n  anassrs((EqvRel(c0)∧(dom(c0)/. c0)= c2), hs2 ∈ c2, hs0 ∈ hs2, (hs1 ∈ hs2 ↔ hs0[c0]hs1))\n  syl6bb(((EqvRel(c0)∧(dom(c0)/. c0)= c2)∧(hs2 ∈ c2 ∧ hs0 ∈ hs2)), hs1 ∈ hs2, hs0[c0]hs1, hs1 ∈[hs0]c0)\n  eleq2d(hs1, hs2, [hs0]c0, ((EqvRel(c0)∧(dom(c0)/. c0)= c2)∧(hs2 ∈ c2 ∧ hs0 ∈ hs2)))\n  syl3anc(((EqvRel(c0)∧(dom(c0)/. c0)= c2)∧(hs2 ∈ c2 ∧ hs0 ∈ hs2)), hs2 =[hs0]c0, EqvRel(c0), hs2 ∈(dom(c0)/. c0), hs0 ∈ hs2)\n  simpll(EqvRel(c0), (dom(c0)/. c0)= c2, (hs2 ∈ c2 ∧ hs0 ∈ hs2))\n  eleqtrrd(hs2, (dom(c0)/. c0), c2, ((EqvRel(c0)∧(dom(c0)/. c0)= c2)∧(hs2 ∈ c2 ∧ hs0 ∈ hs2)))\n  simprl((EqvRel(c0)∧(dom(c0)/. c0)= c2), hs2 ∈ c2, hs0 ∈ hs2)\n  simplr(EqvRel(c0), (dom(c0)/. c0)= c2, (hs2 ∈ c2 ∧ hs0 ∈ hs2))\n  simprr((EqvRel(c0)∧(dom(c0)/. c0)= c2), hs2 ∈ c2, hs0 ∈ hs2)\n  eqvrelqsel(c0, hs2, dom(c0), hs0)\n  el2v(hs0, hs1, (hs1 ∈[hs0]c0 ↔ hs0[c0]hs1))\n  elecALTV(hs0, universe, hs1, universe, c0)\n  syl6bbr((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), hs0[c0]hs1, ∃(hs2 ∈ c2,(hs0 ∈ hs2 ∧ hs0[c0]hs1)), (∃(hs2 ∈ c2, hs0 ∈ hs2)∧ hs0[c0]hs1))\n  pm4.71rd((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), hs0[c0]hs1, ∃(hs2 ∈ c2, hs0 ∈ hs2))\n  ex((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), hs0[c0]hs1, ∃(hs2 ∈ c2, hs0 ∈ hs2))\n  mpbid(((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2))∧ hs0[c0]hs1), ∃(hs2 ∈ c2, hs0 ∈ hs2), hs0 ∈ dom(c0))\n  adantll(c0 ∈ c1, (EqvRel(c0)∧(dom(c0)/. c0)= c2), hs0[c0]hs1, hs0 ∈ dom(c0))\n  eqvrelcl(hs0, c0, hs1, ((EqvRel(c0)∧(dom(c0)/. c0)= c2)∧ hs0[c0]hs1))\n  simpll(EqvRel(c0), (dom(c0)/. c0)= c2, hs0[c0]hs1)\n  simpr((EqvRel(c0)∧(dom(c0)/. c0)= c2), hs0[c0]hs1)\n  adantr((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), hs0[c0]hs1, (hs0 ∈ dom(c0)↔ ∃(hs2 ∈ c2, hs0 ∈ hs2)))\n  syl6bb((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), hs0 ∈ dom(c0), ∃(hs2 ∈ c2, hs0 ∈ hs2), hs0 ∈ ⋃ c2)\n  bitrd((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)), hs0 ∈ dom(c0), hs0 ∈ ⋃ c2, hs0 ∈ ran(c0))\n  eleq2d(hs0, dom(c0), ran(c0), (c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)))\n  ad2antrl(c0 ∈ c1, EqvRel(c0), (dom(c0)/. c0)= c2, dom(c0)= ran(c0))\n  eqvrelim(c0)\n  imp32(c0 ∈ c1, EqvRel(c0), (dom(c0)/. c0)= c2, (hs0 ∈ ran(c0)↔ hs0 ∈ ⋃ c2))\n  syl5(c0 ∈ c1, EqvRel(c0), ((dom(c0)/. c0)= c2 →(hs0 ∈ ran(c0)↔ hs0 ∈ ⋃ c2)), Rel(c0))\n  eqvrelrel(c0)\n  dmqseqim2(c0, c1, c2, hs0)\n  eluni2(hs2, hs0, c2)\n  r19.41v(hs2, c2, hs0 ∈ hs2, hs0[c0]hs1)\n  diff.hs0.s(hs1)\n  diff.hs0.c(~(c2))\n  diff.hs0.c(c0)\n  diff.hs1.c(~(c2))\n  diff.hs1.c(c0)\n  diff.hs0.w((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)))\n  diff.hs1.w((c0 ∈ c1 ∧(EqvRel(c0)∧(dom(c0)/. c0)= c2)))\n  diff.hs2.c(hs0)\n  diff.hs2.c(hs1)\n  diff.hs2.c(c2)\n  diff.hs2.w((EqvRel(c0)∧(dom(c0)/. c0)= c2))\n  diff.hs2.w(hs0[c0]hs1)\n}","parent":["ex","eqbrrdv","a1i","relcoels","ad2antrl","syl5bb","el2v","brcoels","bitr4d","adantl","rexbidva","pm5.32da","anassrs","syl6bb","eleq2d","syl3anc","simpll","eleqtrrd","simprl","simplr","simprr","eqvrelqsel","elecALTV","syl6bbr","pm4.71rd","mpbid","adantll","eqvrelcl","simpr","adantr","bitrd","eqvrelim","imp32","syl5","eqvrelrel","dmqseqim2","eluni2","r19.41v","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs0.w","diff.hs1.w","diff.hs2.c","diff.hs2.w"],"children":["erim"]},{"name":"erim","content":"Equivalence relation on its natural domain implies that the class of coelements on the domain is equal to the relation (this is the most convenient form of ~ prter3 and ~ erim2 ). (Contributed by Peter Mazsa, 7-Oct-2021.) (Revised by Peter Mazsa, 29-Dec-2021.)","origin":"thm erim(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wi(werALTV(c0, c2), wceq(ccoels(c2), c0)))\n} = {\n  syl5bi(wcel(c0, c1), werALTV(c0, c2), wceq(ccoels(c2), c0), wa(weqvrel(c0), wceq(cqs(cdm(c0), c0), c2)))\n  dferALTV2(c0, c2)\n  erim2(c0, c1, c2)\n}","pretty":"thm erim(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →(c0[ErALTV]c2 → ~(c2)= c0))\n} = {\n  syl5bi(c0 ∈ c1, c0[ErALTV]c2, ~(c2)= c0, (EqvRel(c0)∧(dom(c0)/. c0)= c2))\n  dferALTV2(c0, c2)\n  erim2(c0, c1, c2)\n}","parent":["syl5bi","dferALTV2","erim2"],"children":[]}]}