{"index":148,"title":"Special maps-to operations","content":"The following theorems are about maps-to operations (see ~ df-mpo ) where the domain of the second argument depends on the domain of the first argument, especially when the first argument is a pair and the base set of the second argument is the first component of the first argument, in short \"x-maps-to operations\". For labels, the abbreviations \"mpt2x\" are used (since \"x\" usually denotes the first argument). This is in line with the currently used conventions for such cases (see ~ cbvmpt2x , ~ ovmpt2x and ~ fmpt2x ). However, we are in the process of renaming to use the abbreviation \"mpo\" instead of \"mpt2\" (see ~ conventions-labels ). As this proposal is realized, the labels in the following should also be adapted. If the first argument is an ordered pair, as in the following, the abbreviation is extended to \"mpt2xop\", and the maps-to operations are called \"x-op maps-to operations\" for short.","blocks":[{"name":"opeliunxp2f","content":"Membership in a union of Cartesian products, using bound-variable hypothesis for ` E ` instead of distinct variable conditions as in ~ opeliunxp2 . (Contributed by AV, 25-Oct-2020.)","origin":"thm opeliunxp2f(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  |- wb(wcel(cop(c0, c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wa(wcel(c0, c2), wcel(c1, c4)))\n  -| wnfc(s0, c4)\n  -| wi(wceq(cv(s0), c0), wceq(c3, c4))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  pm5.21nii(wcel(cop(c0, c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wa(wcel(c0, c2), wcel(c1, c4)), wcel(c0, universe))\n  sylbir(wcel(cop(c0, c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wcel(c0, universe), wbr(c0, ciun(s0, c2, cxp(csn(cv(s0)), c3)), c1))\n  df-br(c0, ciun(s0, c2, cxp(csn(cv(s0)), c3)), c1)\n  brrelex1i(c0, ciun(s0, c2, cxp(csn(cv(s0)), c3)), c1)\n  mpbir(wrel(ciun(s0, c2, cxp(csn(cv(s0)), c3))), wral(s0, c2, wrel(cxp(csn(cv(s0)), c3))))\n  rgenw(s0, c2, wrel(cxp(csn(cv(s0)), c3)))\n  relxp(csn(cv(s0)), c3)\n  reliun(s0, c2, cxp(csn(cv(s0)), c3))\n  adantr(wcel(c0, c2), wcel(c1, c4), wcel(c0, universe))\n  elex(c0, c2)\n  vtoclg1f(s0, c0, universe, wb(wcel(cop(c0, c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wa(wcel(c0, c2), wcel(c1, c4))), wb(wcel(cop(cv(s0), c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wa(wcel(cv(s0), c2), wcel(c1, c3))))\n  nfbi(s0, wcel(cop(c0, c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wa(wcel(c0, c2), wcel(c1, c4)))\n  nfel2(s0, cop(c0, c1), ciun(s0, c2, cxp(csn(cv(s0)), c3)))\n  nfiu1(s0, c2, cxp(csn(cv(s0)), c3))\n  nfan(s0, wcel(c0, c2), wcel(c1, c4))\n  nfv(s0, wcel(c0, c2))\n  nfel2(s0, c1, c4)\n  bibi12d(wceq(cv(s0), c0), wcel(cop(cv(s0), c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wa(wcel(cv(s0), c2), wcel(c1, c3)), wcel(cop(c0, c1), ciun(s0, c2, cxp(csn(cv(s0)), c3))), wa(wcel(c0, c2), wcel(c1, c4)))\n  eleq1d(cop(cv(s0), c1), ciun(s0, c2, cxp(csn(cv(s0)), c3)), cop(c0, c1), wceq(cv(s0), c0))\n  opeq1(cv(s0), c0, c1)\n  anbi12d(wceq(cv(s0), c0), wcel(cv(s0), c2), wcel(c1, c3), wcel(c0, c2), wcel(c1, c4))\n  eleq1(cv(s0), c0, c2)\n  eleq2d(c1, c3, c4, wceq(cv(s0), c0))\n  opeliunxp(s0, c1, c2, c3)\n  diff.cop.s(s0, c0, c1)\n  diff.wcel.s(s0, c0, c2)\n}","pretty":"thm opeliunxp2f(setvar s0, class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ (< c0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3))‚Üî(c0 ‚àà c2 ‚àß c1 ‚àà c4))\n  ‚ä£ F/(s0, c4)\n  ‚ä£ (s0 = c0 ‚Üí c3 = c4)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  pm5.21nii(< c0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), (c0 ‚àà c2 ‚àß c1 ‚àà c4), c0 ‚àà ùïå)\n  sylbir(< c0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), c0 ‚àà ùïå, c0[‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3))]c1)\n  df-br(c0, ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), c1)\n  brrelex1i(c0, ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), c1)\n  mpbir(Rel(‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3))), ‚àÄ(s0 ‚àà c2, Rel(({ s0 } √ó c3))))\n  rgenw(s0, c2, Rel(({ s0 } √ó c3)))\n  relxp({ s0 }, c3)\n  reliun(s0, c2, ({ s0 } √ó c3))\n  adantr(c0 ‚àà c2, c1 ‚àà c4, c0 ‚àà ùïå)\n  elex(c0, c2)\n  vtoclg1f(s0, c0, universe, (< c0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3))‚Üî(c0 ‚àà c2 ‚àß c1 ‚àà c4)), (< s0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3))‚Üî(s0 ‚àà c2 ‚àß c1 ‚àà c3)))\n  nfbi(s0, < c0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), (c0 ‚àà c2 ‚àß c1 ‚àà c4))\n  nfel2(s0, < c0, c1 >, ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)))\n  nfiu1(s0, c2, ({ s0 } √ó c3))\n  nfan(s0, c0 ‚àà c2, c1 ‚àà c4)\n  nfv(s0, c0 ‚àà c2)\n  nfel2(s0, c1, c4)\n  bibi12d(s0 = c0, < s0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), (s0 ‚àà c2 ‚àß c1 ‚àà c3), < c0, c1 > ‚àà ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), (c0 ‚àà c2 ‚àß c1 ‚àà c4))\n  eleq1d(< s0, c1 >, ‚ãÉ(s0 ‚àà c2,({ s0 } √ó c3)), < c0, c1 >, s0 = c0)\n  opeq1(s0, c0, c1)\n  anbi12d(s0 = c0, s0 ‚àà c2, c1 ‚àà c3, c0 ‚àà c2, c1 ‚àà c4)\n  eleq1(s0, c0, c2)\n  eleq2d(c1, c3, c4, s0 = c0)\n  opeliunxp(s0, c1, c2, c3)\n  diff.cop.s(s0, c0, c1)\n  diff.wcel.s(s0, c0, c2)\n}","parent":["pm5.21nii","sylbir","df-br","brrelex1i","mpbir","rgenw","relxp","reliun","adantr","elex","vtoclg1f","nfbi","nfel2","nfiu1","nfan","nfv","bibi12d","eleq1d","opeq1","anbi12d","eleq1","eleq2d","opeliunxp","diff.cop.s","diff.wcel.s"],"children":["mpt2xeldm","fsumcom2","fprodcom2"]},{"name":"mpt2xeldm","content":"If there is an element of the value of an operation given by a maps-to rule, then the first argument is an element of the first component of the domain and the second argument is an element of the second component of the domain depending on the first argument. (Contributed by AV, 25-Oct-2020.)","origin":"thm mpt2xeldm(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wcel(c0, co(c1, c2, c3)), wa(wcel(c1, c4), wcel(c3, csb(s0, c1, c5))))\n  -| wceq(c2, cmpo(s0, s1, c4, c5, c6))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n  -| diffsc(s1, c4)\n  -| diffsc(s1, c5)\n} = {\n  sylib(wcel(c0, co(c1, c2, c3)), wa(wcel(c1, c4), wcel(c3, csb(s0, c1, c5))), wcel(cop(c1, c3), ciun(s0, c4, cxp(csn(cv(s0)), c5))))\n  sseldi(cop(c1, c3), ciun(s0, c4, cxp(csn(cv(s0)), c5)), cdm(c2), wcel(c0, co(c1, c2, c3)))\n  dmmpt2ssx(s0, s1, c2, c4, c5, c6)\n  eleq2s(c0, co(c1, c2, c3), cfv(c2, cop(c1, c3)), wcel(cop(c1, c3), cdm(c2)))\n  elfvdm(c0, c2, cop(c1, c3))\n  df-ov(c1, c2, c3)\n  opeliunxp2f(s0, c1, c3, c4, c5, csb(s0, c1, c5))\n  nfcsb1v(s0, c1, c5)\n  csbeq1a(s0, c1, c5)\n}","pretty":"thm mpt2xeldm(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ‚ä¢ (c0 ‚àà(c1[c2]c3)‚Üí(c1 ‚àà c4 ‚àß c3 ‚àà[c1 / s0]c5))\n  ‚ä£ c2 =(s0 ‚àà c4, s1 ‚àà c5 ‚Ü¶ c6)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s0, c4)\n  ‚ä£ d(s1, c4)\n  ‚ä£ d(s1, c5)\n} = {\n  sylib(c0 ‚àà(c1[c2]c3), (c1 ‚àà c4 ‚àß c3 ‚àà[c1 / s0]c5), < c1, c3 > ‚àà ‚ãÉ(s0 ‚àà c4,({ s0 } √ó c5)))\n  sseldi(< c1, c3 >, ‚ãÉ(s0 ‚àà c4,({ s0 } √ó c5)), dom(c2), c0 ‚àà(c1[c2]c3))\n  dmmpt2ssx(s0, s1, c2, c4, c5, c6)\n  eleq2s(c0, (c1[c2]c3), (c2 ` < c1, c3 >), < c1, c3 > ‚àà dom(c2))\n  elfvdm(c0, c2, < c1, c3 >)\n  df-ov(c1, c2, c3)\n  opeliunxp2f(s0, c1, c3, c4, c5, [c1 / s0]c5)\n  nfcsb1v(s0, c1, c5)\n  csbeq1a(s0, c1, c5)\n}","parent":["sylib","sseldi","dmmpt2ssx","eleq2s","elfvdm","df-ov","opeliunxp2f","nfcsb1v","csbeq1a"],"children":["mpt2xneldm","nbgrcl"]},{"name":"mpt2xneldm","content":"If the first argument of an operation given by a maps-to rule is not an element of the first component of the domain or the second argument is not an element of the second component of the domain depending on the first argument, then the value of the operation is the empty set. (Contributed by AV, 25-Oct-2020.)","origin":"thm mpt2xneldm(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wo(wnel(c0, c1), wnel(c2, csb(s0, c0, c3))), wceq(co(c0, c4, c2), emptycls))\n  -| wceq(c4, cmpo(s0, s1, c1, c3, c5))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c3)\n} = {\n  sylbi(wo(wnel(c0, c1), wnel(c2, csb(s0, c0, c3))), wceq(co(c0, c4, c2), emptycls), wn(wa(wcel(c0, c1), wcel(c2, csb(s0, c0, c3)))))\n  bitr4i(wo(wnel(c0, c1), wnel(c2, csb(s0, c0, c3))), wn(wa(wcel(c0, c1), wcel(c2, csb(s0, c0, c3)))), wo(wn(wcel(c0, c1)), wn(wcel(c2, csb(s0, c0, c3)))))\n  orbi12i(wnel(c0, c1), wnel(c2, csb(s0, c0, c3)), wn(wcel(c0, c1)), wn(wcel(c2, csb(s0, c0, c3))))\n  df-nel(c0, c1)\n  df-nel(c2, csb(s0, c0, c3))\n  ianor(wcel(c0, c1), wcel(c2, csb(s0, c0, c3)))\n  con1i(wa(wcel(c0, c1), wcel(c2, csb(s0, c0, c3))), wceq(co(c0, c4, c2), emptycls))\n  sylbi(wn(wceq(co(c0, c4, c2), emptycls)), wa(wcel(c0, c1), wcel(c2, csb(s0, c0, c3))), wex(hs0, wcel(cv(hs0), co(c0, c4, c2))))\n  neq0(hs0, co(c0, c4, c2))\n  exlimiv(hs0, wcel(cv(hs0), co(c0, c4, c2)), wa(wcel(c0, c1), wcel(c2, csb(s0, c0, c3))))\n  mpt2xeldm(s0, s1, cv(hs0), c0, c4, c2, c1, c3, c5)\n  diff.hs0.c(co(c0, c4, c2))\n  diff.hs0.w(wa(wcel(c0, c1), wcel(c2, csb(s0, c0, c3))))\n}","pretty":"thm mpt2xneldm(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5) {\n  ‚ä¢ ((c0 ‚àâ c1 ‚à® c2 ‚àâ[c0 / s0]c3)‚Üí(c0[c4]c2)= ‚àÖ)\n  ‚ä£ c4 =(s0 ‚àà c1, s1 ‚àà c3 ‚Ü¶ c5)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s1, c3)\n} = {\n  sylbi((c0 ‚àâ c1 ‚à® c2 ‚àâ[c0 / s0]c3), (c0[c4]c2)= ‚àÖ, ¬¨(c0 ‚àà c1 ‚àß c2 ‚àà[c0 / s0]c3))\n  bitr4i((c0 ‚àâ c1 ‚à® c2 ‚àâ[c0 / s0]c3), ¬¨(c0 ‚àà c1 ‚àß c2 ‚àà[c0 / s0]c3), (¬¨ c0 ‚àà c1 ‚à® ¬¨ c2 ‚àà[c0 / s0]c3))\n  orbi12i(c0 ‚àâ c1, c2 ‚àâ[c0 / s0]c3, ¬¨ c0 ‚àà c1, ¬¨ c2 ‚àà[c0 / s0]c3)\n  df-nel(c0, c1)\n  df-nel(c2, [c0 / s0]c3)\n  ianor(c0 ‚àà c1, c2 ‚àà[c0 / s0]c3)\n  con1i((c0 ‚àà c1 ‚àß c2 ‚àà[c0 / s0]c3), (c0[c4]c2)= ‚àÖ)\n  sylbi(¬¨(c0[c4]c2)= ‚àÖ, (c0 ‚àà c1 ‚àß c2 ‚àà[c0 / s0]c3), ‚àÉ(hs0, hs0 ‚àà(c0[c4]c2)))\n  neq0(hs0, (c0[c4]c2))\n  exlimiv(hs0, hs0 ‚àà(c0[c4]c2), (c0 ‚àà c1 ‚àß c2 ‚àà[c0 / s0]c3))\n  mpt2xeldm(s0, s1, hs0, c0, c4, c2, c1, c3, c5)\n  diff.hs0.c((c0[c4]c2))\n  diff.hs0.w((c0 ‚àà c1 ‚àß c2 ‚àà[c0 / s0]c3))\n}","parent":["sylbi","bitr4i","orbi12i","df-nel","ianor","con1i","neq0","exlimiv","mpt2xeldm","diff.hs0.c","diff.hs0.w"],"children":["nbgrnvtx0"]},{"name":"mpt2xopn0yelv","content":"If there is an element of the value of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument, then the second argument is an element of the first component of the first argument. (Contributed by Alexander van der Vekens, 10-Oct-2017.)","origin":"thm mpt2xopn0yelv(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wi(wcel(c4, co(cop(c0, c2), c5, c6)), wcel(c6, c0)))\n  -| wceq(c5, cmpo(s0, s1, universe, cfv(c1st, cv(s0)), c7))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c6)\n} = {\n  syl5ib(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, co(cop(c0, c2), c5, c6)), wcel(c6, c0), wcel(c6, cfv(c1st, cop(c0, c2))))\n  syl(wcel(c4, co(cop(c0, c2), c5, c6)), wcel(c6, cfv(c1st, cop(c0, c2))), wcel(cop(cop(c0, c2), c6), ciun(s0, universe, cxp(csn(cv(s0)), cfv(c1st, cv(s0))))))\n  sseldi(cop(cop(c0, c2), c6), ciun(s0, universe, cxp(csn(cv(s0)), cfv(c1st, cv(s0)))), cdm(c5), wcel(c4, co(cop(c0, c2), c5, c6)))\n  dmmpt2ssx(s0, s1, c5, universe, cfv(c1st, cv(s0)), c7)\n  eleq2s(c4, co(cop(c0, c2), c5, c6), cfv(c5, cop(cop(c0, c2), c6)), wcel(cop(cop(c0, c2), c6), cdm(c5)))\n  elfvdm(c4, c5, cop(cop(c0, c2), c6))\n  df-ov(cop(c0, c2), c5, c6)\n  simprbi(wcel(cop(cop(c0, c2), c6), ciun(s0, universe, cxp(csn(cv(s0)), cfv(c1st, cv(s0))))), wcel(c6, cfv(c1st, cop(c0, c2))), wcel(cop(c0, c2), universe))\n  opeliunxp2(s0, cop(c0, c2), c6, universe, cfv(c1st, cv(s0)), cfv(c1st, cop(c0, c2)))\n  fveq2(cv(s0), cop(c0, c2), c1st)\n  eleq2d(c6, cfv(c1st, cop(c0, c2)), c0, wa(wcel(c0, c1), wcel(c2, c3)))\n  op1stg(c0, c1, c2, c3)\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n  diff.cfv.s(s1, c1st, cv(s0))\n  diff.c1st.s(s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cfv.s(s0, c1st, cop(c0, c2))\n  diff.c1st.s(s0)\n  diff.cop.s(s0, c0, c2)\n}","pretty":"thm mpt2xopn0yelv(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c4 ‚àà(< c0, c2 >[c5]c6)‚Üí c6 ‚àà c0))\n  ‚ä£ c5 =(s0 ‚àà ùïå, s1 ‚àà(1st ` s0)‚Ü¶ c7)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c6)\n} = {\n  syl5ib((c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà(< c0, c2 >[c5]c6), c6 ‚àà c0, c6 ‚àà(1st ` < c0, c2 >))\n  syl(c4 ‚àà(< c0, c2 >[c5]c6), c6 ‚àà(1st ` < c0, c2 >), < < c0, c2 >, c6 > ‚àà ‚ãÉ(s0 ‚àà ùïå,({ s0 } √ó(1st ` s0))))\n  sseldi(< < c0, c2 >, c6 >, ‚ãÉ(s0 ‚àà ùïå,({ s0 } √ó(1st ` s0))), dom(c5), c4 ‚àà(< c0, c2 >[c5]c6))\n  dmmpt2ssx(s0, s1, c5, universe, (1st ` s0), c7)\n  eleq2s(c4, (< c0, c2 >[c5]c6), (c5 ` < < c0, c2 >, c6 >), < < c0, c2 >, c6 > ‚àà dom(c5))\n  elfvdm(c4, c5, < < c0, c2 >, c6 >)\n  df-ov(< c0, c2 >, c5, c6)\n  simprbi(< < c0, c2 >, c6 > ‚àà ‚ãÉ(s0 ‚àà ùïå,({ s0 } √ó(1st ` s0))), c6 ‚àà(1st ` < c0, c2 >), < c0, c2 > ‚àà ùïå)\n  opeliunxp2(s0, < c0, c2 >, c6, universe, (1st ` s0), (1st ` < c0, c2 >))\n  fveq2(s0, < c0, c2 >, c1st)\n  eleq2d(c6, (1st ` < c0, c2 >), c0, (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  op1stg(c0, c1, c2, c3)\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n  diff.cfv.s(s1, c1st, s0)\n  diff.c1st.s(s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cfv.s(s0, c1st, < c0, c2 >)\n  diff.c1st.s(s0)\n  diff.cop.s(s0, c0, c2)\n}","parent":["syl5ib","syl","sseldi","dmmpt2ssx","eleq2s","elfvdm","df-ov","simprbi","opeliunxp2","fveq2","eleq2d","op1stg","diff.universe.s","diff.cfv.s","diff.c1st.s","diff.cv.s","diffss.ex","diff.cop.s"],"children":["mpt2xopynvov0g","mpt2xopovel"]},{"name":"mpt2xopynvov0g","content":"If the second argument of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument is not element of the first component of the first argument, then the value of the operation is the empty set. (Contributed by Alexander van der Vekens, 10-Oct-2017.)","origin":"thm mpt2xopynvov0g(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wa(wcel(c0, c1), wcel(c2, c3)), wnel(c4, c0)), wceq(co(cop(c0, c2), c5, c4), emptycls))\n  -| wceq(c5, cmpo(s0, s1, universe, cfv(c1st, cv(s0)), c6))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c4)\n} = {\n  imp(wa(wcel(c0, c1), wcel(c2, c3)), wnel(c4, c0), wceq(co(cop(c0, c2), c5, c4), emptycls))\n  con4d(wa(wcel(c0, c1), wcel(c2, c3)), wnel(c4, c0), wceq(co(cop(c0, c2), c5, c4), emptycls))\n  syl5bi(wa(wcel(c0, c1), wcel(c2, c3)), wn(wceq(co(cop(c0, c2), c5, c4), emptycls)), wn(wnel(c4, c0)), wex(hs0, wcel(cv(hs0), co(cop(c0, c2), c5, c4))))\n  neq0(hs0, co(cop(c0, c2), c5, c4))\n  exlimdv(hs0, wa(wcel(c0, c1), wcel(c2, c3)), wcel(cv(hs0), co(cop(c0, c2), c5, c4)), wn(wnel(c4, c0)))\n  syl6ibr(wa(wcel(c0, c1), wcel(c2, c3)), wcel(cv(hs0), co(cop(c0, c2), c5, c4)), wn(wnel(c4, c0)), wcel(c4, c0))\n  mpt2xopn0yelv(s0, s1, c0, c1, c2, c3, cv(hs0), c5, c4, c6)\n  nnel(c4, c0)\n  diff.hs0.c(co(cop(c0, c2), c5, c4))\n  diff.hs0.w(wa(wcel(c0, c1), wcel(c2, c3)))\n  diff.hs0.w(wn(wnel(c4, c0)))\n}","pretty":"thm mpt2xopynvov0g(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ‚ä¢ (((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àâ c0)‚Üí(< c0, c2 >[c5]c4)= ‚àÖ)\n  ‚ä£ c5 =(s0 ‚àà ùïå, s1 ‚àà(1st ` s0)‚Ü¶ c6)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c4)\n} = {\n  imp((c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àâ c0, (< c0, c2 >[c5]c4)= ‚àÖ)\n  con4d((c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àâ c0, (< c0, c2 >[c5]c4)= ‚àÖ)\n  syl5bi((c0 ‚àà c1 ‚àß c2 ‚àà c3), ¬¨(< c0, c2 >[c5]c4)= ‚àÖ, ¬¨ c4 ‚àâ c0, ‚àÉ(hs0, hs0 ‚àà(< c0, c2 >[c5]c4)))\n  neq0(hs0, (< c0, c2 >[c5]c4))\n  exlimdv(hs0, (c0 ‚àà c1 ‚àß c2 ‚àà c3), hs0 ‚àà(< c0, c2 >[c5]c4), ¬¨ c4 ‚àâ c0)\n  syl6ibr((c0 ‚àà c1 ‚àß c2 ‚àà c3), hs0 ‚àà(< c0, c2 >[c5]c4), ¬¨ c4 ‚àâ c0, c4 ‚àà c0)\n  mpt2xopn0yelv(s0, s1, c0, c1, c2, c3, hs0, c5, c4, c6)\n  nnel(c4, c0)\n  diff.hs0.c((< c0, c2 >[c5]c4))\n  diff.hs0.w((c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  diff.hs0.w(¬¨ c4 ‚àâ c0)\n}","parent":["imp","con4d","syl5bi","neq0","exlimdv","syl6ibr","mpt2xopn0yelv","nnel","diff.hs0.c","diff.hs0.w"],"children":["mpt2xopynvov0"]},{"name":"mpt2xopxnop0","content":"If the first argument of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument, is not an ordered pair, then the value of the operation is the empty set. (Contributed by Alexander van der Vekens, 10-Oct-2017.)","origin":"thm mpt2xopxnop0(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  |- wi(wn(wcel(c0, cxp(universe, universe))), wceq(co(c0, c1, c2), emptycls))\n  -| wceq(c1, cmpo(s0, s1, universe, cfv(c1st, cv(s0)), c3))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  con1i(wcel(c0, cxp(universe, universe)), wceq(co(c0, c1, c2), emptycls))\n  sylbi(wn(wceq(co(c0, c1, c2), emptycls)), wcel(c0, cxp(universe, universe)), wex(s0, wcel(cv(s0), co(c0, c1, c2))))\n  neq0(s0, co(c0, c1, c2))\n  exlimiv(s0, wcel(cv(s0), co(c0, c1, c2)), wcel(c0, cxp(universe, universe)))\n  syl(wcel(cv(s0), co(c0, c1, c2)), wcel(c0, cxp(universe, universe)), wcel(cop(c0, c2), ciun(s0, universe, cxp(csn(cv(s0)), cfv(c1st, cv(s0))))))\n  sseldi(cop(c0, c2), ciun(s0, universe, cxp(csn(cv(s0)), cfv(c1st, cv(s0)))), cdm(c1), wcel(cv(s0), co(c0, c1, c2)))\n  dmmpt2ssx(s0, s1, c1, universe, cfv(c1st, cv(s0)), c3)\n  eleq2s(cv(s0), co(c0, c1, c2), cfv(c1, cop(c0, c2)), wcel(cop(c0, c2), cdm(c1)))\n  elfvdm(cv(s0), c1, cop(c0, c2))\n  df-ov(c0, c1, c2)\n  sylbi(wcel(cop(c0, c2), ciun(s0, universe, cxp(csn(cv(s0)), cfv(c1st, cv(s0))))), wcel(c0, cxp(universe, universe)), wa(wcel(c0, universe), wcel(c2, cfv(c1st, c0))))\n  opeliunxp2(s0, c0, c2, universe, cfv(c1st, cv(s0)), cfv(c1st, c0))\n  fveq2(cv(s0), c0, c1st)\n  impcom(wcel(c0, universe), wcel(c2, cfv(c1st, c0)), wcel(c0, cxp(universe, universe)))\n  eleq2s(c2, cfv(c1st, c0), cuni(cdm(csn(c0))), wi(wcel(c0, universe), wcel(c0, cxp(universe, universe))))\n  sylbi(wcel(c2, cuni(cdm(csn(c0)))), wi(wcel(c0, universe), wcel(c0, cxp(universe, universe))), wex(hs0, wa(wcel(c2, cv(hs0)), wcel(cv(hs0), cdm(csn(c0))))))\n  eluni(hs0, c2, cdm(csn(c0)))\n  exlimiv(hs0, wa(wcel(c2, cv(hs0)), wcel(cv(hs0), cdm(csn(c0)))), wi(wcel(c0, universe), wcel(c0, cxp(universe, universe))))\n  ex(wa(wcel(c2, cv(hs0)), wcel(cv(hs0), cdm(csn(c0)))), wcel(c0, universe), wcel(c0, cxp(universe, universe)))\n  sylibr(wa(wa(wcel(c2, cv(hs0)), wcel(cv(hs0), cdm(csn(c0)))), wcel(c0, universe)), wcel(c0, cxp(universe, universe)), wne(cdm(csn(c0)), emptycls))\n  ad2antlr(wcel(c2, cv(hs0)), wcel(cv(hs0), cdm(csn(c0))), wcel(c0, universe), wne(cdm(csn(c0)), emptycls))\n  ne0i(cv(hs0), cdm(csn(c0)))\n  dmsnn0(c0)\n  1stval(c0)\n  diff.co.s(s0, c0, c1, c2)\n  diff.wcel.s(s0, c0, cxp(universe, universe))\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n  diff.cfv.s(s1, c1st, cv(s0))\n  diff.c1st.s(s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cfv.s(s0, c1st, c0)\n  diff.c1st.s(s0)\n  diff.hs0.c(c2)\n  diff.hs0.c(cdm(csn(c0)))\n  diff.hs0.w(wi(wcel(c0, universe), wcel(c0, cxp(universe, universe))))\n}","pretty":"thm mpt2xopxnop0(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  ‚ä¢ (¬¨ c0 ‚àà(ùïå √ó ùïå)‚Üí(c0[c1]c2)= ‚àÖ)\n  ‚ä£ c1 =(s0 ‚àà ùïå, s1 ‚àà(1st ` s0)‚Ü¶ c3)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  con1i(c0 ‚àà(ùïå √ó ùïå), (c0[c1]c2)= ‚àÖ)\n  sylbi(¬¨(c0[c1]c2)= ‚àÖ, c0 ‚àà(ùïå √ó ùïå), ‚àÉ(s0, s0 ‚àà(c0[c1]c2)))\n  neq0(s0, (c0[c1]c2))\n  exlimiv(s0, s0 ‚àà(c0[c1]c2), c0 ‚àà(ùïå √ó ùïå))\n  syl(s0 ‚àà(c0[c1]c2), c0 ‚àà(ùïå √ó ùïå), < c0, c2 > ‚àà ‚ãÉ(s0 ‚àà ùïå,({ s0 } √ó(1st ` s0))))\n  sseldi(< c0, c2 >, ‚ãÉ(s0 ‚àà ùïå,({ s0 } √ó(1st ` s0))), dom(c1), s0 ‚àà(c0[c1]c2))\n  dmmpt2ssx(s0, s1, c1, universe, (1st ` s0), c3)\n  eleq2s(s0, (c0[c1]c2), (c1 ` < c0, c2 >), < c0, c2 > ‚àà dom(c1))\n  elfvdm(s0, c1, < c0, c2 >)\n  df-ov(c0, c1, c2)\n  sylbi(< c0, c2 > ‚àà ‚ãÉ(s0 ‚àà ùïå,({ s0 } √ó(1st ` s0))), c0 ‚àà(ùïå √ó ùïå), (c0 ‚àà ùïå ‚àß c2 ‚àà(1st ` c0)))\n  opeliunxp2(s0, c0, c2, universe, (1st ` s0), (1st ` c0))\n  fveq2(s0, c0, c1st)\n  impcom(c0 ‚àà ùïå, c2 ‚àà(1st ` c0), c0 ‚àà(ùïå √ó ùïå))\n  eleq2s(c2, (1st ` c0), ‚ãÉ dom({ c0 }), (c0 ‚àà ùïå ‚Üí c0 ‚àà(ùïå √ó ùïå)))\n  sylbi(c2 ‚àà ‚ãÉ dom({ c0 }), (c0 ‚àà ùïå ‚Üí c0 ‚àà(ùïå √ó ùïå)), ‚àÉ(hs0,(c2 ‚àà hs0 ‚àß hs0 ‚àà dom({ c0 }))))\n  eluni(hs0, c2, dom({ c0 }))\n  exlimiv(hs0, (c2 ‚àà hs0 ‚àß hs0 ‚àà dom({ c0 })), (c0 ‚àà ùïå ‚Üí c0 ‚àà(ùïå √ó ùïå)))\n  ex((c2 ‚àà hs0 ‚àß hs0 ‚àà dom({ c0 })), c0 ‚àà ùïå, c0 ‚àà(ùïå √ó ùïå))\n  sylibr(((c2 ‚àà hs0 ‚àß hs0 ‚àà dom({ c0 }))‚àß c0 ‚àà ùïå), c0 ‚àà(ùïå √ó ùïå), dom({ c0 })‚â† ‚àÖ)\n  ad2antlr(c2 ‚àà hs0, hs0 ‚àà dom({ c0 }), c0 ‚àà ùïå, dom({ c0 })‚â† ‚àÖ)\n  ne0i(hs0, dom({ c0 }))\n  dmsnn0(c0)\n  1stval(c0)\n  diff.co.s(s0, c0, c1, c2)\n  diff.wcel.s(s0, c0, (ùïå √ó ùïå))\n  diff.cxp.s(s0, universe, universe)\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n  diff.cfv.s(s1, c1st, s0)\n  diff.c1st.s(s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cfv.s(s0, c1st, c0)\n  diff.c1st.s(s0)\n  diff.hs0.c(c2)\n  diff.hs0.c(dom({ c0 }))\n  diff.hs0.w((c0 ‚àà ùïå ‚Üí c0 ‚àà(ùïå √ó ùïå)))\n}","parent":["con1i","sylbi","neq0","exlimiv","syl","sseldi","dmmpt2ssx","eleq2s","elfvdm","df-ov","opeliunxp2","fveq2","impcom","eluni","ex","sylibr","ad2antlr","ne0i","dmsnn0","1stval","diff.co.s","diff.wcel.s","diff.cxp.s","diff.universe.s","diff.cfv.s","diff.c1st.s","diff.cv.s","diffss.ex","diff.hs0.c","diff.hs0.w"],"children":["mpt2xopx0ov0","mpt2xopxprcov0"]},{"name":"mpt2xopx0ov0","content":"If the first argument of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument, is the empty set, then the value of the operation is the empty set. (Contributed by Alexander van der Vekens, 10-Oct-2017.)","origin":"thm mpt2xopx0ov0(setvar s0, setvar s1, class c0, class c1, class c2) {\n  |- wceq(co(emptycls, c0, c1), emptycls)\n  -| wceq(c0, cmpo(s0, s1, universe, cfv(c1st, cv(s0)), c2))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  ax-mp(wceq(co(emptycls, c0, c1), emptycls), wn(wcel(emptycls, cxp(universe, universe))))\n  0nelxp(universe, universe)\n  mpt2xopxnop0(s0, s1, emptycls, c0, c1, c2)\n  diff.emptycls.s(s0)\n}","pretty":"thm mpt2xopx0ov0(setvar s0, setvar s1, class c0, class c1, class c2) {\n  ‚ä¢ (‚àÖ[c0]c1)= ‚àÖ\n  ‚ä£ c0 =(s0 ‚àà ùïå, s1 ‚àà(1st ` s0)‚Ü¶ c2)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n} = {\n  ax-mp((‚àÖ[c0]c1)= ‚àÖ, ¬¨ ‚àÖ ‚àà(ùïå √ó ùïå))\n  0nelxp(universe, universe)\n  mpt2xopxnop0(s0, s1, emptycls, c0, c1, c2)\n  diff.emptycls.s(s0)\n}","parent":["ax-mp","0nelxp","mpt2xopxnop0","diff.emptycls.s"],"children":[]},{"name":"mpt2xopxprcov0","content":"If the components of the first argument of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument, are not sets, then the value of the operation is the empty set. (Contributed by Alexander van der Vekens, 10-Oct-2017.)","origin":"thm mpt2xopxprcov0(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wn(wa(wcel(c0, universe), wcel(c1, universe))), wceq(co(cop(c0, c1), c2, c3), emptycls))\n  -| wceq(c2, cmpo(s0, s1, universe, cfv(c1st, cv(s0)), c4))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  sylnbir(wa(wcel(c0, universe), wcel(c1, universe)), wceq(co(cop(c0, c1), c2, c3), emptycls), wcel(cop(c0, c1), cxp(universe, universe)))\n  opelxp(c0, c1, universe, universe)\n  mpt2xopxnop0(s0, s1, cop(c0, c1), c2, c3, c4)\n  diff.cop.s(s0, c0, c1)\n}","pretty":"thm mpt2xopxprcov0(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ (¬¨(c0 ‚àà ùïå ‚àß c1 ‚àà ùïå)‚Üí(< c0, c1 >[c2]c3)= ‚àÖ)\n  ‚ä£ c2 =(s0 ‚àà ùïå, s1 ‚àà(1st ` s0)‚Ü¶ c4)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n} = {\n  sylnbir((c0 ‚àà ùïå ‚àß c1 ‚àà ùïå), (< c0, c1 >[c2]c3)= ‚àÖ, < c0, c1 > ‚àà(ùïå √ó ùïå))\n  opelxp(c0, c1, universe, universe)\n  mpt2xopxnop0(s0, s1, < c0, c1 >, c2, c3, c4)\n  diff.cop.s(s0, c0, c1)\n}","parent":["sylnbir","opelxp","mpt2xopxnop0","diff.cop.s"],"children":["mpt2xopynvov0"]},{"name":"mpt2xopynvov0","content":"If the second argument of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument is not element of the first component of the first argument, then the value of the operation is the empty set. (Contributed by Alexander van der Vekens, 10-Oct-2017.)","origin":"thm mpt2xopynvov0(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wnel(c0, c1), wceq(co(cop(c1, c2), c3, c0), emptycls))\n  -| wceq(c3, cmpo(s0, s1, universe, cfv(c1st, cv(s0)), c4))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  pm2.61i(wi(wnel(c0, c1), wceq(co(cop(c1, c2), c3, c0), emptycls)), wa(wcel(c1, universe), wcel(c2, universe)))\n  ex(wa(wcel(c1, universe), wcel(c2, universe)), wnel(c0, c1), wceq(co(cop(c1, c2), c3, c0), emptycls))\n  mpt2xopynvov0g(s0, s1, c1, universe, c2, universe, c0, c3, c4)\n  a1d(wn(wa(wcel(c1, universe), wcel(c2, universe))), wnel(c0, c1), wceq(co(cop(c1, c2), c3, c0), emptycls))\n  mpt2xopxprcov0(s0, s1, c1, c2, c3, c0, c4)\n}","pretty":"thm mpt2xopynvov0(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ (c0 ‚àâ c1 ‚Üí(< c1, c2 >[c3]c0)= ‚àÖ)\n  ‚ä£ c3 =(s0 ‚àà ùïå, s1 ‚àà(1st ` s0)‚Ü¶ c4)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n} = {\n  pm2.61i((c0 ‚àâ c1 ‚Üí(< c1, c2 >[c3]c0)= ‚àÖ), (c1 ‚àà ùïå ‚àß c2 ‚àà ùïå))\n  ex((c1 ‚àà ùïå ‚àß c2 ‚àà ùïå), c0 ‚àâ c1, (< c1, c2 >[c3]c0)= ‚àÖ)\n  mpt2xopynvov0g(s0, s1, c1, universe, c2, universe, c0, c3, c4)\n  a1d(¬¨(c1 ‚àà ùïå ‚àß c2 ‚àà ùïå), c0 ‚àâ c1, (< c1, c2 >[c3]c0)= ‚àÖ)\n  mpt2xopxprcov0(s0, s1, c1, c2, c3, c0, c4)\n}","parent":["pm2.61i","ex","mpt2xopynvov0g","a1d","mpt2xopxprcov0"],"children":["mpt2xopoveqd"]},{"name":"mpt2xopoveq","content":"Value of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument. (Contributed by Alexander van der Vekens, 11-Oct-2017.)","origin":"thm mpt2xopoveq(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wceq(co(cop(c0, c2), c5, c4), crab(s0, c0, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0)))))\n  -| wceq(c5, cmpo(s1, s2, universe, cfv(c1st, cv(s1)), crab(s0, cfv(c1st, cv(s1)), w0)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n  -| diffsc(s1, c4)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n  -| diffsc(s2, c2)\n  -| diffsc(s2, c3)\n  -| diffsc(s2, c4)\n} = {\n  ovmpt2dxf(s1, s2, cop(c0, c2), c5, c4, crab(s0, c0, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0))), universe, cfv(c1st, cv(s1)), crab(s0, cfv(c1st, cv(s1)), w0), c0, universe, wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)))\n  a1i(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wceq(c5, cmpo(s1, s2, universe, cfv(c1st, cv(s1)), crab(s0, cfv(c1st, cv(s1)), w0))))\n  rabeqbidv(s0, cfv(c1st, cv(s1)), c0, wa(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wa(wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4))), w0, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0)))\n  adantrr(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4), wceq(cfv(c1st, cv(s1)), c0))\n  bitrd(wa(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wa(wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4))), w0, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0)), wsbc(s2, c4, w0))\n  adantl(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wa(wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4)), wb(w0, wsbc(s2, c4, w0)))\n  adantl(wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4), wb(w0, wsbc(s2, c4, w0)))\n  sbceq1a(s2, c4, w0)\n  adantl(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wa(wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4)), wb(wsbc(s2, c4, w0), wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0))))\n  adantr(wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4), wb(wsbc(s2, c4, w0), wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0))))\n  sbceq1a(s1, cop(c0, c2), wsbc(s2, c4, w0))\n  sylan9eqr(cfv(c1st, cv(s1)), c0, cfv(c1st, cop(c0, c2)), wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wceq(cv(s1), cop(c0, c2)))\n  fveq2(cv(s1), cop(c0, c2), c1st)\n  adantr(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0), wceq(cfv(c1st, cop(c0, c2)), c0))\n  op1stg(c0, c1, c2, c3)\n  a1i(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wcel(cop(c0, c2), universe))\n  opex(c0, c2)\n  simpr(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0))\n  ad2antrr(wcel(c0, c1), wcel(c2, c3), wcel(c4, c0), wcel(crab(s0, c0, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0))), universe))\n  rabexg(s0, c0, c1, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0)))\n  ax-mp(wnf(s1, wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0))), wceq(cv(hs0), cv(hs0)))\n  nfvd(s1, wceq(cv(hs0), cv(hs0)), wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)))\n  ax-mp(wnf(s2, wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0))), wceq(cv(hs0), cv(hs0)))\n  equid(hs0)\n  nfvd(s2, wceq(cv(hs0), cv(hs0)), wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)))\n  nfcv(s1, c4)\n  nfrab(s1, s0, c0, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0)))\n  nfsbc1v(s1, cop(c0, c2), wsbc(s2, c4, w0))\n  nfcv(s1, c0)\n  nfrab(s2, s0, c0, wsbc(s1, cop(c0, c2), wsbc(s2, c4, w0)))\n  nfsbc(s2, s1, cop(c0, c2), wsbc(s2, c4, w0))\n  nfcv(s2, cop(c0, c2))\n  nfsbc1v(s2, c4, w0)\n  nfcv(s2, c0)\n  diff.cop.s(s1, c0, c2)\n  diff.cfv.s(s0, c1st, cv(s1))\n  diff.c1st.s(s0)\n  diff.wa.s(s0, wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0)), wa(wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4)))\n  diff.wa.s(s0, wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0))\n  diff.wa.s(s0, wcel(c0, c1), wcel(c2, c3))\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n  diff.wcel.s(s0, c4, c0)\n  diff.wa.s(s0, wceq(cv(s1), cop(c0, c2)), wceq(cv(s2), c4))\n  diff.wceq.s(s0, cv(s1), cop(c0, c2))\n  diff.cv.s(s0, s1)\n  diff.cop.s(s0, c0, c2)\n  diff.wceq.s(s0, cv(s2), c4)\n  diff.cv.s(s0, s2)\n  diff.wa.s(s1, wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0))\n  diff.wa.s(s1, wcel(c0, c1), wcel(c2, c3))\n  diff.wcel.s(s1, c0, c1)\n  diff.wcel.s(s1, c2, c3)\n  diff.wcel.s(s1, c4, c0)\n  diff.wa.s(s2, wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, c0))\n  diff.wa.s(s2, wcel(c0, c1), wcel(c2, c3))\n  diff.wcel.s(s2, c0, c1)\n  diff.wcel.s(s2, c2, c3)\n  diff.wcel.s(s2, c4, c0)\n  diff.cop.s(s2, c0, c2)\n}","pretty":"thm mpt2xopoveq(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0)‚Üí(< c0, c2 >[c5]c4)= { s0 ‚àà c0 |[< c0, c2 > / s1][c4 / s2]w0 })\n  ‚ä£ c5 =(s1 ‚àà ùïå, s2 ‚àà(1st ` s1)‚Ü¶ { s0 ‚àà(1st ` s1)| w0 })\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s0, c4)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s1, c2)\n  ‚ä£ d(s1, c3)\n  ‚ä£ d(s1, c4)\n  ‚ä£ d(s2, c0)\n  ‚ä£ d(s2, c1)\n  ‚ä£ d(s2, c2)\n  ‚ä£ d(s2, c3)\n  ‚ä£ d(s2, c4)\n} = {\n  ovmpt2dxf(s1, s2, < c0, c2 >, c5, c4, { s0 ‚àà c0 |[< c0, c2 > / s1][c4 / s2]w0 }, universe, (1st ` s1), { s0 ‚àà(1st ` s1)| w0 }, c0, universe, ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0))\n  a1i(((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0), c5 =(s1 ‚àà ùïå, s2 ‚àà(1st ` s1)‚Ü¶ { s0 ‚àà(1st ` s1)| w0 }))\n  rabeqbidv(s0, (1st ` s1), c0, (((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0)‚àß(s1 = < c0, c2 > ‚àß s2 = c4)), w0, [< c0, c2 > / s1][c4 / s2]w0)\n  adantrr(((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0), s1 = < c0, c2 >, s2 = c4, (1st ` s1)= c0)\n  bitrd((((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0)‚àß(s1 = < c0, c2 > ‚àß s2 = c4)), w0, [< c0, c2 > / s1][c4 / s2]w0, [c4 / s2]w0)\n  adantl(((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0), (s1 = < c0, c2 > ‚àß s2 = c4), (w0 ‚Üî[c4 / s2]w0))\n  adantl(s1 = < c0, c2 >, s2 = c4, (w0 ‚Üî[c4 / s2]w0))\n  sbceq1a(s2, c4, w0)\n  adantl(((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0), (s1 = < c0, c2 > ‚àß s2 = c4), ([c4 / s2]w0 ‚Üî[< c0, c2 > / s1][c4 / s2]w0))\n  adantr(s1 = < c0, c2 >, s2 = c4, ([c4 / s2]w0 ‚Üî[< c0, c2 > / s1][c4 / s2]w0))\n  sbceq1a(s1, < c0, c2 >, [c4 / s2]w0)\n  sylan9eqr((1st ` s1), c0, (1st ` < c0, c2 >), ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0), s1 = < c0, c2 >)\n  fveq2(s1, < c0, c2 >, c1st)\n  adantr((c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà c0, (1st ` < c0, c2 >)= c0)\n  op1stg(c0, c1, c2, c3)\n  a1i(((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0), < c0, c2 > ‚àà ùïå)\n  opex(c0, c2)\n  simpr((c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà c0)\n  ad2antrr(c0 ‚àà c1, c2 ‚àà c3, c4 ‚àà c0, { s0 ‚àà c0 |[< c0, c2 > / s1][c4 / s2]w0 } ‚àà ùïå)\n  rabexg(s0, c0, c1, [< c0, c2 > / s1][c4 / s2]w0)\n  ax-mp(F/(s1,((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0)), hs0 = hs0)\n  nfvd(s1, hs0 = hs0, ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0))\n  ax-mp(F/(s2,((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0)), hs0 = hs0)\n  equid(hs0)\n  nfvd(s2, hs0 = hs0, ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0))\n  nfcv(s1, c4)\n  nfrab(s1, s0, c0, [< c0, c2 > / s1][c4 / s2]w0)\n  nfsbc1v(s1, < c0, c2 >, [c4 / s2]w0)\n  nfcv(s1, c0)\n  nfrab(s2, s0, c0, [< c0, c2 > / s1][c4 / s2]w0)\n  nfsbc(s2, s1, < c0, c2 >, [c4 / s2]w0)\n  nfcv(s2, < c0, c2 >)\n  nfsbc1v(s2, c4, w0)\n  nfcv(s2, c0)\n  diff.cop.s(s1, c0, c2)\n  diff.cfv.s(s0, c1st, s1)\n  diff.c1st.s(s0)\n  diff.wa.s(s0, ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c4 ‚àà c0), (s1 = < c0, c2 > ‚àß s2 = c4))\n  diff.wa.s(s0, (c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà c0)\n  diff.wa.s(s0, c0 ‚àà c1, c2 ‚àà c3)\n  diff.wcel.s(s0, c0, c1)\n  diff.wcel.s(s0, c2, c3)\n  diff.wcel.s(s0, c4, c0)\n  diff.wa.s(s0, s1 = < c0, c2 >, s2 = c4)\n  diff.wceq.s(s0, s1, < c0, c2 >)\n  diff.cv.s(s0, s1)\n  diff.cop.s(s0, c0, c2)\n  diff.wceq.s(s0, s2, c4)\n  diff.cv.s(s0, s2)\n  diff.wa.s(s1, (c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà c0)\n  diff.wa.s(s1, c0 ‚àà c1, c2 ‚àà c3)\n  diff.wcel.s(s1, c0, c1)\n  diff.wcel.s(s1, c2, c3)\n  diff.wcel.s(s1, c4, c0)\n  diff.wa.s(s2, (c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà c0)\n  diff.wa.s(s2, c0 ‚àà c1, c2 ‚àà c3)\n  diff.wcel.s(s2, c0, c1)\n  diff.wcel.s(s2, c2, c3)\n  diff.wcel.s(s2, c4, c0)\n  diff.cop.s(s2, c0, c2)\n}","parent":["ovmpt2dxf","a1i","rabeqbidv","adantrr","bitrd","adantl","sbceq1a","adantr","sylan9eqr","fveq2","op1stg","opex","simpr","ad2antrr","rabexg","ax-mp","nfvd","equid","nfcv","nfrab","nfsbc1v","nfsbc","diff.cop.s","diff.cfv.s","diff.c1st.s","diff.wa.s","diff.wcel.s","diff.wceq.s","diff.cv.s"],"children":["mpt2xopovel","mpt2xopoveqd"]},{"name":"mpt2xopovel","content":"Element of the value of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument. (Contributed by Alexander van der Vekens and Mario Carneiro, 10-Oct-2017.)","origin":"thm mpt2xopovel(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wcel(c4, co(cop(c0, c2), c5, c6)), w3a(wcel(c6, c0), wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0))))))\n  -| wceq(c5, cmpo(s0, s1, universe, cfv(c1st, cv(s0)), crab(s2, cfv(c1st, cv(s0)), w0)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n  -| diffsc(s0, c6)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n  -| diffsc(s1, c4)\n  -| diffsc(s1, c6)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n  -| diffsc(s2, c2)\n  -| diffsc(s2, c3)\n  -| diffsc(s2, c6)\n} = {\n  bitrd(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, co(cop(c0, c2), c5, c6)), w3a(wcel(c6, c0), wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0)))), wa(wcel(c6, c0), wcel(c4, co(cop(c0, c2), c5, c6))))\n  pm4.71rd(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, co(cop(c0, c2), c5, c6)), wcel(c6, c0))\n  mpt2xopn0yelv(s0, s1, c0, c1, c2, c3, c4, c5, c6, crab(s2, cfv(c1st, cv(s0)), w0))\n  syl6bbr(wa(wcel(c0, c1), wcel(c2, c3)), wa(wcel(c6, c0), wcel(c4, co(cop(c0, c2), c5, c6))), w3a(wcel(c6, c0), wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0)))), wa(wcel(c6, c0), wa(wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0))))))\n  pm5.32da(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c6, c0), wcel(c4, co(cop(c0, c2), c5, c6)), wa(wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0)))))\n  syl6bb(wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c6, c0)), wcel(c4, co(cop(c0, c2), c5, c6)), wa(wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0)))), wcel(c4, crab(s2, c0, wsbc(s0, cop(c0, c2), wsbc(s1, c6, w0)))))\n  eleq2d(c4, co(cop(c0, c2), c5, c6), crab(s2, c0, wsbc(s0, cop(c0, c2), wsbc(s1, c6, w0))), wa(wa(wcel(c0, c1), wcel(c2, c3)), wcel(c6, c0)))\n  mpt2xopoveq(s2, s0, s1, c0, c1, c2, c3, c6, c5, w0)\n  bitri(wcel(c4, crab(s2, c0, wsbc(s0, cop(c0, c2), wsbc(s1, c6, w0)))), wa(wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0)))), wa(wcel(c4, c0), wsbc(s2, c4, wsbc(s0, cop(c0, c2), wsbc(s1, c6, w0)))))\n  elrabsf(s2, c4, c0, wsbc(s0, cop(c0, c2), wsbc(s1, c6, w0)))\n  nfcv(s2, c0)\n  anbi2i(wcel(c4, c0), wsbc(s2, c4, wsbc(s0, cop(c0, c2), wsbc(s1, c6, w0))), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0))))\n  bitri(wsbc(s2, c4, wsbc(s0, cop(c0, c2), wsbc(s1, c6, w0))), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0))), wsbc(s0, cop(c0, c2), wsbc(s2, c4, wsbc(s1, c6, w0))))\n  sbccom(s2, s0, c4, cop(c0, c2), wsbc(s1, c6, w0))\n  sbcbii(s0, cop(c0, c2), wsbc(s2, c4, wsbc(s1, c6, w0)), wsbc(s1, c6, wsbc(s2, c4, w0)))\n  sbccom(s2, s1, c4, c6, w0)\n  3anass(wcel(c6, c0), wcel(c4, c0), wsbc(s0, cop(c0, c2), wsbc(s1, c6, wsbc(s2, c4, w0))))\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n  diff.cop.s(s2, c0, c2)\n}","pretty":"thm mpt2xopovel(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, class c6, wff w0) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c4 ‚àà(< c0, c2 >[c5]c6)‚Üî(c6 ‚àà c0 ‚àß c4 ‚àà c0 ‚àß[< c0, c2 > / s0][c6 / s1][c4 / s2]w0)))\n  ‚ä£ c5 =(s0 ‚àà ùïå, s1 ‚àà(1st ` s0)‚Ü¶ { s2 ‚àà(1st ` s0)| w0 })\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s0, c4)\n  ‚ä£ d(s0, c6)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s1, c2)\n  ‚ä£ d(s1, c3)\n  ‚ä£ d(s1, c4)\n  ‚ä£ d(s1, c6)\n  ‚ä£ d(s2, c0)\n  ‚ä£ d(s2, c1)\n  ‚ä£ d(s2, c2)\n  ‚ä£ d(s2, c3)\n  ‚ä£ d(s2, c6)\n} = {\n  bitrd((c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà(< c0, c2 >[c5]c6), (c6 ‚àà c0 ‚àß c4 ‚àà c0 ‚àß[< c0, c2 > / s0][c6 / s1][c4 / s2]w0), (c6 ‚àà c0 ‚àß c4 ‚àà(< c0, c2 >[c5]c6)))\n  pm4.71rd((c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà(< c0, c2 >[c5]c6), c6 ‚àà c0)\n  mpt2xopn0yelv(s0, s1, c0, c1, c2, c3, c4, c5, c6, { s2 ‚àà(1st ` s0)| w0 })\n  syl6bbr((c0 ‚àà c1 ‚àß c2 ‚àà c3), (c6 ‚àà c0 ‚àß c4 ‚àà(< c0, c2 >[c5]c6)), (c6 ‚àà c0 ‚àß c4 ‚àà c0 ‚àß[< c0, c2 > / s0][c6 / s1][c4 / s2]w0), (c6 ‚àà c0 ‚àß(c4 ‚àà c0 ‚àß[< c0, c2 > / s0][c6 / s1][c4 / s2]w0)))\n  pm5.32da((c0 ‚àà c1 ‚àß c2 ‚àà c3), c6 ‚àà c0, c4 ‚àà(< c0, c2 >[c5]c6), (c4 ‚àà c0 ‚àß[< c0, c2 > / s0][c6 / s1][c4 / s2]w0))\n  syl6bb(((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c6 ‚àà c0), c4 ‚àà(< c0, c2 >[c5]c6), (c4 ‚àà c0 ‚àß[< c0, c2 > / s0][c6 / s1][c4 / s2]w0), c4 ‚àà { s2 ‚àà c0 |[< c0, c2 > / s0][c6 / s1]w0 })\n  eleq2d(c4, (< c0, c2 >[c5]c6), { s2 ‚àà c0 |[< c0, c2 > / s0][c6 / s1]w0 }, ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚àß c6 ‚àà c0))\n  mpt2xopoveq(s2, s0, s1, c0, c1, c2, c3, c6, c5, w0)\n  bitri(c4 ‚àà { s2 ‚àà c0 |[< c0, c2 > / s0][c6 / s1]w0 }, (c4 ‚àà c0 ‚àß[< c0, c2 > / s0][c6 / s1][c4 / s2]w0), (c4 ‚àà c0 ‚àß[c4 / s2][< c0, c2 > / s0][c6 / s1]w0))\n  elrabsf(s2, c4, c0, [< c0, c2 > / s0][c6 / s1]w0)\n  nfcv(s2, c0)\n  anbi2i(c4 ‚àà c0, [c4 / s2][< c0, c2 > / s0][c6 / s1]w0, [< c0, c2 > / s0][c6 / s1][c4 / s2]w0)\n  bitri([c4 / s2][< c0, c2 > / s0][c6 / s1]w0, [< c0, c2 > / s0][c6 / s1][c4 / s2]w0, [< c0, c2 > / s0][c4 / s2][c6 / s1]w0)\n  sbccom(s2, s0, c4, < c0, c2 >, [c6 / s1]w0)\n  sbcbii(s0, < c0, c2 >, [c4 / s2][c6 / s1]w0, [c6 / s1][c4 / s2]w0)\n  sbccom(s2, s1, c4, c6, w0)\n  3anass(c6 ‚àà c0, c4 ‚àà c0, [< c0, c2 > / s0][c6 / s1][c4 / s2]w0)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n  diff.cop.s(s2, c0, c2)\n}","parent":["bitrd","pm4.71rd","mpt2xopn0yelv","syl6bbr","pm5.32da","syl6bb","eleq2d","mpt2xopoveq","bitri","elrabsf","nfcv","anbi2i","sbccom","sbcbii","3anass","diffss.ex","diff.cop.s"],"children":[]},{"name":"mpt2xopoveqd","content":"Value of an operation given by a maps-to rule, where the first argument is a pair and the base set of the second argument is the first component of the first argument, deduction version. (Contributed by Alexander van der Vekens, 11-Oct-2017.)","origin":"thm mpt2xopoveqd(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, wff w0, wff w1) {\n  |- wi(w0, wceq(co(cop(c0, c1), c2, c3), crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1)))))\n  -| wceq(c2, cmpo(s1, s2, universe, cfv(c1st, cv(s1)), crab(s0, cfv(c1st, cv(s1)), w1)))\n  -| wi(w0, wa(wcel(c0, c4), wcel(c1, c5)))\n  -| wi(wa(w0, wn(wcel(c3, c0))), wceq(crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1))), emptycls))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c3)\n  -| diffsc(s0, c4)\n  -| diffsc(s0, c5)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n  -| diffsc(s1, c4)\n  -| diffsc(s1, c5)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n  -| diffsc(s2, c3)\n  -| diffsc(s2, c4)\n  -| diffsc(s2, c5)\n} = {\n  pm2.61i(wi(w0, wceq(co(cop(c0, c1), c2, c3), crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1))))), wcel(c3, c0))\n  syl11(wcel(c3, c0), w0, wceq(co(cop(c0, c1), c2, c3), crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1)))), wa(wcel(c0, c4), wcel(c1, c5)))\n  ex(wa(wcel(c0, c4), wcel(c1, c5)), wcel(c3, c0), wceq(co(cop(c0, c1), c2, c3), crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1)))))\n  mpt2xopoveq(s0, s1, s2, c0, c4, c1, c5, c3, c2, w1)\n  ex(wn(wcel(c3, c0)), w0, wceq(co(cop(c0, c1), c2, c3), crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1)))))\n  eqtrd(co(cop(c0, c1), c2, c3), crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1))), emptycls, wa(wn(wcel(c3, c0)), w0))\n  adantr(wn(wcel(c3, c0)), w0, wceq(co(cop(c0, c1), c2, c3), emptycls))\n  sylbir(wn(wcel(c3, c0)), wceq(co(cop(c0, c1), c2, c3), emptycls), wnel(c3, c0))\n  df-nel(c3, c0)\n  mpt2xopynvov0(s1, s2, c3, c0, c1, c2, crab(s0, cfv(c1st, cv(s1)), w1))\n  ancoms(wn(wcel(c3, c0)), w0, wceq(emptycls, crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1)))))\n  eqcomd(emptycls, crab(s0, c0, wsbc(s1, cop(c0, c1), wsbc(s2, c3, w1))), wa(w0, wn(wcel(c3, c0))))\n}","pretty":"thm mpt2xopoveqd(setvar s0, setvar s1, setvar s2, class c0, class c1, class c2, class c3, class c4, class c5, wff w0, wff w1) {\n  ‚ä¢ (w0 ‚Üí(< c0, c1 >[c2]c3)= { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 })\n  ‚ä£ c2 =(s1 ‚àà ùïå, s2 ‚àà(1st ` s1)‚Ü¶ { s0 ‚àà(1st ` s1)| w1 })\n  ‚ä£ (w0 ‚Üí(c0 ‚àà c4 ‚àß c1 ‚àà c5))\n  ‚ä£ ((w0 ‚àß ¬¨ c3 ‚àà c0)‚Üí { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 } = ‚àÖ)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s0, c4)\n  ‚ä£ d(s0, c5)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s1, c2)\n  ‚ä£ d(s1, c3)\n  ‚ä£ d(s1, c4)\n  ‚ä£ d(s1, c5)\n  ‚ä£ d(s2, c0)\n  ‚ä£ d(s2, c1)\n  ‚ä£ d(s2, c3)\n  ‚ä£ d(s2, c4)\n  ‚ä£ d(s2, c5)\n} = {\n  pm2.61i((w0 ‚Üí(< c0, c1 >[c2]c3)= { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 }), c3 ‚àà c0)\n  syl11(c3 ‚àà c0, w0, (< c0, c1 >[c2]c3)= { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 }, (c0 ‚àà c4 ‚àß c1 ‚àà c5))\n  ex((c0 ‚àà c4 ‚àß c1 ‚àà c5), c3 ‚àà c0, (< c0, c1 >[c2]c3)= { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 })\n  mpt2xopoveq(s0, s1, s2, c0, c4, c1, c5, c3, c2, w1)\n  ex(¬¨ c3 ‚àà c0, w0, (< c0, c1 >[c2]c3)= { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 })\n  eqtrd((< c0, c1 >[c2]c3), { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 }, emptycls, (¬¨ c3 ‚àà c0 ‚àß w0))\n  adantr(¬¨ c3 ‚àà c0, w0, (< c0, c1 >[c2]c3)= ‚àÖ)\n  sylbir(¬¨ c3 ‚àà c0, (< c0, c1 >[c2]c3)= ‚àÖ, c3 ‚àâ c0)\n  df-nel(c3, c0)\n  mpt2xopynvov0(s1, s2, c3, c0, c1, c2, { s0 ‚àà(1st ` s1)| w1 })\n  ancoms(¬¨ c3 ‚àà c0, w0, ‚àÖ = { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 })\n  eqcomd(emptycls, { s0 ‚àà c0 |[< c0, c1 > / s1][c3 / s2]w1 }, (w0 ‚àß ¬¨ c3 ‚àà c0))\n}","parent":["pm2.61i","syl11","ex","mpt2xopoveq","eqtrd","adantr","sylbir","df-nel","mpt2xopynvov0","ancoms","eqcomd"],"children":[]},{"name":"brovex","content":"A binary relation of the value of an operation given by the maps-to notation. (Contributed by Alexander van der Vekens, 21-Oct-2017.)","origin":"thm brovex(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wbr(c0, co(c1, c2, c3), c4), wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe))))\n  -| wceq(c2, cmpo(s0, s1, universe, universe, c5))\n  -| wi(wa(wcel(c1, universe), wcel(c3, universe)), wrel(co(c1, c2, c3)))\n  -| diffss(s0, s1)\n} = {\n  pm2.43i(wbr(c0, co(c1, c2, c3), c4), wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe))))\n  sylbi(wbr(c0, co(c1, c2, c3), c4), wi(wbr(c0, co(c1, c2, c3), c4), wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe)))), wcel(cop(c0, c4), co(c1, c2, c3)))\n  df-br(c0, co(c1, c2, c3), c4)\n  3syl(wcel(cop(c0, c4), co(c1, c2, c3)), wi(wbr(c0, co(c1, c2, c3), c4), wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe)))), wne(co(c1, c2, c3), emptycls), wa(wcel(c1, universe), wcel(c3, universe)))\n  ne0i(cop(c0, c4), co(c1, c2, c3))\n  necon1ai(co(c1, c2, c3), emptycls, wa(wcel(c1, universe), wcel(c3, universe)))\n  mpt2ndm0(s0, s1, c1, universe, c3, universe, c2, c5)\n  ex(wa(wcel(c1, universe), wcel(c3, universe)), wbr(c0, co(c1, c2, c3), c4), wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe))))\n  syldan(wa(wcel(c1, universe), wcel(c3, universe)), wbr(c0, co(c1, c2, c3), c4), wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe))), wa(wcel(c0, universe), wcel(c4, universe)))\n  sylan(wa(wcel(c1, universe), wcel(c3, universe)), wbr(c0, co(c1, c2, c3), c4), wa(wcel(c0, universe), wcel(c4, universe)), wrel(co(c1, c2, c3)))\n  brrelex12(co(c1, c2, c3), c0, c4)\n  id(wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe))))\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n}","pretty":"thm brovex(setvar s0, setvar s1, class c0, class c1, class c2, class c3, class c4, class c5) {\n  ‚ä¢ (c0[(c1[c2]c3)]c4 ‚Üí((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå)))\n  ‚ä£ c2 =(s0 ‚àà ùïå, s1 ‚àà ùïå ‚Ü¶ c5)\n  ‚ä£ ((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚Üí Rel((c1[c2]c3)))\n  ‚ä£ d(s0, s1)\n} = {\n  pm2.43i(c0[(c1[c2]c3)]c4, ((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå)))\n  sylbi(c0[(c1[c2]c3)]c4, (c0[(c1[c2]c3)]c4 ‚Üí((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå))), < c0, c4 > ‚àà(c1[c2]c3))\n  df-br(c0, (c1[c2]c3), c4)\n  3syl(< c0, c4 > ‚àà(c1[c2]c3), (c0[(c1[c2]c3)]c4 ‚Üí((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå))), (c1[c2]c3)‚â† ‚àÖ, (c1 ‚àà ùïå ‚àß c3 ‚àà ùïå))\n  ne0i(< c0, c4 >, (c1[c2]c3))\n  necon1ai((c1[c2]c3), emptycls, (c1 ‚àà ùïå ‚àß c3 ‚àà ùïå))\n  mpt2ndm0(s0, s1, c1, universe, c3, universe, c2, c5)\n  ex((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå), c0[(c1[c2]c3)]c4, ((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå)))\n  syldan((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå), c0[(c1[c2]c3)]c4, ((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå)), (c0 ‚àà ùïå ‚àß c4 ‚àà ùïå))\n  sylan((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå), c0[(c1[c2]c3)]c4, (c0 ‚àà ùïå ‚àß c4 ‚àà ùïå), Rel((c1[c2]c3)))\n  brrelex12((c1[c2]c3), c0, c4)\n  id(((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå)))\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n}","parent":["pm2.43i","sylbi","df-br","3syl","ne0i","necon1ai","mpt2ndm0","ex","syldan","sylan","brrelex12","id","diff.universe.s"],"children":["brovmpt2ex"]},{"name":"brovmpt2ex","content":"A binary relation of the value of an operation given by the maps-to notation. (Contributed by Alexander van der Vekens, 21-Oct-2017.)","origin":"thm brovmpt2ex(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(wbr(c0, co(c1, c2, c3), c4), wa(wa(wcel(c1, universe), wcel(c3, universe)), wa(wcel(c0, universe), wcel(c4, universe))))\n  -| wceq(c2, cmpo(s0, s1, universe, universe, copab(s2, s3, w0)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n} = {\n  brovex(s0, s1, c0, c1, c2, c3, c4, copab(s2, s3, w0))\n  a1i(wa(wcel(c1, universe), wcel(c3, universe)), wrel(co(c1, c2, c3)))\n  relmpt2opab(s0, s1, s2, s3, c1, c2, c3, universe, universe, w0)\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n}","pretty":"thm brovmpt2ex(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ (c0[(c1[c2]c3)]c4 ‚Üí((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå)‚àß(c0 ‚àà ùïå ‚àß c4 ‚àà ùïå)))\n  ‚ä£ c2 =(s0 ‚àà ùïå, s1 ‚àà ùïå ‚Ü¶ { < s2, s3 > | w0 })\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s0, s3)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s1, s3)\n  ‚ä£ d(s2, s3)\n} = {\n  brovex(s0, s1, c0, c1, c2, c3, c4, { < s2, s3 > | w0 })\n  a1i((c1 ‚àà ùïå ‚àß c3 ‚àà ùïå), Rel((c1[c2]c3)))\n  relmpt2opab(s0, s1, s2, s3, c1, c2, c3, universe, universe, w0)\n  diff.universe.s(s0)\n  diff.universe.s(s1)\n}","parent":["brovex","a1i","relmpt2opab","diff.universe.s"],"children":[]},{"name":"sprmpt2d","content":"The extension of a binary relation which is the value of an operation given in maps-to notation. (Contributed by Alexander van der Vekens, 30-Oct-2017.) (Revised by AV, 20-Jun-2019.)","origin":"thm sprmpt2d(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1, class c2, class c3, wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wceq(co(c0, c1, c2), copab(s0, s1, wa(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1))))\n  -| wceq(c1, cmpo(s2, s3, universe, universe, copab(s0, s1, wa(wbr(cv(s0), co(cv(s2), c3, cv(s3)), cv(s1)), w2))))\n  -| wi(w3a(w0, wceq(cv(s2), c0), wceq(cv(s3), c2)), wb(w2, w1))\n  -| wi(w0, wa(wcel(c0, universe), wcel(c2, universe)))\n  -| wi(w0, wal(s0, wal(s1, wi(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w3))))\n  -| wi(w0, wcel(copab(s0, s1, w3), universe))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c2)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c2)\n  -| diffsc(s2, c3)\n  -| diffsc(s3, c0)\n  -| diffsc(s3, c2)\n  -| diffsc(s3, c3)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n  -| diffsw(s2, w0)\n  -| diffsw(s2, w1)\n  -| diffsw(s3, w0)\n  -| diffsw(s3, w1)\n} = {\n  a1ii(wi(w0, wceq(co(c0, c1, c2), copab(s0, s1, wa(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1)))), diffss(s0, s1))\n  ovmpt2d(s2, s3, c0, c1, c2, copab(s0, s1, wa(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1)), universe, universe, copab(s0, s1, wa(wbr(cv(s0), co(cv(s2), c3, cv(s3)), cv(s1)), w2)), universe, w0)\n  a1i(w0, wceq(c1, cmpo(s2, s3, universe, universe, copab(s0, s1, wa(wbr(cv(s0), co(cv(s2), c3, cv(s3)), cv(s1)), w2)))))\n  opabbidv(s0, s1, wa(w0, wa(wceq(cv(s2), c0), wceq(cv(s3), c2))), wa(wbr(cv(s0), co(cv(s2), c3, cv(s3)), cv(s1)), w2), wa(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1))\n  anbi12d(wa(w0, wa(wceq(cv(s2), c0), wceq(cv(s3), c2))), wbr(cv(s0), co(cv(s2), c3, cv(s3)), cv(s1)), w2, wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1)\n  adantl(w0, wa(wceq(cv(s2), c0), wceq(cv(s3), c2)), wb(wbr(cv(s0), co(cv(s2), c3, cv(s3)), cv(s1)), wbr(cv(s0), co(c0, c3, c2), cv(s1))))\n  breqd(cv(s0), co(cv(s2), c3, cv(s3)), cv(s1), co(c0, c3, c2), wa(wceq(cv(s2), c0), wceq(cv(s3), c2)))\n  oveq12(cv(s2), c0, cv(s3), c2, c3)\n  3expb(w0, wceq(cv(s2), c0), wceq(cv(s3), c2), wb(w2, w1))\n  simpld(w0, wcel(c0, universe), wcel(c2, universe))\n  simprd(w0, wcel(c2, universe), wcel(c0, universe))\n  syl2anc(w0, wcel(copab(s0, s1, wa(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1)), universe), wal(s0, wal(s1, wi(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w3))), wcel(copab(s0, s1, w3), universe))\n  opabbrex(s0, s1, co(c0, c3, c2), universe, w3, w1)\n  diff.copab.s(s2, s0, s1, wa(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1))\n  diff.wa.s(s2, wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1)\n  diff.wbr.s(s2, cv(s0), co(c0, c3, c2), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.co.s(s2, c0, c3, c2)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.copab.s(s3, s0, s1, wa(wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1))\n  diff.wa.s(s3, wbr(cv(s0), co(c0, c3, c2), cv(s1)), w1)\n  diff.wbr.s(s3, cv(s0), co(c0, c3, c2), cv(s1))\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n  diff.co.s(s3, c0, c3, c2)\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.wa.s(s0, w0, wa(wceq(cv(s2), c0), wceq(cv(s3), c2)))\n  diff.wa.s(s0, wceq(cv(s2), c0), wceq(cv(s3), c2))\n  diff.wceq.s(s0, cv(s2), c0)\n  diff.cv.s(s0, s2)\n  diff.wceq.s(s0, cv(s3), c2)\n  diff.cv.s(s0, s3)\n  diff.wa.s(s1, w0, wa(wceq(cv(s2), c0), wceq(cv(s3), c2)))\n  diff.wa.s(s1, wceq(cv(s2), c0), wceq(cv(s3), c2))\n  diff.wceq.s(s1, cv(s2), c0)\n  diff.cv.s(s1, s2)\n  diff.wceq.s(s1, cv(s3), c2)\n  diff.cv.s(s1, s3)\n}","pretty":"thm sprmpt2d(setvar s0, setvar s1, setvar s2, setvar s3, class c0, class c1, class c2, class c3, wff w0, wff w1, wff w2, wff w3) {\n  ‚ä¢ (w0 ‚Üí(c0[c1]c2)= { < s0, s1 > |(s0[(c0[c3]c2)]s1 ‚àß w1)})\n  ‚ä£ c1 =(s2 ‚àà ùïå, s3 ‚àà ùïå ‚Ü¶ { < s0, s1 > |(s0[(s2[c3]s3)]s1 ‚àß w2)})\n  ‚ä£ ((w0 ‚àß s2 = c0 ‚àß s3 = c2)‚Üí(w2 ‚Üî w1))\n  ‚ä£ (w0 ‚Üí(c0 ‚àà ùïå ‚àß c2 ‚àà ùïå))\n  ‚ä£ (w0 ‚Üí ‚àÄ(s0, ‚àÄ(s1,(s0[(c0[c3]c2)]s1 ‚Üí w3))))\n  ‚ä£ (w0 ‚Üí { < s0, s1 > | w3 } ‚àà ùïå)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s0, s3)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s1, s3)\n  ‚ä£ d(s2, s3)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s1, c2)\n  ‚ä£ d(s2, c0)\n  ‚ä£ d(s2, c2)\n  ‚ä£ d(s2, c3)\n  ‚ä£ d(s3, c0)\n  ‚ä£ d(s3, c2)\n  ‚ä£ d(s3, c3)\n  ‚ä£ d(s0, w0)\n  ‚ä£ d(s1, w0)\n  ‚ä£ d(s2, w0)\n  ‚ä£ d(s2, w1)\n  ‚ä£ d(s3, w0)\n  ‚ä£ d(s3, w1)\n} = {\n  a1ii((w0 ‚Üí(c0[c1]c2)= { < s0, s1 > |(s0[(c0[c3]c2)]s1 ‚àß w1)}), d(s0, s1))\n  ovmpt2d(s2, s3, c0, c1, c2, { < s0, s1 > |(s0[(c0[c3]c2)]s1 ‚àß w1)}, universe, universe, { < s0, s1 > |(s0[(s2[c3]s3)]s1 ‚àß w2)}, universe, w0)\n  a1i(w0, c1 =(s2 ‚àà ùïå, s3 ‚àà ùïå ‚Ü¶ { < s0, s1 > |(s0[(s2[c3]s3)]s1 ‚àß w2)}))\n  opabbidv(s0, s1, (w0 ‚àß(s2 = c0 ‚àß s3 = c2)), (s0[(s2[c3]s3)]s1 ‚àß w2), (s0[(c0[c3]c2)]s1 ‚àß w1))\n  anbi12d((w0 ‚àß(s2 = c0 ‚àß s3 = c2)), s0[(s2[c3]s3)]s1, w2, s0[(c0[c3]c2)]s1, w1)\n  adantl(w0, (s2 = c0 ‚àß s3 = c2), (s0[(s2[c3]s3)]s1 ‚Üî s0[(c0[c3]c2)]s1))\n  breqd(s0, (s2[c3]s3), s1, (c0[c3]c2), (s2 = c0 ‚àß s3 = c2))\n  oveq12(s2, c0, s3, c2, c3)\n  3expb(w0, s2 = c0, s3 = c2, (w2 ‚Üî w1))\n  simpld(w0, c0 ‚àà ùïå, c2 ‚àà ùïå)\n  simprd(w0, c2 ‚àà ùïå, c0 ‚àà ùïå)\n  syl2anc(w0, { < s0, s1 > |(s0[(c0[c3]c2)]s1 ‚àß w1)} ‚àà ùïå, ‚àÄ(s0, ‚àÄ(s1,(s0[(c0[c3]c2)]s1 ‚Üí w3))), { < s0, s1 > | w3 } ‚àà ùïå)\n  opabbrex(s0, s1, (c0[c3]c2), universe, w3, w1)\n  diff.copab.s(s2, s0, s1, (s0[(c0[c3]c2)]s1 ‚àß w1))\n  diff.wa.s(s2, s0[(c0[c3]c2)]s1, w1)\n  diff.wbr.s(s2, s0, (c0[c3]c2), s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.co.s(s2, c0, c3, c2)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.copab.s(s3, s0, s1, (s0[(c0[c3]c2)]s1 ‚àß w1))\n  diff.wa.s(s3, s0[(c0[c3]c2)]s1, w1)\n  diff.wbr.s(s3, s0, (c0[c3]c2), s1)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n  diff.co.s(s3, c0, c3, c2)\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.wa.s(s0, w0, (s2 = c0 ‚àß s3 = c2))\n  diff.wa.s(s0, s2 = c0, s3 = c2)\n  diff.wceq.s(s0, s2, c0)\n  diff.cv.s(s0, s2)\n  diff.wceq.s(s0, s3, c2)\n  diff.cv.s(s0, s3)\n  diff.wa.s(s1, w0, (s2 = c0 ‚àß s3 = c2))\n  diff.wa.s(s1, s2 = c0, s3 = c2)\n  diff.wceq.s(s1, s2, c0)\n  diff.cv.s(s1, s2)\n  diff.wceq.s(s1, s3, c2)\n  diff.cv.s(s1, s3)\n}","parent":["a1ii","ovmpt2d","a1i","opabbidv","anbi12d","adantl","breqd","oveq12","3expb","simpld","simprd","syl2anc","opabbrex","diff.copab.s","diff.wa.s","diff.wbr.s","diff.cv.s","diffss.ex","diff.co.s","diff.wceq.s"],"children":[]}]}