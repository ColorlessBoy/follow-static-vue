{"index":1284,"title":"Logarithm laws generalized to an arbitrary base","content":"Section should be obsolete because its contents are covered by section \"Logarithms to an arbitrary base\" now.","blocks":[{"name":"reglogcl","content":"General logarithm is a real number. (Contributed by Stefan O'Rear, 19-Sep-2014.) (New usage is discouraged.) Use ~ relogbcl instead.","origin":"thm reglogcl(class c0, class c1) {\n  |- wi(w3a(wcel(c0, crp), wcel(c1, crp), wne(c1, nat1)), wcel(co(cfv(clog, c0), cdiv, cfv(clog, c1)), cr))\n} = {\n  redivcld(cfv(clog, c0), cfv(clog, c1), w3a(wcel(c0, crp), wcel(c1, crp), wne(c1, nat1)))\n  3ad2ant1(wcel(c0, crp), wcel(c1, crp), wne(c1, nat1), wcel(cfv(clog, c0), cr))\n  relogcl(c0)\n  3ad2ant2(wcel(c0, crp), wcel(c1, crp), wne(c1, nat1), wcel(cfv(clog, c1), cr))\n  relogcl(c1)\n  3adant1(wcel(c0, crp), wcel(c1, crp), wne(c1, nat1), wne(cfv(clog, c1), nat0))\n  logne0(c1)\n}","pretty":"thm reglogcl(class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+ ∧ c1 ≠ 1)→((log ` c0)[÷](log ` c1))∈ ℝ)\n} = {\n  redivcld((log ` c0), (log ` c1), (c0 ∈ ℝ+ ∧ c1 ∈ ℝ+ ∧ c1 ≠ 1))\n  3ad2ant1(c0 ∈ ℝ+, c1 ∈ ℝ+, c1 ≠ 1, (log ` c0)∈ ℝ)\n  relogcl(c0)\n  3ad2ant2(c0 ∈ ℝ+, c1 ∈ ℝ+, c1 ≠ 1, (log ` c1)∈ ℝ)\n  relogcl(c1)\n  3adant1(c0 ∈ ℝ+, c1 ∈ ℝ+, c1 ≠ 1, (log ` c1)≠ 0)\n  logne0(c1)\n}","parent":["redivcld","3ad2ant1","relogcl","3ad2ant2","3adant1","logne0"],"children":["pellfund14"]},{"name":"reglogltb","content":"General logarithm preserves \"less than\". (Contributed by Stefan O'Rear, 19-Sep-2014.) (New usage is discouraged.) Use ~ logblt instead.","origin":"thm reglogltb(class c0, class c1, class c2) {\n  |- wi(wa(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2))), wb(wbr(c0, clt, c1), wbr(co(cfv(clog, c0), cdiv, cfv(clog, c2)), clt, co(cfv(clog, c1), cdiv, cfv(clog, c2)))))\n} = {\n  bitrd(wa(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2))), wbr(c0, clt, c1), wbr(co(cfv(clog, c0), cdiv, cfv(clog, c2)), clt, co(cfv(clog, c1), cdiv, cfv(clog, c2))), wbr(cfv(clog, c0), clt, cfv(clog, c1)))\n  adantr(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wb(wbr(c0, clt, c1), wbr(cfv(clog, c0), clt, cfv(clog, c1))))\n  logltb(c0, c1)\n  syl112anc(wa(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2))), wb(wbr(cfv(clog, c0), clt, cfv(clog, c1)), wbr(co(cfv(clog, c0), cdiv, cfv(clog, c2)), clt, co(cfv(clog, c1), cdiv, cfv(clog, c2)))), wcel(cfv(clog, c0), cr), wcel(cfv(clog, c1), cr), wcel(cfv(clog, c2), cr), wbr(nat0, clt, cfv(clog, c2)))\n  ad2antrr(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wcel(cfv(clog, c0), cr))\n  relogcl(c0)\n  ad2antlr(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wcel(cfv(clog, c1), cr))\n  relogcl(c1)\n  ad2antrl(wa(wcel(c0, crp), wcel(c1, crp)), wcel(c2, crp), wbr(nat1, clt, c2), wcel(cfv(clog, c2), cr))\n  relogcl(c2)\n  adantl(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wbr(nat0, clt, cfv(clog, c2)))\n  syl5eqbrr(nat0, clt, cfv(clog, c2), cfv(clog, nat1), wa(wcel(c2, crp), wbr(nat1, clt, c2)))\n  log1()\n  biimpa(wcel(c2, crp), wbr(nat1, clt, c2), wbr(cfv(clog, nat1), clt, cfv(clog, c2)))\n  mpan(wcel(c2, crp), wb(wbr(nat1, clt, c2), wbr(cfv(clog, nat1), clt, cfv(clog, c2))), wcel(nat1, crp))\n  1rp()\n  logltb(nat1, c2)\n  ltdiv1(cfv(clog, c0), cfv(clog, c1), cfv(clog, c2))\n}","pretty":"thm reglogltb(class c0, class c1, class c2) {\n  ⊢ (((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+)∧(c2 ∈ ℝ+ ∧ 1[<]c2))→(c0[<]c1 ↔((log ` c0)[÷](log ` c2))[<]((log ` c1)[÷](log ` c2))))\n} = {\n  bitrd(((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+)∧(c2 ∈ ℝ+ ∧ 1[<]c2)), c0[<]c1, ((log ` c0)[÷](log ` c2))[<]((log ` c1)[÷](log ` c2)), (log ` c0)[<](log ` c1))\n  adantr((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+), (c2 ∈ ℝ+ ∧ 1[<]c2), (c0[<]c1 ↔(log ` c0)[<](log ` c1)))\n  logltb(c0, c1)\n  syl112anc(((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+)∧(c2 ∈ ℝ+ ∧ 1[<]c2)), ((log ` c0)[<](log ` c1)↔((log ` c0)[÷](log ` c2))[<]((log ` c1)[÷](log ` c2))), (log ` c0)∈ ℝ, (log ` c1)∈ ℝ, (log ` c2)∈ ℝ, 0[<](log ` c2))\n  ad2antrr(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ 1[<]c2), (log ` c0)∈ ℝ)\n  relogcl(c0)\n  ad2antlr(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ 1[<]c2), (log ` c1)∈ ℝ)\n  relogcl(c1)\n  ad2antrl((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+), c2 ∈ ℝ+, 1[<]c2, (log ` c2)∈ ℝ)\n  relogcl(c2)\n  adantl((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+), (c2 ∈ ℝ+ ∧ 1[<]c2), 0[<](log ` c2))\n  syl5eqbrr(nat0, clt, (log ` c2), (log ` 1), (c2 ∈ ℝ+ ∧ 1[<]c2))\n  log1()\n  biimpa(c2 ∈ ℝ+, 1[<]c2, (log ` 1)[<](log ` c2))\n  mpan(c2 ∈ ℝ+, (1[<]c2 ↔(log ` 1)[<](log ` c2)), 1 ∈ ℝ+)\n  1rp()\n  logltb(nat1, c2)\n  ltdiv1((log ` c0), (log ` c1), (log ` c2))\n}","parent":["bitrd","adantr","logltb","syl112anc","ad2antrr","relogcl","ad2antlr","ad2antrl","adantl","syl5eqbrr","log1","biimpa","mpan","1rp","ltdiv1"],"children":["pellfund14"]},{"name":"reglogleb","content":"General logarithm preserves ` <_ ` . (Contributed by Stefan O'Rear, 19-Oct-2014.) (New usage is discouraged.) Use ~ logbleb instead.","origin":"thm reglogleb(class c0, class c1, class c2) {\n  |- wi(wa(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2))), wb(wbr(c0, cle, c1), wbr(co(cfv(clog, c0), cdiv, cfv(clog, c2)), cle, co(cfv(clog, c1), cdiv, cfv(clog, c2)))))\n} = {\n  bitrd(wa(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2))), wbr(c0, cle, c1), wbr(co(cfv(clog, c0), cdiv, cfv(clog, c2)), cle, co(cfv(clog, c1), cdiv, cfv(clog, c2))), wbr(cfv(clog, c0), cle, cfv(clog, c1)))\n  adantr(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wb(wbr(c0, cle, c1), wbr(cfv(clog, c0), cle, cfv(clog, c1))))\n  logleb(c0, c1)\n  syl112anc(wa(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2))), wb(wbr(cfv(clog, c0), cle, cfv(clog, c1)), wbr(co(cfv(clog, c0), cdiv, cfv(clog, c2)), cle, co(cfv(clog, c1), cdiv, cfv(clog, c2)))), wcel(cfv(clog, c0), cr), wcel(cfv(clog, c1), cr), wcel(cfv(clog, c2), cr), wbr(nat0, clt, cfv(clog, c2)))\n  ad2antrr(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wcel(cfv(clog, c0), cr))\n  relogcl(c0)\n  ad2antlr(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wcel(cfv(clog, c1), cr))\n  relogcl(c1)\n  ad2antrl(wa(wcel(c0, crp), wcel(c1, crp)), wcel(c2, crp), wbr(nat1, clt, c2), wcel(cfv(clog, c2), cr))\n  relogcl(c2)\n  adantl(wa(wcel(c0, crp), wcel(c1, crp)), wa(wcel(c2, crp), wbr(nat1, clt, c2)), wbr(nat0, clt, cfv(clog, c2)))\n  syl5eqbrr(nat0, clt, cfv(clog, c2), cfv(clog, nat1), wa(wcel(c2, crp), wbr(nat1, clt, c2)))\n  log1()\n  biimpa(wcel(c2, crp), wbr(nat1, clt, c2), wbr(cfv(clog, nat1), clt, cfv(clog, c2)))\n  mpan(wcel(c2, crp), wb(wbr(nat1, clt, c2), wbr(cfv(clog, nat1), clt, cfv(clog, c2))), wcel(nat1, crp))\n  1rp()\n  logltb(nat1, c2)\n  lediv1(cfv(clog, c0), cfv(clog, c1), cfv(clog, c2))\n}","pretty":"thm reglogleb(class c0, class c1, class c2) {\n  ⊢ (((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+)∧(c2 ∈ ℝ+ ∧ 1[<]c2))→(c0[≤]c1 ↔((log ` c0)[÷](log ` c2))[≤]((log ` c1)[÷](log ` c2))))\n} = {\n  bitrd(((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+)∧(c2 ∈ ℝ+ ∧ 1[<]c2)), c0[≤]c1, ((log ` c0)[÷](log ` c2))[≤]((log ` c1)[÷](log ` c2)), (log ` c0)[≤](log ` c1))\n  adantr((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+), (c2 ∈ ℝ+ ∧ 1[<]c2), (c0[≤]c1 ↔(log ` c0)[≤](log ` c1)))\n  logleb(c0, c1)\n  syl112anc(((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+)∧(c2 ∈ ℝ+ ∧ 1[<]c2)), ((log ` c0)[≤](log ` c1)↔((log ` c0)[÷](log ` c2))[≤]((log ` c1)[÷](log ` c2))), (log ` c0)∈ ℝ, (log ` c1)∈ ℝ, (log ` c2)∈ ℝ, 0[<](log ` c2))\n  ad2antrr(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ 1[<]c2), (log ` c0)∈ ℝ)\n  relogcl(c0)\n  ad2antlr(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ 1[<]c2), (log ` c1)∈ ℝ)\n  relogcl(c1)\n  ad2antrl((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+), c2 ∈ ℝ+, 1[<]c2, (log ` c2)∈ ℝ)\n  relogcl(c2)\n  adantl((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+), (c2 ∈ ℝ+ ∧ 1[<]c2), 0[<](log ` c2))\n  syl5eqbrr(nat0, clt, (log ` c2), (log ` 1), (c2 ∈ ℝ+ ∧ 1[<]c2))\n  log1()\n  biimpa(c2 ∈ ℝ+, 1[<]c2, (log ` 1)[<](log ` c2))\n  mpan(c2 ∈ ℝ+, (1[<]c2 ↔(log ` 1)[<](log ` c2)), 1 ∈ ℝ+)\n  1rp()\n  logltb(nat1, c2)\n  lediv1((log ` c0), (log ` c1), (log ` c2))\n}","parent":["bitrd","adantr","logleb","syl112anc","ad2antrr","relogcl","ad2antlr","ad2antrl","adantl","syl5eqbrr","log1","biimpa","mpan","1rp","logltb","lediv1"],"children":["pellfund14"]},{"name":"reglogmul","content":"Multiplication law for general log. (Contributed by Stefan O'Rear, 19-Sep-2014.) (New usage is discouraged.) Use ~ relogbmul instead.","origin":"thm reglogmul(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1))), wceq(co(cfv(clog, co(c0, cmul, c1)), cdiv, cfv(clog, c2)), co(co(cfv(clog, c0), cdiv, cfv(clog, c2)), caddc, co(cfv(clog, c1), cdiv, cfv(clog, c2)))))\n} = {\n  eqtrd(co(cfv(clog, co(c0, cmul, c1)), cdiv, cfv(clog, c2)), co(co(cfv(clog, c0), cdiv, cfv(clog, c2)), caddc, co(cfv(clog, c1), cdiv, cfv(clog, c2))), co(co(cfv(clog, c0), caddc, cfv(clog, c1)), cdiv, cfv(clog, c2)), w3a(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1))))\n  oveq1d(cfv(clog, co(c0, cmul, c1)), cdiv, cfv(clog, c2), co(cfv(clog, c0), caddc, cfv(clog, c1)), w3a(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1))))\n  3adant3(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1)), wceq(cfv(clog, co(c0, cmul, c1)), co(cfv(clog, c0), caddc, cfv(clog, c1))))\n  relogmul(c0, c1)\n  divdird(cfv(clog, c0), cfv(clog, c1), cfv(clog, c2), w3a(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1))))\n  3ad2ant1(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1)), wcel(cfv(clog, c0), cc))\n  recnd(cfv(clog, c0), wcel(c0, crp))\n  relogcl(c0)\n  3ad2ant2(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1)), wcel(cfv(clog, c1), cc))\n  recnd(cfv(clog, c1), wcel(c1, crp))\n  relogcl(c1)\n  3ad2ant3(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1)), wcel(cfv(clog, c2), cc))\n  adantr(wcel(c2, crp), wne(c2, nat1), wcel(cfv(clog, c2), cc))\n  recnd(cfv(clog, c2), wcel(c2, crp))\n  relogcl(c2)\n  3ad2ant3(wcel(c0, crp), wcel(c1, crp), wa(wcel(c2, crp), wne(c2, nat1)), wne(cfv(clog, c2), nat0))\n  logne0(c2)\n}","pretty":"thm reglogmul(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ+ ∧ c1 ∈ ℝ+ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1))→((log `(c0[×]c1))[÷](log ` c2))=(((log ` c0)[÷](log ` c2))[+]((log ` c1)[÷](log ` c2))))\n} = {\n  eqtrd(((log `(c0[×]c1))[÷](log ` c2)), (((log ` c0)[÷](log ` c2))[+]((log ` c1)[÷](log ` c2))), (((log ` c0)[+](log ` c1))[÷](log ` c2)), (c0 ∈ ℝ+ ∧ c1 ∈ ℝ+ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1)))\n  oveq1d((log `(c0[×]c1)), cdiv, (log ` c2), ((log ` c0)[+](log ` c1)), (c0 ∈ ℝ+ ∧ c1 ∈ ℝ+ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1)))\n  3adant3(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log `(c0[×]c1))=((log ` c0)[+](log ` c1)))\n  relogmul(c0, c1)\n  divdird((log ` c0), (log ` c1), (log ` c2), (c0 ∈ ℝ+ ∧ c1 ∈ ℝ+ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1)))\n  3ad2ant1(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log ` c0)∈ ℂ)\n  recnd((log ` c0), c0 ∈ ℝ+)\n  relogcl(c0)\n  3ad2ant2(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log ` c1)∈ ℂ)\n  recnd((log ` c1), c1 ∈ ℝ+)\n  relogcl(c1)\n  3ad2ant3(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log ` c2)∈ ℂ)\n  adantr(c2 ∈ ℝ+, c2 ≠ 1, (log ` c2)∈ ℂ)\n  recnd((log ` c2), c2 ∈ ℝ+)\n  relogcl(c2)\n  3ad2ant3(c0 ∈ ℝ+, c1 ∈ ℝ+, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log ` c2)≠ 0)\n  logne0(c2)\n}","parent":["eqtrd","oveq1d","3adant3","relogmul","divdird","3ad2ant1","recnd","relogcl","3ad2ant2","3ad2ant3","adantr","logne0"],"children":["pellfund14"]},{"name":"reglogexp","content":"Power law for general log. (Contributed by Stefan O'Rear, 19-Sep-2014.) (New usage is discouraged.) Use ~ relogbzexp instead.","origin":"thm reglogexp(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1))), wceq(co(cfv(clog, co(c0, cexp, c1)), cdiv, cfv(clog, c2)), co(c1, cmul, co(cfv(clog, c0), cdiv, cfv(clog, c2)))))\n} = {\n  eqtrd(co(cfv(clog, co(c0, cexp, c1)), cdiv, cfv(clog, c2)), co(c1, cmul, co(cfv(clog, c0), cdiv, cfv(clog, c2))), co(co(c1, cmul, cfv(clog, c0)), cdiv, cfv(clog, c2)), w3a(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1))))\n  oveq1d(cfv(clog, co(c0, cexp, c1)), cdiv, cfv(clog, c2), co(c1, cmul, cfv(clog, c0)), w3a(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1))))\n  3adant3(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1)), wceq(cfv(clog, co(c0, cexp, c1)), co(c1, cmul, cfv(clog, c0))))\n  relogexp(c0, c1)\n  divassd(c1, cfv(clog, c0), cfv(clog, c2), w3a(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1))))\n  3ad2ant2(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1)), wcel(c1, cc))\n  zcn(c1)\n  3ad2ant1(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1)), wcel(cfv(clog, c0), cc))\n  recnd(cfv(clog, c0), wcel(c0, crp))\n  relogcl(c0)\n  3ad2ant3(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1)), wcel(cfv(clog, c2), cc))\n  adantr(wcel(c2, crp), wne(c2, nat1), wcel(cfv(clog, c2), cc))\n  recnd(cfv(clog, c2), wcel(c2, crp))\n  relogcl(c2)\n  3ad2ant3(wcel(c0, crp), wcel(c1, cz), wa(wcel(c2, crp), wne(c2, nat1)), wne(cfv(clog, c2), nat0))\n  logne0(c2)\n}","pretty":"thm reglogexp(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ+ ∧ c1 ∈ ℤ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1))→((log `(c0[^]c1))[÷](log ` c2))=(c1[×]((log ` c0)[÷](log ` c2))))\n} = {\n  eqtrd(((log `(c0[^]c1))[÷](log ` c2)), (c1[×]((log ` c0)[÷](log ` c2))), ((c1[×](log ` c0))[÷](log ` c2)), (c0 ∈ ℝ+ ∧ c1 ∈ ℤ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1)))\n  oveq1d((log `(c0[^]c1)), cdiv, (log ` c2), (c1[×](log ` c0)), (c0 ∈ ℝ+ ∧ c1 ∈ ℤ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1)))\n  3adant3(c0 ∈ ℝ+, c1 ∈ ℤ, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log `(c0[^]c1))=(c1[×](log ` c0)))\n  relogexp(c0, c1)\n  divassd(c1, (log ` c0), (log ` c2), (c0 ∈ ℝ+ ∧ c1 ∈ ℤ ∧(c2 ∈ ℝ+ ∧ c2 ≠ 1)))\n  3ad2ant2(c0 ∈ ℝ+, c1 ∈ ℤ, (c2 ∈ ℝ+ ∧ c2 ≠ 1), c1 ∈ ℂ)\n  zcn(c1)\n  3ad2ant1(c0 ∈ ℝ+, c1 ∈ ℤ, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log ` c0)∈ ℂ)\n  recnd((log ` c0), c0 ∈ ℝ+)\n  relogcl(c0)\n  3ad2ant3(c0 ∈ ℝ+, c1 ∈ ℤ, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log ` c2)∈ ℂ)\n  adantr(c2 ∈ ℝ+, c2 ≠ 1, (log ` c2)∈ ℂ)\n  recnd((log ` c2), c2 ∈ ℝ+)\n  relogcl(c2)\n  3ad2ant3(c0 ∈ ℝ+, c1 ∈ ℤ, (c2 ∈ ℝ+ ∧ c2 ≠ 1), (log ` c2)≠ 0)\n  logne0(c2)\n}","parent":["eqtrd","oveq1d","3adant3","relogexp","divassd","3ad2ant2","zcn","3ad2ant1","recnd","relogcl","3ad2ant3","adantr","logne0"],"children":["reglogexpbas"]},{"name":"reglogbas","content":"General log of the base is 1. (Contributed by Stefan O'Rear, 19-Sep-2014.) (New usage is discouraged.) Use ~ logbid1 instead.","origin":"thm reglogbas(class c0) {\n  |- wi(wa(wcel(c0, crp), wne(c0, nat1)), wceq(co(cfv(clog, c0), cdiv, cfv(clog, c0)), nat1))\n} = {\n  dividd(cfv(clog, c0), wa(wcel(c0, crp), wne(c0, nat1)))\n  adantr(wcel(c0, crp), wne(c0, nat1), wcel(cfv(clog, c0), cc))\n  recnd(cfv(clog, c0), wcel(c0, crp))\n  relogcl(c0)\n  logne0(c0)\n}","pretty":"thm reglogbas(class c0) {\n  ⊢ ((c0 ∈ ℝ+ ∧ c0 ≠ 1)→((log ` c0)[÷](log ` c0))= 1)\n} = {\n  dividd((log ` c0), (c0 ∈ ℝ+ ∧ c0 ≠ 1))\n  adantr(c0 ∈ ℝ+, c0 ≠ 1, (log ` c0)∈ ℂ)\n  recnd((log ` c0), c0 ∈ ℝ+)\n  relogcl(c0)\n  logne0(c0)\n}","parent":["dividd","adantr","recnd","relogcl","logne0"],"children":["reglogexpbas","pellfund14"]},{"name":"reglog1","content":"General log of 1 is 0. (Contributed by Stefan O'Rear, 19-Sep-2014.) (New usage is discouraged.) Use ~ logb1 instead.","origin":"thm reglog1(class c0) {\n  |- wi(wa(wcel(c0, crp), wne(c0, nat1)), wceq(co(cfv(clog, nat1), cdiv, cfv(clog, c0)), nat0))\n} = {\n  syl5eq(co(cfv(clog, nat1), cdiv, cfv(clog, c0)), nat0, co(nat0, cdiv, cfv(clog, c0)), wa(wcel(c0, crp), wne(c0, nat1)))\n  oveq1i(cfv(clog, nat1), cdiv, cfv(clog, c0), nat0)\n  log1()\n  div0d(cfv(clog, c0), wa(wcel(c0, crp), wne(c0, nat1)))\n  adantr(wcel(c0, crp), wne(c0, nat1), wcel(cfv(clog, c0), cc))\n  recnd(cfv(clog, c0), wcel(c0, crp))\n  relogcl(c0)\n  logne0(c0)\n}","pretty":"thm reglog1(class c0) {\n  ⊢ ((c0 ∈ ℝ+ ∧ c0 ≠ 1)→((log ` 1)[÷](log ` c0))= 0)\n} = {\n  syl5eq(((log ` 1)[÷](log ` c0)), nat0, (0[÷](log ` c0)), (c0 ∈ ℝ+ ∧ c0 ≠ 1))\n  oveq1i((log ` 1), cdiv, (log ` c0), nat0)\n  log1()\n  div0d((log ` c0), (c0 ∈ ℝ+ ∧ c0 ≠ 1))\n  adantr(c0 ∈ ℝ+, c0 ≠ 1, (log ` c0)∈ ℂ)\n  recnd((log ` c0), c0 ∈ ℝ+)\n  relogcl(c0)\n  logne0(c0)\n}","parent":["syl5eq","oveq1i","log1","div0d","adantr","recnd","relogcl","logne0"],"children":["pellfund14"]},{"name":"reglogexpbas","content":"General log of a power of the base is the exponent. (Contributed by Stefan O'Rear, 19-Sep-2014.) (New usage is discouraged.) Use ~ relogbexp instead.","origin":"thm reglogexpbas(class c0, class c1) {\n  |- wi(wa(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1))), wceq(co(cfv(clog, co(c1, cexp, c0)), cdiv, cfv(clog, c1)), c0))\n} = {\n  3eqtrd(co(cfv(clog, co(c1, cexp, c0)), cdiv, cfv(clog, c1)), c0, co(c0, cmul, co(cfv(clog, c1), cdiv, cfv(clog, c1))), co(c0, cmul, nat1), wa(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1))))\n  syl3anc(wa(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1))), wceq(co(cfv(clog, co(c1, cexp, c0)), cdiv, cfv(clog, c1)), co(c0, cmul, co(cfv(clog, c1), cdiv, cfv(clog, c1)))), wcel(c1, crp), wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1)))\n  simprl(wcel(c0, cz), wcel(c1, crp), wne(c1, nat1))\n  simpl(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1)))\n  simpr(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1)))\n  reglogexp(c1, c0, c1)\n  oveq2d(c0, cmul, co(cfv(clog, c1), cdiv, cfv(clog, c1)), nat1, wa(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1))))\n  adantl(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1)), wceq(co(cfv(clog, c1), cdiv, cfv(clog, c1)), nat1))\n  reglogbas(c1)\n  mulid1d(c0, wa(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1))))\n  adantr(wcel(c0, cz), wa(wcel(c1, crp), wne(c1, nat1)), wcel(c0, cc))\n  zcn(c0)\n}","pretty":"thm reglogexpbas(class c0, class c1) {\n  ⊢ ((c0 ∈ ℤ ∧(c1 ∈ ℝ+ ∧ c1 ≠ 1))→((log `(c1[^]c0))[÷](log ` c1))= c0)\n} = {\n  3eqtrd(((log `(c1[^]c0))[÷](log ` c1)), c0, (c0[×]((log ` c1)[÷](log ` c1))), (c0[×]1), (c0 ∈ ℤ ∧(c1 ∈ ℝ+ ∧ c1 ≠ 1)))\n  syl3anc((c0 ∈ ℤ ∧(c1 ∈ ℝ+ ∧ c1 ≠ 1)), ((log `(c1[^]c0))[÷](log ` c1))=(c0[×]((log ` c1)[÷](log ` c1))), c1 ∈ ℝ+, c0 ∈ ℤ, (c1 ∈ ℝ+ ∧ c1 ≠ 1))\n  simprl(c0 ∈ ℤ, c1 ∈ ℝ+, c1 ≠ 1)\n  simpl(c0 ∈ ℤ, (c1 ∈ ℝ+ ∧ c1 ≠ 1))\n  simpr(c0 ∈ ℤ, (c1 ∈ ℝ+ ∧ c1 ≠ 1))\n  reglogexp(c1, c0, c1)\n  oveq2d(c0, cmul, ((log ` c1)[÷](log ` c1)), nat1, (c0 ∈ ℤ ∧(c1 ∈ ℝ+ ∧ c1 ≠ 1)))\n  adantl(c0 ∈ ℤ, (c1 ∈ ℝ+ ∧ c1 ≠ 1), ((log ` c1)[÷](log ` c1))= 1)\n  reglogbas(c1)\n  mulid1d(c0, (c0 ∈ ℤ ∧(c1 ∈ ℝ+ ∧ c1 ≠ 1)))\n  adantr(c0 ∈ ℤ, (c1 ∈ ℝ+ ∧ c1 ≠ 1), c0 ∈ ℂ)\n  zcn(c0)\n}","parent":["3eqtrd","syl3anc","simprl","simpl","simpr","reglogexp","oveq2d","adantl","reglogbas","mulid1d","adantr","zcn"],"children":["pellfund14"]}]}