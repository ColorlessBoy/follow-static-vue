{"index":1576,"title":"Logarithms generalized to arbitrary base using ` logb `","content":"Most of this subsection was moved to main set.mm, section \"Logarithms to an arbitrary base\".","blocks":[{"name":"logb2aval","content":"Define the value of the ` logb ` function, the logarithm generalized to an arbitrary base, when used in the 2-argument form ` logb <. B , X >. ` (Contributed by David A. Wheeler, 21-Jan-2017.) (Revised by David A. Wheeler, 16-Jul-2017.)","origin":"thm logb2aval(class c0, class c1) {\n  |- wi(wa(wcel(c0, cdif(cc, cpr(nat0, nat1))), wcel(c1, cdif(cc, csn(nat0)))), wceq(cfv(clogb, cop(c0, c1)), co(cfv(clog, c1), cdiv, cfv(clog, c0))))\n} = {\n  syl5eqr(cfv(clogb, cop(c0, c1)), co(cfv(clog, c1), cdiv, cfv(clog, c0)), co(c0, clogb, c1), wa(wcel(c0, cdif(cc, cpr(nat0, nat1))), wcel(c1, cdif(cc, csn(nat0)))))\n  df-ov(c0, clogb, c1)\n  logbval(c0, c1)\n}","pretty":"thm logb2aval(class c0, class c1) {\n  ⊢ ((c0 ∈(ℂ \\ { 0, 1 })∧ c1 ∈(ℂ \\ { 0 }))→(logb ` < c0, c1 >)=((log ` c1)[÷](log ` c0)))\n} = {\n  syl5eqr((logb ` < c0, c1 >), ((log ` c1)[÷](log ` c0)), (c0[logb]c1), (c0 ∈(ℂ \\ { 0, 1 })∧ c1 ∈(ℂ \\ { 0 })))\n  df-ov(c0, clogb, c1)\n  logbval(c0, c1)\n}","parent":["syl5eqr","df-ov","logbval"],"children":[]}]}