{"index":1563,"title":"Miscellaneous Theorems","content":"Some of these theorems are used in the series of lemmas and theorems proving the defining properties of ` setrecs ` .","blocks":[{"name":"nfintd","content":"Bound-variable hypothesis builder for intersection. (Contributed by Emmett Weisz, 16-Jan-2020.)","origin":"thm nfintd(setvar s0, class c0, wff w0) {\n  |- wi(w0, wnfc(s0, cint(c0)))\n  -| wi(w0, wnfc(s0, c0))\n} = {\n  nfcxfrd(s0, cint(c0), cab(hs1, wal(hs0, wi(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0))))), w0)\n  df-int(hs1, hs0, c0)\n  nfabd(s0, hs1, w0, wal(hs0, wi(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0)))))\n  nfv(hs1, w0)\n  nfald(s0, hs0, w0, wi(wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0))))\n  nfv(hs0, w0)\n  nfimd(s0, w0, wcel(cv(hs0), c0), wcel(cv(hs1), cv(hs0)))\n  nfcrd(s0, hs0, c0, w0)\n  a1i(w0, wnf(s0, wcel(cv(hs1), cv(hs0))))\n  nfv(s0, wcel(cv(hs1), cv(hs0)))\n  diff.hs1.s(hs0)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.w(w0)\n  diff.hs0.w(w0)\n  diff.wcel.s(s0, cv(hs1), cv(hs0))\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm nfintd(setvar s0, class c0, wff w0) {\n  ⊢ (w0 → F/(s0, ⋂ c0))\n  ⊣ (w0 → F/(s0, c0))\n} = {\n  nfcxfrd(s0, ⋂ c0, { hs1 | ∀(hs0,(hs0 ∈ c0 → hs1 ∈ hs0))}, w0)\n  df-int(hs1, hs0, c0)\n  nfabd(s0, hs1, w0, ∀(hs0,(hs0 ∈ c0 → hs1 ∈ hs0)))\n  nfv(hs1, w0)\n  nfald(s0, hs0, w0, (hs0 ∈ c0 → hs1 ∈ hs0))\n  nfv(hs0, w0)\n  nfimd(s0, w0, hs0 ∈ c0, hs1 ∈ hs0)\n  nfcrd(s0, hs0, c0, w0)\n  a1i(w0, F/(s0, hs1 ∈ hs0))\n  nfv(s0, hs1 ∈ hs0)\n  diff.hs1.s(hs0)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.w(w0)\n  diff.hs0.w(w0)\n  diff.wcel.s(s0, hs1, hs0)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["nfcxfrd","df-int","nfabd","nfv","nfald","nfimd","nfcrd","a1i","diff.hs1.s","diff.hs1.c","diff.hs0.c","diff.hs1.w","diff.hs0.w","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":[]},{"name":"nfiund","content":"Bound-variable hypothesis builder for indexed union. (Contributed by Emmett Weisz, 6-Dec-2019.)","origin":"thm nfiund(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wi(w0, wnfc(s0, ciun(s1, c0, c1)))\n  -| wnf(s1, w0)\n  -| wi(w0, wnfc(s0, c0))\n  -| wi(w0, wnfc(s0, c1))\n} = {\n  nfcxfrd(s0, ciun(s1, c0, c1), cab(hs0, wrex(s1, c0, wcel(cv(hs0), c1))), w0)\n  df-iun(s1, hs0, c0, c1)\n  nfabd(s0, hs0, w0, wrex(s1, c0, wcel(cv(hs0), c1)))\n  nfv(hs0, w0)\n  nfrexd(s0, s1, c0, w0, wcel(cv(hs0), c1))\n  nfcrd(s0, hs0, c1, w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm nfiund(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (w0 → F/(s0, ⋃(s1 ∈ c0, c1)))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 → F/(s0, c0))\n  ⊣ (w0 → F/(s0, c1))\n} = {\n  nfcxfrd(s0, ⋃(s1 ∈ c0, c1), { hs0 | ∃(s1 ∈ c0, hs0 ∈ c1)}, w0)\n  df-iun(s1, hs0, c0, c1)\n  nfabd(s0, hs0, w0, ∃(s1 ∈ c0, hs0 ∈ c1))\n  nfv(hs0, w0)\n  nfrexd(s0, s1, c0, w0, hs0 ∈ c1)\n  nfcrd(s0, hs0, c1, w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["nfcxfrd","df-iun","nfabd","nfv","nfrexd","nfcrd","diffss.ex","diff.hs0.s","diff.hs0.c","diff.hs0.w"],"children":[]},{"name":"iunord","content":"The indexed union of a collection of ordinal numbers ` B ( x ) ` is ordinal. This proof is based on the proof of ~ ssorduni , but does not use it directly, since ~ ssorduni does not work when ` B ` is a proper class. (Contributed by Emmett Weisz, 3-Nov-2019.)","origin":"thm iunord(setvar s0, class c0, class c1) {\n  |- wi(wral(s0, c0, word(c1)), word(ciun(s0, c0, c1)))\n  -| diffsc(s0, c0)\n} = {\n  a1ii(wi(wral(s0, c0, word(c1)), word(ciun(s0, c0, c1))), diffsc(s0, c0))\n  sylc(wral(s0, c0, word(c1)), word(ciun(s0, c0, c1)), wtr(ciun(s0, c0, c1)), wss(ciun(s0, c0, c1), con0))\n  syl(wral(s0, c0, word(c1)), wtr(ciun(s0, c0, c1)), wral(s0, c0, wtr(c1)))\n  ralimi(s0, c0, word(c1), wtr(c1))\n  ordtr(c1)\n  triun(s0, c0, c1)\n  ssrdv(hs0, ciun(s0, c0, c1), con0, wral(s0, c0, word(c1)))\n  syl5bi(wral(s0, c0, word(c1)), wcel(cv(hs0), ciun(s0, c0, c1)), wcel(cv(hs0), con0), wrex(s0, c0, wcel(cv(hs0), c1)))\n  eliun(s0, cv(hs0), c0, c1)\n  rexlimd(s0, c0, wral(s0, c0, word(c1)), wcel(cv(hs0), c1), wcel(cv(hs0), con0))\n  nfra1(s0, c0, word(c1))\n  nfv(s0, wcel(cv(hs0), con0))\n  syl6(wral(s0, c0, word(c1)), wcel(cv(s0), c0), wi(wcel(cv(hs0), c1), wcel(cv(hs0), con0)), word(c1))\n  rsp(s0, c0, word(c1))\n  ex(word(c1), wcel(cv(hs0), c1), wcel(cv(hs0), con0))\n  ordelon(c1, cv(hs0))\n  mpii(wtr(ciun(s0, c0, c1)), wss(ciun(s0, c0, c1), con0), word(ciun(s0, c0, c1)), word(con0))\n  ordon()\n  3exp(wtr(ciun(s0, c0, c1)), wss(ciun(s0, c0, c1), con0), word(con0), word(ciun(s0, c0, c1)))\n  trssord(ciun(s0, c0, c1), con0)\n  diff.hs0.c(ciun(s0, c0, c1))\n  diff.hs0.c(con0)\n  diff.hs0.w(wral(s0, c0, word(c1)))\n  diff.wcel.s(s0, cv(hs0), con0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.con0.s(s0)\n}","pretty":"thm iunord(setvar s0, class c0, class c1) {\n  ⊢ (∀(s0 ∈ c0, Ord(c1))→ Ord(⋃(s0 ∈ c0, c1)))\n  ⊣ d(s0, c0)\n} = {\n  a1ii((∀(s0 ∈ c0, Ord(c1))→ Ord(⋃(s0 ∈ c0, c1))), d(s0, c0))\n  sylc(∀(s0 ∈ c0, Ord(c1)), Ord(⋃(s0 ∈ c0, c1)), Tr(⋃(s0 ∈ c0, c1)), ⋃(s0 ∈ c0, c1)⊆ On)\n  syl(∀(s0 ∈ c0, Ord(c1)), Tr(⋃(s0 ∈ c0, c1)), ∀(s0 ∈ c0, Tr(c1)))\n  ralimi(s0, c0, Ord(c1), Tr(c1))\n  ordtr(c1)\n  triun(s0, c0, c1)\n  ssrdv(hs0, ⋃(s0 ∈ c0, c1), con0, ∀(s0 ∈ c0, Ord(c1)))\n  syl5bi(∀(s0 ∈ c0, Ord(c1)), hs0 ∈ ⋃(s0 ∈ c0, c1), hs0 ∈ On, ∃(s0 ∈ c0, hs0 ∈ c1))\n  eliun(s0, hs0, c0, c1)\n  rexlimd(s0, c0, ∀(s0 ∈ c0, Ord(c1)), hs0 ∈ c1, hs0 ∈ On)\n  nfra1(s0, c0, Ord(c1))\n  nfv(s0, hs0 ∈ On)\n  syl6(∀(s0 ∈ c0, Ord(c1)), s0 ∈ c0, (hs0 ∈ c1 → hs0 ∈ On), Ord(c1))\n  rsp(s0, c0, Ord(c1))\n  ex(Ord(c1), hs0 ∈ c1, hs0 ∈ On)\n  ordelon(c1, hs0)\n  mpii(Tr(⋃(s0 ∈ c0, c1)), ⋃(s0 ∈ c0, c1)⊆ On, Ord(⋃(s0 ∈ c0, c1)), Ord(On))\n  ordon()\n  3exp(Tr(⋃(s0 ∈ c0, c1)), ⋃(s0 ∈ c0, c1)⊆ On, Ord(On), Ord(⋃(s0 ∈ c0, c1)))\n  trssord(⋃(s0 ∈ c0, c1), con0)\n  diff.hs0.c(⋃(s0 ∈ c0, c1))\n  diff.hs0.c(con0)\n  diff.hs0.w(∀(s0 ∈ c0, Ord(c1)))\n  diff.wcel.s(s0, hs0, con0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.con0.s(s0)\n}","parent":["a1ii","sylc","syl","ralimi","ordtr","triun","ssrdv","syl5bi","eliun","rexlimd","nfra1","nfv","syl6","rsp","ex","ordelon","mpii","ordon","3exp","trssord","diff.hs0.c","diff.hs0.w","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.con0.s"],"children":["iunordi"]},{"name":"iunordi","content":"The indexed union of a collection of ordinal numbers ` B ( x ) ` is ordinal. (Contributed by Emmett Weisz, 3-Nov-2019.)","origin":"thm iunordi(setvar s0, class c0, class c1) {\n  |- word(ciun(s0, c0, c1))\n  -| word(c1)\n  -| diffsc(s0, c0)\n} = {\n  mprg(s0, c0, word(ciun(s0, c0, c1)), word(c1))\n  iunord(s0, c0, c1)\n  a1i(wcel(cv(s0), c0), word(c1))\n}","pretty":"thm iunordi(setvar s0, class c0, class c1) {\n  ⊢ Ord(⋃(s0 ∈ c0, c1))\n  ⊣ Ord(c1)\n  ⊣ d(s0, c0)\n} = {\n  mprg(s0, c0, Ord(⋃(s0 ∈ c0, c1)), Ord(c1))\n  iunord(s0, c0, c1)\n  a1i(s0 ∈ c0, Ord(c1))\n}","parent":["mprg","iunord","a1i"],"children":[]},{"name":"spd","content":"Specialization deduction, using implicit substitution. Based on the proof of ~ spimed . (Contributed by Emmett Weisz, 17-Jan-2020.)","origin":"thm spd(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wal(s0, w1), w2))\n  -| wi(w0, wnf(s0, w2))\n  -| wi(wceq(cv(s0), cv(s1)), wb(w1, w2))\n} = {\n  syl5(w0, wal(s0, w1), w2, wex(s0, w2))\n  19.35i(s0, w1, w2)\n  eximii(s0, wi(w1, w2), wceq(cv(s0), cv(s1)))\n  ax6e(s0, s1)\n  biimpd(wceq(cv(s0), cv(s1)), w1, w2)\n  19.9d(s0, w0, w2)\n}","pretty":"thm spd(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∀(s0, w1)→ w2))\n  ⊣ (w0 → F/(s0, w2))\n  ⊣ (s0 = s1 →(w1 ↔ w2))\n} = {\n  syl5(w0, ∀(s0, w1), w2, ∃(s0, w2))\n  19.35i(s0, w1, w2)\n  eximii(s0, (w1 → w2), s0 = s1)\n  ax6e(s0, s1)\n  biimpd(s0 = s1, w1, w2)\n  19.9d(s0, w0, w2)\n}","parent":["syl5","19.35i","eximii","ax6e","biimpd","19.9d"],"children":[]},{"name":"spcdvw","content":"A version of ~ spcdv where ` ps ` and ` ch ` are direct substitutions of each other. This theorem is useful because it does not require ` ph ` and ` x ` to be distinct variables. (Contributed by Emmett Weisz, 12-Apr-2020.)","origin":"thm spcdvw(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wal(s0, w1), w2))\n  -| wi(w0, wcel(c0, c1))\n  -| wi(wceq(cv(s0), c0), wb(w1, w2))\n  -| diffsc(s0, c0)\n  -| diffsw(s0, w2)\n} = {\n  mpsyl(w0, wi(wal(s0, w1), w2), wal(s0, wi(wceq(cv(s0), c0), wi(w1, w2))), wcel(c0, c1))\n  ax-gen(s0, wi(wceq(cv(s0), c0), wi(w1, w2)))\n  biimpd(wceq(cv(s0), c0), w1, w2)\n  spcimgft(s0, c0, c1, w1, w2)\n  nfv(s0, w2)\n  nfcv(s0, c0)\n}","pretty":"thm spcdvw(setvar s0, class c0, class c1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∀(s0, w1)→ w2))\n  ⊣ (w0 → c0 ∈ c1)\n  ⊣ (s0 = c0 →(w1 ↔ w2))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, w2)\n} = {\n  mpsyl(w0, (∀(s0, w1)→ w2), ∀(s0,(s0 = c0 →(w1 → w2))), c0 ∈ c1)\n  ax-gen(s0, (s0 = c0 →(w1 → w2)))\n  biimpd(s0 = c0, w1, w2)\n  spcimgft(s0, c0, c1, w1, w2)\n  nfv(s0, w2)\n  nfcv(s0, c0)\n}","parent":["mpsyl","ax-gen","biimpd","spcimgft","nfv","nfcv"],"children":["setrec1lem4"]},{"name":"tfis2d","content":"Transfinite Induction Schema, using implicit substitution. (Contributed by Emmett Weisz, 3-May-2020.)","origin":"thm tfis2d(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wcel(cv(s0), con0), w1))\n  -| wi(w0, wi(wceq(cv(s0), cv(s1)), wb(w1, w2)))\n  -| wi(w0, wi(wcel(cv(s0), con0), wi(wral(s1, cv(s0), w2), w1)))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w0)\n  -| diffsw(s0, w2)\n  -| diffsw(s1, w0)\n  -| diffsw(s1, w1)\n} = {\n  com12(w0, wcel(cv(s0), con0), w1)\n  tfis2(s0, s1, wi(w0, w1), wi(w0, w2))\n  pm5.74d(wceq(cv(s0), cv(s1)), w0, w1, w2)\n  com12(wceq(cv(s0), cv(s1)), w0, wb(w1, w2))\n  syl5bi(wcel(cv(s0), con0), wral(s1, cv(s0), wi(w0, w2)), wi(w0, w1), wi(w0, wral(s1, cv(s0), w2)))\n  r19.21v(s1, cv(s0), w0, w2)\n  a2d(wcel(cv(s0), con0), w0, wral(s1, cv(s0), w2), w1)\n  com12(wcel(cv(s0), con0), w0, wi(wral(s1, cv(s0), w2), w1))\n  diff.wi.s(s0, w0, w2)\n  diff.wi.s(s1, w0, w1)\n}","pretty":"thm tfis2d(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(s0 ∈ On → w1))\n  ⊣ (w0 →(s0 = s1 →(w1 ↔ w2)))\n  ⊣ (w0 →(s0 ∈ On →(∀(s1 ∈ s0, w2)→ w1)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w0)\n  ⊣ d(s0, w2)\n  ⊣ d(s1, w0)\n  ⊣ d(s1, w1)\n} = {\n  com12(w0, s0 ∈ On, w1)\n  tfis2(s0, s1, (w0 → w1), (w0 → w2))\n  pm5.74d(s0 = s1, w0, w1, w2)\n  com12(s0 = s1, w0, (w1 ↔ w2))\n  syl5bi(s0 ∈ On, ∀(s1 ∈ s0,(w0 → w2)), (w0 → w1), (w0 → ∀(s1 ∈ s0, w2)))\n  r19.21v(s1, s0, w0, w2)\n  a2d(s0 ∈ On, w0, ∀(s1 ∈ s0, w2), w1)\n  com12(s0 ∈ On, w0, (∀(s1 ∈ s0, w2)→ w1))\n  diff.wi.s(s0, w0, w2)\n  diff.wi.s(s1, w0, w1)\n}","parent":["com12","tfis2","pm5.74d","syl5bi","r19.21v","a2d","diff.wi.s"],"children":[]},{"name":"bnd2d","content":"Deduction form of ~ bnd2 . (Contributed by Emmett Weisz, 19-Jan-2021.)","origin":"thm bnd2d(setvar s0, setvar s1, setvar s2, class c0, class c1, wff w0, wff w1) {\n  |- wi(w0, wex(s0, wa(wss(cv(s0), c0), wral(s1, c1, wrex(s2, cv(s0), w1)))))\n  -| wi(w0, wcel(c1, universe))\n  -| wi(w0, wral(s1, c1, wrex(s2, c0, w1)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s2, c0)\n  -| diffsw(s0, w1)\n} = {\n  sylc(w0, wex(s0, wa(wss(cv(s0), c0), wral(s1, c1, wrex(s2, cv(s0), w1)))), wcel(c1, universe), wral(s1, c1, wrex(s2, c0, w1)))\n  dedth(c1, emptycls, wcel(c1, universe), wi(wral(s1, c1, wrex(s2, c0, w1)), wex(s0, wa(wss(cv(s0), c0), wral(s1, c1, wrex(s2, cv(s0), w1))))), wi(wral(s1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, c0, w1)), wex(s0, wa(wss(cv(s0), c0), wral(s1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, cv(s0), w1))))))\n  imbi12d(wceq(c1, cif(c1, emptycls, wcel(c1, universe))), wral(s1, c1, wrex(s2, c0, w1)), wex(s0, wa(wss(cv(s0), c0), wral(s1, c1, wrex(s2, cv(s0), w1)))), wral(s1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, c0, w1)), wex(s0, wa(wss(cv(s0), c0), wral(s1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, cv(s0), w1)))))\n  raleq(s1, c1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, c0, w1))\n  exbidv(s0, wceq(c1, cif(c1, emptycls, wcel(c1, universe))), wa(wss(cv(s0), c0), wral(s1, c1, wrex(s2, cv(s0), w1))), wa(wss(cv(s0), c0), wral(s1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, cv(s0), w1))))\n  anbi2d(wceq(c1, cif(c1, emptycls, wcel(c1, universe))), wss(cv(s0), c0), wral(s1, c1, wrex(s2, cv(s0), w1)), wral(s1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, cv(s0), w1)))\n  raleq(s1, c1, cif(c1, emptycls, wcel(c1, universe)), wrex(s2, cv(s0), w1))\n  bnd2(s1, s2, s0, cif(c1, emptycls, wcel(c1, universe)), c0, w1)\n  elimel(c1, universe, emptycls)\n  0ex()\n  diff.cif.s(s1, c1, emptycls, wcel(c1, universe))\n  diff.emptycls.s(s1)\n  diff.wcel.s(s1, c1, universe)\n  diff.universe.s(s1)\n  diff.wceq.s(s0, c1, cif(c1, emptycls, wcel(c1, universe)))\n  diffss.ex(s1, s0)\n  diffss.ex(s2, s0)\n  diff.cif.s(s0, c1, emptycls, wcel(c1, universe))\n  diff.emptycls.s(s0)\n  diff.wcel.s(s0, c1, universe)\n  diff.universe.s(s0)\n}","pretty":"thm bnd2d(setvar s0, setvar s1, setvar s2, class c0, class c1, wff w0, wff w1) {\n  ⊢ (w0 → ∃(s0,(s0 ⊆ c0 ∧ ∀(s1 ∈ c1, ∃(s2 ∈ s0, w1)))))\n  ⊣ (w0 → c1 ∈ 𝕌)\n  ⊣ (w0 → ∀(s1 ∈ c1, ∃(s2 ∈ c0, w1)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s2, c0)\n  ⊣ d(s0, w1)\n} = {\n  sylc(w0, ∃(s0,(s0 ⊆ c0 ∧ ∀(s1 ∈ c1, ∃(s2 ∈ s0, w1)))), c1 ∈ 𝕌, ∀(s1 ∈ c1, ∃(s2 ∈ c0, w1)))\n  dedth(c1, emptycls, c1 ∈ 𝕌, (∀(s1 ∈ c1, ∃(s2 ∈ c0, w1))→ ∃(s0,(s0 ⊆ c0 ∧ ∀(s1 ∈ c1, ∃(s2 ∈ s0, w1))))), (∀(s1 ∈ if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ c0, w1))→ ∃(s0,(s0 ⊆ c0 ∧ ∀(s1 ∈ if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ s0, w1))))))\n  imbi12d(c1 = if(c1 ∈ 𝕌, c1, ∅), ∀(s1 ∈ c1, ∃(s2 ∈ c0, w1)), ∃(s0,(s0 ⊆ c0 ∧ ∀(s1 ∈ c1, ∃(s2 ∈ s0, w1)))), ∀(s1 ∈ if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ c0, w1)), ∃(s0,(s0 ⊆ c0 ∧ ∀(s1 ∈ if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ s0, w1)))))\n  raleq(s1, c1, if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ c0, w1))\n  exbidv(s0, c1 = if(c1 ∈ 𝕌, c1, ∅), (s0 ⊆ c0 ∧ ∀(s1 ∈ c1, ∃(s2 ∈ s0, w1))), (s0 ⊆ c0 ∧ ∀(s1 ∈ if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ s0, w1))))\n  anbi2d(c1 = if(c1 ∈ 𝕌, c1, ∅), s0 ⊆ c0, ∀(s1 ∈ c1, ∃(s2 ∈ s0, w1)), ∀(s1 ∈ if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ s0, w1)))\n  raleq(s1, c1, if(c1 ∈ 𝕌, c1, ∅), ∃(s2 ∈ s0, w1))\n  bnd2(s1, s2, s0, if(c1 ∈ 𝕌, c1, ∅), c0, w1)\n  elimel(c1, universe, emptycls)\n  0ex()\n  diff.cif.s(s1, c1, emptycls, c1 ∈ 𝕌)\n  diff.emptycls.s(s1)\n  diff.wcel.s(s1, c1, universe)\n  diff.universe.s(s1)\n  diff.wceq.s(s0, c1, if(c1 ∈ 𝕌, c1, ∅))\n  diffss.ex(s1, s0)\n  diffss.ex(s2, s0)\n  diff.cif.s(s0, c1, emptycls, c1 ∈ 𝕌)\n  diff.emptycls.s(s0)\n  diff.wcel.s(s0, c1, universe)\n  diff.universe.s(s0)\n}","parent":["sylc","dedth","imbi12d","raleq","exbidv","anbi2d","bnd2","elimel","0ex","diff.cif.s","diff.emptycls.s","diff.wcel.s","diff.universe.s","diff.wceq.s","diffss.ex"],"children":["setrec1lem3"]},{"name":"dffun3f","content":"Alternate definition of function, using bound-variable hypotheses instead of distinct variable conditions. (Contributed by Emmett Weisz, 14-Mar-2021.)","origin":"thm dffun3f(setvar s0, setvar s1, setvar s2, class c0) {\n  |- wb(wfun(c0), wa(wrel(c0), wal(s0, wex(s1, wal(s2, wi(wbr(cv(s0), c0, cv(s2)), wceq(cv(s2), cv(s1))))))))\n  -| wnfc(s0, c0)\n  -| wnfc(s2, c0)\n  -| wnfc(s1, c0)\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  bitri(wfun(c0), wa(wrel(c0), wal(s0, wex(s1, wal(s2, wi(wbr(cv(s0), c0, cv(s2)), wceq(cv(s2), cv(s1))))))), wa(wrel(c0), wal(s0, wmo(s2, wbr(cv(s0), c0, cv(s2))))))\n  dffun6f(s0, s2, c0)\n  anbi2i(wrel(c0), wal(s0, wmo(s2, wbr(cv(s0), c0, cv(s2)))), wal(s0, wex(s1, wal(s2, wi(wbr(cv(s0), c0, cv(s2)), wceq(cv(s2), cv(s1)))))))\n  albii(s0, wmo(s2, wbr(cv(s0), c0, cv(s2))), wex(s1, wal(s2, wi(wbr(cv(s0), c0, cv(s2)), wceq(cv(s2), cv(s1))))))\n  mof(s2, s1, wbr(cv(s0), c0, cv(s2)))\n  nfbr(s1, cv(s0), c0, cv(s2))\n  nfcv(s1, cv(s0))\n  nfcv(s1, cv(s2))\n  diffss.ex(s2, s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n}","pretty":"thm dffun3f(setvar s0, setvar s1, setvar s2, class c0) {\n  ⊢ (Fun(c0)↔(Rel(c0)∧ ∀(s0, ∃(s1, ∀(s2,(s0[c0]s2 → s2 = s1))))))\n  ⊣ F/(s0, c0)\n  ⊣ F/(s2, c0)\n  ⊣ F/(s1, c0)\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  bitri(Fun(c0), (Rel(c0)∧ ∀(s0, ∃(s1, ∀(s2,(s0[c0]s2 → s2 = s1))))), (Rel(c0)∧ ∀(s0, ∃*(s2, s0[c0]s2))))\n  dffun6f(s0, s2, c0)\n  anbi2i(Rel(c0), ∀(s0, ∃*(s2, s0[c0]s2)), ∀(s0, ∃(s1, ∀(s2,(s0[c0]s2 → s2 = s1)))))\n  albii(s0, ∃*(s2, s0[c0]s2), ∃(s1, ∀(s2,(s0[c0]s2 → s2 = s1))))\n  mof(s2, s1, s0[c0]s2)\n  nfbr(s1, s0, c0, s2)\n  nfcv(s1, s0)\n  nfcv(s1, s2)\n  diffss.ex(s2, s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, s2)\n}","parent":["bitri","dffun6f","anbi2i","albii","mof","nfbr","nfcv","diffss.ex","diff.cv.s"],"children":["setrec2lem2"]}]}