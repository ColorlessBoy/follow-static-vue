{"index":64,"title":"Axiom scheme ax-12 (Substitution)","content":"","blocks":[{"name":"ax-12","content":"Axiom of Substitution. One of the 5 equality axioms of predicate calculus. The final consequent ` A. x ( x = y -> ph ) ` is a way of expressing \" ` y ` substituted for ` x ` in wff ` ph ` \" (cf. ~ sb6 ). It is based on Lemma 16 of [Tarski] p. 70 and Axiom C8 of [Monk2] p. 105, from which it can be proved by cases. The original version of this axiom was ~ ax-c15 and was replaced with this shorter ~ ax-12 in Jan. 2007. The old axiom is proved from this one as theorem ~ axc15 . Conversely, this axiom is proved from ~ ax-c15 as theorem ~ ax12 . Juha Arpiainen proved the metalogical independence of this axiom (in the form of the older axiom ~ ax-c15 ) from the others on 19-Jan-2006. See item 9a at ~ http://us.metamath.org/award2003.html . See ~ ax12v and ~ ax12v2 for other equivalents of this axiom that (unlike this axiom) have distinct variable restrictions. This axiom scheme is logically redundant (see ~ ax12w ) but is used as an auxiliary axiom scheme to achieve scheme completeness. (Contributed by NM, 22-Jan-2007.) (New usage is discouraged.)","origin":"axiom ax-12(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n}","pretty":"axiom ax-12(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →(∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))\n}","parent":[],"children":["ax12v","equs5aALT","equs5eALT","axc11r"]},{"name":"ax12v","content":"This is essentially axiom ~ ax-12 weakened by additional restrictions on variables. Besides ~ axc11r , this theorem should be the only one referencing ~ ax-12 directly. Both restrictions on variables have their own value. If for a moment we assume ` x ` could be set to ` y ` , then, after elimination of the tautology ` y = y ` , immediately we have ` ph -> A. y ph ` for all ` ph ` and ` y ` , that is ~ ax-5 , a degenerate result. The second restriction is not necessary, but a simplification that makes the following interpretation easier to see. Since ` ph ` textually at most depends on ` x ` , we can look at it at some given 'fixed' ` y ` . This theorem now states that the truth value of ` ph ` will stay constant, as long as we 'vary ` x ` around ` y ` ' only such that ` x = y ` still holds. Or in other words, equality is the finest grained logical expression. If you cannot differ two sets by ` = ` , you won't find a whatever sophisticated expression that does. One might wonder how the described variation of ` x ` is possible at all. Note that Metamath is a text processor that easily sees a difference between text chunks ` { x | -. x = x } ` and ` { y | -. y = y } ` . Our usual interpretation is to abstract from textual variations of the same set, but we are free to interpret Metamath's formalism differently, and in fact let ` x ` run through all textual representations of sets. Had we allowed ` ph ` to depend also on ` y ` , this idea is both harder to see, and it is less clear that this extra freedom introduces effects not covered by other axioms. (Contributed by Wolf Lammen, 8-Aug-2020.)","origin":"thm ax12v(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w0)\n} = {\n  a1ii(wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))), diffss(s0, s1))\n  syl5(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wal(s1, w0))\n  ax-5(s1, w0)\n  ax-12(s0, s1, w0)\n}","pretty":"thm ax12v(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w0)\n} = {\n  a1ii((s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0)))), d(s0, s1))\n  syl5(s0 = s1, w0, ∀(s0,(s0 = s1 → w0)), ∀(s1, w0))\n  ax-5(s1, w0)\n  ax-12(s0, s1, w0)\n}","parent":["a1ii","syl5","ax-5","ax-12"],"children":["ax12v2","19.8a","sbequ1","axc16g","exsb","axc15","axc15OLD","exsbOLD","dfmo","2eu6","bj-ax12v","bj-ssbid1ALT","bj-sb","rexsb"]},{"name":"ax12v2","content":"It is possible to remove any restriction on ` ph ` in ~ ax12v . Same as Axiom C8 of [Monk2] p. 105. Use ~ ax12v instead when sufficient. (Contributed by NM, 5-Aug-1993.) Remove dependencies on ~ ax-10 and ~ ax-13 . (Revised by Jim Kingdon, 15-Dec-2017.) (Proof shortened by Wolf Lammen, 8-Dec-2019.)","origin":"thm ax12v2(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  -| diffss(s0, s1)\n} = {\n  exlimiiv(hs0, wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))), wceq(cv(s1), cv(hs0)))\n  syld(wceq(cv(s1), cv(hs0)), wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))), wceq(cv(s0), cv(hs0)))\n  syl9r(wceq(cv(s1), cv(hs0)), wceq(cv(s0), cv(hs0)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))\n  ax12v(s0, hs0, w0)\n  alimdv(s0, wceq(cv(s1), cv(hs0)), wi(wceq(cv(s0), cv(hs0)), w0), wi(wceq(cv(s0), cv(s1)), w0))\n  imim1d(wceq(cv(s1), cv(hs0)), wceq(cv(s0), cv(hs0)), w0, wceq(cv(s0), cv(s1)))\n  equtrr(s1, hs0, s0)\n  ax6evr(hs0, s1)\n  diff.hs0.w(wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))))\n  diff.hs0.w(w0)\n  diff.wceq.s(s0, cv(s1), cv(hs0))\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.s(s1)\n}","pretty":"thm ax12v2(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n  ⊣ d(s0, s1)\n} = {\n  exlimiiv(hs0, (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0)))), s1 = hs0)\n  syld(s1 = hs0, s0 = s1, (w0 → ∀(s0,(s0 = s1 → w0))), s0 = hs0)\n  syl9r(s1 = hs0, s0 = hs0, w0, ∀(s0,(s0 = s1 → w0)), ∀(s0,(s0 = hs0 → w0)))\n  ax12v(s0, hs0, w0)\n  alimdv(s0, s1 = hs0, (s0 = hs0 → w0), (s0 = s1 → w0))\n  imim1d(s1 = hs0, s0 = hs0, w0, s0 = s1)\n  equtrr(s1, hs0, s0)\n  ax6evr(hs0, s1)\n  diff.hs0.w((s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0)))))\n  diff.hs0.w(w0)\n  diff.wceq.s(s0, s1, hs0)\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.s(s1)\n}","parent":["exlimiiv","syld","syl9r","ax12v","alimdv","imim1d","equtrr","ax6evr","diff.hs0.w","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["sb56","wl-lem-exsb","wl-lem-moexsb"]},{"name":"19.8a","content":"If a wff is true, it is true for at least one instance. Special case of Theorem 19.8 of [Margaris] p. 89. See ~ 19.8v for a version with a disjoint variable condition requiring fewer axioms. (Contributed by NM, 9-Jan-1993.) Allow a shortening of ~ sp . (Revised by Wolf Lammen, 13-Jan-2018.) (Proof shortened by Wolf Lammen, 8-Dec-2019.)","origin":"thm 19.8a(setvar s0, wff w0) {\n  |- wi(w0, wex(s0, w0))\n} = {\n  exlimiiv(hs0, wi(w0, wex(s0, w0)), wceq(cv(s0), cv(hs0)))\n  syl6mpi(wceq(cv(s0), cv(hs0)), w0, wex(s0, w0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)), wex(s0, wceq(cv(s0), cv(hs0))))\n  ax12v(s0, hs0, w0)\n  ax6ev(s0, hs0)\n  exim(s0, wceq(cv(s0), cv(hs0)), w0)\n  ax6evr(hs0, s0)\n  diff.hs0.w(wi(w0, wex(s0, w0)))\n  diffss.ex(s0, hs0)\n  diff.hs0.w(w0)\n  diff.hs0.s(s0)\n}","pretty":"thm 19.8a(setvar s0, wff w0) {\n  ⊢ (w0 → ∃(s0, w0))\n} = {\n  exlimiiv(hs0, (w0 → ∃(s0, w0)), s0 = hs0)\n  syl6mpi(s0 = hs0, w0, ∃(s0, w0), ∀(s0,(s0 = hs0 → w0)), ∃(s0, s0 = hs0))\n  ax12v(s0, hs0, w0)\n  ax6ev(s0, hs0)\n  exim(s0, s0 = hs0, w0)\n  ax6evr(hs0, s0)\n  diff.hs0.w((w0 → ∃(s0, w0)))\n  diffss.ex(s0, hs0)\n  diff.hs0.w(w0)\n  diff.hs0.s(s0)\n}","parent":["exlimiiv","syl6mpi","ax12v","ax6ev","exim","ax6evr","diff.hs0.w","diffss.ex","diff.hs0.s"],"children":["19.8ad","sp","19.2g","19.23bi","nexr","qexmid","nf5r","19.9t","ax6e","exdistrf","equvini","2ax6e","sb1","sbequ1OLD","sbequ1ALT","euor2","2moex","2euex","2moswap","2mo","rspe","ceqex","mo2icl","intab","eusv2nf","copsexg","dmcosseq","dminss","imainss","relssdmrn","oprabid","hta","axextnd","axpowndlem2","axregndlem1","axregnd","fpwwe","reclem2pr","bnj1121","frrlem11","finminlem","amosym1","bj-ssbft","bj-19.23bit","bj-nexrt","bj-19.9htbi","bj-sbsb","bj-finsumval0","wl-exeq","ax12indn","pm11.58","axc11next","iotavalsb","vk15.4j","onfrALTlem1","onfrALTlem1VD","vk15.4jVD","suprnmpt","ssfiunibd"]},{"name":"19.8ad","content":"If a wff is true, it is true for at least one instance. Deduction form of ~ 19.8a . (Contributed by DAW, 13-Feb-2017.)","origin":"thm 19.8ad(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wex(s0, w1))\n  -| wi(w0, w1)\n} = {\n  syl(w0, wex(s0, w1), w1)\n  19.8a(s0, w1)\n}","pretty":"thm 19.8ad(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → ∃(s0, w1))\n  ⊣ (w0 → w1)\n} = {\n  syl(w0, ∃(s0, w1), w1)\n  19.8a(s0, w1)\n}","parent":["syl","19.8a"],"children":["dfmo","domtriomlem","axrepnd","axunndlem1","axunnd","axpownd","axacndlem1","axacndlem2","axacndlem3","axacndlem4","axacndlem5","axacnd","pwfseqlem4a","pwfseqlem4","bnj1189","isbasisrelowllem1","isbasisrelowllem2","gneispace","ovncvrrp"]},{"name":"sp","content":"Specialization. A universally quantified wff implies the wff without a quantifier. Axiom scheme B5 of [Tarski] p. 67 (under his system S2, defined in the last paragraph on p. 77). Also appears as Axiom scheme C5' in [Megill] p. 448 (p. 16 of the preprint). This corresponds to the axiom (T) of modal logic. For the axiom of specialization presented in many logic textbooks, see theorem ~ stdpc4 . This theorem shows that our obsolete axiom ~ ax-c5 can be derived from the others. The proof uses ideas from the proof of Lemma 21 of [Monk2] p. 114. It appears that this scheme cannot be derived directly from Tarski's axioms without auxiliary axiom scheme ~ ax-12 . It is thought the best we can do using only Tarski's axioms is ~ spw . Also see ~ spvw where ` x ` and ` ph ` are disjoint, using fewer axioms. (Contributed by NM, 21-May-2008.) (Proof shortened by Scott Fenton, 24-Jan-2011.) (Proof shortened by Wolf Lammen, 13-Jan-2018.)","origin":"thm sp(setvar s0, wff w0) {\n  |- wi(wal(s0, w0), w0)\n} = {\n  sylbi(wal(s0, w0), w0, wn(wex(s0, wn(w0))))\n  alex(s0, w0)\n  con1i(wex(s0, wn(w0)), w0)\n  19.8a(s0, wn(w0))\n}","pretty":"thm sp(setvar s0, wff w0) {\n  ⊢ (∀(s0, w0)→ w0)\n} = {\n  sylbi(∀(s0, w0), w0, ¬ ∃(s0, ¬ w0))\n  alex(s0, w0)\n  con1i(∃(s0, ¬ w0), w0)\n  19.8a(s0, ¬ w0)\n}","parent":["sylbi","alex","con1i","19.8a"],"children":["spi","sps","2sp","spsd","19.21bi","19.3t","19.3","19.9d","sbequ2","axc16gb","sb56","spsbimvOLD","axc7","axc4","19.12","exsb","ax12","ax12b","ax13ALT","hbae","exsbOLD","sb4a","sb2vOLDOLD","dfsb2","sbequiOLD","nfsb4t","sb2vOLDALT","sb2ALT","dfsb2ALT","sbequiALT","nfsb4tALT","mo3","mo3OLD","mopick","axi4","axi5r","nfcr","rsp","ceqex","elrab3t","abidnf","mob2","sbcbi2","sbcnestgf","mpteq12f","axrep2","axnulALT","dtru","eusv1","alxfr","axprlem4","axprlem5","iota1","dffv2","fiint","isf32lem9","nd3","axrepnd","axpowndlem2","axpowndlem3","axacndlem4","trclfvcotr","relexpindlem","fiinopn","ex-natded9.26-2","bnj1294","bnj570","bnj953","bnj1204","bnj1388","frmin","bj-hbxfrbi","bj-ssbft","bj-ssbid2ALT","bj-sb","bj-spst","bj-19.21bit","bj-axrep2","bj-dtru","bj-hbaeb2","bj-hbnaeb","bj-sbsb","bj-nfcsym","exlimim","exellim","wl-aleq","wl-equsal1i","wl-sb8t","wl-2spsbbi","wl-lem-exsb","wl-lem-moexsb","wl-mo2tf","wl-eutf","wl-mo2t","wl-mo3t","wl-sb8eut","wl-ax11-lem2","nfbii2OLD","prtlem14","axc5","setindtr","pm11.57","pm11.59","axc5c4c711toc7","axc5c4c711to11","axc11next","iotain","eubiOLD","ssralv2","19.41rg","hbexg","ax6e2ndeq","ssralv2VD","19.41rgVD","hbimpgVD","hbexgVD","ax6e2eqVD","ax6e2ndeqVD","vk15.4jVD","ax6e2ndeqALT","rexsb","setrec1lem4"]},{"name":"spi","content":"Inference rule of universal instantiation, or universal specialization. Converse of the inference rule of (universal) generalization ~ ax-gen . Contrary to the rule of generalization, its closed form is valid, see ~ sp . (Contributed by NM, 5-Aug-1993.)","origin":"thm spi(setvar s0, wff w0) {\n  |- w0\n  -| wal(s0, w0)\n} = {\n  ax-mp(w0, wal(s0, w0))\n  sp(s0, w0)\n}","pretty":"thm spi(setvar s0, wff w0) {\n  ⊢ w0\n  ⊣ ∀(s0, w0)\n} = {\n  ax-mp(w0, ∀(s0, w0))\n  sp(s0, w0)\n}","parent":["ax-mp","sp"],"children":["dariiALT","barbariALT","cesareOLD","camestresOLD","festinoALT","barocoALT","cesaroOLD","camestrosOLD","datisiOLD","disamisOLD","daraptiALT","calemesOLD","dimatisOLD","fresisonOLD","calemosOLD","fesapoOLD","bamalipOLD","kmlem2","axac2","axac","axaci","bnj864"]},{"name":"sps","content":"Generalization of antecedent. (Contributed by NM, 5-Jan-1993.)","origin":"thm sps(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, w0), w1)\n  -| wi(w0, w1)\n} = {\n  syl(wal(s0, w0), w1, w0)\n  sp(s0, w0)\n}","pretty":"thm sps(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ w1)\n  ⊣ (w0 → w1)\n} = {\n  syl(∀(s0, w0), w1, w0)\n  sp(s0, w0)\n}","parent":["syl","sp"],"children":["2sp","19.2g","nfim1","axc16g","axc11r","axc15","axc15OLD","equvel","drsb2","sb1","sb4a","dfsb1","dfsb2","drsb1","nfsb4t","sbi1OLD","sbco2","sbco3","sb9","sbal1","dfsb2ALT","nfsb4tALT","sbi1ALT","sbco2ALT","eujustALT","2eu6","ralcom2","ceqsalgALT","reu6","sbcal","reldisj","dfnfc2","nfnid","eusvnfb","axprlem1","axprlem2","mosubopt","dfid3","idrefOLD","fv3","fvmptt","fnoprabg","wfrlem5","pssnn","kmlem16","nd3","axunndlem1","axunnd","axpowndlem1","axregndlem1","axregndlem2","axacndlem5","fundmpss","frrlem5","nalfal","unisym1","bj-sbsb","bj-ax9","wl-nfimf1","wl-dral1d","wl-nfs1t","wl-sb8t","wl-sbhbt","wl-equsb4","wl-sbalnae","wl-2spsbbi","wl-ich-lem1d","wl-mo3t","wl-ax11-lem5","wl-ax11-lem8","cotrintab","pm11.57","axc5c4c711toc7","axc11next","pm14.122b","dropab1","dropab2","ax6e2eq"]},{"name":"2sp","content":"A double specialization (see ~ sp ). Another double specialization, closer to PM*11.1, is ~ 2stdpc4 . (Contributed by BJ, 15-Sep-2018.)","origin":"thm 2sp(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wal(s1, w0)), w0)\n} = {\n  sps(s0, wal(s1, w0), w0)\n  sp(s1, w0)\n}","pretty":"thm 2sp(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, ∀(s1, w0))→ w0)\n} = {\n  sps(s0, ∀(s1, w0), w0)\n  sp(s1, w0)\n}","parent":["sps","sp"],"children":["cbv1h","csbie2t","copsex2t","wfrlem5","fundmpss","frrlem5","bj-cbv1hv","ax11-pm","mbfresfi","cotrintab","pm14.123b","dfich2ai","dfich2bi"]},{"name":"spsd","content":"Deduction generalizing antecedent. (Contributed by NM, 17-Aug-1994.)","origin":"thm spsd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wal(s0, w1), w2))\n  -| wi(w0, wi(w1, w2))\n} = {\n  syl5(w0, wal(s0, w1), w2, w1)\n  sp(s0, w1)\n}","pretty":"thm spsd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∀(s0, w1)→ w2))\n  ⊣ (w0 →(w1 → w2))\n} = {\n  syl5(w0, ∀(s0, w1), w2, w1)\n  sp(s0, w1)\n}","parent":["syl5","sp"],"children":["axc11v","axc11rv","equvel","nfsb4t","nfsb4tALT","dfmo","moexex","2eu6","zorn2lem4","zorn2lem5","axpowndlem3","axacndlem5","axc11n11r","wl-equsal1i","axc5c4c711"]},{"name":"19.2g","content":"Theorem 19.2 of [Margaris] p. 89, generalized to use two setvar variables. Use ~ 19.2 when sufficient. (Contributed by Mel L. O'Cat, 31-Mar-2008.)","origin":"thm 19.2g(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, w0), wex(s1, w0))\n} = {\n  sps(s0, w0, wex(s1, w0))\n  19.8a(s1, w0)\n}","pretty":"thm 19.2g(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, w0)→ ∃(s1, w0))\n} = {\n  sps(s0, w0, ∃(s1, w0))\n  19.8a(s1, w0)\n}","parent":["sps","19.8a"],"children":[]},{"name":"19.21bi","content":"Inference form of ~ 19.21 and also deduction form of ~ sp . (Contributed by NM, 26-May-1993.)","origin":"thm 19.21bi(setvar s0, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(w0, wal(s0, w1))\n} = {\n  syl(w0, w1, wal(s0, w1))\n  sp(s0, w1)\n}","pretty":"thm 19.21bi(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 → ∀(s0, w1))\n} = {\n  syl(w0, w1, ∀(s0, w1))\n  sp(s0, w1)\n}","parent":["syl","sp"],"children":["19.21bbi","axc7e","eqeq1dALT","eleq2dALT","ssel","pocl","funmo","funun","fununi","findcard","findcard2","axpowndlem4","axregndlem2","axinfnd","prcdnq","dfrtrcl2","relexpindlem","bnj1379","bnj1052","bnj1118","bnj1154","bnj1280","dftrcl3","dfrtrcl3","vk15.4j","hbimpg"]},{"name":"19.21bbi","content":"Inference removing two universal quantifiers. Version of ~ 19.21bi with two quantifiers. (Contributed by NM, 20-Apr-1994.)","origin":"thm 19.21bbi(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(w0, wal(s0, wal(s1, w1)))\n} = {\n  19.21bi(s1, w0, w1)\n  19.21bi(s0, w0, wal(s1, w1))\n}","pretty":"thm 19.21bbi(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 → ∀(s0, ∀(s1, w1)))\n} = {\n  19.21bi(s1, w0, w1)\n  19.21bi(s0, w0, ∀(s1, w1))\n}","parent":["19.21bi"],"children":["2mo","pocl","funun","fununi","trclfvcotr","pm14.24"]},{"name":"19.23bi","content":"Inference form of Theorem 19.23 of [Margaris] p. 90, see ~ 19.23 . (Contributed by NM, 12-Mar-1993.)","origin":"thm 19.23bi(setvar s0, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wi(wex(s0, w0), w1)\n} = {\n  syl(w0, w1, wex(s0, w0))\n  19.8a(s0, w0)\n}","pretty":"thm 19.23bi(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ (∃(s0, w0)→ w1)\n} = {\n  syl(w0, w1, ∃(s0, w0))\n  19.8a(s0, w0)\n}","parent":["syl","19.8a"],"children":["nf5ri","equs5eALT","equs5e","2mo","copsexg","axreg2","hash1to3","ustuqtop4","f1omptsnlem","mptsnunlem"]},{"name":"nexr","content":"Inference associated with the contrapositive of ~ 19.8a . (Contributed by Jeff Hankins, 26-Jul-2009.)","origin":"thm nexr(setvar s0, wff w0) {\n  |- wn(w0)\n  -| wn(wex(s0, w0))\n} = {\n  mto(w0, wex(s0, w0))\n  19.8a(s0, w0)\n}","pretty":"thm nexr(setvar s0, wff w0) {\n  ⊢ ¬ w0\n  ⊣ ¬ ∃(s0, w0)\n} = {\n  mto(w0, ∃(s0, w0))\n  19.8a(s0, w0)\n}","parent":["mto","19.8a"],"children":["alimp-surprise"]},{"name":"qexmid","content":"Quantified excluded middle (see ~ exmid ). Also known as the drinker paradox (if ` ph ( x ) ` is interpreted as \" ` x ` drinks\", then this theorem tells that there exists a person such that, if this person drinks, then everyone drinks). Exercise 9.2a of Boolos, p. 111, _Computability and Logic_. (Contributed by NM, 10-Dec-2000.)","origin":"thm qexmid(setvar s0, wff w0) {\n  |- wex(s0, wi(w0, wal(s0, w0)))\n} = {\n  19.35ri(s0, w0, wal(s0, w0))\n  19.8a(s0, wal(s0, w0))\n}","pretty":"thm qexmid(setvar s0, wff w0) {\n  ⊢ ∃(s0,(w0 → ∀(s0, w0)))\n} = {\n  19.35ri(s0, w0, ∀(s0, w0))\n  19.8a(s0, ∀(s0, w0))\n}","parent":["19.35ri","19.8a"],"children":[]},{"name":"nf5r","content":"Consequence of the definition of not-free. (Contributed by Mario Carneiro, 26-Sep-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Sep-2021.)","origin":"thm nf5r(setvar s0, wff w0) {\n  |- wi(wnf(s0, w0), wi(w0, wal(s0, w0)))\n} = {\n  syl5(wnf(s0, w0), w0, wal(s0, w0), wex(s0, w0))\n  19.8a(s0, w0)\n  biimpi(wnf(s0, w0), wi(wex(s0, w0), wal(s0, w0)))\n  df-nf(s0, w0)\n}","pretty":"thm nf5r(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)→(w0 → ∀(s0, w0)))\n} = {\n  syl5(F/(s0, w0), w0, ∀(s0, w0), ∃(s0, w0))\n  19.8a(s0, w0)\n  biimpi(F/(s0, w0), (∃(s0, w0)→ ∀(s0, w0)))\n  df-nf(s0, w0)\n}","parent":["syl5","19.8a","biimpi","df-nf"],"children":["nf5riOLD","nf5rd","19.3t","sbft","sbftALT","bj-alrim","bj-nexdt","bj-cbv3tb","bj-nfs1t2","bj-equsal1t","stdpc5t","bj-axc14","wl-nfeqfb"]},{"name":"nf5ri","content":"Consequence of the definition of not-free. (Contributed by Mario Carneiro, 11-Aug-2016.) (Proof shortened by Wolf Lammen, 15-Mar-2023.)","origin":"thm nf5ri(setvar s0, wff w0) {\n  |- wi(w0, wal(s0, w0))\n  -| wnf(s0, w0)\n} = {\n  19.23bi(s0, w0, wal(s0, w0))\n  nfri(s0, w0)\n}","pretty":"thm nf5ri(setvar s0, wff w0) {\n  ⊢ (w0 → ∀(s0, w0))\n  ⊣ F/(s0, w0)\n} = {\n  19.23bi(s0, w0, ∀(s0, w0))\n  nfri(s0, w0)\n}","parent":["19.23bi","nfri"],"children":["19.3","alimd","alrimi","eximd","nexd","albid","exbid","hbs1","hba1","hban","hb3an","nfal","hbex","cbv3v","cbv3","cbv2","equs45f","nfs1","sb6f","hbsb","sb6fALT","nfsab","nfcrii","cleqf","ralrimi","hbra1","bnj1316","bnj1379","bnj1468","bnj958","bnj981","bnj1014","bnj1128","bnj1204","bnj1279","bnj1398","bnj1408","bnj1444","bnj1445","bnj1446","bnj1447","bnj1448","bnj1449","bnj1463","bnj1312","bnj1518","bnj1519","bnj1520","bnj1525","bj-cbv2v","bj-equs45fv","mpt2bi123f"]},{"name":"nf5riOLD","content":"Obsolete proof of ~ nf5ri as of 15-Mar-2023. (Contributed by Mario Carneiro, 11-Aug-2016.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm nf5riOLD(setvar s0, wff w0) {\n  |- wi(w0, wal(s0, w0))\n  -| wnf(s0, w0)\n} = {\n  ax-mp(wi(w0, wal(s0, w0)), wnf(s0, w0))\n  nf5r(s0, w0)\n}","pretty":"thm nf5riOLD(setvar s0, wff w0) {\n  ⊢ (w0 → ∀(s0, w0))\n  ⊣ F/(s0, w0)\n} = {\n  ax-mp((w0 → ∀(s0, w0)), F/(s0, w0))\n  nf5r(s0, w0)\n}","parent":["ax-mp","nf5r"],"children":[]},{"name":"nf5rd","content":"Consequence of the definition of not-free in a context. (Contributed by Mario Carneiro, 11-Aug-2016.)","origin":"thm nf5rd(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wi(w1, wal(s0, w1)))\n  -| wi(w0, wnf(s0, w1))\n} = {\n  syl(w0, wi(w1, wal(s0, w1)), wnf(s0, w1))\n  nf5r(s0, w1)\n}","pretty":"thm nf5rd(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 →(w1 → ∀(s0, w1)))\n  ⊣ (w0 → F/(s0, w1))\n} = {\n  syl(w0, (w1 → ∀(s0, w1)), F/(s0, w1))\n  nf5r(s0, w1)\n}","parent":["syl","nf5r"],"children":["alrimdd","nf5di","hbnt","hbimd","dvelimhw","dveeq2","dveeq1","axc9","spimed","cbv2","dvelimh","abidnf","eusvnfb","axrepnd","axacndlem4","bj-spimedv","bj-cbv2v","wl-nfeqfb"]},{"name":"nfim1","content":"A closed form of ~ nfim . (Contributed by NM, 2-Jun-1993.) (Revised by Mario Carneiro, 24-Sep-2016.) (Proof shortened by Wolf Lammen, 2-Jan-2018.) ~ df-nf changed. (Revised by Wolf Lammen, 18-Sep-2021.)","origin":"thm nfim1(setvar s0, wff w0, wff w1) {\n  |- wnf(s0, wi(w0, w1))\n  -| wnf(s0, w0)\n  -| wi(w0, wnf(s0, w1))\n} = {\n  ax-mp(wnf(s0, wi(w0, w1)), wo(wal(s0, w0), wal(s0, wn(w0))))\n  mpbi(wo(wal(s0, w0), wal(s0, wn(w0))), wnf(s0, w0))\n  nf3(s0, w0)\n  jaoi(wal(s0, w0), wal(s0, wn(w0)), wnf(s0, wi(w0, w1)))\n  nfimd(s0, wal(s0, w0), w0, w1)\n  nftht(s0, w0)\n  sps(s0, w0, wnf(s0, w1))\n  syl(wal(s0, wn(w0)), wnf(s0, wi(w0, w1)), wal(s0, wi(w0, w1)))\n  alimi(s0, wn(w0), wi(w0, w1))\n  pm2.21(w0, w1)\n  nftht(s0, wi(w0, w1))\n}","pretty":"thm nfim1(setvar s0, wff w0, wff w1) {\n  ⊢ F/(s0,(w0 → w1))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → F/(s0, w1))\n} = {\n  ax-mp(F/(s0,(w0 → w1)), (∀(s0, w0)∨ ∀(s0, ¬ w0)))\n  mpbi((∀(s0, w0)∨ ∀(s0, ¬ w0)), F/(s0, w0))\n  nf3(s0, w0)\n  jaoi(∀(s0, w0), ∀(s0, ¬ w0), F/(s0,(w0 → w1)))\n  nfimd(s0, ∀(s0, w0), w0, w1)\n  nftht(s0, w0)\n  sps(s0, w0, F/(s0, w1))\n  syl(∀(s0, ¬ w0), F/(s0,(w0 → w1)), ∀(s0,(w0 → w1)))\n  alimi(s0, ¬ w0, (w0 → w1))\n  pm2.21(w0, w1)\n  nftht(s0, (w0 → w1))\n}","parent":["ax-mp","mpbi","nf3","jaoi","nfimd","nftht","sps","syl","alimi","pm2.21"],"children":["nfan1","cbv1","dvelimdf","sbied","sbco2d","sbiedALT","bj-cbv1v"]},{"name":"nfan1","content":"A closed form of ~ nfan . (Contributed by Mario Carneiro, 3-Oct-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 18-Sep-2021.) (Proof shortened by Wolf Lammen, 7-Jul-2022.)","origin":"thm nfan1(setvar s0, wff w0, wff w1) {\n  |- wnf(s0, wa(w0, w1))\n  -| wnf(s0, w0)\n  -| wi(w0, wnf(s0, w1))\n} = {\n  nfxfr(s0, wa(w0, w1), wn(wi(w0, wn(w1))))\n  df-an(w0, w1)\n  nfn(s0, wi(w0, wn(w1)))\n  nfim1(s0, w0, wn(w1))\n  nfnd(s0, w0, w1)\n}","pretty":"thm nfan1(setvar s0, wff w0, wff w1) {\n  ⊢ F/(s0,(w0 ∧ w1))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → F/(s0, w1))\n} = {\n  nfxfr(s0, (w0 ∧ w1), ¬(w0 → ¬ w1))\n  df-an(w0, w1)\n  nfn(s0, (w0 → ¬ w1))\n  nfim1(s0, w0, ¬ w1)\n  nfnd(s0, w0, w1)\n}","parent":["nfxfr","df-an","nfn","nfim1","nfnd"],"children":["sb4b","ralcom2","sbcralt","sbcrext","csbiebt","riota5f","axrepndlem1","axrepndlem2","axunnd","axpowndlem2","axpowndlem3","axpowndlem4","axregndlem2","axinfndlem1","axinfnd","axacndlem4","axacndlem5","axacnd","fproddivf","wl-sbcom2d-lem1","wl-mo2df","wl-eudf","wl-mo3t","wl-ax11-lem4","wl-ax11-lem6"]},{"name":"19.3t","content":"Closed form of ~ 19.3 and version of ~ 19.9t with a universal quantifier. (Contributed by NM, 9-Nov-2020.) (Proof shortened by BJ, 9-Oct-2022.)","origin":"thm 19.3t(setvar s0, wff w0) {\n  |- wi(wnf(s0, w0), wb(wal(s0, w0), w0))\n} = {\n  impbid2(wnf(s0, w0), wal(s0, w0), w0)\n  sp(s0, w0)\n  nf5r(s0, w0)\n}","pretty":"thm 19.3t(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)→(∀(s0, w0)↔ w0))\n} = {\n  impbid2(F/(s0, w0), ∀(s0, w0), w0)\n  sp(s0, w0)\n  nf5r(s0, w0)\n}","parent":["impbid2","sp","nf5r"],"children":["19.23t"]},{"name":"19.3","content":"A wff may be quantified with a variable not free in it. Version of ~ 19.9 with a universal quantifier. Theorem 19.3 of [Margaris] p. 89. See ~ 19.3v for a version requiring fewer axioms. (Contributed by NM, 12-Mar-1993.) (Revised by Mario Carneiro, 24-Sep-2016.)","origin":"thm 19.3(setvar s0, wff w0) {\n  |- wb(wal(s0, w0), w0)\n  -| wnf(s0, w0)\n} = {\n  impbii(wal(s0, w0), w0)\n  sp(s0, w0)\n  nf5ri(s0, w0)\n}","pretty":"thm 19.3(setvar s0, wff w0) {\n  ⊢ (∀(s0, w0)↔ w0)\n  ⊣ F/(s0, w0)\n} = {\n  impbii(∀(s0, w0), w0)\n  sp(s0, w0)\n  nf5ri(s0, w0)\n}","parent":["impbii","sp","nf5ri"],"children":["19.16","19.17","19.27","19.28","19.37","axrep4","zfcndrep","bj-alexbiex","bj-alalbial","bj-axrep4"]},{"name":"19.9d","content":"A deduction version of one direction of ~ 19.9 . (Contributed by NM, 14-May-1993.) (Revised by Mario Carneiro, 24-Sep-2016.) Revised to shorten other proofs. (Revised by Wolf Lammen, 14-Jul-2020.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Sep-2021.) (Proof shortened by Wolf Lammen, 8-Jul-2022.)","origin":"thm 19.9d(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wi(wex(s0, w1), w1))\n  -| wi(w0, wnf(s0, w1))\n} = {\n  syl6(w0, wex(s0, w1), w1, wal(s0, w1))\n  nfrd(s0, w0, w1)\n  sp(s0, w1)\n}","pretty":"thm 19.9d(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 →(∃(s0, w1)→ w1))\n  ⊣ (w0 → F/(s0, w1))\n} = {\n  syl6(w0, ∃(s0, w1), w1, ∀(s0, w1))\n  nfrd(s0, w0, w1)\n  sp(s0, w1)\n}","parent":["syl6","nfrd","sp"],"children":["19.9t","spimt","exdistrf","equvel","copsexg","19.9d2rf","wl-exeq","spd"]},{"name":"19.9t","content":"Closed form of ~ 19.9 and version of ~ 19.3t with an existential quantifier. (Contributed by NM, 13-May-1993.) (Revised by Mario Carneiro, 24-Sep-2016.) (Proof shortened by Wolf Lammen, 14-Jul-2020.)","origin":"thm 19.9t(setvar s0, wff w0) {\n  |- wi(wnf(s0, w0), wb(wex(s0, w0), w0))\n} = {\n  impbid1(wnf(s0, w0), wex(s0, w0), w0)\n  19.9d(s0, wnf(s0, w0), w0)\n  id(wnf(s0, w0))\n  19.8a(s0, w0)\n}","pretty":"thm 19.9t(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)→(∃(s0, w0)↔ w0))\n} = {\n  impbid1(F/(s0, w0), ∃(s0, w0), w0)\n  19.9d(s0, F/(s0, w0), w0)\n  id(F/(s0, w0))\n  19.8a(s0, w0)\n}","parent":["impbid1","19.9d","id","19.8a"],"children":["19.9","19.21t","sbft","spimtOLD","sbftALT","vtoclegft","bj-cbv3tb","bj-spimtv","bj-equsal1t","bj-19.21t"]},{"name":"19.9","content":"A wff may be existentially quantified with a variable not free in it. Version of ~ 19.3 with an existential quantifier. Theorem 19.9 of [Margaris] p. 89. See ~ 19.9v for a version requiring fewer axioms. (Contributed by FL, 24-Mar-2007.) (Revised by Mario Carneiro, 24-Sep-2016.) (Proof shortened by Wolf Lammen, 30-Dec-2017.) Revised to shorten other proofs. (Revised by Wolf Lammen, 14-Jul-2020.)","origin":"thm 19.9(setvar s0, wff w0) {\n  |- wb(wex(s0, w0), w0)\n  -| wnf(s0, w0)\n} = {\n  ax-mp(wb(wex(s0, w0), w0), wnf(s0, w0))\n  19.9t(s0, w0)\n}","pretty":"thm 19.9(setvar s0, wff w0) {\n  ⊢ (∃(s0, w0)↔ w0)\n  ⊣ F/(s0, w0)\n} = {\n  ax-mp((∃(s0, w0)↔ w0), F/(s0, w0))\n  19.9t(s0, w0)\n}","parent":["ax-mp","19.9t"],"children":["exlimd","19.19","19.36","19.41","19.44","19.45","19.9h","euaeOLD","dfid3","fsplit","bnj1189","bj-exexbiex","bj-exalbial","ax6e2ndeq","e2ebind","ax6e2ndeqVD","e2ebindVD","e2ebindALT","ax6e2ndeqALT"]},{"name":"19.21t","content":"Closed form of Theorem 19.21 of [Margaris] p. 90, see ~ 19.21 . (Contributed by NM, 27-May-1997.) (Revised by Mario Carneiro, 24-Sep-2016.) (Proof shortened by Wolf Lammen, 3-Jan-2018.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Sep-2021.) (Proof shortened by BJ, 3-Nov-2021.)","origin":"thm 19.21t(setvar s0, wff w0, wff w1) {\n  |- wi(wnf(s0, w0), wb(wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1))))\n} = {\n  bitr3d(wnf(s0, w0), wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1)), wi(wex(s0, w0), wal(s0, w1)))\n  19.38a(s0, w0, w1)\n  imbi1d(wnf(s0, w0), wex(s0, w0), wal(s0, w1), w0)\n  19.9t(s0, w0)\n}","pretty":"thm 19.21t(setvar s0, wff w0, wff w1) {\n  ⊢ (F/(s0, w0)→(∀(s0,(w0 → w1))↔(w0 → ∀(s0, w1))))\n} = {\n  bitr3d(F/(s0, w0), ∀(s0,(w0 → w1)), (w0 → ∀(s0, w1)), (∃(s0, w0)→ ∀(s0, w1)))\n  19.38a(s0, w0, w1)\n  imbi1d(F/(s0, w0), ∃(s0, w0), ∀(s0, w1), w0)\n  19.9t(s0, w0)\n}","parent":["bitr3d","19.38a","imbi1d","19.9t"],"children":["19.21","19.23tOLD","sbal1","sbal2","sbal2OLD","r19.21t","ceqsalt","sbciegft","bj-ceqsalt0","bj-ceqsalt1","wl-sbhbt","wl-2sb6d","wl-sbalnae","wl-dfralf","ax12indalem","ax12inda2ALT"]},{"name":"19.21","content":"Theorem 19.21 of [Margaris] p. 90. The hypothesis can be thought of as \" ` x ` is not free in ` ph ` \". See ~ 19.21v for a version requiring fewer axioms. See also ~ 19.21h . (Contributed by NM, 14-May-1993.) (Revised by Mario Carneiro, 24-Sep-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 18-Sep-2021.)","origin":"thm 19.21(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  ax-mp(wb(wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1))), wnf(s0, w0))\n  19.21t(s0, w0, w1)\n}","pretty":"thm 19.21(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 → w1))↔(w0 → ∀(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  ax-mp((∀(s0,(w0 → w1))↔(w0 → ∀(s0, w1))), F/(s0, w0))\n  19.21t(s0, w0, w1)\n}","parent":["ax-mp","19.21t"],"children":["stdpc5","19.21-2","19.32","nf6","19.21h","19.12vv","cbv1","axc14","r2alf","19.12b","bj-biexal2","bj-bialal","bj-cbv1v","wl-dral1d","mpt2bi123f"]},{"name":"stdpc5","content":"An axiom scheme of standard predicate calculus that emulates Axiom 5 of [Mendelson] p. 69. The hypothesis ` F/ x ph ` can be thought of as emulating \" ` x ` is not free in ` ph ` \". With this definition, the meaning of \"not free\" is less restrictive than the usual textbook definition; for example ` x ` would not (for us) be free in ` x = x ` by ~ nfequid . This theorem scheme can be proved as a metatheorem of Mendelson's axiom system, even though it is slightly stronger than his Axiom 5. See ~ stdpc5v for a version requiring fewer axioms. (Contributed by NM, 22-Sep-1993.) (Revised by Mario Carneiro, 12-Oct-2016.) (Proof shortened by Wolf Lammen, 1-Jan-2018.) Remove dependency on ~ ax-10 . (Revised by Wolf Lammen, 4-Jul-2021.) (Proof shortened by Wolf Lammen, 11-Oct-2021.)","origin":"thm stdpc5(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  biimpi(wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1)))\n  19.21(s0, w0, w1)\n}","pretty":"thm stdpc5(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 → w1))→(w0 → ∀(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  biimpi(∀(s0,(w0 → w1)), (w0 → ∀(s0, w1)))\n  19.21(s0, w0, w1)\n}","parent":["biimpi","19.21"],"children":["2stdpc5"]},{"name":"19.21-2","content":"Version of ~ 19.21 with two quantifiers. (Contributed by NM, 4-Feb-2005.)","origin":"thm 19.21-2(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wal(s0, wal(s1, wi(w0, w1))), wi(w0, wal(s0, wal(s1, w1))))\n  -| wnf(s0, w0)\n  -| wnf(s1, w0)\n} = {\n  bitri(wal(s0, wal(s1, wi(w0, w1))), wi(w0, wal(s0, wal(s1, w1))), wal(s0, wi(w0, wal(s1, w1))))\n  albii(s0, wal(s1, wi(w0, w1)), wi(w0, wal(s1, w1)))\n  19.21(s1, w0, w1)\n  19.21(s0, w0, wal(s1, w1))\n}","pretty":"thm 19.21-2(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, ∀(s1,(w0 → w1)))↔(w0 → ∀(s0, ∀(s1, w1))))\n  ⊣ F/(s0, w0)\n  ⊣ F/(s1, w0)\n} = {\n  bitri(∀(s0, ∀(s1,(w0 → w1))), (w0 → ∀(s0, ∀(s1, w1))), ∀(s0,(w0 → ∀(s1, w1))))\n  albii(s0, ∀(s1,(w0 → w1)), (w0 → ∀(s1, w1)))\n  19.21(s1, w0, w1)\n  19.21(s0, w0, ∀(s1, w1))\n}","parent":["bitri","albii","19.21"],"children":["cotr2g","dford4"]},{"name":"19.23t","content":"Closed form of Theorem 19.23 of [Margaris] p. 90. See ~ 19.23 . (Contributed by NM, 7-Nov-2005.) (Proof shortened by Wolf Lammen, 13-Aug-2020.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Sep-2021.) (Proof shortened by BJ, 8-Oct-2022.)","origin":"thm 19.23t(setvar s0, wff w0, wff w1) {\n  |- wi(wnf(s0, w0), wb(wal(s0, wi(w1, w0)), wi(wex(s0, w1), w0)))\n} = {\n  bitr3d(wnf(s0, w0), wal(s0, wi(w1, w0)), wi(wex(s0, w1), w0), wi(wex(s0, w1), wal(s0, w0)))\n  19.38b(s0, w0, w1)\n  imbi2d(wnf(s0, w0), wex(s0, w1), wal(s0, w0), w0)\n  19.3t(s0, w0)\n}","pretty":"thm 19.23t(setvar s0, wff w0, wff w1) {\n  ⊢ (F/(s0, w0)→(∀(s0,(w1 → w0))↔(∃(s0, w1)→ w0)))\n} = {\n  bitr3d(F/(s0, w0), ∀(s0,(w1 → w0)), (∃(s0, w1)→ w0), (∃(s0, w1)→ ∀(s0, w0)))\n  19.38b(s0, w0, w1)\n  imbi2d(F/(s0, w0), ∃(s0, w1), ∀(s0, w0), w0)\n  19.3t(s0, w0)\n}","parent":["bitr3d","19.38b","imbi2d","19.3t"],"children":["19.23","axie2","r19.23t","ceqsalt","vtoclgft","sbciegft","bj-ceqsalt0","bj-ceqsalt1","wl-equsald"]},{"name":"19.23tOLD","content":"Obsolete proof of 19.23t as of 8-Oct-2022. (Contributed by NM, 7-Nov-2005.) (Proof shortened by Wolf Lammen, 13-Aug-2020.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Sep-2021.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm 19.23tOLD(setvar s0, wff w0, wff w1) {\n  |- wi(wnf(s0, w0), wb(wal(s0, wi(w1, w0)), wi(wex(s0, w1), w0)))\n} = {\n  3bitr4g(wnf(s0, w0), wal(s0, wi(w1, w0)), wi(wex(s0, w1), w0), wal(s0, wi(wn(w0), wn(w1))), wi(wn(w0), wal(s0, wn(w1))))\n  syl(wnf(s0, w0), wb(wal(s0, wi(wn(w0), wn(w1))), wi(wn(w0), wal(s0, wn(w1)))), wnf(s0, wn(w0)))\n  nfnt(s0, w0)\n  19.21t(s0, wn(w0), wn(w1))\n  albii(s0, wi(w1, w0), wi(wn(w0), wn(w1)))\n  con34b(w1, w0)\n  eximal(s0, w1, w0)\n}","pretty":"thm 19.23tOLD(setvar s0, wff w0, wff w1) {\n  ⊢ (F/(s0, w0)→(∀(s0,(w1 → w0))↔(∃(s0, w1)→ w0)))\n} = {\n  3bitr4g(F/(s0, w0), ∀(s0,(w1 → w0)), (∃(s0, w1)→ w0), ∀(s0,(¬ w0 → ¬ w1)), (¬ w0 → ∀(s0, ¬ w1)))\n  syl(F/(s0, w0), (∀(s0,(¬ w0 → ¬ w1))↔(¬ w0 → ∀(s0, ¬ w1))), F/(s0, ¬ w0))\n  nfnt(s0, w0)\n  19.21t(s0, ¬ w0, ¬ w1)\n  albii(s0, (w1 → w0), (¬ w0 → ¬ w1))\n  con34b(w1, w0)\n  eximal(s0, w1, w0)\n}","parent":["3bitr4g","syl","nfnt","19.21t","albii","con34b","eximal"],"children":[]},{"name":"19.23","content":"Theorem 19.23 of [Margaris] p. 90. See ~ 19.23v for a version requiring fewer axioms. (Contributed by NM, 24-Jan-1993.) (Revised by Mario Carneiro, 24-Sep-2016.)","origin":"thm 19.23(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wi(w0, w1)), wi(wex(s0, w0), w1))\n  -| wnf(s0, w1)\n} = {\n  ax-mp(wb(wal(s0, wi(w0, w1)), wi(wex(s0, w0), w1)), wnf(s0, w1))\n  19.23t(s0, w1, w0)\n}","pretty":"thm 19.23(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 → w1))↔(∃(s0, w0)→ w1))\n  ⊣ F/(s0, w1)\n} = {\n  ax-mp((∀(s0,(w0 → w1))↔(∃(s0, w0)→ w1)), F/(s0, w1))\n  19.23t(s0, w1, w0)\n}","parent":["ax-mp","19.23t"],"children":["exlimi","equsalv","nf5","19.23h","pm11.53","equsal","2sb6rf","2sb6rfOLD","r19.3rz","ralidm","ssrelf","bj-biexal1","bj-biexex","axc11n-16","axc11next"]},{"name":"alimd","content":"Deduction form of Theorem 19.20 of [Margaris] p. 90, see ~ alim . (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm alimd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wal(s0, w1), wal(s0, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wi(w1, w2))\n} = {\n  alimdh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","pretty":"thm alimd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∀(s0, w1)→ ∀(s0, w2)))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →(w1 → w2))\n} = {\n  alimdh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","parent":["alimdh","nf5ri"],"children":["alrimdd","nfald","mo3","mo3OLD","2mo","axpowndlem3","axext4dist","pm11.71"]},{"name":"alrimi","content":"Inference form of Theorem 19.21 of [Margaris] p. 90, see ~ 19.21 . (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm alrimi(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wal(s0, w1))\n  -| wnf(s0, w0)\n  -| wi(w0, w1)\n} = {\n  alrimih(s0, w0, w1)\n  nf5ri(s0, w0)\n}","pretty":"thm alrimi(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → ∀(s0, w1))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → w1)\n} = {\n  alrimih(s0, w0, w1)\n  nf5ri(s0, w0)\n}","parent":["alrimih","nf5ri"],"children":["sbimd","sbbid","nf5d","axc4i","19.12","cbv2","nfsbd","sbbib","mobid","mo3","mo3OLD","eubid","eupicka","2moex","2mo","axbndOLD","abbidOLD","nfcd","ceqsalgALT","ceqsex","vtocldf","rspcdf","elrab3t","morex","sbciedf","csbiebt","csbiedf","ssrd","eqrd","invdisj","zfrepclf","eusv2nf","ssopab2b","imadif","eusvobj1","ssoprab2b","ovmpt2dxf","axrepnd","axunnd","axpownd","axregndlem1","axacndlem1","axacndlem2","axacndlem3","axacndlem4","axacndlem5","axacnd","mreexexd","acsmapd","isch3","ssrelf","eqrelrd2","esumeq12dvaf","bnj1366","bnj571","bnj964","iota5f","bj-hbext","bj-nfext","bj-abbid","wl-ich-lem1c","wl-ich-lem1d","wl-mo3t","wl-ax11-lem3","cover2","alrimii","mpt2bi123f","mptbi12f","ss2iundf","pm11.57","pm11.59","tratrb","hbexg","e2ebindALT","mpteq1df","mpteq12da","dvnmul","stoweidlem34","sge0fodjrnlem","preimagelt","preimalegt","pimrecltpos","pimrecltneg","smfaddlem1","smfresal","smfsupmpt","smfinflem","smfinfmpt","dfich2","ovmpt2rdxf","setrec1lem4"]},{"name":"alrimdd","content":"Deduction form of Theorem 19.21 of [Margaris] p. 90, see ~ 19.21 . (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm alrimdd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(w1, wal(s0, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wnf(s0, w1))\n  -| wi(w0, wi(w1, w2))\n} = {\n  syld(w0, w1, wal(s0, w2), wal(s0, w1))\n  nf5rd(s0, w0, w1)\n  alimd(s0, w0, w1, w2)\n}","pretty":"thm alrimdd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(w1 → ∀(s0, w2)))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → F/(s0, w1))\n  ⊣ (w0 →(w1 → w2))\n} = {\n  syld(w0, w1, ∀(s0, w2), ∀(s0, w1))\n  nf5rd(s0, w0, w1)\n  alimd(s0, w0, w1, w2)\n}","parent":["syld","nf5rd","alimd"],"children":["alrimd","wl-euequf"]},{"name":"alrimd","content":"Deduction form of Theorem 19.21 of [Margaris] p. 90, see ~ 19.21 . (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm alrimd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(w1, wal(s0, w2)))\n  -| wnf(s0, w0)\n  -| wnf(s0, w1)\n  -| wi(w0, wi(w1, w2))\n} = {\n  alrimdd(s0, w0, w1, w2)\n  a1i(w0, wnf(s0, w1))\n}","pretty":"thm alrimd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(w1 → ∀(s0, w2)))\n  ⊣ F/(s0, w0)\n  ⊣ F/(s0, w1)\n  ⊣ (w0 →(w1 → w2))\n} = {\n  alrimdd(s0, w0, w1, w2)\n  a1i(w0, F/(s0, w1))\n}","parent":["alrimdd","a1i"],"children":["moexex","ralrimd","pssnn","fiint","wl-mo3t","pm14.24"]},{"name":"eximd","content":"Deduction form of Theorem 19.22 of [Margaris] p. 90, see ~ exim . (Contributed by NM, 29-Jun-1993.) (Revised by Mario Carneiro, 24-Sep-2016.)","origin":"thm eximd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wex(s0, w1), wex(s0, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wi(w1, w2))\n} = {\n  eximdh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","pretty":"thm eximd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∃(s0, w1)→ ∃(s0, w2)))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →(w1 → w2))\n} = {\n  eximdh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","parent":["eximdh","nf5ri"],"children":["exlimd","19.41","19.42-1OLD","2ax6elem","sbimdOLD","mopick2","2euex","reximd2a","spc2ed","ssrexf","axprlem4","axprlem5","axpowndlem3","axregndlem1","axregnd","padct","finminlem","wl-euequf","pmapglb2xN","disjinfi","infrpge","fsumiunss","islpcn","stoweidlem34","stoweidlem35","sge0rpcpnf"]},{"name":"exlimi","content":"Inference associated with ~ 19.23 . See ~ exlimiv for a version with a disjoint variable condition requiring fewer axioms. (Contributed by NM, 10-Jan-1993.) (Revised by Mario Carneiro, 24-Sep-2016.)","origin":"thm exlimi(setvar s0, wff w0, wff w1) {\n  |- wi(wex(s0, w0), w1)\n  -| wnf(s0, w1)\n  -| wi(w0, w1)\n} = {\n  mpgbi(s0, wi(wex(s0, w0), w1), wi(w0, w1))\n  19.23(s0, w0, w1)\n}","pretty":"thm exlimi(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0, w0)→ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (w0 → w1)\n} = {\n  mpgbi(s0, (∃(s0, w0)→ w1), (w0 → w1))\n  19.23(s0, w0, w1)\n}","parent":["mpgbi","19.23"],"children":["exlimih","equs5aALT","equs5eALT","equsex","exdistrf","equs5a","equs5e","dfmo","moanim","euan","moexex","2eu6","ceqsex","sbhypf","vtoclgf","vtoclg1f","vtoclef","rspn0","reusv2lem1","axpr","copsexg","copsex2g","0nelopab","ralxpf","dmcoss","fv3","opabiota","zfregcl","scottex","scott0","dfac5lem5","zfcndpow","zfcndreg","zfcndinf","reclem2pr","mreiincl","brabgaf","cnvoprabOLD","bnj607","bnj900","exisym1","exlimii","bj-exlimmpi","bj-exlimmpbi","bj-exlimmpbir","dihglblem5","eu2ndop1stv"]},{"name":"exlimd","content":"Deduction form of Theorem 19.9 of [Margaris] p. 89. (Contributed by NM, 23-Jan-1993.) (Revised by Mario Carneiro, 24-Sep-2016.) (Proof shortened by Wolf Lammen, 12-Jan-2018.)","origin":"thm exlimd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wex(s0, w1), w2))\n  -| wnf(s0, w0)\n  -| wnf(s0, w2)\n  -| wi(w0, wi(w1, w2))\n} = {\n  syl6ib(w0, wex(s0, w1), w2, wex(s0, w2))\n  eximd(s0, w0, w1, w2)\n  19.9(s0, w2)\n}","pretty":"thm exlimd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∃(s0, w1)→ w2))\n  ⊣ F/(s0, w0)\n  ⊣ F/(s0, w2)\n  ⊣ (w0 →(w1 → w2))\n} = {\n  syl6ib(w0, ∃(s0, w1), w2, ∃(s0, w2))\n  eximd(s0, w0, w1, w2)\n  19.9(s0, w2)\n}","parent":["syl6ib","eximd","19.9"],"children":["exlimdd","exlimdh","equs5","moexex","2eu6","exists2OLD","ceqsalgALT","alxfr","copsex2t","mosubopt","ov3","tz7.48-1","ac6c4","fsum2dlem","fprod2dlem","gsum2d2lem","exlimim","exellim","wl-lem-moexsb","exlimddvf","fourierdlem31","reuopreuprim"]},{"name":"exlimdd","content":"Existential elimination rule of natural deduction. (Contributed by Mario Carneiro, 9-Feb-2017.)","origin":"thm exlimdd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wnf(s0, w0)\n  -| wnf(s0, w1)\n  -| wi(w0, wex(s0, w2))\n  -| wi(wa(w0, w2), w1)\n} = {\n  mpd(w0, w1, wex(s0, w2))\n  exlimd(s0, w0, w2, w1)\n  ex(w0, w2, w1)\n}","pretty":"thm exlimdd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ F/(s0, w0)\n  ⊣ F/(s0, w1)\n  ⊣ (w0 → ∃(s0, w2))\n  ⊣ ((w0 ∧ w2)→ w1)\n} = {\n  mpd(w0, w1, ∃(s0, w2))\n  exlimd(s0, w0, w2, w1)\n  ex(w0, w2, w1)\n}","parent":["mpd","exlimd","ex"],"children":["exlimimdd","fvmptd3f","ovmpt2df","ex-natded9.26","suprnmpt","stoweidlem43","stoweidlem44","stoweidlem54"]},{"name":"exlimimdd","content":"Existential elimination rule of natural deduction. (Contributed by ML, 17-Jul-2020.)","origin":"thm exlimimdd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, w1)\n  -| wnf(s0, w0)\n  -| wnf(s0, w1)\n  -| wi(w0, wex(s0, w2))\n  -| wi(w0, wi(w2, w1))\n} = {\n  exlimdd(s0, w0, w1, w2)\n  imp(w0, w2, w1)\n}","pretty":"thm exlimimdd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 → w1)\n  ⊣ F/(s0, w0)\n  ⊣ F/(s0, w1)\n  ⊣ (w0 → ∃(s0, w2))\n  ⊣ (w0 →(w2 → w1))\n} = {\n  exlimdd(s0, w0, w1, w2)\n  imp(w0, w2, w1)\n}","parent":["exlimdd","imp"],"children":["tz6.12c","ovmpt2df","gsum2d2lem","padct","stoweidlem27","intsaluni","isomenndlem","tz6.12c-afv2"]},{"name":"nexd","content":"Deduction for generalization rule for negated wff. (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm nexd(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wn(wex(s0, w1)))\n  -| wnf(s0, w0)\n  -| wi(w0, wn(w1))\n} = {\n  nexdh(s0, w0, w1)\n  nf5ri(s0, w0)\n}","pretty":"thm nexd(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → ¬ ∃(s0, w1))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → ¬ w1)\n} = {\n  nexdh(s0, w0, w1)\n  nf5ri(s0, w0)\n}","parent":["nexdh","nf5ri"],"children":["axrepnd","axunnd"]},{"name":"albid","content":"Formula-building rule for universal quantifier (deduction form). (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm albid(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wal(s0, w1), wal(s0, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wb(w1, w2))\n} = {\n  albidh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","pretty":"thm albid(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∀(s0, w1)↔ ∀(s0, w2)))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  albidh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","parent":["albidh","nf5ri"],"children":["nfbidf","axc15OLD","dral2","dral1","sb4b","sbal1","sbal2","sbal2OLD","mobidOLD","eubidOLDOLD","ralbida","raleqf","intab","axprlem1","axprlem2","fin23lem32","axrepndlem1","axrepndlem2","axrepnd","axunnd","axpowndlem2","axpowndlem4","axregndlem2","axinfndlem1","axinfnd","axacndlem4","axacndlem5","axacnd","iota5f","bj-dral1v","wl-equsald","wl-sbnf1","wl-2sb6d","wl-sbalnae","wl-mo2df","wl-eudf","wl-ax11-lem6","wl-ax11-lem8","wl-dfrmof","ax12eq","ax12el","ax12v2-o"]},{"name":"exbid","content":"Formula-building rule for existential quantifier (deduction form). (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm exbid(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wex(s0, w1), wex(s0, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wb(w1, w2))\n} = {\n  exbidh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","pretty":"thm exbid(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∃(s0, w1)↔ ∃(s0, w2)))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  exbidh(s0, w0, w1, w2)\n  nf5ri(s0, w0)\n}","parent":["exbidh","nf5ri"],"children":["nfbidf","drex2","eubidOLD","mobidOLDOLD","rexbida","rexeqf","opabbid","zfrepclf","dfid3","oprabbid","axrepndlem1","axrepndlem2","axrepnd","axpowndlem2","axpowndlem3","axpowndlem4","axregnd","axinfndlem1","axinfnd","axacndlem4","axacndlem5","axacnd","opabdm","opabrn","pm14.122b","pm14.123b"]},{"name":"nfbidf","content":"An equality theorem for effectively not free. (Contributed by Mario Carneiro, 4-Oct-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 18-Sep-2021.)","origin":"thm nfbidf(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wnf(s0, w1), wnf(s0, w2)))\n  -| wnf(s0, w0)\n  -| wi(w0, wb(w1, w2))\n} = {\n  3bitr4g(w0, wnf(s0, w1), wnf(s0, w2), wi(wex(s0, w1), wal(s0, w1)), wi(wex(s0, w2), wal(s0, w2)))\n  imbi12d(w0, wex(s0, w1), wal(s0, w1), wex(s0, w2), wal(s0, w2))\n  exbid(s0, w0, w1, w2)\n  albid(s0, w0, w1, w2)\n  df-nf(s0, w1)\n  df-nf(s0, w2)\n}","pretty":"thm nfbidf(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(F/(s0, w1)↔ F/(s0, w2)))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  3bitr4g(w0, F/(s0, w1), F/(s0, w2), (∃(s0, w1)→ ∀(s0, w1)), (∃(s0, w2)→ ∀(s0, w2)))\n  imbi12d(w0, ∃(s0, w1), ∀(s0, w1), ∃(s0, w2), ∀(s0, w2))\n  exbid(s0, w0, w1, w2)\n  albid(s0, w0, w1, w2)\n  df-nf(s0, w1)\n  df-nf(s0, w2)\n}","parent":["3bitr4g","imbi12d","exbid","albid","df-nf"],"children":["drnf2","dvelimdf","nfceqdf","wl-nfimf1","wl-ich-lem1b","nfbii2OLD"]},{"name":"19.16","content":"Theorem 19.16 of [Margaris] p. 90. (Contributed by NM, 12-Mar-1993.)","origin":"thm 19.16(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, wb(w0, w1)), wb(w0, wal(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  syl5bbr(wal(s0, wb(w0, w1)), w0, wal(s0, w1), wal(s0, w0))\n  19.3(s0, w0)\n  albi(s0, w0, w1)\n}","pretty":"thm 19.16(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 ↔ w1))→(w0 ↔ ∀(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  syl5bbr(∀(s0,(w0 ↔ w1)), w0, ∀(s0, w1), ∀(s0, w0))\n  19.3(s0, w0)\n  albi(s0, w0, w1)\n}","parent":["syl5bbr","19.3","albi"],"children":[]},{"name":"19.17","content":"Theorem 19.17 of [Margaris] p. 90. (Contributed by NM, 12-Mar-1993.)","origin":"thm 19.17(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, wb(w0, w1)), wb(wal(s0, w0), w1))\n  -| wnf(s0, w1)\n} = {\n  syl6bb(wal(s0, wb(w0, w1)), wal(s0, w0), w1, wal(s0, w1))\n  albi(s0, w0, w1)\n  19.3(s0, w1)\n}","pretty":"thm 19.17(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 ↔ w1))→(∀(s0, w0)↔ w1))\n  ⊣ F/(s0, w1)\n} = {\n  syl6bb(∀(s0,(w0 ↔ w1)), ∀(s0, w0), w1, ∀(s0, w1))\n  albi(s0, w0, w1)\n  19.3(s0, w1)\n}","parent":["syl6bb","albi","19.3"],"children":[]},{"name":"19.27","content":"Theorem 19.27 of [Margaris] p. 90. See ~ 19.27v for a version requiring fewer axioms. (Contributed by NM, 21-Jun-1993.)","origin":"thm 19.27(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wa(w0, w1)), wa(wal(s0, w0), w1))\n  -| wnf(s0, w1)\n} = {\n  bitri(wal(s0, wa(w0, w1)), wa(wal(s0, w0), w1), wa(wal(s0, w0), wal(s0, w1)))\n  19.26(s0, w0, w1)\n  anbi2i(wal(s0, w0), wal(s0, w1), w1)\n  19.3(s0, w1)\n}","pretty":"thm 19.27(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 ∧ w1))↔(∀(s0, w0)∧ w1))\n  ⊣ F/(s0, w1)\n} = {\n  bitri(∀(s0,(w0 ∧ w1)), (∀(s0, w0)∧ w1), (∀(s0, w0)∧ ∀(s0, w1)))\n  19.26(s0, w0, w1)\n  anbi2i(∀(s0, w0), ∀(s0, w1), w1)\n  19.3(s0, w1)\n}","parent":["bitri","19.26","anbi2i","19.3"],"children":["aaan"]},{"name":"19.28","content":"Theorem 19.28 of [Margaris] p. 90. See ~ 19.28v for a version requiring fewer axioms. (Contributed by NM, 1-Aug-1993.)","origin":"thm 19.28(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wa(w0, w1)), wa(w0, wal(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  bitri(wal(s0, wa(w0, w1)), wa(w0, wal(s0, w1)), wa(wal(s0, w0), wal(s0, w1)))\n  19.26(s0, w0, w1)\n  anbi1i(wal(s0, w0), wal(s0, w1), w0)\n  19.3(s0, w0)\n}","pretty":"thm 19.28(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 ∧ w1))↔(w0 ∧ ∀(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  bitri(∀(s0,(w0 ∧ w1)), (w0 ∧ ∀(s0, w1)), (∀(s0, w0)∧ ∀(s0, w1)))\n  19.26(s0, w0, w1)\n  anbi1i(∀(s0, w0), ∀(s0, w1), w0)\n  19.3(s0, w0)\n}","parent":["bitri","19.26","anbi1i","19.3"],"children":["aaan","wl-ax11-lem7"]},{"name":"19.19","content":"Theorem 19.19 of [Margaris] p. 90. (Contributed by NM, 12-Mar-1993.)","origin":"thm 19.19(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, wb(w0, w1)), wb(w0, wex(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  syl5bbr(wal(s0, wb(w0, w1)), w0, wex(s0, w1), wex(s0, w0))\n  19.9(s0, w0)\n  exbi(s0, w0, w1)\n}","pretty":"thm 19.19(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 ↔ w1))→(w0 ↔ ∃(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  syl5bbr(∀(s0,(w0 ↔ w1)), w0, ∃(s0, w1), ∃(s0, w0))\n  19.9(s0, w0)\n  exbi(s0, w0, w1)\n}","parent":["syl5bbr","19.9","exbi"],"children":[]},{"name":"19.36","content":"Theorem 19.36 of [Margaris] p. 90. See ~ 19.36v for a version requiring fewer axioms. (Contributed by NM, 24-Jun-1993.)","origin":"thm 19.36(setvar s0, wff w0, wff w1) {\n  |- wb(wex(s0, wi(w0, w1)), wi(wal(s0, w0), w1))\n  -| wnf(s0, w1)\n} = {\n  bitri(wex(s0, wi(w0, w1)), wi(wal(s0, w0), w1), wi(wal(s0, w0), wex(s0, w1)))\n  19.35(s0, w0, w1)\n  imbi2i(wal(s0, w0), wex(s0, w1), w1)\n  19.9(s0, w1)\n}","pretty":"thm 19.36(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0,(w0 → w1))↔(∀(s0, w0)→ w1))\n  ⊣ F/(s0, w1)\n} = {\n  bitri(∃(s0,(w0 → w1)), (∀(s0, w0)→ w1), (∀(s0, w0)→ ∃(s0, w1)))\n  19.35(s0, w0, w1)\n  imbi2i(∀(s0, w0), ∃(s0, w1), w1)\n  19.9(s0, w1)\n}","parent":["bitri","19.35","imbi2i","19.9"],"children":["19.36i","19.12vv","spcimgft","19.12b"]},{"name":"19.36i","content":"Inference associated with ~ 19.36 . See ~ 19.36iv for a version requiring fewer axioms. (Contributed by NM, 24-Jun-1993.)","origin":"thm 19.36i(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, w0), w1)\n  -| wnf(s0, w1)\n  -| wex(s0, wi(w0, w1))\n} = {\n  mpbi(wi(wal(s0, w0), w1), wex(s0, wi(w0, w1)))\n  19.36(s0, w0, w1)\n}","pretty":"thm 19.36i(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ w1)\n  ⊣ F/(s0, w1)\n  ⊣ ∃(s0,(w0 → w1))\n} = {\n  mpbi((∀(s0, w0)→ w1), ∃(s0,(w0 → w1)))\n  19.36(s0, w0, w1)\n}","parent":["mpbi","19.36"],"children":["spimv1","spim","vtoclf","bj-vtoclf"]},{"name":"19.37","content":"Theorem 19.37 of [Margaris] p. 90. See ~ 19.37v for a version requiring fewer axioms. (Contributed by NM, 21-Jun-1993.)","origin":"thm 19.37(setvar s0, wff w0, wff w1) {\n  |- wb(wex(s0, wi(w0, w1)), wi(w0, wex(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  bitri(wex(s0, wi(w0, w1)), wi(w0, wex(s0, w1)), wi(wal(s0, w0), wex(s0, w1)))\n  19.35(s0, w0, w1)\n  imbi1i(wal(s0, w0), wex(s0, w1), w0)\n  19.3(s0, w0)\n}","pretty":"thm 19.37(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0,(w0 → w1))↔(w0 → ∃(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  bitri(∃(s0,(w0 → w1)), (w0 → ∃(s0, w1)), (∀(s0, w0)→ ∃(s0, w1)))\n  19.35(s0, w0, w1)\n  imbi1i(∀(s0, w0), ∃(s0, w1), w0)\n  19.3(s0, w0)\n}","parent":["bitri","19.35","imbi1i","19.3"],"children":["bnj900"]},{"name":"19.32","content":"Theorem 19.32 of [Margaris] p. 90. See ~ 19.32v for a version requiring fewer axioms. (Contributed by NM, 14-May-1993.) (Revised by Mario Carneiro, 24-Sep-2016.)","origin":"thm 19.32(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wo(w0, w1)), wo(w0, wal(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  3bitr4i(wal(s0, wo(w0, w1)), wo(w0, wal(s0, w1)), wal(s0, wi(wn(w0), w1)), wi(wn(w0), wal(s0, w1)))\n  19.21(s0, wn(w0), w1)\n  nfn(s0, w0)\n  albii(s0, wo(w0, w1), wi(wn(w0), w1))\n  df-or(w0, w1)\n  df-or(w0, wal(s0, w1))\n}","pretty":"thm 19.32(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 ∨ w1))↔(w0 ∨ ∀(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  3bitr4i(∀(s0,(w0 ∨ w1)), (w0 ∨ ∀(s0, w1)), ∀(s0,(¬ w0 → w1)), (¬ w0 → ∀(s0, w1)))\n  19.21(s0, ¬ w0, w1)\n  nfn(s0, w0)\n  albii(s0, (w0 ∨ w1), (¬ w0 → w1))\n  df-or(w0, w1)\n  df-or(w0, ∀(s0, w1))\n}","parent":["3bitr4i","19.21","nfn","albii","df-or"],"children":["19.31","2eu3","2eu3OLD","axi12","axi12OLD","axbnd"]},{"name":"19.31","content":"Theorem 19.31 of [Margaris] p. 90. See ~ 19.31v for a version requiring fewer axioms. (Contributed by NM, 14-May-1993.)","origin":"thm 19.31(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wo(w0, w1)), wo(wal(s0, w0), w1))\n  -| wnf(s0, w1)\n} = {\n  3bitr4i(wal(s0, wo(w0, w1)), wo(wal(s0, w0), w1), wal(s0, wo(w1, w0)), wo(w1, wal(s0, w0)))\n  19.32(s0, w1, w0)\n  albii(s0, wo(w0, w1), wo(w1, w0))\n  orcom(w0, w1)\n  orcom(wal(s0, w0), w1)\n}","pretty":"thm 19.31(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 ∨ w1))↔(∀(s0, w0)∨ w1))\n  ⊣ F/(s0, w1)\n} = {\n  3bitr4i(∀(s0,(w0 ∨ w1)), (∀(s0, w0)∨ w1), ∀(s0,(w1 ∨ w0)), (w1 ∨ ∀(s0, w0)))\n  19.32(s0, w1, w0)\n  albii(s0, (w0 ∨ w1), (w1 ∨ w0))\n  orcom(w0, w1)\n  orcom(∀(s0, w0), w1)\n}","parent":["3bitr4i","19.32","albii","orcom"],"children":["2eu3","2eu3OLD"]},{"name":"19.41","content":"Theorem 19.41 of [Margaris] p. 90. See ~ 19.41v for a version requiring fewer axioms. (Contributed by NM, 14-May-1993.) (Proof shortened by Andrew Salmon, 25-May-2011.) (Proof shortened by Wolf Lammen, 12-Jan-2018.)","origin":"thm 19.41(setvar s0, wff w0, wff w1) {\n  |- wb(wex(s0, wa(w0, w1)), wa(wex(s0, w0), w1))\n  -| wnf(s0, w1)\n} = {\n  impbii(wex(s0, wa(w0, w1)), wa(wex(s0, w0), w1))\n  sylib(wex(s0, wa(w0, w1)), wa(wex(s0, w0), w1), wa(wex(s0, w0), wex(s0, w1)))\n  19.40(s0, w0, w1)\n  anbi2i(wex(s0, w0), wex(s0, w1), w1)\n  19.9(s0, w1)\n  impcom(wex(s0, w0), w1, wex(s0, wa(w0, w1)))\n  eximd(s0, w1, w0, wa(w0, w1))\n  pm3.21(w1, w0)\n}","pretty":"thm 19.41(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0,(w0 ∧ w1))↔(∃(s0, w0)∧ w1))\n  ⊣ F/(s0, w1)\n} = {\n  impbii(∃(s0,(w0 ∧ w1)), (∃(s0, w0)∧ w1))\n  sylib(∃(s0,(w0 ∧ w1)), (∃(s0, w0)∧ w1), (∃(s0, w0)∧ ∃(s0, w1)))\n  19.40(s0, w0, w1)\n  anbi2i(∃(s0, w0), ∃(s0, w1), w1)\n  19.9(s0, w1)\n  impcom(∃(s0, w0), w1, ∃(s0,(w0 ∧ w1)))\n  eximd(s0, w1, w0, (w0 ∧ w1))\n  pm3.21(w1, w0)\n}","parent":["impbii","sylib","19.40","anbi2i","19.9","impcom","eximd","pm3.21"],"children":["19.42","equsexv","eean","eeeanv","equsexALT","2sb5rf","r19.41","eliunxp","dfopab2","dfoprab3s","xpcomco","mpt2mptxf","bnj605","bnj607","2sb5nd","2sb5ndVD","2sb5ndALT","eliunxp2"]},{"name":"19.42-1OLD","content":"One direction of ~ 19.42 . Obsolete as of 9-Oct-2022. (Contributed by Wolf Lammen, 10-Jul-2021.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm 19.42-1OLD(setvar s0, wff w0, wff w1) {\n  |- wi(wa(w0, wex(s0, w1)), wex(s0, wa(w0, w1)))\n  -| wnf(s0, w0)\n} = {\n  imp(w0, wex(s0, w1), wex(s0, wa(w0, w1)))\n  eximd(s0, w0, w1, wa(w0, w1))\n  pm3.2(w0, w1)\n}","pretty":"thm 19.42-1OLD(setvar s0, wff w0, wff w1) {\n  ⊢ ((w0 ∧ ∃(s0, w1))→ ∃(s0,(w0 ∧ w1)))\n  ⊣ F/(s0, w0)\n} = {\n  imp(w0, ∃(s0, w1), ∃(s0,(w0 ∧ w1)))\n  eximd(s0, w0, w1, (w0 ∧ w1))\n  pm3.2(w0, w1)\n}","parent":["imp","eximd","pm3.2"],"children":[]},{"name":"19.42","content":"Theorem 19.42 of [Margaris] p. 90. See ~ 19.42v for a version requiring fewer axioms. See ~ exan for an immediate version. (Contributed by NM, 18-Aug-1993.)","origin":"thm 19.42(setvar s0, wff w0, wff w1) {\n  |- wb(wex(s0, wa(w0, w1)), wa(w0, wex(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  3bitr4i(wex(s0, wa(w0, w1)), wa(w0, wex(s0, w1)), wex(s0, wa(w1, w0)), wa(wex(s0, w1), w0))\n  19.41(s0, w1, w0)\n  exancom(s0, w0, w1)\n  ancom(w0, wex(s0, w1))\n}","pretty":"thm 19.42(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0,(w0 ∧ w1))↔(w0 ∧ ∃(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  3bitr4i(∃(s0,(w0 ∧ w1)), (w0 ∧ ∃(s0, w1)), ∃(s0,(w1 ∧ w0)), (∃(s0, w1)∧ w0))\n  19.41(s0, w1, w0)\n  exancom(s0, w0, w1)\n  ancom(w0, ∃(s0, w1))\n}","parent":["3bitr4i","19.41","exancom","ancom"],"children":["eean","bnj596","bnj916","bnj983"]},{"name":"19.44","content":"Theorem 19.44 of [Margaris] p. 90. See ~ 19.44v for a version requiring fewer axioms. (Contributed by NM, 12-Mar-1993.)","origin":"thm 19.44(setvar s0, wff w0, wff w1) {\n  |- wb(wex(s0, wo(w0, w1)), wo(wex(s0, w0), w1))\n  -| wnf(s0, w1)\n} = {\n  bitri(wex(s0, wo(w0, w1)), wo(wex(s0, w0), w1), wo(wex(s0, w0), wex(s0, w1)))\n  19.43(s0, w0, w1)\n  orbi2i(wex(s0, w0), wex(s0, w1), w1)\n  19.9(s0, w1)\n}","pretty":"thm 19.44(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0,(w0 ∨ w1))↔(∃(s0, w0)∨ w1))\n  ⊣ F/(s0, w1)\n} = {\n  bitri(∃(s0,(w0 ∨ w1)), (∃(s0, w0)∨ w1), (∃(s0, w0)∨ ∃(s0, w1)))\n  19.43(s0, w0, w1)\n  orbi2i(∃(s0, w0), ∃(s0, w1), w1)\n  19.9(s0, w1)\n}","parent":["bitri","19.43","orbi2i","19.9"],"children":["eeor"]},{"name":"19.45","content":"Theorem 19.45 of [Margaris] p. 90. See ~ 19.45v for a version requiring fewer axioms. (Contributed by NM, 12-Mar-1993.)","origin":"thm 19.45(setvar s0, wff w0, wff w1) {\n  |- wb(wex(s0, wo(w0, w1)), wo(w0, wex(s0, w1)))\n  -| wnf(s0, w0)\n} = {\n  bitri(wex(s0, wo(w0, w1)), wo(w0, wex(s0, w1)), wo(wex(s0, w0), wex(s0, w1)))\n  19.43(s0, w0, w1)\n  orbi1i(wex(s0, w0), wex(s0, w1), w0)\n  19.9(s0, w0)\n}","pretty":"thm 19.45(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0,(w0 ∨ w1))↔(w0 ∨ ∃(s0, w1)))\n  ⊣ F/(s0, w0)\n} = {\n  bitri(∃(s0,(w0 ∨ w1)), (w0 ∨ ∃(s0, w1)), (∃(s0, w0)∨ ∃(s0, w1)))\n  19.43(s0, w0, w1)\n  orbi1i(∃(s0, w0), ∃(s0, w1), w0)\n  19.9(s0, w0)\n}","parent":["bitri","19.43","orbi1i","19.9"],"children":["eeor"]},{"name":"sbimd","content":"Deduction substituting both sides of an implication. (Contributed by Wolf Lammen, 24-Nov-2022.) Revise ~ df-sb . (Revised by Steven Nguyen, 9-Jul-2023.)","origin":"thm sbimd(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wsb(s0, s1, w1), wsb(s0, s1, w2)))\n  -| wnf(s1, w0)\n  -| wi(w0, wi(w1, w2))\n} = {\n  syl(w0, wi(wsb(s0, s1, w1), wsb(s0, s1, w2)), wal(s1, wi(w1, w2)))\n  alrimi(s1, w0, wi(w1, w2))\n  spsbim(s1, s0, w1, w2)\n}","pretty":"thm sbimd(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →([s0 / s1]w1 →[s0 / s1]w2))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 →(w1 → w2))\n} = {\n  syl(w0, ([s0 / s1]w1 →[s0 / s1]w2), ∀(s1,(w1 → w2)))\n  alrimi(s1, w0, (w1 → w2))\n  spsbim(s1, s0, w1, w2)\n}","parent":["syl","alrimi","spsbim"],"children":["sbbidOLD","spsbimvOLD"]},{"name":"sbbid","content":"Deduction substituting both sides of a biconditional. (Contributed by NM, 30-Jun-1993.) Remove dependency on ~ ax-10 and ~ ax-13 . (Revised by Wolf Lammen, 24-Nov-2022.) Revise ~ df-sb . (Revised by Steven Nguyen, 11-Jul-2023.)","origin":"thm sbbid(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wsb(s0, s1, w1), wsb(s0, s1, w2)))\n  -| wnf(s1, w0)\n  -| wi(w0, wb(w1, w2))\n} = {\n  syl(w0, wb(wsb(s0, s1, w1), wsb(s0, s1, w2)), wal(s1, wb(w1, w2)))\n  alrimi(s1, w0, wb(w1, w2))\n  spsbbi(s1, s0, w1, w2)\n}","pretty":"thm sbbid(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →([s0 / s1]w1 ↔[s0 / s1]w2))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  syl(w0, ([s0 / s1]w1 ↔[s0 / s1]w2), ∀(s1,(w1 ↔ w2)))\n  alrimi(s1, w0, (w1 ↔ w2))\n  spsbbi(s1, s0, w1, w2)\n}","parent":["syl","alrimi","spsbbi"],"children":["2sbbid","sbcom2OLD","sbcom3","sbco3","sbal","abbid","wl-sbcom2d-lem1","wl-2spsbbi","wl-ich-lem1","wl-ich-lem1d","wl-clabt","dfich2bi"]},{"name":"2sbbid","content":"Deduction doubly substituting both sides of a biconditional. (Contributed by AV, 30-Jul-2023.)","origin":"thm 2sbbid(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wsb(s0, s1, wsb(s2, s3, w1)), wsb(s0, s1, wsb(s2, s3, w2))))\n  -| wnf(s1, w0)\n  -| wi(w0, wb(w1, w2))\n  -| wnf(s3, w0)\n} = {\n  sbbid(s0, s1, w0, wsb(s2, s3, w1), wsb(s2, s3, w2))\n  sbbid(s2, s3, w0, w1, w2)\n}","pretty":"thm 2sbbid(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →([s0 / s1][s2 / s3]w1 ↔[s0 / s1][s2 / s3]w2))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n  ⊣ F/(s3, w0)\n} = {\n  sbbid(s0, s1, w0, [s2 / s3]w1, [s2 / s3]w2)\n  sbbid(s2, s3, w0, w1, w2)\n}","parent":["sbbid"],"children":[]},{"name":"sbbidOLD","content":"Obsolete version of ~ sbbid as of 10-Jul-2023. Deduction substituting both sides of a biconditional. (Contributed by NM, 30-Jun-1993.) Remove dependency on ~ ax-10 and ~ ax-13 . (Revised by Wolf Lammen, 24-Nov-2022.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm sbbidOLD(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wsb(s0, s1, w1), wsb(s0, s1, w2)))\n  -| wnf(s1, w0)\n  -| wi(w0, wb(w1, w2))\n} = {\n  impbid(w0, wsb(s0, s1, w1), wsb(s0, s1, w2))\n  sbimd(s0, s1, w0, w1, w2)\n  biimpd(w0, w1, w2)\n  sbimd(s0, s1, w0, w2, w1)\n  biimprd(w0, w2, w1)\n}","pretty":"thm sbbidOLD(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →([s0 / s1]w1 ↔[s0 / s1]w2))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 →(w1 ↔ w2))\n} = {\n  impbid(w0, [s0 / s1]w1, [s0 / s1]w2)\n  sbimd(s0, s1, w0, w1, w2)\n  biimpd(w0, w1, w2)\n  sbimd(s0, s1, w0, w2, w1)\n  biimprd(w0, w2, w1)\n}","parent":["impbid","sbimd","biimpd","biimprd"],"children":[]},{"name":"sbequ1","content":"An equality theorem for substitution. (Contributed by NM, 16-May-1993.) Revise ~ df-sb . (Revised by BJ, 22-Dec-2020.)","origin":"thm sbequ1(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(w0, wsb(s1, s0, w0)))\n} = {\n  syl6ibr(wceq(cv(s0), cv(s1)), w0, wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n  alrimdv(hs0, wceq(cv(s0), cv(s1)), w0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))))\n  com23(wceq(cv(s0), cv(s1)), w0, wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))\n  syl6(wceq(cv(s0), cv(s1)), wceq(cv(hs0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))), wceq(cv(s0), cv(hs0)))\n  equeucl(s0, s1, hs0)\n  ax12v(s0, hs0, w0)\n  df-sb(s1, s0, hs0, w0)\n  diff.hs0.w(wceq(cv(s0), cv(s1)))\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","pretty":"thm sbequ1(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →(w0 →[s1 / s0]w0))\n} = {\n  syl6ibr(s0 = s1, w0, [s1 / s0]w0, ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n  alrimdv(hs0, s0 = s1, w0, (hs0 = s1 → ∀(s0,(s0 = hs0 → w0))))\n  com23(s0 = s1, w0, hs0 = s1, ∀(s0,(s0 = hs0 → w0)))\n  syl6(s0 = s1, hs0 = s1, (w0 → ∀(s0,(s0 = hs0 → w0))), s0 = hs0)\n  equeucl(s0, s1, hs0)\n  ax12v(s0, hs0, w0)\n  df-sb(s1, s0, hs0, w0)\n  diff.hs0.w(s0 = s1)\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","parent":["syl6ibr","alrimdv","com23","syl6","equeucl","ax12v","df-sb","diff.hs0.w","diffss.ex","diff.hs0.s"],"children":["sbequ12","dfsb1","dfsb2","sbequiOLD","sbi1OLD","2eu6","bj-ssbid1","sb5ALT","2pm13.193","2pm13.193VD","sb5ALTVD"]},{"name":"sbequ2","content":"An equality theorem for substitution. (Contributed by NM, 16-May-1993.) (Proof shortened by Wolf Lammen, 25-Feb-2018.) Revise ~ df-sb . (Revised by BJ, 22-Dec-2020.)","origin":"thm sbequ2(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wsb(s1, s0, w0), w0))\n} = {\n  syl5com(wceq(cv(s0), cv(s1)), wsb(s1, s0, w0), w0, wex(hs0, wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs0)))))\n  equvinva(s0, s1, hs0)\n  sylib(wsb(s1, s0, w0), wi(wex(hs0, wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs0)))), w0), wal(hs0, wi(wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs0))), w0)))\n  sylbi(wsb(s1, s0, w0), wal(hs0, wi(wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs0))), w0)), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n  df-sb(s1, s0, hs0, w0)\n  alimi(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))), wi(wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs0))), w0))\n  impcomd(wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))), wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs0)), w0)\n  imim12i(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)), wceq(cv(s1), cv(hs0)), wi(wceq(cv(s0), cv(hs0)), w0))\n  equcomi(s1, hs0)\n  sp(s0, wi(wceq(cv(s0), cv(hs0)), w0))\n  19.23v(hs0, wa(wceq(cv(s0), cv(hs0)), wceq(cv(s1), cv(hs0))), w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n}","pretty":"thm sbequ2(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →([s1 / s0]w0 → w0))\n} = {\n  syl5com(s0 = s1, [s1 / s0]w0, w0, ∃(hs0,(s0 = hs0 ∧ s1 = hs0)))\n  equvinva(s0, s1, hs0)\n  sylib([s1 / s0]w0, (∃(hs0,(s0 = hs0 ∧ s1 = hs0))→ w0), ∀(hs0,((s0 = hs0 ∧ s1 = hs0)→ w0)))\n  sylbi([s1 / s0]w0, ∀(hs0,((s0 = hs0 ∧ s1 = hs0)→ w0)), ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n  df-sb(s1, s0, hs0, w0)\n  alimi(hs0, (hs0 = s1 → ∀(s0,(s0 = hs0 → w0))), ((s0 = hs0 ∧ s1 = hs0)→ w0))\n  impcomd((hs0 = s1 → ∀(s0,(s0 = hs0 → w0))), s0 = hs0, s1 = hs0, w0)\n  imim12i(hs0 = s1, ∀(s0,(s0 = hs0 → w0)), s1 = hs0, (s0 = hs0 → w0))\n  equcomi(s1, hs0)\n  sp(s0, (s0 = hs0 → w0))\n  19.23v(hs0, (s0 = hs0 ∧ s1 = hs0), w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n}","parent":["syl5com","equvinva","sylib","sylbi","df-sb","alimi","impcomd","imim12i","equcomi","sp","19.23v","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["stdpc7","sbequ12","sb1","sb4a","dfsb1","dfsb2","sbequiOLD","sbi1OLD","bj-ssbid2","2pm13.193","2pm13.193VD"]},{"name":"stdpc7","content":"One of the two equality axioms of standard predicate calculus, called substitutivity of equality. (The other one is ~ stdpc6 .) Translated to traditional notation, it can be read: \" ` x = y -> ( ph ( x , x ) -> ph ( x , y ) ) ` , provided that ` y ` is free for ` x ` in ` ph ( x , x ) ` \". Axiom 7 of [Mendelson] p. 95. (Contributed by NM, 15-Feb-2005.)","origin":"thm stdpc7(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wsb(s0, s1, w0), w0))\n} = {\n  equcoms(s0, s1, wi(wsb(s0, s1, w0), w0))\n  sbequ2(s1, s0, w0)\n}","pretty":"thm stdpc7(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →([s0 / s1]w0 → w0))\n} = {\n  equcoms(s0, s1, ([s0 / s1]w0 → w0))\n  sbequ2(s1, s0, w0)\n}","parent":["equcoms","sbequ2"],"children":[]},{"name":"sbequ12","content":"An equality theorem for substitution. (Contributed by NM, 14-May-1993.)","origin":"thm sbequ12(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wb(w0, wsb(s1, s0, w0)))\n} = {\n  impbid(wceq(cv(s0), cv(s1)), w0, wsb(s1, s0, w0))\n  sbequ1(s0, s1, w0)\n  sbequ2(s0, s1, w0)\n}","pretty":"thm sbequ12(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →(w0 ↔[s1 / s0]w0))\n} = {\n  impbid(s0 = s1, w0, [s1 / s0]w0)\n  sbequ1(s0, s1, w0)\n  sbequ2(s0, s1, w0)\n}","parent":["impbid","sbequ1","sbequ2"],"children":["sbequ12r","sbequ12a","sb8v","sb8ev","axc16ALT","nfsb4t","sbco2","sb8","sb8e","sbal1","clelab","sbab","cbvralf","cbvralsv","cbvrexsv","cbvrab","sbhypf","mob2","reu2","reu6","sbcralt","sbcreu","cbvreucsf","cbvrabcsf","csbif","cbvopab1","cbvopab1s","cbvmptf","cbvmpt","opelopabsb","csbopab","csbopabgALT","opeliunxp","ralxpf","cbviota","csbiota","f1ossf1o","cbvriota","csbriota","onminex","tfis","findes","abrexex2g","opabex3d","opabex3","dfoprab4f","uzind4s","ac6sf2","esumcvg","bj-sbab","wl-sb8t","wl-sbalnae","wl-ax11-lem8","rabdif","sbcrexgOLD","pm13.193","2reu8i","opeliun2xp"]},{"name":"sbequ12r","content":"An equality theorem for substitution. (Contributed by NM, 6-Oct-2004.) (Proof shortened by Andrew Salmon, 21-Jun-2011.)","origin":"thm sbequ12r(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wb(wsb(s0, s1, w0), w0))\n} = {\n  equcoms(s0, s1, wb(wsb(s0, s1, w0), w0))\n  bicomd(wceq(cv(s1), cv(s0)), wsb(s0, s1, w0), w0)\n  sbequ12(s1, s0, w0)\n}","pretty":"thm sbequ12r(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →([s0 / s1]w0 ↔ w0))\n} = {\n  equcoms(s0, s1, ([s0 / s1]w0 ↔ w0))\n  bicomd(s1 = s0, [s0 / s1]w0, w0)\n  sbequ12(s1, s0, w0)\n}","parent":["equcoms","bicomd","sbequ12"],"children":["sbequ12a","sbid","sb6rfv","sb5rf","sb6rf","2sb5rf","2sb6rf","2sb6rfOLD","opeliunxp","isarep1","findes","axrepndlem1","axrepndlem2","nn0min","esumcvg","bj-abbi","bj-sbidmOLD","wl-nfs1t","wl-sb6rft","wl-equsb4","wl-ax11-lem5","sbcalf","sbcexf","opeliun2xp"]},{"name":"sbequ12a","content":"An equality theorem for substitution. (Contributed by NM, 2-Jun-1993.) (Proof shortened by Wolf Lammen, 23-Jun-2019.)","origin":"thm sbequ12a(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wb(wsb(s1, s0, w0), wsb(s0, s1, w0)))\n} = {\n  bitr2d(wceq(cv(s0), cv(s1)), wsb(s1, s0, w0), wsb(s0, s1, w0), w0)\n  sbequ12r(s0, s1, w0)\n  sbequ12(s0, s1, w0)\n}","pretty":"thm sbequ12a(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →([s1 / s0]w0 ↔[s0 / s1]w0))\n} = {\n  bitr2d(s0 = s1, [s1 / s0]w0, [s0 / s1]w0, w0)\n  sbequ12r(s0, s1, w0)\n  sbequ12(s0, s1, w0)\n}","parent":["bitr2d","sbequ12r","sbequ12"],"children":["sbco3","sb9"]},{"name":"sbid","content":"An identity theorem for substitution. Remark 9.1 in [Megill] p. 447 (p. 15 of the preprint). (Contributed by NM, 26-May-1993.) (Proof shortened by Wolf Lammen, 30-Sep-2018.)","origin":"thm sbid(setvar s0, wff w0) {\n  |- wb(wsb(s0, s0, w0), w0)\n} = {\n  ax-mp(wb(wsb(s0, s0, w0), w0), wceq(cv(s0), cv(s0)))\n  equid(s0)\n  sbequ12r(s0, s0, w0)\n}","pretty":"thm sbid(setvar s0, wff w0) {\n  ⊢ ([s0 / s0]w0 ↔ w0)\n} = {\n  ax-mp(([s0 / s0]w0 ↔ w0), s0 = s0)\n  equid(s0)\n  sbequ12r(s0, s0, w0)\n}","parent":["ax-mp","equid","sbequ12r"],"children":["sbcov","sbid2vw","sbco","sbidm","sbal2","sbal2OLD","abid","sbceq1a","sbcid","frege58bid","ichid","sbidd","sbidd-misc"]},{"name":"sbcov","content":"Version of ~ sbco with a disjoint variable condition using fewer axioms. (Contributed by Gino Giotto, 7-Aug-2023.)","origin":"thm sbcov(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, wsb(s1, s0, w0)), wsb(s0, s1, w0))\n  -| diffss(s0, s1)\n} = {\n  bitri(wsb(s0, s1, wsb(s1, s0, w0)), wsb(s0, s1, w0), wsb(s0, s1, wsb(s0, s0, w0)))\n  sbcom3vv(s0, s1, s0, w0)\n  sbbii(s0, s1, wsb(s0, s0, w0), w0)\n  sbid(s0, w0)\n}","pretty":"thm sbcov(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1][s1 / s0]w0 ↔[s0 / s1]w0)\n  ⊣ d(s0, s1)\n} = {\n  bitri([s0 / s1][s1 / s0]w0, [s0 / s1]w0, [s0 / s1][s0 / s0]w0)\n  sbcom3vv(s0, s1, s0, w0)\n  sbbii(s0, s1, [s0 / s0]w0, w0)\n  sbid(s0, w0)\n}","parent":["bitri","sbcom3vv","sbbii","sbid"],"children":["sb6a"]},{"name":"sb6a","content":"Equivalence for substitution. (Contributed by NM, 2-Jun-1993.) (Proof shortened by Wolf Lammen, 23-Sep-2018.)","origin":"thm sb6a(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), wsb(s1, s0, w0))))\n  -| diffss(s0, s1)\n} = {\n  bitr3i(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), wsb(s1, s0, w0))), wsb(s0, s1, wsb(s1, s0, w0)))\n  sbcov(s0, s1, w0)\n  sb6(s0, s1, wsb(s1, s0, w0))\n}","pretty":"thm sb6a(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 →[s1 / s0]w0)))\n  ⊣ d(s0, s1)\n} = {\n  bitr3i([s0 / s1]w0, ∀(s1,(s1 = s0 →[s1 / s0]w0)), [s0 / s1][s1 / s0]w0)\n  sbcov(s0, s1, w0)\n  sb6(s0, s1, [s1 / s0]w0)\n}","parent":["bitr3i","sbcov","sb6"],"children":[]},{"name":"sbid2vw","content":"Reverting substitution yields the original expression. Based on fewer axioms than ~ sbid2v , at the expense of an extra distinct variable condition. (Contributed by Wolf Lammen, 5-Aug-2023.)","origin":"thm sbid2vw(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, wsb(s1, s0, w0)), w0)\n  -| diffss(s0, s1)\n  -| diffsw(s1, w0)\n} = {\n  bitri(wsb(s0, s1, wsb(s1, s0, w0)), w0, wsb(s0, s0, w0))\n  sbco2vv(s0, s1, s0, w0)\n  sbid(s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm sbid2vw(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1][s1 / s0]w0 ↔ w0)\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w0)\n} = {\n  bitri([s0 / s1][s1 / s0]w0, w0, [s0 / s0]w0)\n  sbco2vv(s0, s1, s0, w0)\n  sbid(s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["bitri","sbco2vv","sbid","diffss.ex"],"children":["sbelx","wl-ich"]},{"name":"axc16g","content":"Generalization of ~ axc16 . Use the latter when sufficient. This proof only requires, on top of { ~ ax-1 -- ~ ax-7 }, theorem ~ ax12v . (Contributed by NM, 15-May-1993.) (Proof shortened by Andrew Salmon, 25-May-2011.) (Proof shortened by Wolf Lammen, 18-Feb-2018.) Remove dependency on ~ ax-13 , along an idea of BJ. (Revised by Wolf Lammen, 30-Nov-2019.) (Revised by BJ, 7-Jul-2021.) Shorten ~ axc11rv . (Revised by Wolf Lammen, 11-Oct-2021.)","origin":"thm axc16g(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wi(w0, wal(s2, w0)))\n  -| diffss(s0, s1)\n} = {\n  syl(wal(s0, wceq(cv(s0), cv(s1))), wi(w0, wal(s2, w0)), wal(s2, wceq(cv(s2), cv(hs0))))\n  aevlem(s0, s1, s2, hs0)\n  syld(wal(s2, wceq(cv(s2), cv(hs0))), w0, wal(s2, w0), wal(s2, wi(wceq(cv(s2), cv(hs0)), w0)))\n  sps(s2, wceq(cv(s2), cv(hs0)), wi(w0, wal(s2, wi(wceq(cv(s2), cv(hs0)), w0))))\n  ax12v(s2, hs0, w0)\n  al2imi(s2, wceq(cv(s2), cv(hs0)), wi(wceq(cv(s2), cv(hs0)), w0), w0)\n  pm2.27(wceq(cv(s2), cv(hs0)), w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w0)\n}","pretty":"thm axc16g(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→(w0 → ∀(s2, w0)))\n  ⊣ d(s0, s1)\n} = {\n  syl(∀(s0, s0 = s1), (w0 → ∀(s2, w0)), ∀(s2, s2 = hs0))\n  aevlem(s0, s1, s2, hs0)\n  syld(∀(s2, s2 = hs0), w0, ∀(s2, w0), ∀(s2,(s2 = hs0 → w0)))\n  sps(s2, s2 = hs0, (w0 → ∀(s2,(s2 = hs0 → w0))))\n  ax12v(s2, hs0, w0)\n  al2imi(s2, s2 = hs0, (s2 = hs0 → w0), w0)\n  pm2.27(s2 = hs0, w0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(w0)\n}","parent":["syl","aevlem","syld","sps","ax12v","al2imi","pm2.27","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["axc16","axc16gb","axc16nf","axc11v","axc16nfALT"]},{"name":"axc16","content":"Proof of older axiom ~ ax-c16 . (Contributed by NM, 8-Nov-2006.) (Revised by NM, 22-Sep-2017.)","origin":"thm axc16(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wi(w0, wal(s0, w0)))\n  -| diffss(s0, s1)\n} = {\n  axc16g(s0, s1, s0, w0)\n}","pretty":"thm axc16(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→(w0 → ∀(s0, w0)))\n  ⊣ d(s0, s1)\n} = {\n  axc16g(s0, s1, s0, w0)\n}","parent":["axc16g"],"children":["axc11rv","ax12vALT","exists2OLD","bj-ax6elem1","axc11n11r","bj-axc16g16"]},{"name":"axc16gb","content":"Biconditional strengthening of ~ axc16g . (Contributed by NM, 15-May-1993.)","origin":"thm axc16gb(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wb(w0, wal(s2, w0)))\n  -| diffss(s0, s1)\n} = {\n  impbid1(wal(s0, wceq(cv(s0), cv(s1))), w0, wal(s2, w0))\n  axc16g(s0, s1, s2, w0)\n  sp(s2, w0)\n}","pretty":"thm axc16gb(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→(w0 ↔ ∀(s2, w0)))\n  ⊣ d(s0, s1)\n} = {\n  impbid1(∀(s0, s0 = s1), w0, ∀(s2, w0))\n  axc16g(s0, s1, s2, w0)\n  sp(s2, w0)\n}","parent":["impbid1","axc16g","sp"],"children":["sbal"]},{"name":"axc16nf","content":"If ~ dtru is false, then there is only one element in the universe, so everything satisfies ` F/ ` . (Contributed by Mario Carneiro, 7-Oct-2016.) Remove dependency on ~ ax-11 . (Revised by Wolf Lammen, 9-Sep-2018.) (Proof shortened by BJ, 14-Jun-2019.) Remove dependency on ~ ax-10 . (Revised by Wolf lammen, 12-Oct-2021.)","origin":"thm axc16nf(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wnf(s2, w0))\n  -| diffss(s0, s1)\n} = {\n  nfd(s2, wal(s0, wceq(cv(s0), cv(s1))), w0)\n  syld(wal(s0, wceq(cv(s0), cv(s1))), wex(s2, w0), wal(s2, w0), w0)\n  syl5bi(wal(s0, wceq(cv(s0), cv(s1))), wex(s2, w0), w0, wn(wal(s2, wn(w0))))\n  df-ex(s2, w0)\n  con1d(wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wn(w0)), w0)\n  axc16g(s0, s1, s2, wn(w0))\n  axc16g(s0, s1, s2, w0)\n}","pretty":"thm axc16nf(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→ F/(s2, w0))\n  ⊣ d(s0, s1)\n} = {\n  nfd(s2, ∀(s0, s0 = s1), w0)\n  syld(∀(s0, s0 = s1), ∃(s2, w0), ∀(s2, w0), w0)\n  syl5bi(∀(s0, s0 = s1), ∃(s2, w0), w0, ¬ ∀(s2, ¬ w0))\n  df-ex(s2, w0)\n  con1d(∀(s0, s0 = s1), ∀(s2, ¬ w0), w0)\n  axc16g(s0, s1, s2, ¬ w0)\n  axc16g(s0, s1, s2, w0)\n}","parent":["nfd","syld","syl5bi","df-ex","con1d","axc16g"],"children":["nfsb","nfsbd","exists2"]},{"name":"axc11v","content":"Version of ~ axc11 with a disjoint variable condition on ` x ` and ` y ` , which is provable, on top of { ~ ax-1 -- ~ ax-7 }, from ~ ax12v (contrary to ~ axc11 which seems to require the full ~ ax-12 and ~ ax-13 ). (Contributed by BJ, 6-Jul-2021.) (Proof shortened by Wolf Lammen, 11-Oct-2021.)","origin":"thm axc11v(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wi(wal(s0, w0), wal(s1, w0)))\n  -| diffss(s0, s1)\n} = {\n  spsd(s0, wal(s0, wceq(cv(s0), cv(s1))), w0, wal(s1, w0))\n  axc16g(s0, s1, s1, w0)\n}","pretty":"thm axc11v(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→(∀(s0, w0)→ ∀(s1, w0)))\n  ⊣ d(s0, s1)\n} = {\n  spsd(s0, ∀(s0, s0 = s1), w0, ∀(s1, w0))\n  axc16g(s0, s1, s1, w0)\n}","parent":["spsd","axc16g"],"children":[]},{"name":"axc11rv","content":"Version of ~ axc11r with a disjoint variable condition on ` x ` and ` y ` , which is provable, on top of { ~ ax-1 -- ~ ax-7 }, from ~ ax12v (contrary to ~ axc11 which seems to require the full ~ ax-12 and ~ ax-13 , and to ~ axc11r which seems to require the full ~ ax-12 ). (Contributed by BJ, 6-Jul-2021.) (Proof shortened by Wolf Lammen, 11-Oct-2021.)","origin":"thm axc11rv(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wi(wal(s1, w0), wal(s0, w0)))\n  -| diffss(s0, s1)\n} = {\n  spsd(s1, wal(s0, wceq(cv(s0), cv(s1))), w0, wal(s0, w0))\n  axc16(s0, s1, w0)\n}","pretty":"thm axc11rv(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→(∀(s1, w0)→ ∀(s0, w0)))\n  ⊣ d(s0, s1)\n} = {\n  spsd(s1, ∀(s0, s0 = s1), w0, ∀(s0, w0))\n  axc16(s0, s1, w0)\n}","parent":["spsd","axc16"],"children":[]},{"name":"spimv1","content":"Version of ~ spim with a disjoint variable condition, which does not require ~ ax-13 . See ~ spimvw for a version with two disjoint variable conditions, requiring fewer axioms, and ~ spimv for another variant. (Contributed by BJ, 31-May-2019.)","origin":"thm spimv1(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, w0), w1)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  19.36i(s0, w0, w1)\n  eximii(s0, wi(w0, w1), wceq(cv(s0), cv(s1)))\n  ax6ev(s0, s1)\n}","pretty":"thm spimv1(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 → w1))\n  ⊣ d(s0, s1)\n} = {\n  19.36i(s0, w0, w1)\n  eximii(s0, (w0 → w1), s0 = s1)\n  ax6ev(s0, s1)\n}","parent":["19.36i","eximii","ax6ev"],"children":["cbv3v2","cbv3v","bj-chvarv"]},{"name":"cbv3v2","content":"Version of ~ cbv3 with two disjoint variable conditions, which does not require ~ ax-11 nor ~ ax-13 . (Contributed by BJ, 24-Jun-2019.) (Proof shortened by Wolf Lammen, 30-Aug-2021.)","origin":"thm cbv3v2(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, w0), wal(s1, w1))\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w0)\n} = {\n  alrimiv(s1, wal(s0, w0), w1)\n  spimv1(s0, s1, w0, w1)\n  diff.wal.s(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm cbv3v2(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ ∀(s1, w1))\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 → w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w0)\n} = {\n  alrimiv(s1, ∀(s0, w0), w1)\n  spimv1(s0, s1, w0, w1)\n  diff.wal.s(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["alrimiv","spimv1","diff.wal.s","diffss.ex"],"children":["bj-cbv3hv2"]},{"name":"equsalv","content":"Version of ~ equsal with a disjoint variable condition, which does not require ~ ax-13 . See ~ equsalvw for a version with two disjoint variable conditions requiring fewer axioms. See also the dual form ~ equsexv . (Contributed by BJ, 31-May-2019.)","origin":"thm equsalv(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  3bitr4i(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1, wal(s0, wi(wceq(cv(s0), cv(s1)), w1)), wi(wex(s0, wceq(cv(s0), cv(s1))), w1))\n  19.23(s0, wceq(cv(s0), cv(s1)), w1)\n  albii(s0, wi(wceq(cv(s0), cv(s1)), w0), wi(wceq(cv(s0), cv(s1)), w1))\n  pm5.74i(wceq(cv(s0), cv(s1)), w0, w1)\n  a1bi(w1, wex(s0, wceq(cv(s0), cv(s1))))\n  ax6ev(s0, s1)\n}","pretty":"thm equsalv(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0,(s0 = s1 → w0))↔ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  3bitr4i(∀(s0,(s0 = s1 → w0)), w1, ∀(s0,(s0 = s1 → w1)), (∃(s0, s0 = s1)→ w1))\n  19.23(s0, s0 = s1, w1)\n  albii(s0, (s0 = s1 → w0), (s0 = s1 → w1))\n  pm5.74i(s0 = s1, w0, w1)\n  a1bi(w1, ∃(s0, s0 = s1))\n  ax6ev(s0, s1)\n}","parent":["3bitr4i","19.23","albii","pm5.74i","a1bi","ax6ev"],"children":["equsalhw","sbiev","sb6rfv","bj-equsalhv"]},{"name":"equsexv","content":"Version of ~ equsex with a disjoint variable condition, which does not require ~ ax-13 . See ~ equsexvw for a version with two disjoint variable conditions requiring fewer axioms. See also the dual form ~ equsalv . (Contributed by BJ, 31-May-2019.)","origin":"thm equsexv(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), w1)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  bitri(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), w1, wex(s0, wa(wceq(cv(s0), cv(s1)), w1)))\n  exbii(s0, wa(wceq(cv(s0), cv(s1)), w0), wa(wceq(cv(s0), cv(s1)), w1))\n  pm5.32i(wceq(cv(s0), cv(s1)), w0, w1)\n  mpbiran(wex(s0, wa(wceq(cv(s0), cv(s1)), w1)), w1, wex(s0, wceq(cv(s0), cv(s1))))\n  ax6ev(s0, s1)\n  19.41(s0, wceq(cv(s0), cv(s1)), w1)\n}","pretty":"thm equsexv(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0,(s0 = s1 ∧ w0))↔ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  bitri(∃(s0,(s0 = s1 ∧ w0)), w1, ∃(s0,(s0 = s1 ∧ w1)))\n  exbii(s0, (s0 = s1 ∧ w0), (s0 = s1 ∧ w1))\n  pm5.32i(s0 = s1, w0, w1)\n  mpbiran(∃(s0,(s0 = s1 ∧ w1)), w1, ∃(s0, s0 = s1))\n  ax6ev(s0, s1)\n  19.41(s0, s0 = s1, w1)\n}","parent":["bitri","exbii","pm5.32i","mpbiran","ax6ev","19.41"],"children":["sb56","equsexhv","cleljustALT2","sb10f","dprd2d2","poimirlem25"]},{"name":"sbft","content":"Substitution has no effect on a non-free variable. (Contributed by NM, 30-May-2009.) (Revised by Mario Carneiro, 12-Oct-2016.) (Proof shortened by Wolf Lammen, 3-May-2018.)","origin":"thm sbft(setvar s0, setvar s1, wff w0) {\n  |- wi(wnf(s0, w0), wb(wsb(s1, s0, w0), w0))\n} = {\n  impbid(wnf(s0, w0), wsb(s1, s0, w0), w0)\n  syl5ib(wnf(s0, w0), wsb(s1, s0, w0), w0, wex(s0, w0))\n  spsbe(s1, s0, w0)\n  19.9t(s0, w0)\n  syl6(wnf(s0, w0), w0, wsb(s1, s0, w0), wal(s0, w0))\n  nf5r(s0, w0)\n  stdpc4(s0, s1, w0)\n}","pretty":"thm sbft(setvar s0, setvar s1, wff w0) {\n  ⊢ (F/(s0, w0)→([s1 / s0]w0 ↔ w0))\n} = {\n  impbid(F/(s0, w0), [s1 / s0]w0, w0)\n  syl5ib(F/(s0, w0), [s1 / s0]w0, w0, ∃(s0, w0))\n  spsbe(s1, s0, w0)\n  19.9t(s0, w0)\n  syl6(F/(s0, w0), w0, [s1 / s0]w0, ∀(s0, w0))\n  nf5r(s0, w0)\n  stdpc4(s0, s1, w0)\n}","parent":["impbid","syl5ib","spsbe","19.9t","syl6","nf5r","stdpc4"],"children":["sbf","sbctt","wl-sbrimt","wl-sblimt","wl-equsb4","wl-ich-lem1a","wl-ich-lem1b","wl-ich-lem1d"]},{"name":"sbf","content":"Substitution for a variable not free in a wff does not affect it. For a version requiring disjoint variables but fewer axioms, see ~ sbv . (Contributed by NM, 14-May-1993.) (Revised by Mario Carneiro, 4-Oct-2016.)","origin":"thm sbf(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, w0), w0)\n  -| wnf(s1, w0)\n} = {\n  ax-mp(wb(wsb(s0, s1, w0), w0), wnf(s1, w0))\n  sbft(s1, s0, w0)\n}","pretty":"thm sbf(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1]w0 ↔ w0)\n  ⊣ F/(s1, w0)\n} = {\n  ax-mp(([s0 / s1]w0 ↔ w0), F/(s1, w0))\n  sbft(s1, s0, w0)\n}","parent":["ax-mp","sbft"],"children":["sbievOLD","sbh","sbf2","nfs1f","sb6x","sbequ5","sbequ6","sb2ae","sbrim","sblim","sbrbif","sbie","sbid2","sbabel","nfcdeq","mo5f","suppss2f","fmptdF","disjdsct","esumpfinvalf","bj-sbf3","bj-sbf4","wl-ich-lem1","ellimcabssub0","2reu8i"]},{"name":"sb56","content":"Two equivalent ways of expressing the proper substitution of ` y ` for ` x ` in ` ph ` , when ` x ` and ` y ` are distinct, namely, alternate definitions ~ sb5 and ~ sb6 . Theorem 6.2 of [Quine] p. 40. The proof does not involve ~ df-sb . The implication \"to the left\" is ~ equs4 and does not require any disjoint variable condition (but the version with a disjoint variable condition, ~ equs4v , requires fewer axioms). Theorem ~ equs45f replaces the disjoint variable condition with a non-freeness hypothesis and ~ equs5 replaces it with a distinctor as antecedent. (Contributed by NM, 14-Apr-2008.) Revised to use ~ equsexv in place of ~ equsex in order to remove dependency on ~ ax-13 . (Revised by BJ, 20-Dec-2020.)","origin":"thm sb56(setvar s0, setvar s1, wff w0) {\n  |- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  -| diffss(s0, s1)\n} = {\n  equsexv(s0, s1, w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  nfa1(s0, wi(wceq(cv(s0), cv(s1)), w0))\n  impbid(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  ax12v2(s0, s1, w0)\n  com12(wceq(cv(s0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n  sp(s0, wi(wceq(cv(s0), cv(s1)), w0))\n}","pretty":"thm sb56(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n  ⊣ d(s0, s1)\n} = {\n  equsexv(s0, s1, w0, ∀(s0,(s0 = s1 → w0)))\n  nfa1(s0, (s0 = s1 → w0))\n  impbid(s0 = s1, w0, ∀(s0,(s0 = s1 → w0)))\n  ax12v2(s0, s1, w0)\n  com12(s0 = s1, ∀(s0,(s0 = s1 → w0)), w0)\n  sp(s0, (s0 = s1 → w0))\n}","parent":["equsexv","nfa1","impbid","ax12v2","com12","sp"],"children":["sb5","dfsb7","sb4vOLDOLD","sb4vOLDALT","sb5ALT2","mopick","alexeqg","dfdif3","pm13.196a"]},{"name":"sb6OLD","content":"Obsolete version of ~ sb6 as of 7-Jul-2023. Equivalence for substitution. Compare Theorem 6.2 of [Quine] p. 40. Also proved as Lemmas 16 and 17 of [Tarski] p. 70. The implication \"to the left\", ~ sb2vOLD , also holds without a disjoint variable condition ( ~ sb2 ). Theorem ~ sb6f replaces the disjoint variable condition with a non-freeness hypothesis. Theorem ~ sb4b replaces it with a distinctor antecedent. (Contributed by NM, 18-Aug-1993.) (Proof shortened by Wolf Lammen, 21-Sep-2018.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm sb6OLD(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n  -| diffss(s0, s1)\n} = {\n  impbii(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n  sb4vOLD(s0, s1, w0)\n  sb2vOLD(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm sb6OLD(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 → w0)))\n  ⊣ d(s0, s1)\n} = {\n  impbii([s0 / s1]w0, ∀(s1,(s1 = s0 → w0)))\n  sb4vOLD(s0, s1, w0)\n  sb2vOLD(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["impbii","sb4vOLD","sb2vOLD","diffss.ex"],"children":[]},{"name":"sb5","content":"Alternate definition of substitution when variables are disjoint. Similar to Theorem 6.1 of [Quine] p. 40. The implication \"to the right\" is ~ sb1 and does not require any disjoint variable condition. Theorem ~ sb5f replaces the disjoint variable condition with a non-freeness hypothesis. (Contributed by NM, 18-Aug-1993.)","origin":"thm sb5(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, w0), wex(s1, wa(wceq(cv(s1), cv(s0)), w0)))\n  -| diffss(s0, s1)\n} = {\n  bitr4i(wsb(s0, s1, w0), wex(s1, wa(wceq(cv(s1), cv(s0)), w0)), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n  sb6(s0, s1, w0)\n  sb56(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm sb5(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1]w0 ↔ ∃(s1,(s1 = s0 ∧ w0)))\n  ⊣ d(s0, s1)\n} = {\n  bitr4i([s0 / s1]w0, ∃(s1,(s1 = s0 ∧ w0)), ∀(s1,(s1 = s0 → w0)))\n  sb6(s0, s1, w0)\n  sb56(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["bitr4i","sb6","sb56","diffss.ex"],"children":["2sb5","sbnvOLD","sb7f","sbelx","sbc2or","sbc5"]},{"name":"2sb5","content":"Equivalence for double substitution. (Contributed by NM, 3-Feb-2005.)","origin":"thm 2sb5(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  |- wb(wsb(s0, s1, wsb(s2, s3, w0)), wex(s1, wex(s3, wa(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s3)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n} = {\n  bitri(wsb(s0, s1, wsb(s2, s3, w0)), wex(s1, wex(s3, wa(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0))), wex(s1, wa(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0))))\n  sb5(s0, s1, wsb(s2, s3, w0))\n  exbii(s1, wa(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0)), wex(s3, wa(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0)))\n  3bitr4ri(wa(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0)), wex(s3, wa(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0)), wex(s3, wa(wceq(cv(s1), cv(s0)), wa(wceq(cv(s3), cv(s2)), w0))), wa(wceq(cv(s1), cv(s0)), wex(s3, wa(wceq(cv(s3), cv(s2)), w0))))\n  19.42v(s3, wceq(cv(s1), cv(s0)), wa(wceq(cv(s3), cv(s2)), w0))\n  exbii(s3, wa(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0), wa(wceq(cv(s1), cv(s0)), wa(wceq(cv(s3), cv(s2)), w0)))\n  anass(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2)), w0)\n  anbi2i(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0), wex(s3, wa(wceq(cv(s3), cv(s2)), w0)))\n  sb5(s2, s3, w0)\n  diff.wceq.s(s3, cv(s1), cv(s0))\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n}","pretty":"thm 2sb5(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  ⊢ ([s0 / s1][s2 / s3]w0 ↔ ∃(s1, ∃(s3,((s1 = s0 ∧ s3 = s2)∧ w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n} = {\n  bitri([s0 / s1][s2 / s3]w0, ∃(s1, ∃(s3,((s1 = s0 ∧ s3 = s2)∧ w0))), ∃(s1,(s1 = s0 ∧[s2 / s3]w0)))\n  sb5(s0, s1, [s2 / s3]w0)\n  exbii(s1, (s1 = s0 ∧[s2 / s3]w0), ∃(s3,((s1 = s0 ∧ s3 = s2)∧ w0)))\n  3bitr4ri((s1 = s0 ∧[s2 / s3]w0), ∃(s3,((s1 = s0 ∧ s3 = s2)∧ w0)), ∃(s3,(s1 = s0 ∧(s3 = s2 ∧ w0))), (s1 = s0 ∧ ∃(s3,(s3 = s2 ∧ w0))))\n  19.42v(s3, s1 = s0, (s3 = s2 ∧ w0))\n  exbii(s3, ((s1 = s0 ∧ s3 = s2)∧ w0), (s1 = s0 ∧(s3 = s2 ∧ w0)))\n  anass(s1 = s0, s3 = s2, w0)\n  anbi2i(s1 = s0, [s2 / s3]w0, ∃(s3,(s3 = s2 ∧ w0)))\n  sb5(s2, s3, w0)\n  diff.wceq.s(s3, s1, s0)\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n}","parent":["bitri","sb5","exbii","3bitr4ri","19.42v","anass","anbi2i","diff.wceq.s","diff.cv.s","diffss.ex"],"children":["opelopabsbALT"]},{"name":"2sb6","content":"Equivalence for double substitution. (Contributed by NM, 3-Feb-2005.)","origin":"thm 2sb6(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  |- wb(wsb(s0, s1, wsb(s2, s3, w0)), wal(s1, wal(s3, wi(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s3)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n} = {\n  bitri(wsb(s0, s1, wsb(s2, s3, w0)), wal(s1, wal(s3, wi(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0))), wal(s1, wi(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0))))\n  sb6(s0, s1, wsb(s2, s3, w0))\n  albii(s1, wi(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0)), wal(s3, wi(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0)))\n  3bitr4ri(wi(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0)), wal(s3, wi(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0)), wal(s3, wi(wceq(cv(s1), cv(s0)), wi(wceq(cv(s3), cv(s2)), w0))), wi(wceq(cv(s1), cv(s0)), wal(s3, wi(wceq(cv(s3), cv(s2)), w0))))\n  19.21v(s3, wceq(cv(s1), cv(s0)), wi(wceq(cv(s3), cv(s2)), w0))\n  albii(s3, wi(wa(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2))), w0), wi(wceq(cv(s1), cv(s0)), wi(wceq(cv(s3), cv(s2)), w0)))\n  impexp(wceq(cv(s1), cv(s0)), wceq(cv(s3), cv(s2)), w0)\n  imbi2i(wceq(cv(s1), cv(s0)), wsb(s2, s3, w0), wal(s3, wi(wceq(cv(s3), cv(s2)), w0)))\n  sb6(s2, s3, w0)\n  diff.wceq.s(s3, cv(s1), cv(s0))\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n}","pretty":"thm 2sb6(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  ⊢ ([s0 / s1][s2 / s3]w0 ↔ ∀(s1, ∀(s3,((s1 = s0 ∧ s3 = s2)→ w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n} = {\n  bitri([s0 / s1][s2 / s3]w0, ∀(s1, ∀(s3,((s1 = s0 ∧ s3 = s2)→ w0))), ∀(s1,(s1 = s0 →[s2 / s3]w0)))\n  sb6(s0, s1, [s2 / s3]w0)\n  albii(s1, (s1 = s0 →[s2 / s3]w0), ∀(s3,((s1 = s0 ∧ s3 = s2)→ w0)))\n  3bitr4ri((s1 = s0 →[s2 / s3]w0), ∀(s3,((s1 = s0 ∧ s3 = s2)→ w0)), ∀(s3,(s1 = s0 →(s3 = s2 → w0))), (s1 = s0 → ∀(s3,(s3 = s2 → w0))))\n  19.21v(s3, s1 = s0, (s3 = s2 → w0))\n  albii(s3, ((s1 = s0 ∧ s3 = s2)→ w0), (s1 = s0 →(s3 = s2 → w0)))\n  impexp(s1 = s0, s3 = s2, w0)\n  imbi2i(s1 = s0, [s2 / s3]w0, ∀(s3,(s3 = s2 → w0)))\n  sb6(s2, s3, w0)\n  diff.wceq.s(s3, s1, s0)\n  diff.cv.s(s3, s1)\n  diffss.ex(s3, s1)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n}","parent":["bitri","sb6","albii","3bitr4ri","19.21v","impexp","imbi2i","diff.wceq.s","diff.cv.s","diffss.ex"],"children":["2exsb","sbcom2","sbcom2OLD","2eu6"]},{"name":"dfsb7","content":"An alternate definition of proper substitution ~ df-sb . By introducing a dummy variable ` y ` in the definiens, we are able to eliminate any distinct variable restrictions among the variables ` t ` , ` x ` , and ` ph ` of the definiendum. No distinct variable conflicts arise because ` y ` effectively insulates ` t ` from ` x ` . To achieve this, we use a chain of two substitutions in the form of ~ sb5 , first ` y ` for ` x ` then ` t ` for ` y ` . Compare Definition 2.1'' of [Quine] p. 17, which is obtained from this theorem by applying ~ df-clab . Theorem ~ sb7h provides a version where ` ph ` and ` y ` don't have to be distinct. (Contributed by NM, 28-Jan-2004.) Revise ~ df-sb . (Revised by BJ, 25-Dec-2020.)","origin":"thm dfsb7(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wb(wsb(s0, s1, w0), wex(s2, wa(wceq(cv(s2), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s2, w0)\n} = {\n  3bitr2i(wsb(s0, s1, w0), wex(s2, wa(wceq(cv(s2), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))), wal(s2, wi(wceq(cv(s2), cv(s0)), wal(s1, wi(wceq(cv(s1), cv(s2)), w0)))), wex(s2, wa(wceq(cv(s2), cv(s0)), wal(s1, wi(wceq(cv(s1), cv(s2)), w0)))))\n  df-sb(s0, s1, s2, w0)\n  sb56(s2, s0, wal(s1, wi(wceq(cv(s1), cv(s2)), w0)))\n  exbii(s2, wa(wceq(cv(s2), cv(s0)), wal(s1, wi(wceq(cv(s1), cv(s2)), w0))), wa(wceq(cv(s2), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0))))\n  anbi2i(wceq(cv(s2), cv(s0)), wal(s1, wi(wceq(cv(s1), cv(s2)), w0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))\n  bicomi(wal(s1, wi(wceq(cv(s1), cv(s2)), w0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))\n  sb56(s1, s2, w0)\n  diffss.ex(s2, s0)\n}","pretty":"thm dfsb7(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ ([s0 / s1]w0 ↔ ∃(s2,(s2 = s0 ∧ ∃(s1,(s1 = s2 ∧ w0)))))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s2, w0)\n} = {\n  3bitr2i([s0 / s1]w0, ∃(s2,(s2 = s0 ∧ ∃(s1,(s1 = s2 ∧ w0)))), ∀(s2,(s2 = s0 → ∀(s1,(s1 = s2 → w0)))), ∃(s2,(s2 = s0 ∧ ∀(s1,(s1 = s2 → w0)))))\n  df-sb(s0, s1, s2, w0)\n  sb56(s2, s0, ∀(s1,(s1 = s2 → w0)))\n  exbii(s2, (s2 = s0 ∧ ∀(s1,(s1 = s2 → w0))), (s2 = s0 ∧ ∃(s1,(s1 = s2 ∧ w0))))\n  anbi2i(s2 = s0, ∀(s1,(s1 = s2 → w0)), ∃(s1,(s1 = s2 ∧ w0)))\n  bicomi(∀(s1,(s1 = s2 → w0)), ∃(s1,(s1 = s2 ∧ w0)))\n  sb56(s1, s2, w0)\n  diffss.ex(s2, s0)\n}","parent":["3bitr2i","df-sb","sb56","exbii","anbi2i","bicomi","diffss.ex"],"children":["sbn"]},{"name":"sbn","content":"Negation inside and outside of substitution are equivalent. (Contributed by NM, 14-May-1993.) (Proof shortened by Wolf Lammen, 30-Apr-2018.) Revise ~ df-sb . (Revised by BJ, 25-Dec-2020.)","origin":"thm sbn(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, wn(w0)), wn(wsb(s0, s1, w0)))\n} = {\n  3bitri(wsb(s0, s1, wn(w0)), wn(wsb(s0, s1, w0)), wal(hs0, wi(wceq(cv(hs0), cv(s0)), wal(s1, wi(wceq(cv(s1), cv(hs0)), wn(w0))))), wal(hs0, wi(wceq(cv(hs0), cv(s0)), wn(wex(s1, wa(wceq(cv(s1), cv(hs0)), w0))))))\n  df-sb(s0, s1, hs0, wn(w0))\n  albii(hs0, wi(wceq(cv(hs0), cv(s0)), wal(s1, wi(wceq(cv(s1), cv(hs0)), wn(w0)))), wi(wceq(cv(hs0), cv(s0)), wn(wex(s1, wa(wceq(cv(s1), cv(hs0)), w0)))))\n  imbi2i(wceq(cv(hs0), cv(s0)), wal(s1, wi(wceq(cv(s1), cv(hs0)), wn(w0))), wn(wex(s1, wa(wceq(cv(s1), cv(hs0)), w0))))\n  alinexa(s1, wceq(cv(s1), cv(hs0)), w0)\n  xchbinxr(wal(hs0, wi(wceq(cv(hs0), cv(s0)), wn(wex(s1, wa(wceq(cv(s1), cv(hs0)), w0))))), wsb(s0, s1, w0), wex(hs0, wa(wceq(cv(hs0), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(hs0)), w0)))))\n  alinexa(hs0, wceq(cv(hs0), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(hs0)), w0)))\n  dfsb7(s0, s1, hs0, w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wn(w0))\n  diff.hs0.w(w0)\n}","pretty":"thm sbn(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1]¬ w0 ↔ ¬[s0 / s1]w0)\n} = {\n  3bitri([s0 / s1]¬ w0, ¬[s0 / s1]w0, ∀(hs0,(hs0 = s0 → ∀(s1,(s1 = hs0 → ¬ w0)))), ∀(hs0,(hs0 = s0 → ¬ ∃(s1,(s1 = hs0 ∧ w0)))))\n  df-sb(s0, s1, hs0, ¬ w0)\n  albii(hs0, (hs0 = s0 → ∀(s1,(s1 = hs0 → ¬ w0))), (hs0 = s0 → ¬ ∃(s1,(s1 = hs0 ∧ w0))))\n  imbi2i(hs0 = s0, ∀(s1,(s1 = hs0 → ¬ w0)), ¬ ∃(s1,(s1 = hs0 ∧ w0)))\n  alinexa(s1, s1 = hs0, w0)\n  xchbinxr(∀(hs0,(hs0 = s0 → ¬ ∃(s1,(s1 = hs0 ∧ w0)))), [s0 / s1]w0, ∃(hs0,(hs0 = s0 ∧ ∃(s1,(s1 = hs0 ∧ w0)))))\n  alinexa(hs0, hs0 = s0, ∃(s1,(s1 = hs0 ∧ w0)))\n  dfsb7(s0, s1, hs0, w0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(¬ w0)\n  diff.hs0.w(w0)\n}","parent":["3bitri","df-sb","albii","imbi2i","alinexa","xchbinxr","dfsb7","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["sbi2","sbanvOLD","sbor","sban","sbex","sbcng","difab","bj-ab0","wl-sb8et","wl-dfrexsb","pm13.196a"]},{"name":"nfs1v","content":"The setvar ` x ` is not free in ` [ y / x ] ph ` when ` x ` and ` y ` are distinct. (Contributed by Mario Carneiro, 11-Aug-2016.) Shorten nfs1v and ~ hbs1 combined. (Revised by Wolf Lammen, 28-Jul-2022.)","origin":"thm nfs1v(setvar s0, setvar s1, wff w0) {\n  |- wnf(s0, wsb(s1, s0, w0))\n  -| diffss(s0, s1)\n} = {\n  nfxfr(s0, wsb(s1, s0, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  sb6(s1, s0, w0)\n  nfa1(s0, wi(wceq(cv(s0), cv(s1)), w0))\n  diffss.ex(s1, s0)\n}","pretty":"thm nfs1v(setvar s0, setvar s1, wff w0) {\n  ⊢ F/(s0,[s1 / s0]w0)\n  ⊣ d(s0, s1)\n} = {\n  nfxfr(s0, [s1 / s0]w0, ∀(s0,(s0 = s1 → w0)))\n  sb6(s1, s0, w0)\n  nfa1(s0, (s0 = s1 → w0))\n  diffss.ex(s1, s0)\n}","parent":["nfxfr","sb6","nfa1","diffss.ex"],"children":["hbs1","sb8v","sb8ev","sb2ae","sbbib","mo3","mo3OLD","eu1","eu1OLD","2mo","2eu6","cbvralf","cbvralsv","cbvrexsv","cbvrab","sbhypf","mob2","reu2","reu2eqd","sbcralt","sbcreu","cbvreucsf","cbvrabcsf","sbcel12","sbceqg","2nreu","csbif","rexreusng","cbvopab1","cbvopab1s","cbvmptf","cbvmpt","opelopabsb","csbopab","csbopabgALT","opeliunxp","ralxpf","cbviota","csbiota","isarep1","f1ossf1o","cbvriota","csbriota","onminex","tfis","findes","abrexex2g","dfoprab4f","axrepndlem1","axrepndlem2","uzind4s","mo5f","ac6sf2","esumcvg","wl-ich-lem1","wl-ich-lem1b","wl-ich-lem1c","wl-ich-lem1d","wl-lem-moexsb","wl-mo3t","poimirlem26","sbcalf","sbcexf","rabdif","sbcrexgOLD","2sb5nd","2sb5ndALT","2reu8i","dfich2ai","dfich2","opeliun2xp"]},{"name":"hbs1","content":"The setvar ` x ` is not free in ` [ y / x ] ph ` when ` x ` and ` y ` are distinct. (Contributed by NM, 26-May-1993.)","origin":"thm hbs1(setvar s0, setvar s1, wff w0) {\n  |- wi(wsb(s0, s1, w0), wal(s1, wsb(s0, s1, w0)))\n  -| diffss(s0, s1)\n} = {\n  nf5ri(s1, wsb(s0, s1, w0))\n  nfs1v(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm hbs1(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1]w0 → ∀(s1,[s0 / s1]w0))\n  ⊣ d(s0, s1)\n} = {\n  nf5ri(s1, [s0 / s1]w0)\n  nfs1v(s1, s0, w0)\n  diffss.ex(s1, s0)\n}","parent":["nf5ri","nfs1v","diffss.ex"],"children":["hbab1","sb5ALT","2sb5ndVD","sb5ALTVD","2sb5ndALT"]},{"name":"nf5","content":"Alternate definition of ~ df-nf . (Contributed by Mario Carneiro, 11-Aug-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Sep-2021.)","origin":"thm nf5(setvar s0, wff w0) {\n  |- wb(wnf(s0, w0), wal(s0, wi(w0, wal(s0, w0))))\n} = {\n  bitr4i(wnf(s0, w0), wal(s0, wi(w0, wal(s0, w0))), wi(wex(s0, w0), wal(s0, w0)))\n  df-nf(s0, w0)\n  19.23(s0, w0, wal(s0, w0))\n  nfa1(s0, w0)\n}","pretty":"thm nf5(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)↔ ∀(s0,(w0 → ∀(s0, w0))))\n} = {\n  bitr4i(F/(s0, w0), ∀(s0,(w0 → ∀(s0, w0))), (∃(s0, w0)→ ∀(s0, w0)))\n  df-nf(s0, w0)\n  19.23(s0, w0, ∀(s0, w0))\n  nfa1(s0, w0)\n}","parent":["bitr4i","df-nf","19.23","nfa1"],"children":["drnf1","axie2","xfree","bj-nfdt0","bj-nfalt","bj-nfext","bj-nfs1t","bj-drnf1v","bj-sbnf","wl-sbnf1","hbexg"]},{"name":"nf6","content":"An alternate definition of ~ df-nf . (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm nf6(setvar s0, wff w0) {\n  |- wb(wnf(s0, w0), wal(s0, wi(wex(s0, w0), w0)))\n} = {\n  bitr4i(wnf(s0, w0), wal(s0, wi(wex(s0, w0), w0)), wi(wex(s0, w0), wal(s0, w0)))\n  df-nf(s0, w0)\n  19.21(s0, wex(s0, w0), w0)\n  nfe1(s0, w0)\n}","pretty":"thm nf6(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)↔ ∀(s0,(∃(s0, w0)→ w0)))\n} = {\n  bitr4i(F/(s0, w0), ∀(s0,(∃(s0, w0)→ w0)), (∃(s0, w0)→ ∀(s0, w0)))\n  df-nf(s0, w0)\n  19.21(s0, ∃(s0, w0), w0)\n  nfe1(s0, w0)\n}","parent":["bitr4i","df-nf","19.21","nfe1"],"children":["eusv2nf","xfree"]},{"name":"nf5d","content":"Deduce that ` x ` is not free in ` ps ` in a context. (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm nf5d(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wnf(s0, w1))\n  -| wnf(s0, w0)\n  -| wi(w0, wi(w1, wal(s0, w1)))\n} = {\n  syl(w0, wnf(s0, w1), wal(s0, wi(w1, wal(s0, w1))))\n  alrimi(s0, w0, wi(w1, wal(s0, w1)))\n  nf5-1(s0, w1)\n}","pretty":"thm nf5d(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → F/(s0, w1))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 →(w1 → ∀(s0, w1)))\n} = {\n  syl(w0, F/(s0, w1), ∀(s0,(w1 → ∀(s0, w1))))\n  alrimi(s0, w0, (w1 → ∀(s0, w1)))\n  nf5-1(s0, w1)\n}","parent":["syl","alrimi","nf5-1"],"children":["dvelimhw","nfeqf","cbv1h","axc16nfALT","nfsb2","nfsb2ALT","distel","bj-cbv1hv","wl-ax11-lem3"]},{"name":"nf5di","content":"Since the converse holds by ~ a1i , this inference shows that we can represent a not-free hypothesis with either ` F/ x ph ` (inference form) or ` ( ph -> F/ x ph ) ` (deduction form). (Contributed by NM, 17-Aug-2018.) (Proof shortened by Wolf Lammen, 10-Jul-2019.)","origin":"thm nf5di(setvar s0, wff w0) {\n  |- wnf(s0, w0)\n  -| wi(w0, wnf(s0, w0))\n} = {\n  nf5i(s0, w0)\n  pm2.43i(w0, wal(s0, w0))\n  nf5rd(s0, w0, w0)\n}","pretty":"thm nf5di(setvar s0, wff w0) {\n  ⊢ F/(s0, w0)\n  ⊣ (w0 → F/(s0, w0))\n} = {\n  nf5i(s0, w0)\n  pm2.43i(w0, ∀(s0, w0))\n  nf5rd(s0, w0, w0)\n}","parent":["nf5i","pm2.43i","nf5rd"],"children":[]},{"name":"19.9h","content":"A wff may be existentially quantified with a variable not free in it. Theorem 19.9 of [Margaris] p. 89. (Contributed by FL, 24-Mar-2007.) (Proof shortened by Wolf Lammen, 5-Jan-2018.) (Proof shortened by Wolf Lammen, 14-Jul-2020.)","origin":"thm 19.9h(setvar s0, wff w0) {\n  |- wb(wex(s0, w0), w0)\n  -| wi(w0, wal(s0, w0))\n} = {\n  19.9(s0, w0)\n  nf5i(s0, w0)\n}","pretty":"thm 19.9h(setvar s0, wff w0) {\n  ⊢ (∃(s0, w0)↔ w0)\n  ⊣ (w0 → ∀(s0, w0))\n} = {\n  19.9(s0, w0)\n  nf5i(s0, w0)\n}","parent":["19.9","nf5i"],"children":["bnj1131","bnj1397"]},{"name":"19.21h","content":"Theorem 19.21 of [Margaris] p. 90. The hypothesis can be thought of as \" ` x ` is not free in ` ph ` \". See also ~ 19.21 and ~ 19.21v . (Contributed by NM, 1-Aug-2017.) (Proof shortened by Wolf Lammen, 1-Jan-2018.)","origin":"thm 19.21h(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1)))\n  -| wi(w0, wal(s0, w0))\n} = {\n  19.21(s0, w0, w1)\n  nf5i(s0, w0)\n}","pretty":"thm 19.21h(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 → w1))↔(w0 → ∀(s0, w1)))\n  ⊣ (w0 → ∀(s0, w0))\n} = {\n  19.21(s0, w0, w1)\n  nf5i(s0, w0)\n}","parent":["19.21","nf5i"],"children":["hbim1"]},{"name":"19.23h","content":"Theorem 19.23 of [Margaris] p. 90. See ~ 19.23 . (Contributed by NM, 24-Jan-1993.) (Revised by Mario Carneiro, 24-Sep-2016.) (Proof shortened by Wolf Lammen, 1-Jan-2018.)","origin":"thm 19.23h(setvar s0, wff w0, wff w1) {\n  |- wb(wal(s0, wi(w0, w1)), wi(wex(s0, w0), w1))\n  -| wi(w1, wal(s0, w1))\n} = {\n  19.23(s0, w0, w1)\n  nf5i(s0, w1)\n}","pretty":"thm 19.23h(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 → w1))↔(∃(s0, w0)→ w1))\n  ⊣ (w1 → ∀(s0, w1))\n} = {\n  19.23(s0, w0, w1)\n  nf5i(s0, w1)\n}","parent":["19.23","nf5i"],"children":[]},{"name":"exlimih","content":"Inference associated with ~ 19.23 . See ~ exlimiv for a version with a disjoint variable condition requiring fewer axioms. (Contributed by NM, 10-Jan-1993.) (Proof shortened by Andrew Salmon, 13-May-2011.) (Proof shortened by Wolf Lammen, 1-Jan-2018.)","origin":"thm exlimih(setvar s0, wff w0, wff w1) {\n  |- wi(wex(s0, w0), w1)\n  -| wi(w1, wal(s0, w1))\n  -| wi(w0, w1)\n} = {\n  exlimi(s0, w0, w1)\n  nf5i(s0, w1)\n}","pretty":"thm exlimih(setvar s0, wff w0, wff w1) {\n  ⊢ (∃(s0, w0)→ w1)\n  ⊣ (w1 → ∀(s0, w1))\n  ⊣ (w0 → w1)\n} = {\n  exlimi(s0, w0, w1)\n  nf5i(s0, w1)\n}","parent":["exlimi","nf5i"],"children":[]},{"name":"exlimdh","content":"Deduction form of Theorem 19.9 of [Margaris] p. 89. (Contributed by NM, 28-Jan-1997.)","origin":"thm exlimdh(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wex(s0, w1), w2))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w2, wal(s0, w2))\n  -| wi(w0, wi(w1, w2))\n} = {\n  exlimd(s0, w0, w1, w2)\n  nf5i(s0, w0)\n  nf5i(s0, w2)\n}","pretty":"thm exlimdh(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∃(s0, w1)→ w2))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w2 → ∀(s0, w2))\n  ⊣ (w0 →(w1 → w2))\n} = {\n  exlimd(s0, w0, w1, w2)\n  nf5i(s0, w0)\n  nf5i(s0, w2)\n}","parent":["exlimd","nf5i"],"children":["exlimexi","eexinst01","eexinst11"]},{"name":"equsalhw","content":"Version of ~ equsalh with a disjoint variable condition, which does not require ~ ax-13 . (Contributed by NM, 29-Nov-2015.) (Proof shortened by Wolf Lammen, 8-Jul-2022.)","origin":"thm equsalhw(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1)\n  -| wi(w1, wal(s0, w1))\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  equsalv(s0, s1, w0, w1)\n  nf5i(s0, w1)\n}","pretty":"thm equsalhw(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0,(s0 = s1 → w0))↔ w1)\n  ⊣ (w1 → ∀(s0, w1))\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  equsalv(s0, s1, w0, w1)\n  nf5i(s0, w1)\n}","parent":["equsalv","nf5i"],"children":["dvelimhw"]},{"name":"equsexhv","content":"Version of ~ equsexh with a disjoint variable condition, which does not require ~ ax-13 . (Contributed by BJ, 31-May-2019.)","origin":"thm equsexhv(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), w1)\n  -| wi(w1, wal(s0, w1))\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  equsexv(s0, s1, w0, w1)\n  nf5i(s0, w1)\n}","pretty":"thm equsexhv(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0,(s0 = s1 ∧ w0))↔ w1)\n  ⊣ (w1 → ∀(s0, w1))\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  equsexv(s0, s1, w0, w1)\n  nf5i(s0, w1)\n}","parent":["equsexv","nf5i"],"children":["cleljustALT"]},{"name":"hba1","content":"The setvar ` x ` is not free in ` A. x ph ` . This corresponds to the axiom (4) of modal logic. Example in Appendix in [Megill] p. 450 (p. 19 of the preprint). Also Lemma 22 of [Monk2] p. 114. (Contributed by NM, 24-Jan-1993.) (Proof shortened by Wolf Lammen, 12-Oct-2021.)","origin":"thm hba1(setvar s0, wff w0) {\n  |- wi(wal(s0, w0), wal(s0, wal(s0, w0)))\n} = {\n  nf5ri(s0, wal(s0, w0))\n  nfa1(s0, w0)\n}","pretty":"thm hba1(setvar s0, wff w0) {\n  ⊢ (∀(s0, w0)→ ∀(s0, ∀(s0, w0)))\n} = {\n  nf5ri(s0, ∀(s0, w0))\n  nfa1(s0, w0)\n}","parent":["nf5ri","nfa1"],"children":["axi5r","axial","bj-19.41al","bj-modal4e","hbntal","hbimpg","hbimpgVD","hbalgVD","hbexgVD","ax6e2eqVD","e2ebindVD","vk15.4jVD"]},{"name":"hbnt","content":"Closed theorem version of bound-variable hypothesis builder ~ hbn . (Contributed by NM, 10-May-1993.) (Proof shortened by Wolf Lammen, 14-Oct-2021.)","origin":"thm hbnt(setvar s0, wff w0) {\n  |- wi(wal(s0, wi(w0, wal(s0, w0))), wi(wn(w0), wal(s0, wn(w0))))\n} = {\n  nf5rd(s0, wal(s0, wi(w0, wal(s0, w0))), wn(w0))\n  nfnd(s0, wal(s0, wi(w0, wal(s0, w0))), w0)\n  nf5-1(s0, w0)\n}","pretty":"thm hbnt(setvar s0, wff w0) {\n  ⊢ (∀(s0,(w0 → ∀(s0, w0)))→(¬ w0 → ∀(s0, ¬ w0)))\n} = {\n  nf5rd(s0, ∀(s0,(w0 → ∀(s0, w0))), ¬ w0)\n  nfnd(s0, ∀(s0,(w0 → ∀(s0, w0))), w0)\n  nf5-1(s0, w0)\n}","parent":["nf5rd","nfnd","nf5-1"],"children":["hbn","hbnd","bj-hbext"]},{"name":"hbn","content":"If ` x ` is not free in ` ph ` , it is not free in ` -. ph ` . (Contributed by NM, 10-Jan-1993.) (Proof shortened by Wolf Lammen, 17-Dec-2017.)","origin":"thm hbn(setvar s0, wff w0) {\n  |- wi(wn(w0), wal(s0, wn(w0)))\n  -| wi(w0, wal(s0, w0))\n} = {\n  mpg(s0, wi(wn(w0), wal(s0, wn(w0))), wi(w0, wal(s0, w0)))\n  hbnt(s0, w0)\n}","pretty":"thm hbn(setvar s0, wff w0) {\n  ⊢ (¬ w0 → ∀(s0, ¬ w0))\n  ⊣ (w0 → ∀(s0, w0))\n} = {\n  mpg(s0, (¬ w0 → ∀(s0, ¬ w0)), (w0 → ∀(s0, w0)))\n  hbnt(s0, w0)\n}","parent":["mpg","hbnt"],"children":["hbnae","ac6s6","hbnae-o","vk15.4j","vk15.4jVD"]},{"name":"hbnd","content":"Deduction form of bound-variable hypothesis builder ~ hbn . (Contributed by NM, 3-Jan-2002.)","origin":"thm hbnd(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wi(wn(w1), wal(s0, wn(w1))))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w0, wi(w1, wal(s0, w1)))\n} = {\n  syl(w0, wi(wn(w1), wal(s0, wn(w1))), wal(s0, wi(w1, wal(s0, w1))))\n  alrimih(s0, w0, wi(w1, wal(s0, w1)))\n  hbnt(s0, w1)\n}","pretty":"thm hbnd(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 →(¬ w1 → ∀(s0, ¬ w1)))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w0 →(w1 → ∀(s0, w1)))\n} = {\n  syl(w0, (¬ w1 → ∀(s0, ¬ w1)), ∀(s0,(w1 → ∀(s0, w1))))\n  alrimih(s0, w0, (w1 → ∀(s0, w1)))\n  hbnt(s0, w1)\n}","parent":["syl","alrimih","hbnt"],"children":[]},{"name":"hbim1","content":"A closed form of ~ hbim . (Contributed by NM, 2-Jun-1993.)","origin":"thm hbim1(setvar s0, wff w0, wff w1) {\n  |- wi(wi(w0, w1), wal(s0, wi(w0, w1)))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w0, wi(w1, wal(s0, w1)))\n} = {\n  sylibr(wi(w0, w1), wal(s0, wi(w0, w1)), wi(w0, wal(s0, w1)))\n  a2i(w0, w1, wal(s0, w1))\n  19.21h(s0, w0, w1)\n}","pretty":"thm hbim1(setvar s0, wff w0, wff w1) {\n  ⊢ ((w0 → w1)→ ∀(s0,(w0 → w1)))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w0 →(w1 → ∀(s0, w1)))\n} = {\n  sylibr((w0 → w1), ∀(s0,(w0 → w1)), (w0 → ∀(s0, w1)))\n  a2i(w0, w1, ∀(s0, w1))\n  19.21h(s0, w0, w1)\n}","parent":["sylibr","a2i","19.21h"],"children":["hbim","axc14"]},{"name":"hbimd","content":"Deduction form of bound-variable hypothesis builder ~ hbim . (Contributed by NM, 14-May-1993.) (Proof shortened by Wolf Lammen, 3-Jan-2018.)","origin":"thm hbimd(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wi(w1, w2), wal(s0, wi(w1, w2))))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w0, wi(w1, wal(s0, w1)))\n  -| wi(w0, wi(w2, wal(s0, w2)))\n} = {\n  nf5rd(s0, w0, wi(w1, w2))\n  nfimd(s0, w0, w1, w2)\n  nf5dh(s0, w0, w1)\n  nf5dh(s0, w0, w2)\n}","pretty":"thm hbimd(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →((w1 → w2)→ ∀(s0,(w1 → w2))))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w0 →(w1 → ∀(s0, w1)))\n  ⊣ (w0 →(w2 → ∀(s0, w2)))\n} = {\n  nf5rd(s0, w0, (w1 → w2))\n  nfimd(s0, w0, w1, w2)\n  nf5dh(s0, w0, w1)\n  nf5dh(s0, w0, w2)\n}","parent":["nf5rd","nfimd","nf5dh"],"children":["dvelimf-o"]},{"name":"hbim","content":"If ` x ` is not free in ` ph ` and ` ps ` , it is not free in ` ( ph -> ps ) ` . (Contributed by NM, 24-Jan-1993.) (Proof shortened by Mel L. O'Cat, 3-Mar-2008.) (Proof shortened by Wolf Lammen, 1-Jan-2018.)","origin":"thm hbim(setvar s0, wff w0, wff w1) {\n  |- wi(wi(w0, w1), wal(s0, wi(w0, w1)))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w1, wal(s0, w1))\n} = {\n  hbim1(s0, w0, w1)\n  a1i(w0, wi(w1, wal(s0, w1)))\n}","pretty":"thm hbim(setvar s0, wff w0, wff w1) {\n  ⊢ ((w0 → w1)→ ∀(s0,(w0 → w1)))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w1 → ∀(s0, w1))\n} = {\n  hbim1(s0, w0, w1)\n  a1i(w0, (w1 → ∀(s0, w1)))\n}","parent":["hbim1","a1i"],"children":["axi5r","hbral"]},{"name":"hban","content":"If ` x ` is not free in ` ph ` and ` ps ` , it is not free in ` ( ph /\\ ps ) ` . (Contributed by NM, 14-May-1993.) (Proof shortened by Wolf Lammen, 2-Jan-2018.)","origin":"thm hban(setvar s0, wff w0, wff w1) {\n  |- wi(wa(w0, w1), wal(s0, wa(w0, w1)))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w1, wal(s0, w1))\n} = {\n  nf5ri(s0, wa(w0, w1))\n  nfan(s0, w0, w1)\n  nf5i(s0, w0)\n  nf5i(s0, w1)\n}","pretty":"thm hban(setvar s0, wff w0, wff w1) {\n  ⊢ ((w0 ∧ w1)→ ∀(s0,(w0 ∧ w1)))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w1 → ∀(s0, w1))\n} = {\n  nf5ri(s0, (w0 ∧ w1))\n  nfan(s0, w0, w1)\n  nf5i(s0, w0)\n  nf5i(s0, w1)\n}","parent":["nf5ri","nfan","nf5i"],"children":["bnj982","bnj1351","bnj1352","bnj1441","dvelimf-o","ax12indalem","ax12inda2ALT","hbimpg","hbimpgVD"]},{"name":"hb3an","content":"If ` x ` is not free in ` ph ` , ` ps ` , and ` ch ` , it is not free in ` ( ph /\\ ps /\\ ch ) ` . (Contributed by NM, 14-Sep-2003.) (Proof shortened by Wolf Lammen, 2-Jan-2018.)","origin":"thm hb3an(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w3a(w0, w1, w2), wal(s0, w3a(w0, w1, w2)))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w1, wal(s0, w1))\n  -| wi(w2, wal(s0, w2))\n} = {\n  nf5ri(s0, w3a(w0, w1, w2))\n  nf3an(s0, w0, w1, w2)\n  nf5i(s0, w0)\n  nf5i(s0, w1)\n  nf5i(s0, w2)\n}","pretty":"thm hb3an(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ ((w0 ∧ w1 ∧ w2)→ ∀(s0,(w0 ∧ w1 ∧ w2)))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w1 → ∀(s0, w1))\n  ⊣ (w2 → ∀(s0, w2))\n} = {\n  nf5ri(s0, (w0 ∧ w1 ∧ w2))\n  nf3an(s0, w0, w1, w2)\n  nf5i(s0, w0)\n  nf5i(s0, w1)\n  nf5i(s0, w2)\n}","parent":["nf5ri","nf3an","nf5i"],"children":["bnj982","bnj1276","bnj1350"]},{"name":"sbi2","content":"Introduction of implication into substitution. (Contributed by NM, 14-May-1993.)","origin":"thm sbi2(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wi(wsb(s0, s1, w0), wsb(s0, s1, w1)), wsb(s0, s1, wi(w0, w1)))\n} = {\n  ja(wsb(s0, s1, w0), wsb(s0, s1, w1), wsb(s0, s1, wi(w0, w1)))\n  sylbir(wn(wsb(s0, s1, w0)), wsb(s0, s1, wi(w0, w1)), wsb(s0, s1, wn(w0)))\n  sbn(s0, s1, w0)\n  sbimi(s0, s1, wn(w0), wi(w0, w1))\n  pm2.21(w0, w1)\n  sbimi(s0, s1, w1, wi(w0, w1))\n  ax-1(w1, w0)\n}","pretty":"thm sbi2(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (([s0 / s1]w0 →[s0 / s1]w1)→[s0 / s1](w0 → w1))\n} = {\n  ja([s0 / s1]w0, [s0 / s1]w1, [s0 / s1](w0 → w1))\n  sylbir(¬[s0 / s1]w0, [s0 / s1](w0 → w1), [s0 / s1]¬ w0)\n  sbn(s0, s1, w0)\n  sbimi(s0, s1, ¬ w0, (w0 → w1))\n  pm2.21(w0, w1)\n  sbimi(s0, s1, w1, (w0 → w1))\n  ax-1(w1, w0)\n}","parent":["ja","sylbir","sbn","sbimi","pm2.21","ax-1"],"children":["sbimvOLD","sbim"]},{"name":"sbnvOLD","content":"Obsolete version of ~ sbn as of 8-Jul-2023. Substitution is not affected by negation. Version of ~ sbn with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm sbnvOLD(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, wn(w0)), wn(wsb(s0, s1, w0)))\n  -| diffss(s0, s1)\n} = {\n  3bitr4i(wsb(s0, s1, wn(w0)), wn(wsb(s0, s1, w0)), wex(s1, wa(wceq(cv(s1), cv(s0)), wn(w0))), wn(wal(s1, wi(wceq(cv(s1), cv(s0)), w0))))\n  exanali(s1, wceq(cv(s1), cv(s0)), w0)\n  sb5(s0, s1, wn(w0))\n  notbii(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n  sb6(s0, s1, w0)\n}","pretty":"thm sbnvOLD(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1]¬ w0 ↔ ¬[s0 / s1]w0)\n  ⊣ d(s0, s1)\n} = {\n  3bitr4i([s0 / s1]¬ w0, ¬[s0 / s1]w0, ∃(s1,(s1 = s0 ∧ ¬ w0)), ¬ ∀(s1,(s1 = s0 → w0)))\n  exanali(s1, s1 = s0, w0)\n  sb5(s0, s1, ¬ w0)\n  notbii([s0 / s1]w0, ∀(s1,(s1 = s0 → w0)))\n  sb6(s0, s1, w0)\n}","parent":["3bitr4i","exanali","sb5","notbii","sb6"],"children":["sbi2vOLD"]},{"name":"sbi1vOLD","content":"Obsolete version of ~ sbi1 as of 24-Jul-2023. Move implication out of substitution. Version of ~ sbi1 with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sbi1vOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wsb(s0, s1, wi(w0, w1)), wi(wsb(s0, s1, w0), wsb(s0, s1, w1)))\n  -| diffss(s0, s1)\n} = {\n  syl(wsb(s0, s1, wi(w0, w1)), wi(wsb(s0, s1, w0), wsb(s0, s1, w1)), wal(s1, wi(wceq(cv(s1), cv(s0)), wi(w0, w1))))\n  sb4vOLD(s0, s1, wi(w0, w1))\n  syl56(wal(s1, wi(wceq(cv(s1), cv(s0)), wi(w0, w1))), wsb(s0, s1, w0), wsb(s0, s1, w1), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)), wal(s1, wi(wceq(cv(s1), cv(s0)), w1)))\n  sb4vOLD(s0, s1, w0)\n  al2imi(s1, wi(wceq(cv(s1), cv(s0)), wi(w0, w1)), wi(wceq(cv(s1), cv(s0)), w0), wi(wceq(cv(s1), cv(s0)), w1))\n  ax-2(wceq(cv(s1), cv(s0)), w0, w1)\n  sb2vOLD(s1, s0, w1)\n  diffss.ex(s1, s0)\n}","pretty":"thm sbi1vOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1](w0 → w1)→([s0 / s1]w0 →[s0 / s1]w1))\n  ⊣ d(s0, s1)\n} = {\n  syl([s0 / s1](w0 → w1), ([s0 / s1]w0 →[s0 / s1]w1), ∀(s1,(s1 = s0 →(w0 → w1))))\n  sb4vOLD(s0, s1, (w0 → w1))\n  syl56(∀(s1,(s1 = s0 →(w0 → w1))), [s0 / s1]w0, [s0 / s1]w1, ∀(s1,(s1 = s0 → w0)), ∀(s1,(s1 = s0 → w1)))\n  sb4vOLD(s0, s1, w0)\n  al2imi(s1, (s1 = s0 →(w0 → w1)), (s1 = s0 → w0), (s1 = s0 → w1))\n  ax-2(s1 = s0, w0, w1)\n  sb2vOLD(s1, s0, w1)\n  diffss.ex(s1, s0)\n}","parent":["syl","sb4vOLD","syl56","al2imi","ax-2","sb2vOLD","diffss.ex"],"children":["sbimvOLD"]},{"name":"sbi2vOLD","content":"Obsolete version of ~ sbi2 as of 8-Jul-2023. Move implication into substitution. Version of ~ sbi2 with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sbi2vOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wi(wsb(s0, s1, w0), wsb(s0, s1, w1)), wsb(s0, s1, wi(w0, w1)))\n  -| diffss(s0, s1)\n} = {\n  ja(wsb(s0, s1, w0), wsb(s0, s1, w1), wsb(s0, s1, wi(w0, w1)))\n  sylbir(wn(wsb(s0, s1, w0)), wsb(s0, s1, wi(w0, w1)), wsb(s0, s1, wn(w0)))\n  sbnvOLD(s0, s1, w0)\n  sbimi(s0, s1, wn(w0), wi(w0, w1))\n  pm2.21(w0, w1)\n  sbimi(s0, s1, w1, wi(w0, w1))\n  ax-1(w1, w0)\n}","pretty":"thm sbi2vOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (([s0 / s1]w0 →[s0 / s1]w1)→[s0 / s1](w0 → w1))\n  ⊣ d(s0, s1)\n} = {\n  ja([s0 / s1]w0, [s0 / s1]w1, [s0 / s1](w0 → w1))\n  sylbir(¬[s0 / s1]w0, [s0 / s1](w0 → w1), [s0 / s1]¬ w0)\n  sbnvOLD(s0, s1, w0)\n  sbimi(s0, s1, ¬ w0, (w0 → w1))\n  pm2.21(w0, w1)\n  sbimi(s0, s1, w1, (w0 → w1))\n  ax-1(w1, w0)\n}","parent":["ja","sylbir","sbnvOLD","sbimi","pm2.21","ax-1"],"children":[]},{"name":"sbimvOLD","content":"Obsolete version of ~ sbim as of 24-Jul-2023. Substitution distributes over implication. Version of ~ sbim with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sbimvOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wsb(s0, s1, wi(w0, w1)), wi(wsb(s0, s1, w0), wsb(s0, s1, w1)))\n  -| diffss(s0, s1)\n} = {\n  impbii(wsb(s0, s1, wi(w0, w1)), wi(wsb(s0, s1, w0), wsb(s0, s1, w1)))\n  sbi1vOLD(s0, s1, w0, w1)\n  sbi2(s0, s1, w0, w1)\n}","pretty":"thm sbimvOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1](w0 → w1)↔([s0 / s1]w0 →[s0 / s1]w1))\n  ⊣ d(s0, s1)\n} = {\n  impbii([s0 / s1](w0 → w1), ([s0 / s1]w0 →[s0 / s1]w1))\n  sbi1vOLD(s0, s1, w0, w1)\n  sbi2(s0, s1, w0, w1)\n}","parent":["impbii","sbi1vOLD","sbi2"],"children":["sbanvOLD","sbbivOLD"]},{"name":"sbanvOLD","content":"Obsolete version of ~ sban as of 24-Jul-2023. Substitution distributes over conjunction. Version of ~ sban with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sbanvOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wsb(s0, s1, wa(w0, w1)), wa(wsb(s0, s1, w0), wsb(s0, s1, w1)))\n  -| diffss(s0, s1)\n} = {\n  3bitr4i(wsb(s0, s1, wa(w0, w1)), wa(wsb(s0, s1, w0), wsb(s0, s1, w1)), wsb(s0, s1, wn(wi(w0, wn(w1)))), wn(wi(wsb(s0, s1, w0), wn(wsb(s0, s1, w1)))))\n  xchbinx(wsb(s0, s1, wn(wi(w0, wn(w1)))), wi(wsb(s0, s1, w0), wn(wsb(s0, s1, w1))), wsb(s0, s1, wi(w0, wn(w1))))\n  sbn(s0, s1, wi(w0, wn(w1)))\n  bitri(wsb(s0, s1, wi(w0, wn(w1))), wi(wsb(s0, s1, w0), wn(wsb(s0, s1, w1))), wi(wsb(s0, s1, w0), wsb(s0, s1, wn(w1))))\n  sbimvOLD(s0, s1, w0, wn(w1))\n  imbi2i(wsb(s0, s1, w0), wsb(s0, s1, wn(w1)), wn(wsb(s0, s1, w1)))\n  sbn(s0, s1, w1)\n  sbbii(s0, s1, wa(w0, w1), wn(wi(w0, wn(w1))))\n  df-an(w0, w1)\n  df-an(wsb(s0, s1, w0), wsb(s0, s1, w1))\n}","pretty":"thm sbanvOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1](w0 ∧ w1)↔([s0 / s1]w0 ∧[s0 / s1]w1))\n  ⊣ d(s0, s1)\n} = {\n  3bitr4i([s0 / s1](w0 ∧ w1), ([s0 / s1]w0 ∧[s0 / s1]w1), [s0 / s1]¬(w0 → ¬ w1), ¬([s0 / s1]w0 → ¬[s0 / s1]w1))\n  xchbinx([s0 / s1]¬(w0 → ¬ w1), ([s0 / s1]w0 → ¬[s0 / s1]w1), [s0 / s1](w0 → ¬ w1))\n  sbn(s0, s1, (w0 → ¬ w1))\n  bitri([s0 / s1](w0 → ¬ w1), ([s0 / s1]w0 → ¬[s0 / s1]w1), ([s0 / s1]w0 →[s0 / s1]¬ w1))\n  sbimvOLD(s0, s1, w0, ¬ w1)\n  imbi2i([s0 / s1]w0, [s0 / s1]¬ w1, ¬[s0 / s1]w1)\n  sbn(s0, s1, w1)\n  sbbii(s0, s1, (w0 ∧ w1), ¬(w0 → ¬ w1))\n  df-an(w0, w1)\n  df-an([s0 / s1]w0, [s0 / s1]w1)\n}","parent":["3bitr4i","xchbinx","sbn","bitri","sbimvOLD","imbi2i","sbbii","df-an"],"children":["sbbivOLD"]},{"name":"sbbivOLD","content":"Obsolete version of ~ sbbi as of 24-Jul-2023. Substitution distributes over a biconditional. Version of ~ sbbi with a disjoint variable condition, not requiring ~ ax-11 nor ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sbbivOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wsb(s0, s1, wb(w0, w1)), wb(wsb(s0, s1, w0), wsb(s0, s1, w1)))\n  -| diffss(s0, s1)\n} = {\n  bitri(wsb(s0, s1, wb(w0, w1)), wb(wsb(s0, s1, w0), wsb(s0, s1, w1)), wsb(s0, s1, wa(wi(w0, w1), wi(w1, w0))))\n  sbbii(s0, s1, wb(w0, w1), wa(wi(w0, w1), wi(w1, w0)))\n  dfbi2(w0, w1)\n  3bitr4i(wsb(s0, s1, wa(wi(w0, w1), wi(w1, w0))), wb(wsb(s0, s1, w0), wsb(s0, s1, w1)), wa(wsb(s0, s1, wi(w0, w1)), wsb(s0, s1, wi(w1, w0))), wa(wi(wsb(s0, s1, w0), wsb(s0, s1, w1)), wi(wsb(s0, s1, w1), wsb(s0, s1, w0))))\n  anbi12i(wsb(s0, s1, wi(w0, w1)), wsb(s0, s1, wi(w1, w0)), wi(wsb(s0, s1, w0), wsb(s0, s1, w1)), wi(wsb(s0, s1, w1), wsb(s0, s1, w0)))\n  sbimvOLD(s0, s1, w0, w1)\n  sbimvOLD(s0, s1, w1, w0)\n  sbanvOLD(s0, s1, wi(w0, w1), wi(w1, w0))\n  dfbi2(wsb(s0, s1, w0), wsb(s0, s1, w1))\n}","pretty":"thm sbbivOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1](w0 ↔ w1)↔([s0 / s1]w0 ↔[s0 / s1]w1))\n  ⊣ d(s0, s1)\n} = {\n  bitri([s0 / s1](w0 ↔ w1), ([s0 / s1]w0 ↔[s0 / s1]w1), [s0 / s1]((w0 → w1)∧(w1 → w0)))\n  sbbii(s0, s1, (w0 ↔ w1), ((w0 → w1)∧(w1 → w0)))\n  dfbi2(w0, w1)\n  3bitr4i([s0 / s1]((w0 → w1)∧(w1 → w0)), ([s0 / s1]w0 ↔[s0 / s1]w1), ([s0 / s1](w0 → w1)∧[s0 / s1](w1 → w0)), (([s0 / s1]w0 →[s0 / s1]w1)∧([s0 / s1]w1 →[s0 / s1]w0)))\n  anbi12i([s0 / s1](w0 → w1), [s0 / s1](w1 → w0), ([s0 / s1]w0 →[s0 / s1]w1), ([s0 / s1]w1 →[s0 / s1]w0))\n  sbimvOLD(s0, s1, w0, w1)\n  sbimvOLD(s0, s1, w1, w0)\n  sbanvOLD(s0, s1, (w0 → w1), (w1 → w0))\n  dfbi2([s0 / s1]w0, [s0 / s1]w1)\n}","parent":["bitri","sbbii","dfbi2","3bitr4i","anbi12i","sbimvOLD","sbanvOLD"],"children":["sblbisvOLD"]},{"name":"spsbimvOLD","content":"Obsolete version of ~ spsbim as of 6-Jul-2023. Specialization of implication. Version of ~ spsbim with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 19-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm spsbimvOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, wi(w0, w1)), wi(wsb(s1, s0, w0), wsb(s1, s0, w1)))\n  -| diffss(s0, s1)\n} = {\n  a1ii(wi(wal(s0, wi(w0, w1)), wi(wsb(s1, s0, w0), wsb(s1, s0, w1))), diffss(s0, s1))\n  sbimd(s1, s0, wal(s0, wi(w0, w1)), w0, w1)\n  nfa1(s0, wi(w0, w1))\n  sp(s0, wi(w0, w1))\n}","pretty":"thm spsbimvOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 → w1))→([s1 / s0]w0 →[s1 / s0]w1))\n  ⊣ d(s0, s1)\n} = {\n  a1ii((∀(s0,(w0 → w1))→([s1 / s0]w0 →[s1 / s0]w1)), d(s0, s1))\n  sbimd(s1, s0, ∀(s0,(w0 → w1)), w0, w1)\n  nfa1(s0, (w0 → w1))\n  sp(s0, (w0 → w1))\n}","parent":["a1ii","sbimd","nfa1","sp"],"children":[]},{"name":"sblbisvOLD","content":"Obsolete version of ~ sblbis as of 24-Jul-2023. Introduce left biconditional inside of a substitution. Version of ~ sblbis with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sblbisvOLD(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  |- wb(wsb(s0, s1, wb(w0, w1)), wb(wsb(s0, s1, w0), w2))\n  -| wb(wsb(s0, s1, w1), w2)\n  -| diffss(s0, s1)\n} = {\n  bitri(wsb(s0, s1, wb(w0, w1)), wb(wsb(s0, s1, w0), w2), wb(wsb(s0, s1, w0), wsb(s0, s1, w1)))\n  sbbivOLD(s0, s1, w0, w1)\n  bibi2i(wsb(s0, s1, w0), wsb(s0, s1, w1), w2)\n}","pretty":"thm sblbisvOLD(setvar s0, setvar s1, wff w0, wff w1, wff w2) {\n  ⊢ ([s0 / s1](w0 ↔ w1)↔([s0 / s1]w0 ↔ w2))\n  ⊣ ([s0 / s1]w1 ↔ w2)\n  ⊣ d(s0, s1)\n} = {\n  bitri([s0 / s1](w0 ↔ w1), ([s0 / s1]w0 ↔ w2), ([s0 / s1]w0 ↔[s0 / s1]w1))\n  sbbivOLD(s0, s1, w0, w1)\n  bibi2i([s0 / s1]w0, [s0 / s1]w1, w2)\n}","parent":["bitri","sbbivOLD","bibi2i"],"children":["sbievOLD"]},{"name":"sbiev","content":"Conversion of implicit substitution to explicit substitution. Version of ~ sbie with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 18-Jan-2023.) Remove dependence on ~ ax-10 and shorten proof. (Revised by BJ, 18-Jul-2023.)","origin":"thm sbiev(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wsb(s0, s1, w0), w1)\n  -| wnf(s1, w1)\n  -| wi(wceq(cv(s1), cv(s0)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  bitri(wsb(s0, s1, w0), w1, wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n  sb6(s0, s1, w0)\n  equsalv(s1, s0, w0, w1)\n  diffss.ex(s1, s0)\n}","pretty":"thm sbiev(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1]w0 ↔ w1)\n  ⊣ F/(s1, w1)\n  ⊣ (s1 = s0 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  bitri([s0 / s1]w0, w1, ∀(s1,(s1 = s0 → w0)))\n  sb6(s0, s1, w0)\n  equsalv(s1, s0, w0, w1)\n  diffss.ex(s1, s0)\n}","parent":["bitri","sb6","equsalv","diffss.ex"],"children":["sbco2v","mo4f","reu2"]},{"name":"sbievOLD","content":"Obsolete proof of ~ sbiev as of 18-Jul-2023. (Contributed by Wolf Lammen, 18-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sbievOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wsb(s0, s1, w0), w1)\n  -| wnf(s1, w1)\n  -| wi(wceq(cv(s1), cv(s0)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  mpbi(wb(wsb(s0, s1, w0), w1), wsb(s0, s1, wb(w0, w1)))\n  ax-mp(wsb(s0, s1, wb(w0, w1)), wsb(s0, s1, wceq(cv(s1), cv(s0))))\n  equsb1v(s0, s1)\n  sbimi(s0, s1, wceq(cv(s1), cv(s0)), wb(w0, w1))\n  sblbisvOLD(s0, s1, w0, w1, w1)\n  sbf(s0, s1, w1)\n}","pretty":"thm sbievOLD(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1]w0 ↔ w1)\n  ⊣ F/(s1, w1)\n  ⊣ (s1 = s0 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  mpbi(([s0 / s1]w0 ↔ w1), [s0 / s1](w0 ↔ w1))\n  ax-mp([s0 / s1](w0 ↔ w1), [s0 / s1]s1 = s0)\n  equsb1v(s0, s1)\n  sbimi(s0, s1, s1 = s0, (w0 ↔ w1))\n  sblbisvOLD(s0, s1, w0, w1, w1)\n  sbf(s0, s1, w1)\n}","parent":["mpbi","ax-mp","equsb1v","sbimi","sblbisvOLD","sbf"],"children":[]},{"name":"sbequivvOLD","content":"Obsolete version of ~ sbequi as of 7-Jul-2023. Version of ~ sbequi with disjoint variable conditions, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 19-Jan-2023.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm sbequivvOLD(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wsb(s0, s2, w0), wsb(s1, s2, w0)))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  3imtr4g(wceq(cv(s0), cv(s1)), wsb(s0, s2, w0), wsb(s1, s2, w0), wal(s2, wi(wceq(cv(s2), cv(s0)), w0)), wal(s2, wi(wceq(cv(s2), cv(s1)), w0)))\n  alimdv(s2, wceq(cv(s0), cv(s1)), wi(wceq(cv(s2), cv(s0)), w0), wi(wceq(cv(s2), cv(s1)), w0))\n  imim1d(wceq(cv(s0), cv(s1)), wceq(cv(s2), cv(s0)), w0, wceq(cv(s2), cv(s1)))\n  equeuclr(s0, s1, s2)\n  sb6(s0, s2, w0)\n  sb6(s1, s2, w0)\n  diff.wceq.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm sbequivvOLD(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (s0 = s1 →([s0 / s2]w0 →[s1 / s2]w0))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  3imtr4g(s0 = s1, [s0 / s2]w0, [s1 / s2]w0, ∀(s2,(s2 = s0 → w0)), ∀(s2,(s2 = s1 → w0)))\n  alimdv(s2, s0 = s1, (s2 = s0 → w0), (s2 = s1 → w0))\n  imim1d(s0 = s1, s2 = s0, w0, s2 = s1)\n  equeuclr(s0, s1, s2)\n  sb6(s0, s2, w0)\n  sb6(s1, s2, w0)\n  diff.wceq.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["3imtr4g","alimdv","imim1d","equeuclr","sb6","diff.wceq.s","diff.cv.s","diffss.ex"],"children":["sbequvvOLD"]},{"name":"sbequvvOLD","content":"Obsolete version of ~ sbequ as of 7-Jul-2023. Version of ~ sbequ with disjoint variable conditions, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 19-Jan-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm sbequvvOLD(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wb(wsb(s0, s2, w0), wsb(s1, s2, w0)))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  impbid(wceq(cv(s0), cv(s1)), wsb(s0, s2, w0), wsb(s1, s2, w0))\n  sbequivvOLD(s0, s1, s2, w0)\n  equcoms(s0, s1, wi(wsb(s1, s2, w0), wsb(s0, s2, w0)))\n  sbequivvOLD(s1, s0, s2, w0)\n}","pretty":"thm sbequvvOLD(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (s0 = s1 →([s0 / s2]w0 ↔[s1 / s2]w0))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  impbid(s0 = s1, [s0 / s2]w0, [s1 / s2]w0)\n  sbequivvOLD(s0, s1, s2, w0)\n  equcoms(s0, s1, ([s1 / s2]w0 →[s0 / s2]w0))\n  sbequivvOLD(s1, s0, s2, w0)\n}","parent":["impbid","sbequivvOLD","equcoms"],"children":[]},{"name":"axc7","content":"Show that the original axiom ~ ax-c7 can be derived from ~ ax-10 ( ~ hbn1 ) , ~ sp and propositional calculus. See ~ ax10fromc7 for the rederivation of ~ ax-10 from ~ ax-c7 . Normally, ~ axc7 should be used rather than ~ ax-c7 , except by theorems specifically studying the latter's properties. (Contributed by NM, 21-May-2008.)","origin":"thm axc7(setvar s0, wff w0) {\n  |- wi(wn(wal(s0, wn(wal(s0, w0)))), w0)\n} = {\n  nsyl4(wal(s0, wn(wal(s0, w0))), w0, wal(s0, w0))\n  sp(s0, w0)\n  hbn1(s0, w0)\n}","pretty":"thm axc7(setvar s0, wff w0) {\n  ⊢ (¬ ∀(s0, ¬ ∀(s0, w0))→ w0)\n} = {\n  nsyl4(∀(s0, ¬ ∀(s0, w0)), w0, ∀(s0, w0))\n  sp(s0, w0)\n  hbn1(s0, w0)\n}","parent":["nsyl4","sp","hbn1"],"children":["modal-b","axc10","hbntg","bj-modalb","bj-axc10v","axc5c4c711","hbntal"]},{"name":"axc7e","content":"Abbreviated version of ~ axc7 using the existential quantifier. Corresponds to the dual of Axiom (B) of modal logic. (Contributed by NM, 5-Aug-1993.) (Proof shortened by Wolf Lammen, 8-Jul-2022.)","origin":"thm axc7e(setvar s0, wff w0) {\n  |- wi(wex(s0, wal(s0, w0)), w0)\n} = {\n  19.21bi(s0, wex(s0, wal(s0, w0)), w0)\n  hbe1a(s0, w0)\n}","pretty":"thm axc7e(setvar s0, wff w0) {\n  ⊢ (∃(s0, ∀(s0, w0))→ w0)\n} = {\n  19.21bi(s0, ∃(s0, ∀(s0, w0)), w0)\n  hbe1a(s0, w0)\n}","parent":["19.21bi","hbe1a"],"children":["19.9ht","bj-axc10","bj-19.12"]},{"name":"modal-b","content":"The analogue in our predicate calculus of the Brouwer axiom (B) of modal logic S5. (Contributed by NM, 5-Oct-2005.)","origin":"thm modal-b(setvar s0, wff w0) {\n  |- wi(w0, wal(s0, wn(wal(s0, wn(w0)))))\n} = {\n  con4i(w0, wal(s0, wn(wal(s0, wn(w0)))))\n  axc7(s0, wn(w0))\n}","pretty":"thm modal-b(setvar s0, wff w0) {\n  ⊢ (w0 → ∀(s0, ¬ ∀(s0, ¬ w0)))\n} = {\n  con4i(w0, ∀(s0, ¬ ∀(s0, ¬ w0)))\n  axc7(s0, ¬ w0)\n}","parent":["con4i","axc7"],"children":["bj-modalbe"]},{"name":"19.9ht","content":"A closed version of ~ 19.9h . (Contributed by NM, 13-May-1993.) (Proof shortened by Wolf Lammen, 3-Mar-2018.)","origin":"thm 19.9ht(setvar s0, wff w0) {\n  |- wi(wal(s0, wi(w0, wal(s0, w0))), wi(wex(s0, w0), w0))\n} = {\n  syl6(wal(s0, wi(w0, wal(s0, w0))), wex(s0, w0), w0, wex(s0, wal(s0, w0)))\n  exim(s0, w0, wal(s0, w0))\n  axc7e(s0, w0)\n}","pretty":"thm 19.9ht(setvar s0, wff w0) {\n  ⊢ (∀(s0,(w0 → ∀(s0, w0)))→(∃(s0, w0)→ w0))\n} = {\n  syl6(∀(s0,(w0 → ∀(s0, w0))), ∃(s0, w0), w0, ∃(s0, ∀(s0, w0)))\n  exim(s0, w0, ∀(s0, w0))\n  axc7e(s0, w0)\n}","parent":["syl6","exim","axc7e"],"children":["bj-19.9htbi"]},{"name":"axc4","content":"Show that the original axiom ~ ax-c4 can be derived from ~ ax-4 ( ~ alim ), ~ ax-10 ( ~ hbn1 ), ~ sp and propositional calculus. See ~ ax4fromc4 for the rederivation of ~ ax-4 from ~ ax-c4 . Part of the proof is based on the proof of Lemma 22 of [Monk2] p. 114. (Contributed by NM, 21-May-2008.) (Proof modification is discouraged.)","origin":"thm axc4(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, wi(wal(s0, w0), w1)), wi(wal(s0, w0), wal(s0, w1)))\n} = {\n  syl5(wal(s0, wi(wal(s0, w0), w1)), wal(s0, w0), wal(s0, w1), wal(s0, wal(s0, w0)))\n  3syl(wal(s0, w0), wal(s0, wal(s0, w0)), wn(wal(s0, wn(wal(s0, w0)))), wal(s0, wn(wal(s0, wn(wal(s0, w0))))))\n  con2i(wal(s0, w0), wal(s0, wn(wal(s0, w0))))\n  sp(s0, wn(wal(s0, w0)))\n  hbn1(s0, wn(wal(s0, w0)))\n  alimi(s0, wn(wal(s0, wn(wal(s0, w0)))), wal(s0, w0))\n  con1i(wal(s0, wn(wal(s0, w0))), wal(s0, w0))\n  hbn1(s0, w0)\n  alim(s0, wal(s0, w0), w1)\n}","pretty":"thm axc4(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(∀(s0, w0)→ w1))→(∀(s0, w0)→ ∀(s0, w1)))\n} = {\n  syl5(∀(s0,(∀(s0, w0)→ w1)), ∀(s0, w0), ∀(s0, w1), ∀(s0, ∀(s0, w0)))\n  3syl(∀(s0, w0), ∀(s0, ∀(s0, w0)), ¬ ∀(s0, ¬ ∀(s0, w0)), ∀(s0, ¬ ∀(s0, ¬ ∀(s0, w0))))\n  con2i(∀(s0, w0), ∀(s0, ¬ ∀(s0, w0)))\n  sp(s0, ¬ ∀(s0, w0))\n  hbn1(s0, ¬ ∀(s0, w0))\n  alimi(s0, ¬ ∀(s0, ¬ ∀(s0, w0)), ∀(s0, w0))\n  con1i(∀(s0, ¬ ∀(s0, w0)), ∀(s0, w0))\n  hbn1(s0, w0)\n  alim(s0, ∀(s0, w0), w1)\n}","parent":["syl5","3syl","con2i","sp","hbn1","alimi","con1i","alim"],"children":["axc5c4c711"]},{"name":"axc4i","content":"Inference version of ~ axc4 . (Contributed by NM, 3-Jan-1993.)","origin":"thm axc4i(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, w0), wal(s0, w1))\n  -| wi(wal(s0, w0), w1)\n} = {\n  alrimi(s0, wal(s0, w0), w1)\n  nfa1(s0, w0)\n}","pretty":"thm axc4i(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ ∀(s0, w1))\n  ⊣ (∀(s0, w0)→ w1)\n} = {\n  alrimi(s0, ∀(s0, w0), w1)\n  nfa1(s0, w0)\n}","parent":["alrimi","nfa1"],"children":["hbae","hbsb2","hbsb2a","hbsb2e","hbsb2ALT","reu6","axunndlem1","axacndlem3","axacndlem5","axacnd","bj-nfs1t","bj-hbs1","bj-hbsb2av","bj-hbaeb2","wl-hbae1","frege93","pm11.57","pm11.59","axc5c4c711toc7","axc11next","hbalg","ax6e2eq","ax6e2eqVD"]},{"name":"nfal","content":"If ` x ` is not free in ` ph ` , it is not free in ` A. y ph ` . (Contributed by Mario Carneiro, 11-Aug-2016.)","origin":"thm nfal(setvar s0, setvar s1, wff w0) {\n  |- wnf(s0, wal(s1, w0))\n  -| wnf(s0, w0)\n} = {\n  nf5i(s0, wal(s1, w0))\n  hbal(s1, s0, w0)\n  nf5ri(s0, w0)\n}","pretty":"thm nfal(setvar s0, setvar s1, wff w0) {\n  ⊢ F/(s0, ∀(s1, w0))\n  ⊣ F/(s0, w0)\n} = {\n  nf5i(s0, ∀(s1, w0))\n  hbal(s1, s0, w0)\n  nf5ri(s0, w0)\n}","parent":["nf5i","hbal","nf5ri"],"children":["nfex","nfnf","nfsbv","aaan","pm11.53","19.12vv","2sb8evOLD","cbval2","nfsb4t","sbbib","nfsb4tALT","mof","mofOLD","euf","eufOLD","2eu3","2eu3OLD","axextmo","bm1.1OLD","nfnfc1","nfnfc","sbcnestgf","nfdisj","nfdisj1","axrep1","axrep2","axrep3","axrep4","nffr","zfcndrep","zfcndinf","mreexexd","mptelee","mo5f","19.12b","bj-cbv2v","bj-cbval2v","bj-axrep1","bj-axrep2","bj-axrep3","bj-axrep4","ax11-pm2","wl-sb8t","wl-ich-lem1c","wl-ich-lem1d","wl-mo2tf","wl-eutf","wl-mo2t","wl-mo3t","wl-sb8eut","mpt2bi123f","pm11.57","pm11.59","dfich2","nfsetrecs"]},{"name":"nfex","content":"If ` x ` is not free in ` ph ` , it is not free in ` E. y ph ` . (Contributed by Mario Carneiro, 11-Aug-2016.) (Proof shortened by Wolf Lammen, 30-Dec-2017.) Reduce symbol count in ~ nfex , ~ hbex . (Revised by Wolf Lammen, 16-Oct-2021.)","origin":"thm nfex(setvar s0, setvar s1, wff w0) {\n  |- wnf(s0, wex(s1, w0))\n  -| wnf(s0, w0)\n} = {\n  nfxfr(s0, wex(s1, w0), wn(wal(s1, wn(w0))))\n  df-ex(s1, w0)\n  nfn(s0, wal(s1, wn(w0)))\n  nfal(s0, s1, wn(w0))\n  nfn(s0, w0)\n}","pretty":"thm nfex(setvar s0, setvar s1, wff w0) {\n  ⊢ F/(s0, ∃(s1, w0))\n  ⊣ F/(s0, w0)\n} = {\n  nfxfr(s0, ∃(s1, w0), ¬ ∀(s1, ¬ w0))\n  df-ex(s1, w0)\n  nfn(s0, ∀(s1, ¬ w0))\n  nfal(s0, s1, ¬ w0)\n  nfn(s0, w0)\n}","parent":["nfxfr","df-ex","nfn","nfal"],"children":["hbex","nfnf","19.12","eeor","eean","eeeanv","nfmo1","nfeu1","moexex","r19.12","ceqsex2","nfopab","nfopab2","cbvopab1","cbvopab1s","axrep2","axrep3","axrep4","copsex2t","copsex2g","mosubopt","euotd","nfco","dfdmf","dfrnf","nfdm","fv3","oprabv","nfoprab2","nfoprab3","nfoprab","cbvoprab1","cbvoprab2","cbvoprab3","nfwrecs","ac6sfi","aceq1","zfcndrep","zfcndinf","nfsum1","nfsum","fsum2dlem","nfcprod1","nfcprod","fprod2dlem","brabgaf","cnvoprabOLD","bnj981","bnj1388","bnj1445","bnj1489","nffrecs","bj-axrep2","bj-axrep3","bj-axrep4","pm11.71","upbdrech","stoweidlem57","reuopreuprim"]},{"name":"hbex","content":"If ` x ` is not free in ` ph ` , it is not free in ` E. y ph ` . (Contributed by NM, 12-Mar-1993.) Reduce symbol count in ~ nfex , ~ hbex . (Revised by Wolf Lammen, 16-Oct-2021.)","origin":"thm hbex(setvar s0, setvar s1, wff w0) {\n  |- wi(wex(s0, w0), wal(s1, wex(s0, w0)))\n  -| wi(w0, wal(s1, w0))\n} = {\n  nf5ri(s1, wex(s0, w0))\n  nfex(s1, s0, w0)\n  nf5i(s1, w0)\n}","pretty":"thm hbex(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0, w0)→ ∀(s1, ∃(s0, w0)))\n  ⊣ (w0 → ∀(s1, w0))\n} = {\n  nf5ri(s1, ∃(s0, w0))\n  nfex(s1, s0, w0)\n  nf5i(s1, w0)\n}","parent":["nf5ri","nfex","nf5i"],"children":[]},{"name":"nfnf","content":"If ` x ` is not free in ` ph ` , it is not free in ` F/ y ph ` . (Contributed by Mario Carneiro, 11-Aug-2016.) (Proof shortened by Wolf Lammen, 30-Dec-2017.)","origin":"thm nfnf(setvar s0, setvar s1, wff w0) {\n  |- wnf(s0, wnf(s1, w0))\n  -| wnf(s0, w0)\n} = {\n  nfxfr(s0, wnf(s1, w0), wi(wex(s1, w0), wal(s1, w0)))\n  df-nf(s1, w0)\n  nfim(s0, wex(s1, w0), wal(s1, w0))\n  nfex(s0, s1, w0)\n  nfal(s0, s1, w0)\n}","pretty":"thm nfnf(setvar s0, setvar s1, wff w0) {\n  ⊢ F/(s0, F/(s1, w0))\n  ⊣ F/(s0, w0)\n} = {\n  nfxfr(s0, F/(s1, w0), (∃(s1, w0)→ ∀(s1, w0)))\n  df-nf(s1, w0)\n  nfim(s0, ∃(s1, w0), ∀(s1, w0))\n  nfex(s0, s1, w0)\n  nfal(s0, s1, w0)\n}","parent":["nfxfr","df-nf","nfim","nfex","nfal"],"children":["nfnfc","bj-nfcf"]},{"name":"19.12","content":"Theorem 19.12 of [Margaris] p. 89. Assuming the converse is a mistake sometimes made by beginners! But sometimes the converse does hold, as in ~ 19.12vv and ~ r19.12sn . (Contributed by NM, 12-Mar-1993.) (Proof shortened by Wolf Lammen, 3-Jan-2018.)","origin":"thm 19.12(setvar s0, setvar s1, wff w0) {\n  |- wi(wex(s0, wal(s1, w0)), wal(s1, wex(s0, w0)))\n} = {\n  alrimi(s1, wex(s0, wal(s1, w0)), wex(s0, w0))\n  nfex(s1, s0, wal(s1, w0))\n  nfa1(s1, w0)\n  eximi(s0, wal(s1, w0), w0)\n  sp(s1, w0)\n}","pretty":"thm 19.12(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0, ∀(s1, w0))→ ∀(s1, ∃(s0, w0)))\n} = {\n  alrimi(s1, ∃(s0, ∀(s1, w0)), ∃(s0, w0))\n  nfex(s1, s0, ∀(s1, w0))\n  nfa1(s1, w0)\n  eximi(s0, ∀(s1, w0), w0)\n  sp(s1, w0)\n}","parent":["alrimi","nfex","nfa1","eximi","sp"],"children":["nfald","pm11.61"]},{"name":"nfald","content":"Deduction form of ~ nfal . (Contributed by Mario Carneiro, 24-Sep-2016.) (Proof shortened by Wolf Lammen, 16-Oct-2021.)","origin":"thm nfald(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wnf(s0, wal(s1, w1)))\n  -| wnf(s1, w0)\n  -| wi(w0, wnf(s0, w1))\n} = {\n  nfd(s0, w0, wal(s1, w1))\n  syl56(w0, wex(s0, wal(s1, w1)), wal(s0, wal(s1, w1)), wal(s1, wex(s0, w1)), wal(s1, wal(s0, w1)))\n  19.12(s0, s1, w1)\n  alimd(s1, w0, wex(s0, w1), wal(s0, w1))\n  nfrd(s0, w0, w1)\n  ax-11(s1, s0, w1)\n}","pretty":"thm nfald(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → F/(s0, ∀(s1, w1)))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 → F/(s0, w1))\n} = {\n  nfd(s0, w0, ∀(s1, w1))\n  syl56(w0, ∃(s0, ∀(s1, w1)), ∀(s0, ∀(s1, w1)), ∀(s1, ∃(s0, w1)), ∀(s1, ∀(s0, w1)))\n  19.12(s0, s1, w1)\n  alimd(s1, w0, ∃(s0, w1), ∀(s0, w1))\n  nfrd(s0, w0, w1)\n  ax-11(s1, s0, w1)\n}","parent":["nfd","syl56","19.12","alimd","nfrd","ax-11"],"children":["nfexd","dvelimhw","nfald2","nfmodv","nfeqd","axrepndlem1","axrepndlem2","axunnd","axpowndlem2","axpowndlem4","axregndlem2","axinfndlem1","axinfnd","axacndlem4","axacndlem5","axacnd","bj-dvelimdv","wl-mo2df","wl-eudf","wl-mo2t","nfintd"]},{"name":"nfexd","content":"If ` x ` is not free in ` ps ` , it is not free in ` E. y ps ` . (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm nfexd(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wnf(s0, wex(s1, w1)))\n  -| wnf(s1, w0)\n  -| wi(w0, wnf(s0, w1))\n} = {\n  nfxfrd(s0, w0, wex(s1, w1), wn(wal(s1, wn(w1))))\n  df-ex(s1, w1)\n  nfnd(s0, w0, wal(s1, wn(w1)))\n  nfald(s0, s1, w0, wn(w1))\n  nfnd(s0, w0, w1)\n}","pretty":"thm nfexd(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → F/(s0, ∃(s1, w1)))\n  ⊣ F/(s1, w0)\n  ⊣ (w0 → F/(s0, w1))\n} = {\n  nfxfrd(s0, w0, ∃(s1, w1), ¬ ∀(s1, ¬ w1))\n  df-ex(s1, w1)\n  nfnd(s0, w0, ∀(s1, ¬ w1))\n  nfald(s0, s1, w0, ¬ w1)\n  nfnd(s0, w0, w1)\n}","parent":["nfxfrd","df-ex","nfnd","nfald"],"children":["nfmod2","nfmodv","nfeud2OLD","nfeld","axrepndlem1","axrepndlem2","axunndlem1","axunnd","axpowndlem2","axpowndlem3","axpowndlem4","axregndlem2","axinfndlem1","axinfnd","axacndlem4","axacndlem5","axacnd","19.9d2rf","hbexg"]},{"name":"nfsbv","content":"If ` z ` is not free in ` ph ` , it is not free in ` [ y / x ] ph ` when ` x ` , ` y ` and ` z ` are distinct. Version of ~ nfsb requiring more disjoint variables, but fewer axioms. (Contributed by Wolf Lammen, 7-Feb-2023.)","origin":"thm nfsbv(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wnf(s0, wsb(s1, s2, w0))\n  -| wnf(s0, w0)\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  nfxfr(s0, wsb(s1, s2, w0), wal(s2, wi(wceq(cv(s2), cv(s1)), w0)))\n  sb6(s1, s2, w0)\n  nfal(s0, s2, wi(wceq(cv(s2), cv(s1)), w0))\n  nfim(s0, wceq(cv(s2), cv(s1)), w0)\n  nfv(s0, wceq(cv(s2), cv(s1)))\n  diff.wceq.s(s0, cv(s2), cv(s1))\n  diff.cv.s(s0, s2)\n  diff.cv.s(s0, s1)\n}","pretty":"thm nfsbv(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ F/(s0,[s1 / s2]w0)\n  ⊣ F/(s0, w0)\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  nfxfr(s0, [s1 / s2]w0, ∀(s2,(s2 = s1 → w0)))\n  sb6(s1, s2, w0)\n  nfal(s0, s2, (s2 = s1 → w0))\n  nfim(s0, s2 = s1, w0)\n  nfv(s0, s2 = s1)\n  diff.wceq.s(s0, s2, s1)\n  diff.cv.s(s0, s2)\n  diff.cv.s(s0, s1)\n}","parent":["nfxfr","sb6","nfal","nfim","nfv","diff.wceq.s","diff.cv.s"],"children":["sbco2v","2sb8ev","sb8euv","2mo","nfcrii"]},{"name":"sbco2v","content":"Version of ~ sbco2 with disjoint variable conditions, not requiring ~ ax-13 , but ~ ax-11 . (Contributed by Wolf Lammen, 29-Apr-2023.)","origin":"thm sbco2v(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wb(wsb(s0, s1, wsb(s1, s2, w0)), wsb(s0, s2, w0))\n  -| wnf(s1, w0)\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  sbiev(s0, s1, wsb(s1, s2, w0), wsb(s0, s2, w0))\n  nfsbv(s1, s0, s2, w0)\n  sbequ(s1, s0, s2, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm sbco2v(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ ([s0 / s1][s1 / s2]w0 ↔[s0 / s2]w0)\n  ⊣ F/(s1, w0)\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  sbiev(s0, s1, [s1 / s2]w0, [s0 / s2]w0)\n  nfsbv(s1, s0, s2, w0)\n  sbequ(s1, s0, s2, w0)\n  diffss.ex(s1, s0)\n}","parent":["sbiev","nfsbv","sbequ","diffss.ex"],"children":["ichbi12i"]},{"name":"aaan","content":"Rearrange universal quantifiers. (Contributed by NM, 12-Aug-1993.)","origin":"thm aaan(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wal(s0, wal(s1, wa(w0, w1))), wa(wal(s0, w0), wal(s1, w1)))\n  -| wnf(s1, w0)\n  -| wnf(s0, w1)\n} = {\n  bitri(wal(s0, wal(s1, wa(w0, w1))), wa(wal(s0, w0), wal(s1, w1)), wal(s0, wa(w0, wal(s1, w1))))\n  albii(s0, wal(s1, wa(w0, w1)), wa(w0, wal(s1, w1)))\n  19.28(s1, w0, w1)\n  19.27(s0, w0, wal(s1, w1))\n  nfal(s0, s1, w1)\n}","pretty":"thm aaan(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, ∀(s1,(w0 ∧ w1)))↔(∀(s0, w0)∧ ∀(s1, w1)))\n  ⊣ F/(s1, w0)\n  ⊣ F/(s0, w1)\n} = {\n  bitri(∀(s0, ∀(s1,(w0 ∧ w1))), (∀(s0, w0)∧ ∀(s1, w1)), ∀(s0,(w0 ∧ ∀(s1, w1))))\n  albii(s0, ∀(s1,(w0 ∧ w1)), (w0 ∧ ∀(s1, w1)))\n  19.28(s1, w0, w1)\n  19.27(s0, w0, ∀(s1, w1))\n  nfal(s0, s1, w1)\n}","parent":["bitri","albii","19.28","19.27","nfal"],"children":["aaanv","pm11.71"]},{"name":"eeor","content":"Rearrange existential quantifiers. (Contributed by NM, 8-Aug-1994.)","origin":"thm eeor(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wex(s0, wex(s1, wo(w0, w1))), wo(wex(s0, w0), wex(s1, w1)))\n  -| wnf(s1, w0)\n  -| wnf(s0, w1)\n} = {\n  bitri(wex(s0, wex(s1, wo(w0, w1))), wo(wex(s0, w0), wex(s1, w1)), wex(s0, wo(w0, wex(s1, w1))))\n  exbii(s0, wex(s1, wo(w0, w1)), wo(w0, wex(s1, w1)))\n  19.45(s1, w0, w1)\n  19.44(s0, w0, wex(s1, w1))\n  nfex(s0, s1, w1)\n}","pretty":"thm eeor(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0, ∃(s1,(w0 ∨ w1)))↔(∃(s0, w0)∨ ∃(s1, w1)))\n  ⊣ F/(s1, w0)\n  ⊣ F/(s0, w1)\n} = {\n  bitri(∃(s0, ∃(s1,(w0 ∨ w1))), (∃(s0, w0)∨ ∃(s1, w1)), ∃(s0,(w0 ∨ ∃(s1, w1))))\n  exbii(s0, ∃(s1,(w0 ∨ w1)), (w0 ∨ ∃(s1, w1)))\n  19.45(s1, w0, w1)\n  19.44(s0, w0, ∃(s1, w1))\n  nfex(s0, s1, w1)\n}","parent":["bitri","exbii","19.45","19.44","nfex"],"children":[]},{"name":"cbv3v","content":"Version of ~ cbv3 with a disjoint variable condition, which does not require ~ ax-13 . (Contributed by BJ, 31-May-2019.)","origin":"thm cbv3v(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, w0), wal(s1, w1))\n  -| wnf(s1, w0)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  alrimih(s1, wal(s0, w0), w1)\n  hbal(s0, s1, w0)\n  nf5ri(s1, w0)\n  spimv1(s0, s1, w0, w1)\n}","pretty":"thm cbv3v(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ ∀(s1, w1))\n  ⊣ F/(s1, w0)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 → w1))\n  ⊣ d(s0, s1)\n} = {\n  alrimih(s1, ∀(s0, w0), w1)\n  hbal(s0, s1, w0)\n  nf5ri(s1, w0)\n  spimv1(s0, s1, w0, w1)\n}","parent":["alrimih","hbal","nf5ri","spimv1"],"children":["cbv3hv","cbvalv1","bj-cbv1v"]},{"name":"cbv3hv","content":"Version of ~ cbv3h with a disjoint variable condition on ` x , y ` , which does not require ~ ax-13 . Was used in a proof of ~ axc11n (but of independent interest). (Contributed by NM, 25-Jul-2015.) (Proof shortened by Wolf Lammen, 29-Nov-2020.) (Proof shortened by BJ, 30-Nov-2020.)","origin":"thm cbv3hv(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, w0), wal(s1, w1))\n  -| wi(w0, wal(s1, w0))\n  -| wi(w1, wal(s0, w1))\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  cbv3v(s0, s1, w0, w1)\n  nf5i(s1, w0)\n  nf5i(s0, w1)\n}","pretty":"thm cbv3hv(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ ∀(s1, w1))\n  ⊣ (w0 → ∀(s1, w0))\n  ⊣ (w1 → ∀(s0, w1))\n  ⊣ (s0 = s1 →(w0 → w1))\n  ⊣ d(s0, s1)\n} = {\n  cbv3v(s0, s1, w0, w1)\n  nf5i(s1, w0)\n  nf5i(s0, w1)\n}","parent":["cbv3v","nf5i"],"children":[]},{"name":"cbvalv1","content":"Version of ~ cbval with a disjoint variable condition, which does not require ~ ax-13 . See ~ cbvalvw for a version with two disjoint variable conditions, requiring fewer axioms, and ~ cbvalv for another variant. (Contributed by BJ, 31-May-2019.)","origin":"thm cbvalv1(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wal(s0, w0), wal(s1, w1))\n  -| wnf(s1, w0)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  impbii(wal(s0, w0), wal(s1, w1))\n  cbv3v(s0, s1, w0, w1)\n  biimpd(wceq(cv(s0), cv(s1)), w0, w1)\n  cbv3v(s1, s0, w1, w0)\n  equcoms(s1, s0, wi(w1, w0))\n  biimprd(wceq(cv(s0), cv(s1)), w1, w0)\n  diffss.ex(s1, s0)\n}","pretty":"thm cbvalv1(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)↔ ∀(s1, w1))\n  ⊣ F/(s1, w0)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  impbii(∀(s0, w0), ∀(s1, w1))\n  cbv3v(s0, s1, w0, w1)\n  biimpd(s0 = s1, w0, w1)\n  cbv3v(s1, s0, w1, w0)\n  equcoms(s1, s0, (w1 → w0))\n  biimprd(s0 = s1, w1, w0)\n  diffss.ex(s1, s0)\n}","parent":["impbii","cbv3v","biimpd","equcoms","biimprd","diffss.ex"],"children":["cbvexv1","sb8v","sb8eulem","cleqh","cbvralf","ralab2","cbvralcsf","dfss2f","elintab","reusv2lem4","cbviota","sb8iota","dffun6f","findcard2","aceq1","bnj1385","bj-cbval2v","bj-abbi","sbcalf","alrimii","aomclem6","rababg"]},{"name":"cbvexv1","content":"Version of ~ cbvex with a disjoint variable condition, which does not require ~ ax-13 . See ~ cbvexvw for a version with two disjoint variable conditions, requiring fewer axioms, and ~ cbvexv for another variant. (Contributed by BJ, 31-May-2019.)","origin":"thm cbvexv1(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wex(s0, w0), wex(s1, w1))\n  -| wnf(s1, w0)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n  -| diffss(s0, s1)\n} = {\n  3bitr4i(wex(s0, w0), wex(s1, w1), wn(wal(s0, wn(w0))), wn(wal(s1, wn(w1))))\n  notbii(wal(s0, wn(w0)), wal(s1, wn(w1)))\n  cbvalv1(s0, s1, wn(w0), wn(w1))\n  nfn(s1, w0)\n  nfn(s0, w1)\n  notbid(wceq(cv(s0), cv(s1)), w0, w1)\n  df-ex(s0, w0)\n  df-ex(s1, w1)\n}","pretty":"thm cbvexv1(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0, w0)↔ ∃(s1, w1))\n  ⊣ F/(s1, w0)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n  ⊣ d(s0, s1)\n} = {\n  3bitr4i(∃(s0, w0), ∃(s1, w1), ¬ ∀(s0, ¬ w0), ¬ ∀(s1, ¬ w1))\n  notbii(∀(s0, ¬ w0), ∀(s1, ¬ w1))\n  cbvalv1(s0, s1, ¬ w0, ¬ w1)\n  nfn(s1, w0)\n  nfn(s0, w1)\n  notbid(s0 = s1, w0, w1)\n  df-ex(s0, w0)\n  df-ex(s1, w1)\n}","parent":["3bitr4i","notbii","cbvalv1","nfn","notbid","df-ex"],"children":["sb8ev","exsb","mof","euf","clelab","issetf","eqvincf","rexab2","euabsn","eluniab","cbvopab1","cbvopab2","cbvopab1s","axrep1","axrep2","axrep4","opeliunxp","dfdmf","dfrnf","elrnmpt1","cbvoprab1","cbvoprab2","opabex3d","opabex3","zfcndrep","fsum2dlem","fprod2dlem","bnj1146","bnj607","bnj1228","bj-axrep1","bj-axrep2","bj-axrep4","poimirlem26","sbcexf","elunif","stoweidlem46","opeliun2xp"]},{"name":"dvelimhw","content":"Proof of ~ dvelimh without using ~ ax-13 but with additional distinct variable conditions. (Contributed by Andrew Salmon, 21-Jul-2011.) (Revised by NM, 1-Aug-2017.) (Proof shortened by Wolf Lammen, 23-Dec-2018.)","origin":"thm dvelimhw(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  |- wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wi(w0, wal(s0, w0)))\n  -| wi(w1, wal(s0, w1))\n  -| wi(w0, wal(s2, w0))\n  -| wi(wceq(cv(s2), cv(s1)), wb(w1, w0))\n  -| wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  nf5rd(s0, wn(wal(s0, wceq(cv(s0), cv(s1)))), w0)\n  sylib(wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, w0), wnf(s0, wal(s2, wi(wceq(cv(s2), cv(s1)), w1))))\n  nfald(s0, s2, wn(wal(s0, wceq(cv(s0), cv(s1)))), wi(wceq(cv(s2), cv(s1)), w1))\n  nfv(s2, wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  nfimd(s0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wceq(cv(s2), cv(s1)), w1)\n  nfxfrd(s0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wceq(cv(s2), cv(s1)), wceq(cv(s1), cv(s2)))\n  equcom(s2, s1)\n  nf5d(s0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wceq(cv(s1), cv(s2)))\n  nfna1(s0, wceq(cv(s0), cv(s1)))\n  a1i(wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, w1))\n  nf5i(s0, w1)\n  nfbii(s0, wal(s2, wi(wceq(cv(s2), cv(s1)), w1)), w0)\n  equsalhw(s2, s1, w1, w0)\n  diff.wn.s(s2, wal(s0, wceq(cv(s0), cv(s1))))\n  diff.wal.s(s2, s0, wceq(cv(s0), cv(s1)))\n  diff.wceq.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm dvelimhw(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  ⊢ (¬ ∀(s0, s0 = s1)→(w0 → ∀(s0, w0)))\n  ⊣ (w1 → ∀(s0, w1))\n  ⊣ (w0 → ∀(s2, w0))\n  ⊣ (s2 = s1 →(w1 ↔ w0))\n  ⊣ (¬ ∀(s0, s0 = s1)→(s1 = s2 → ∀(s0, s1 = s2)))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  nf5rd(s0, ¬ ∀(s0, s0 = s1), w0)\n  sylib(¬ ∀(s0, s0 = s1), F/(s0, w0), F/(s0, ∀(s2,(s2 = s1 → w1))))\n  nfald(s0, s2, ¬ ∀(s0, s0 = s1), (s2 = s1 → w1))\n  nfv(s2, ¬ ∀(s0, s0 = s1))\n  nfimd(s0, ¬ ∀(s0, s0 = s1), s2 = s1, w1)\n  nfxfrd(s0, ¬ ∀(s0, s0 = s1), s2 = s1, s1 = s2)\n  equcom(s2, s1)\n  nf5d(s0, ¬ ∀(s0, s0 = s1), s1 = s2)\n  nfna1(s0, s0 = s1)\n  a1i(¬ ∀(s0, s0 = s1), F/(s0, w1))\n  nf5i(s0, w1)\n  nfbii(s0, ∀(s2,(s2 = s1 → w1)), w0)\n  equsalhw(s2, s1, w1, w0)\n  diff.wn.s(s2, ∀(s0, s0 = s1))\n  diff.wal.s(s2, s0, s0 = s1)\n  diff.wceq.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["nf5rd","sylib","nfald","nfv","nfimd","nfxfrd","equcom","nf5d","nfna1","a1i","nf5i","nfbii","equsalhw","diff.wn.s","diff.wal.s","diff.wceq.s","diff.cv.s","diffss.ex"],"children":[]},{"name":"pm11.53","content":"Theorem *11.53 in [WhiteheadRussell] p. 164. See ~ pm11.53v for a version requiring fewer axioms. (Contributed by Andrew Salmon, 24-May-2011.)","origin":"thm pm11.53(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wal(s0, wal(s1, wi(w0, w1))), wi(wex(s0, w0), wal(s1, w1)))\n  -| diffsw(s0, w1)\n  -| diffsw(s1, w0)\n} = {\n  bitri(wal(s0, wal(s1, wi(w0, w1))), wi(wex(s0, w0), wal(s1, w1)), wal(s0, wi(w0, wal(s1, w1))))\n  albii(s0, wal(s1, wi(w0, w1)), wi(w0, wal(s1, w1)))\n  19.21v(s1, w0, w1)\n  19.23(s0, w0, wal(s1, w1))\n  nfal(s0, s1, w1)\n  nfv(s0, w1)\n}","pretty":"thm pm11.53(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, ∀(s1,(w0 → w1)))↔(∃(s0, w0)→ ∀(s1, w1)))\n  ⊣ d(s0, w1)\n  ⊣ d(s1, w0)\n} = {\n  bitri(∀(s0, ∀(s1,(w0 → w1))), (∃(s0, w0)→ ∀(s1, w1)), ∀(s0,(w0 → ∀(s1, w1))))\n  albii(s0, ∀(s1,(w0 → w1)), (w0 → ∀(s1, w1)))\n  19.21v(s1, w0, w1)\n  19.23(s0, w0, ∀(s1, w1))\n  nfal(s0, s1, w1)\n  nfv(s0, w1)\n}","parent":["bitri","albii","19.21v","19.23","nfal","nfv"],"children":[]},{"name":"19.12vv","content":"Special case of ~ 19.12 where its converse holds. See ~ 19.12vvv for a version with a disjoint variable condition requiring fewer axioms. (Contributed by NM, 18-Jul-2001.) (Revised by Andrew Salmon, 11-Jul-2011.)","origin":"thm 19.12vv(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wex(s0, wal(s1, wi(w0, w1))), wal(s1, wex(s0, wi(w0, w1))))\n  -| diffsw(s0, w1)\n  -| diffsw(s1, w0)\n} = {\n  3bitri(wex(s0, wal(s1, wi(w0, w1))), wal(s1, wex(s0, wi(w0, w1))), wex(s0, wi(w0, wal(s1, w1))), wi(wal(s0, w0), wal(s1, w1)))\n  exbii(s0, wal(s1, wi(w0, w1)), wi(w0, wal(s1, w1)))\n  19.21v(s1, w0, w1)\n  19.36(s0, w0, wal(s1, w1))\n  nfal(s0, s1, w1)\n  nfv(s0, w1)\n  bitr2i(wi(wal(s0, w0), wal(s1, w1)), wal(s1, wex(s0, wi(w0, w1))), wal(s1, wi(wal(s0, w0), w1)))\n  albii(s1, wex(s0, wi(w0, w1)), wi(wal(s0, w0), w1))\n  19.36v(s0, w0, w1)\n  19.21(s1, wal(s0, w0), w1)\n  nfal(s1, s0, w0)\n  nfv(s1, w0)\n}","pretty":"thm 19.12vv(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0, ∀(s1,(w0 → w1)))↔ ∀(s1, ∃(s0,(w0 → w1))))\n  ⊣ d(s0, w1)\n  ⊣ d(s1, w0)\n} = {\n  3bitri(∃(s0, ∀(s1,(w0 → w1))), ∀(s1, ∃(s0,(w0 → w1))), ∃(s0,(w0 → ∀(s1, w1))), (∀(s0, w0)→ ∀(s1, w1)))\n  exbii(s0, ∀(s1,(w0 → w1)), (w0 → ∀(s1, w1)))\n  19.21v(s1, w0, w1)\n  19.36(s0, w0, ∀(s1, w1))\n  nfal(s0, s1, w1)\n  nfv(s0, w1)\n  bitr2i((∀(s0, w0)→ ∀(s1, w1)), ∀(s1, ∃(s0,(w0 → w1))), ∀(s1,(∀(s0, w0)→ w1)))\n  albii(s1, ∃(s0,(w0 → w1)), (∀(s0, w0)→ w1))\n  19.36v(s0, w0, w1)\n  19.21(s1, ∀(s0, w0), w1)\n  nfal(s1, s0, w0)\n  nfv(s1, w0)\n}","parent":["3bitri","exbii","19.21v","19.36","nfal","nfv","bitr2i","albii","19.36v","19.21"],"children":[]},{"name":"eean","content":"Rearrange existential quantifiers. (Contributed by NM, 27-Oct-2010.) (Revised by Mario Carneiro, 6-Oct-2016.)","origin":"thm eean(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wex(s0, wex(s1, wa(w0, w1))), wa(wex(s0, w0), wex(s1, w1)))\n  -| wnf(s1, w0)\n  -| wnf(s0, w1)\n} = {\n  bitri(wex(s0, wex(s1, wa(w0, w1))), wa(wex(s0, w0), wex(s1, w1)), wex(s0, wa(w0, wex(s1, w1))))\n  exbii(s0, wex(s1, wa(w0, w1)), wa(w0, wex(s1, w1)))\n  19.42(s1, w0, w1)\n  19.41(s0, w0, wex(s1, w1))\n  nfex(s0, s1, w1)\n}","pretty":"thm eean(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0, ∃(s1,(w0 ∧ w1)))↔(∃(s0, w0)∧ ∃(s1, w1)))\n  ⊣ F/(s1, w0)\n  ⊣ F/(s0, w1)\n} = {\n  bitri(∃(s0, ∃(s1,(w0 ∧ w1))), (∃(s0, w0)∧ ∃(s1, w1)), ∃(s0,(w0 ∧ ∃(s1, w1))))\n  exbii(s0, ∃(s1,(w0 ∧ w1)), (w0 ∧ ∃(s1, w1)))\n  19.42(s1, w0, w1)\n  19.41(s0, w0, ∃(s1, w1))\n  nfex(s0, s1, w1)\n}","parent":["bitri","exbii","19.42","19.41","nfex"],"children":["eeanv","reean"]},{"name":"eeanv","content":"Distribute a pair of existential quantifiers over a conjunction. Combination of ~ 19.41v and ~ 19.42v . For a version requiring fewer axioms but with additional disjoint variable conditions, see ~ exdistrv . (Contributed by NM, 26-Jul-1995.)","origin":"thm eeanv(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wex(s0, wex(s1, wa(w0, w1))), wa(wex(s0, w0), wex(s1, w1)))\n  -| diffsw(s0, w1)\n  -| diffsw(s1, w0)\n} = {\n  eean(s0, s1, w0, w1)\n  nfv(s1, w0)\n  nfv(s0, w1)\n}","pretty":"thm eeanv(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∃(s0, ∃(s1,(w0 ∧ w1)))↔(∃(s0, w0)∧ ∃(s1, w1)))\n  ⊣ d(s0, w1)\n  ⊣ d(s1, w0)\n} = {\n  eean(s0, s1, w0, w1)\n  nfv(s1, w0)\n  nfv(s0, w1)\n}","parent":["eean","nfv"],"children":["eeeanv","ee4anv","wfrlem4OLD"]},{"name":"eeeanv","content":"Distribute three existential quantifiers over a conjunction. (Contributed by NM, 26-Jul-1995.) (Proof shortened by Andrew Salmon, 25-May-2011.) Reduce distinct variable restrictions. (Revised by Wolf Lammen, 20-Jan-2018.)","origin":"thm eeeanv(setvar s0, setvar s1, setvar s2, wff w0, wff w1, wff w2) {\n  |- wb(wex(s0, wex(s1, wex(s2, w3a(w0, w1, w2)))), w3a(wex(s0, w0), wex(s1, w1), wex(s2, w2)))\n  -| diffsw(s0, w1)\n  -| diffsw(s0, w2)\n  -| diffsw(s1, w0)\n  -| diffsw(s1, w2)\n  -| diffsw(s2, w0)\n  -| diffsw(s2, w1)\n} = {\n  3bitr4i(wex(s0, wex(s1, wex(s2, w3a(w0, w1, w2)))), w3a(wex(s0, w0), wex(s1, w1), wex(s2, w2)), wa(wex(s0, wex(s1, wa(w0, w1))), wex(s2, w2)), wa(wa(wex(s0, w0), wex(s1, w1)), wex(s2, w2)))\n  anbi1i(wex(s0, wex(s1, wa(w0, w1))), wex(s2, w2), wa(wex(s0, w0), wex(s1, w1)))\n  eeanv(s0, s1, w0, w1)\n  3bitri(wex(s0, wex(s1, wex(s2, w3a(w0, w1, w2)))), wa(wex(s0, wex(s1, wa(w0, w1))), wex(s2, w2)), wex(s0, wex(s1, wa(wa(w0, w1), wex(s2, w2)))), wex(s0, wa(wex(s1, wa(w0, w1)), wex(s2, w2))))\n  2exbii(s0, s1, wex(s2, w3a(w0, w1, w2)), wa(wa(w0, w1), wex(s2, w2)))\n  bitri(wex(s2, w3a(w0, w1, w2)), wa(wa(w0, w1), wex(s2, w2)), wex(s2, wa(wa(w0, w1), w2)))\n  exbii(s2, w3a(w0, w1, w2), wa(wa(w0, w1), w2))\n  df-3an(w0, w1, w2)\n  19.42v(s2, wa(w0, w1), w2)\n  exbii(s0, wex(s1, wa(wa(w0, w1), wex(s2, w2))), wa(wex(s1, wa(w0, w1)), wex(s2, w2)))\n  19.41(s1, wa(w0, w1), wex(s2, w2))\n  nfex(s1, s2, w2)\n  nfv(s1, w2)\n  19.41(s0, wex(s1, wa(w0, w1)), wex(s2, w2))\n  nfex(s0, s2, w2)\n  nfv(s0, w2)\n  df-3an(wex(s0, w0), wex(s1, w1), wex(s2, w2))\n  diff.wa.s(s2, w0, w1)\n}","pretty":"thm eeeanv(setvar s0, setvar s1, setvar s2, wff w0, wff w1, wff w2) {\n  ⊢ (∃(s0, ∃(s1, ∃(s2,(w0 ∧ w1 ∧ w2))))↔(∃(s0, w0)∧ ∃(s1, w1)∧ ∃(s2, w2)))\n  ⊣ d(s0, w1)\n  ⊣ d(s0, w2)\n  ⊣ d(s1, w0)\n  ⊣ d(s1, w2)\n  ⊣ d(s2, w0)\n  ⊣ d(s2, w1)\n} = {\n  3bitr4i(∃(s0, ∃(s1, ∃(s2,(w0 ∧ w1 ∧ w2)))), (∃(s0, w0)∧ ∃(s1, w1)∧ ∃(s2, w2)), (∃(s0, ∃(s1,(w0 ∧ w1)))∧ ∃(s2, w2)), ((∃(s0, w0)∧ ∃(s1, w1))∧ ∃(s2, w2)))\n  anbi1i(∃(s0, ∃(s1,(w0 ∧ w1))), ∃(s2, w2), (∃(s0, w0)∧ ∃(s1, w1)))\n  eeanv(s0, s1, w0, w1)\n  3bitri(∃(s0, ∃(s1, ∃(s2,(w0 ∧ w1 ∧ w2)))), (∃(s0, ∃(s1,(w0 ∧ w1)))∧ ∃(s2, w2)), ∃(s0, ∃(s1,((w0 ∧ w1)∧ ∃(s2, w2)))), ∃(s0,(∃(s1,(w0 ∧ w1))∧ ∃(s2, w2))))\n  2exbii(s0, s1, ∃(s2,(w0 ∧ w1 ∧ w2)), ((w0 ∧ w1)∧ ∃(s2, w2)))\n  bitri(∃(s2,(w0 ∧ w1 ∧ w2)), ((w0 ∧ w1)∧ ∃(s2, w2)), ∃(s2,((w0 ∧ w1)∧ w2)))\n  exbii(s2, (w0 ∧ w1 ∧ w2), ((w0 ∧ w1)∧ w2))\n  df-3an(w0, w1, w2)\n  19.42v(s2, (w0 ∧ w1), w2)\n  exbii(s0, ∃(s1,((w0 ∧ w1)∧ ∃(s2, w2))), (∃(s1,(w0 ∧ w1))∧ ∃(s2, w2)))\n  19.41(s1, (w0 ∧ w1), ∃(s2, w2))\n  nfex(s1, s2, w2)\n  nfv(s1, w2)\n  19.41(s0, ∃(s1,(w0 ∧ w1)), ∃(s2, w2))\n  nfex(s0, s2, w2)\n  nfv(s0, w2)\n  df-3an(∃(s0, w0), ∃(s1, w1), ∃(s2, w2))\n  diff.wa.s(s2, w0, w1)\n}","parent":["3bitr4i","anbi1i","eeanv","3bitri","2exbii","bitri","exbii","df-3an","19.42v","19.41","nfex","nfv","diff.wa.s"],"children":["vtocl3","spc3egv","eloprabga"]},{"name":"ee4anv","content":"Distribute two pairs of existential quantifiers over a conjunction. For a version requiring fewer axioms but with additional disjoint variable conditions, see ~ 4exdistrv . (Contributed by NM, 31-Jul-1995.)","origin":"thm ee4anv(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1) {\n  |- wb(wex(s0, wex(s1, wex(s2, wex(s3, wa(w0, w1))))), wa(wex(s0, wex(s1, w0)), wex(s2, wex(s3, w1))))\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffsw(s0, w1)\n  -| diffsw(s1, w1)\n  -| diffsw(s2, w0)\n  -| diffsw(s3, w0)\n} = {\n  3bitri(wex(s0, wex(s1, wex(s2, wex(s3, wa(w0, w1))))), wa(wex(s0, wex(s1, w0)), wex(s2, wex(s3, w1))), wex(s0, wex(s2, wex(s1, wex(s3, wa(w0, w1))))), wex(s0, wex(s2, wa(wex(s1, w0), wex(s3, w1)))))\n  exbii(s0, wex(s1, wex(s2, wex(s3, wa(w0, w1)))), wex(s2, wex(s1, wex(s3, wa(w0, w1)))))\n  excom(s1, s2, wex(s3, wa(w0, w1)))\n  2exbii(s0, s2, wex(s1, wex(s3, wa(w0, w1))), wa(wex(s1, w0), wex(s3, w1)))\n  eeanv(s1, s3, w0, w1)\n  eeanv(s0, s2, wex(s1, w0), wex(s3, w1))\n  diff.wex.s(s0, s3, w1)\n  diff.wex.s(s2, s1, w0)\n  diffss.ex(s2, s1)\n}","pretty":"thm ee4anv(setvar s0, setvar s1, setvar s2, setvar s3, wff w0, wff w1) {\n  ⊢ (∃(s0, ∃(s1, ∃(s2, ∃(s3,(w0 ∧ w1)))))↔(∃(s0, ∃(s1, w0))∧ ∃(s2, ∃(s3, w1))))\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, w1)\n  ⊣ d(s1, w1)\n  ⊣ d(s2, w0)\n  ⊣ d(s3, w0)\n} = {\n  3bitri(∃(s0, ∃(s1, ∃(s2, ∃(s3,(w0 ∧ w1))))), (∃(s0, ∃(s1, w0))∧ ∃(s2, ∃(s3, w1))), ∃(s0, ∃(s2, ∃(s1, ∃(s3,(w0 ∧ w1))))), ∃(s0, ∃(s2,(∃(s1, w0)∧ ∃(s3, w1)))))\n  exbii(s0, ∃(s1, ∃(s2, ∃(s3,(w0 ∧ w1)))), ∃(s2, ∃(s1, ∃(s3,(w0 ∧ w1)))))\n  excom(s1, s2, ∃(s3,(w0 ∧ w1)))\n  2exbii(s0, s2, ∃(s1, ∃(s3,(w0 ∧ w1))), (∃(s1, w0)∧ ∃(s3, w1)))\n  eeanv(s1, s3, w0, w1)\n  eeanv(s0, s2, ∃(s1, w0), ∃(s3, w1))\n  diff.wex.s(s0, s3, w1)\n  diff.wex.s(s2, s1, w0)\n  diffss.ex(s2, s1)\n}","parent":["3bitri","exbii","excom","2exbii","eeanv","diff.wex.s","diffss.ex"],"children":["cgsex4g","5oalem7","elfuns"]},{"name":"sb8v","content":"Substitution of variable in universal quantifier. Version of ~ sb8 with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 19-Jan-2023.)","origin":"thm sb8v(setvar s0, setvar s1, wff w0) {\n  |- wb(wal(s0, w0), wal(s1, wsb(s1, s0, w0)))\n  -| wnf(s1, w0)\n  -| diffss(s0, s1)\n} = {\n  cbvalv1(s0, s1, w0, wsb(s1, s0, w0))\n  nfs1v(s0, s1, w0)\n  sbequ12(s0, s1, w0)\n}","pretty":"thm sb8v(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, w0)↔ ∀(s1,[s1 / s0]w0))\n  ⊣ F/(s1, w0)\n  ⊣ d(s0, s1)\n} = {\n  cbvalv1(s0, s1, w0, [s1 / s0]w0)\n  nfs1v(s0, s1, w0)\n  sbequ12(s0, s1, w0)\n}","parent":["cbvalv1","nfs1v","sbequ12"],"children":["sbnf2","sb8eulem","abv"]},{"name":"sb8ev","content":"Substitution of variable in existential quantifier. Version of ~ sb8e with a disjoint variable condition, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 19-Jan-2023.)","origin":"thm sb8ev(setvar s0, setvar s1, wff w0) {\n  |- wb(wex(s0, w0), wex(s1, wsb(s1, s0, w0)))\n  -| wnf(s1, w0)\n  -| diffss(s0, s1)\n} = {\n  cbvexv1(s0, s1, w0, wsb(s1, s0, w0))\n  nfs1v(s0, s1, w0)\n  sbequ12(s0, s1, w0)\n}","pretty":"thm sb8ev(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0, w0)↔ ∃(s1,[s1 / s0]w0))\n  ⊣ F/(s1, w0)\n  ⊣ d(s0, s1)\n} = {\n  cbvexv1(s0, s1, w0, [s1 / s0]w0)\n  nfs1v(s0, s1, w0)\n  sbequ12(s0, s1, w0)\n}","parent":["cbvexv1","nfs1v","sbequ12"],"children":["2sb8ev","2sb8evOLD","sbnf2","mo3"]},{"name":"2sb8ev","content":"Version of ~ 2sb8e with more disjoint variable conditions, not requiring ~ ax-13 . (Contributed by Wolf Lammen, 28-Jan-2023.)","origin":"thm 2sb8ev(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  |- wb(wex(s0, wex(s1, w0)), wex(s2, wex(s3, wsb(s2, s0, wsb(s3, s1, w0)))))\n  -| wnf(s3, w0)\n  -| wnf(s2, w0)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n} = {\n  3bitri(wex(s0, wex(s1, w0)), wex(s2, wex(s3, wsb(s2, s0, wsb(s3, s1, w0)))), wex(s3, wex(s0, wsb(s3, s1, w0))), wex(s3, wex(s2, wsb(s2, s0, wsb(s3, s1, w0)))))\n  bitri(wex(s0, wex(s1, w0)), wex(s3, wex(s0, wsb(s3, s1, w0))), wex(s0, wex(s3, wsb(s3, s1, w0))))\n  exbii(s0, wex(s1, w0), wex(s3, wsb(s3, s1, w0)))\n  sb8ev(s1, s3, w0)\n  excom(s0, s3, wsb(s3, s1, w0))\n  exbii(s3, wex(s0, wsb(s3, s1, w0)), wex(s2, wsb(s2, s0, wsb(s3, s1, w0))))\n  sb8ev(s0, s2, wsb(s3, s1, w0))\n  nfsbv(s2, s3, s1, w0)\n  excom(s3, s2, wsb(s2, s0, wsb(s3, s1, w0)))\n  diffss.ex(s2, s1)\n  diffss.ex(s3, s1)\n}","pretty":"thm 2sb8ev(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  ⊢ (∃(s0, ∃(s1, w0))↔ ∃(s2, ∃(s3,[s2 / s0][s3 / s1]w0)))\n  ⊣ F/(s3, w0)\n  ⊣ F/(s2, w0)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n} = {\n  3bitri(∃(s0, ∃(s1, w0)), ∃(s2, ∃(s3,[s2 / s0][s3 / s1]w0)), ∃(s3, ∃(s0,[s3 / s1]w0)), ∃(s3, ∃(s2,[s2 / s0][s3 / s1]w0)))\n  bitri(∃(s0, ∃(s1, w0)), ∃(s3, ∃(s0,[s3 / s1]w0)), ∃(s0, ∃(s3,[s3 / s1]w0)))\n  exbii(s0, ∃(s1, w0), ∃(s3,[s3 / s1]w0))\n  sb8ev(s1, s3, w0)\n  excom(s0, s3, [s3 / s1]w0)\n  exbii(s3, ∃(s0,[s3 / s1]w0), ∃(s2,[s2 / s0][s3 / s1]w0))\n  sb8ev(s0, s2, [s3 / s1]w0)\n  nfsbv(s2, s3, s1, w0)\n  excom(s3, s2, [s2 / s0][s3 / s1]w0)\n  diffss.ex(s2, s1)\n  diffss.ex(s3, s1)\n}","parent":["3bitri","bitri","exbii","sb8ev","excom","nfsbv","diffss.ex"],"children":["2exsb","2mo"]},{"name":"2sb8evOLD","content":"Obsolete proof of ~ 2sb8ev as of 19-Mar-2023. (Contributed by Wolf Lammen, 28-Jan-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm 2sb8evOLD(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  |- wb(wex(s0, wex(s1, w0)), wex(s2, wex(s3, wsb(s2, s0, wsb(s3, s1, w0)))))\n  -| wnf(s3, w0)\n  -| wnf(s2, w0)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n} = {\n  3bitri(wex(s0, wex(s1, w0)), wex(s2, wex(s3, wsb(s2, s0, wsb(s3, s1, w0)))), wex(s3, wex(s0, wsb(s3, s1, w0))), wex(s3, wex(s2, wsb(s2, s0, wsb(s3, s1, w0)))))\n  bitri(wex(s0, wex(s1, w0)), wex(s3, wex(s0, wsb(s3, s1, w0))), wex(s0, wex(s3, wsb(s3, s1, w0))))\n  exbii(s0, wex(s1, w0), wex(s3, wsb(s3, s1, w0)))\n  sb8ev(s1, s3, w0)\n  excom(s0, s3, wsb(s3, s1, w0))\n  exbii(s3, wex(s0, wsb(s3, s1, w0)), wex(s2, wsb(s2, s0, wsb(s3, s1, w0))))\n  sb8ev(s0, s2, wsb(s3, s1, w0))\n  nfxfr(s2, wsb(s3, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s3)), w0)))\n  sb6(s3, s1, w0)\n  nfal(s2, s1, wi(wceq(cv(s1), cv(s3)), w0))\n  nfim(s2, wceq(cv(s1), cv(s3)), w0)\n  nfv(s2, wceq(cv(s1), cv(s3)))\n  excom(s3, s2, wsb(s2, s0, wsb(s3, s1, w0)))\n  diffss.ex(s3, s1)\n  diff.wceq.s(s2, cv(s1), cv(s3))\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.cv.s(s2, s3)\n}","pretty":"thm 2sb8evOLD(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  ⊢ (∃(s0, ∃(s1, w0))↔ ∃(s2, ∃(s3,[s2 / s0][s3 / s1]w0)))\n  ⊣ F/(s3, w0)\n  ⊣ F/(s2, w0)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n} = {\n  3bitri(∃(s0, ∃(s1, w0)), ∃(s2, ∃(s3,[s2 / s0][s3 / s1]w0)), ∃(s3, ∃(s0,[s3 / s1]w0)), ∃(s3, ∃(s2,[s2 / s0][s3 / s1]w0)))\n  bitri(∃(s0, ∃(s1, w0)), ∃(s3, ∃(s0,[s3 / s1]w0)), ∃(s0, ∃(s3,[s3 / s1]w0)))\n  exbii(s0, ∃(s1, w0), ∃(s3,[s3 / s1]w0))\n  sb8ev(s1, s3, w0)\n  excom(s0, s3, [s3 / s1]w0)\n  exbii(s3, ∃(s0,[s3 / s1]w0), ∃(s2,[s2 / s0][s3 / s1]w0))\n  sb8ev(s0, s2, [s3 / s1]w0)\n  nfxfr(s2, [s3 / s1]w0, ∀(s1,(s1 = s3 → w0)))\n  sb6(s3, s1, w0)\n  nfal(s2, s1, (s1 = s3 → w0))\n  nfim(s2, s1 = s3, w0)\n  nfv(s2, s1 = s3)\n  excom(s3, s2, [s2 / s0][s3 / s1]w0)\n  diffss.ex(s3, s1)\n  diff.wceq.s(s2, s1, s3)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n  diff.cv.s(s2, s3)\n}","parent":["3bitri","bitri","exbii","sb8ev","excom","nfxfr","sb6","nfal","nfim","nfv","diffss.ex","diff.wceq.s","diff.cv.s"],"children":[]},{"name":"sb6rfv","content":"Reversed substitution. Version of ~ sb6rf requiring disjoint variables, but fewer axioms. (Contributed by Wolf Lammen, 7-Feb-2023.)","origin":"thm sb6rfv(setvar s0, setvar s1, wff w0) {\n  |- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), wsb(s0, s1, w0))))\n  -| wnf(s0, w0)\n  -| diffss(s0, s1)\n} = {\n  bicomi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), wsb(s0, s1, w0))))\n  equsalv(s0, s1, wsb(s0, s1, w0), w0)\n  sbequ12r(s0, s1, w0)\n}","pretty":"thm sb6rfv(setvar s0, setvar s1, wff w0) {\n  ⊢ (w0 ↔ ∀(s0,(s0 = s1 →[s0 / s1]w0)))\n  ⊣ F/(s0, w0)\n  ⊣ d(s0, s1)\n} = {\n  bicomi(w0, ∀(s0,(s0 = s1 →[s0 / s1]w0)))\n  equsalv(s0, s1, [s0 / s1]w0, w0)\n  sbequ12r(s0, s1, w0)\n}","parent":["bicomi","equsalv","sbequ12r"],"children":["eu1"]},{"name":"sbnf2","content":"Two ways of expressing \" ` x ` is (effectively) not free in ` ph ` \". (Contributed by G&eacute;rard Lang, 14-Nov-2013.) (Revised by Mario Carneiro, 6-Oct-2016.) (Proof shortened by Wolf Lammen, 22-Sep-2018.) Avoid ~ ax-13 . (Revised by Wolf Lammen, 30-Jan-2023.)","origin":"thm sbnf2(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wb(wnf(s0, w0), wal(s1, wal(s2, wb(wsb(s1, s0, w0), wsb(s2, s0, w0)))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s1, w0)\n  -| diffsw(s2, w0)\n} = {\n  3bitr4i(wnf(s0, w0), wal(s1, wal(s2, wb(wsb(s1, s0, w0), wsb(s2, s0, w0)))), wa(wnf(s0, w0), wnf(s0, w0)), wa(wal(s1, wal(s2, wi(wsb(s1, s0, w0), wsb(s2, s0, w0)))), wal(s1, wal(s2, wi(wsb(s2, s0, w0), wsb(s1, s0, w0))))))\n  anbi12i(wnf(s0, w0), wnf(s0, w0), wal(s1, wal(s2, wi(wsb(s1, s0, w0), wsb(s2, s0, w0)))), wal(s1, wal(s2, wi(wsb(s2, s0, w0), wsb(s1, s0, w0)))))\n  3bitr4i(wnf(s0, w0), wal(s1, wal(s2, wi(wsb(s1, s0, w0), wsb(s2, s0, w0)))), wi(wex(s0, w0), wal(s0, w0)), wi(wex(s1, wsb(s1, s0, w0)), wal(s2, wsb(s2, s0, w0))))\n  imbi12i(wex(s0, w0), wal(s0, w0), wex(s1, wsb(s1, s0, w0)), wal(s2, wsb(s2, s0, w0)))\n  sb8ev(s0, s1, w0)\n  sb8v(s0, s2, w0)\n  pm11.53v(s1, s2, wsb(s1, s0, w0), wsb(s2, s0, w0))\n  3bitri(wnf(s0, w0), wal(s1, wal(s2, wi(wsb(s2, s0, w0), wsb(s1, s0, w0)))), wi(wex(s0, w0), wal(s0, w0)), wal(s2, wal(s1, wi(wsb(s2, s0, w0), wsb(s1, s0, w0)))))\n  df-nf(s0, w0)\n  bitr4i(wi(wex(s0, w0), wal(s0, w0)), wal(s2, wal(s1, wi(wsb(s2, s0, w0), wsb(s1, s0, w0)))), wi(wex(s2, wsb(s2, s0, w0)), wal(s1, wsb(s1, s0, w0))))\n  imbi12i(wex(s0, w0), wal(s0, w0), wex(s2, wsb(s2, s0, w0)), wal(s1, wsb(s1, s0, w0)))\n  sb8ev(s0, s2, w0)\n  nfv(s2, w0)\n  sb8v(s0, s1, w0)\n  nfv(s1, w0)\n  pm11.53v(s2, s1, wsb(s2, s0, w0), wsb(s1, s0, w0))\n  alcom(s2, s1, wi(wsb(s2, s0, w0), wsb(s1, s0, w0)))\n  pm4.24(wnf(s0, w0))\n  2albiim(s1, s2, wsb(s1, s0, w0), wsb(s2, s0, w0))\n  diff.wsb.s(s1, s2, s0, w0)\n  diffss.ex(s1, s0)\n  diff.wsb.s(s2, s1, s0, w0)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n}","pretty":"thm sbnf2(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ (F/(s0, w0)↔ ∀(s1, ∀(s2,([s1 / s0]w0 ↔[s2 / s0]w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, w0)\n  ⊣ d(s2, w0)\n} = {\n  3bitr4i(F/(s0, w0), ∀(s1, ∀(s2,([s1 / s0]w0 ↔[s2 / s0]w0))), (F/(s0, w0)∧ F/(s0, w0)), (∀(s1, ∀(s2,([s1 / s0]w0 →[s2 / s0]w0)))∧ ∀(s1, ∀(s2,([s2 / s0]w0 →[s1 / s0]w0)))))\n  anbi12i(F/(s0, w0), F/(s0, w0), ∀(s1, ∀(s2,([s1 / s0]w0 →[s2 / s0]w0))), ∀(s1, ∀(s2,([s2 / s0]w0 →[s1 / s0]w0))))\n  3bitr4i(F/(s0, w0), ∀(s1, ∀(s2,([s1 / s0]w0 →[s2 / s0]w0))), (∃(s0, w0)→ ∀(s0, w0)), (∃(s1,[s1 / s0]w0)→ ∀(s2,[s2 / s0]w0)))\n  imbi12i(∃(s0, w0), ∀(s0, w0), ∃(s1,[s1 / s0]w0), ∀(s2,[s2 / s0]w0))\n  sb8ev(s0, s1, w0)\n  sb8v(s0, s2, w0)\n  pm11.53v(s1, s2, [s1 / s0]w0, [s2 / s0]w0)\n  3bitri(F/(s0, w0), ∀(s1, ∀(s2,([s2 / s0]w0 →[s1 / s0]w0))), (∃(s0, w0)→ ∀(s0, w0)), ∀(s2, ∀(s1,([s2 / s0]w0 →[s1 / s0]w0))))\n  df-nf(s0, w0)\n  bitr4i((∃(s0, w0)→ ∀(s0, w0)), ∀(s2, ∀(s1,([s2 / s0]w0 →[s1 / s0]w0))), (∃(s2,[s2 / s0]w0)→ ∀(s1,[s1 / s0]w0)))\n  imbi12i(∃(s0, w0), ∀(s0, w0), ∃(s2,[s2 / s0]w0), ∀(s1,[s1 / s0]w0))\n  sb8ev(s0, s2, w0)\n  nfv(s2, w0)\n  sb8v(s0, s1, w0)\n  nfv(s1, w0)\n  pm11.53v(s2, s1, [s2 / s0]w0, [s1 / s0]w0)\n  alcom(s2, s1, ([s2 / s0]w0 →[s1 / s0]w0))\n  pm4.24(F/(s0, w0))\n  2albiim(s1, s2, [s1 / s0]w0, [s2 / s0]w0)\n  diff.wsb.s(s1, s2, s0, w0)\n  diffss.ex(s1, s0)\n  diff.wsb.s(s2, s1, s0, w0)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n}","parent":["3bitr4i","anbi12i","imbi12i","sb8ev","sb8v","pm11.53v","3bitri","df-nf","bitr4i","nfv","alcom","pm4.24","2albiim","diff.wsb.s","diffss.ex"],"children":["sbnfc2","nfnid","wl-ich-lem1c","wl-ich-lem1d","wl-ich-lem3"]},{"name":"exsb","content":"An equivalent expression for existence. (Contributed by NM, 2-Feb-2005.) Avoid ~ ax-13 . (Revised by Wolf Lammen, 16-Oct-2022.)","origin":"thm exsb(setvar s0, setvar s1, wff w0) {\n  |- wb(wex(s0, w0), wex(s1, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w0)\n} = {\n  cbvexv1(s0, s1, w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  nfv(s1, w0)\n  nfa1(s0, wi(wceq(cv(s0), cv(s1)), w0))\n  impbid(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  ax12v(s0, s1, w0)\n  com12(wceq(cv(s0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n  sp(s0, wi(wceq(cv(s0), cv(s1)), w0))\n}","pretty":"thm exsb(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0, w0)↔ ∃(s1, ∀(s0,(s0 = s1 → w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w0)\n} = {\n  cbvexv1(s0, s1, w0, ∀(s0,(s0 = s1 → w0)))\n  nfv(s1, w0)\n  nfa1(s0, (s0 = s1 → w0))\n  impbid(s0 = s1, w0, ∀(s0,(s0 = s1 → w0)))\n  ax12v(s0, s1, w0)\n  com12(s0 = s1, ∀(s0,(s0 = s1 → w0)), w0)\n  sp(s0, (s0 = s1 → w0))\n}","parent":["cbvexv1","nfv","nfa1","impbid","ax12v","com12","sp"],"children":["eu6","eu6OLD"]},{"name":"2exsb","content":"An equivalent expression for double existence. (Contributed by NM, 2-Feb-2005.) (Proof shortened by Wolf Lammen, 30-Sep-2018.)","origin":"thm 2exsb(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  |- wb(wex(s0, wex(s1, w0)), wex(s2, wex(s3, wal(s0, wal(s1, wi(wa(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s3))), w0))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n  -| diffsw(s2, w0)\n  -| diffsw(s3, w0)\n} = {\n  bitri(wex(s0, wex(s1, w0)), wex(s2, wex(s3, wal(s0, wal(s1, wi(wa(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s3))), w0))))), wex(s2, wex(s3, wsb(s2, s0, wsb(s3, s1, w0)))))\n  2sb8ev(s0, s1, s2, s3, w0)\n  nfv(s3, w0)\n  nfv(s2, w0)\n  2exbii(s2, s3, wsb(s2, s0, wsb(s3, s1, w0)), wal(s0, wal(s1, wi(wa(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s3))), w0))))\n  2sb6(s2, s0, s3, s1, w0)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n  diffss.ex(s3, s1)\n}","pretty":"thm 2exsb(setvar s0, setvar s1, setvar s2, setvar s3, wff w0) {\n  ⊢ (∃(s0, ∃(s1, w0))↔ ∃(s2, ∃(s3, ∀(s0, ∀(s1,((s0 = s2 ∧ s1 = s3)→ w0))))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n  ⊣ d(s2, w0)\n  ⊣ d(s3, w0)\n} = {\n  bitri(∃(s0, ∃(s1, w0)), ∃(s2, ∃(s3, ∀(s0, ∀(s1,((s0 = s2 ∧ s1 = s3)→ w0))))), ∃(s2, ∃(s3,[s2 / s0][s3 / s1]w0)))\n  2sb8ev(s0, s1, s2, s3, w0)\n  nfv(s3, w0)\n  nfv(s2, w0)\n  2exbii(s2, s3, [s2 / s0][s3 / s1]w0, ∀(s0, ∀(s1,((s0 = s2 ∧ s1 = s3)→ w0))))\n  2sb6(s2, s0, s3, s1, w0)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n  diffss.ex(s3, s1)\n}","parent":["bitri","2sb8ev","nfv","2exbii","2sb6","diffss.ex"],"children":["2eu6"]},{"name":"cleljustALT","content":"Alternate proof of ~ cleljust . It is kept here and should not be modified because it is referenced on the Metamath Proof Explorer Home Page (mmset.html) as an example of how disjoint variable conditions are inherited by substitutions. (Contributed by NM, 28-Jan-2004.) (Revised by BJ, 29-Dec-2020.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm cleljustALT(setvar s0, setvar s1, setvar s2) {\n  |- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  bicomi(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n  equsexhv(s2, s0, wcel(cv(s2), cv(s1)), wcel(cv(s0), cv(s1)))\n  ax-5(s2, wcel(cv(s0), cv(s1)))\n  elequ1(s2, s0, s1)\n  diff.wcel.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm cleljustALT(setvar s0, setvar s1, setvar s2) {\n  ⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  bicomi(s0 ∈ s1, ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n  equsexhv(s2, s0, s2 ∈ s1, s0 ∈ s1)\n  ax-5(s2, s0 ∈ s1)\n  elequ1(s2, s0, s1)\n  diff.wcel.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["bicomi","equsexhv","ax-5","elequ1","diff.wcel.s","diff.cv.s","diffss.ex"],"children":[]},{"name":"cleljustALT2","content":"Alternate proof of ~ cleljust . Compared with ~ cleljustALT , it uses ~ nfv followed by ~ equsexv instead of ~ ax-5 followed by ~ equsexhv , so it uses the idiom ` F/ x ph ` instead of ` ph -> A. x ph ` to express non-freeness. This style is generally preferred for later theorems. (Contributed by NM, 28-Jan-2004.) (Revised by Mario Carneiro, 21-Dec-2016.) (Revised by BJ, 29-Dec-2020.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm cleljustALT2(setvar s0, setvar s1, setvar s2) {\n  |- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n} = {\n  bicomi(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n  equsexv(s2, s0, wcel(cv(s2), cv(s1)), wcel(cv(s0), cv(s1)))\n  nfv(s2, wcel(cv(s0), cv(s1)))\n  elequ1(s2, s0, s1)\n  diff.wcel.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm cleljustALT2(setvar s0, setvar s1, setvar s2) {\n  ⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n} = {\n  bicomi(s0 ∈ s1, ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n  equsexv(s2, s0, s2 ∈ s1, s0 ∈ s1)\n  nfv(s2, s0 ∈ s1)\n  elequ1(s2, s0, s1)\n  diff.wcel.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["bicomi","equsexv","nfv","elequ1","diff.wcel.s","diff.cv.s","diffss.ex"],"children":[]},{"name":"equs5aALT","content":"Alternate proof of ~ equs5a . Uses ~ ax-12 but not ~ ax-13 . (Contributed by NM, 2-Feb-2007.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm equs5aALT(setvar s0, setvar s1, wff w0) {\n  |- wi(wex(s0, wa(wceq(cv(s0), cv(s1)), wal(s1, w0))), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n} = {\n  exlimi(s0, wa(wceq(cv(s0), cv(s1)), wal(s1, w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  nfa1(s0, wi(wceq(cv(s0), cv(s1)), w0))\n  imp(wceq(cv(s0), cv(s1)), wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  ax-12(s0, s1, w0)\n}","pretty":"thm equs5aALT(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0,(s0 = s1 ∧ ∀(s1, w0)))→ ∀(s0,(s0 = s1 → w0)))\n} = {\n  exlimi(s0, (s0 = s1 ∧ ∀(s1, w0)), ∀(s0,(s0 = s1 → w0)))\n  nfa1(s0, (s0 = s1 → w0))\n  imp(s0 = s1, ∀(s1, w0), ∀(s0,(s0 = s1 → w0)))\n  ax-12(s0, s1, w0)\n}","parent":["exlimi","nfa1","imp","ax-12"],"children":[]},{"name":"equs5eALT","content":"Alternate proof of ~ equs5e . Uses ~ ax-12 but not ~ ax-13 . (Contributed by NM, 2-Feb-2007.) (Proof shortened by Wolf Lammen, 15-Jan-2018.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm equs5eALT(setvar s0, setvar s1, wff w0) {\n  |- wi(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), wex(s1, w0))))\n} = {\n  exlimi(s0, wa(wceq(cv(s0), cv(s1)), w0), wal(s0, wi(wceq(cv(s0), cv(s1)), wex(s1, w0))))\n  nfa1(s0, wi(wceq(cv(s0), cv(s1)), wex(s1, w0)))\n  imp(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), wex(s1, w0))))\n  syl5(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), wex(s1, w0))), wal(s1, wex(s1, w0)))\n  19.23bi(s1, w0, wal(s1, wex(s1, w0)))\n  hbe1(s1, w0)\n  ax-12(s0, s1, wex(s1, w0))\n}","pretty":"thm equs5eALT(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0,(s0 = s1 ∧ w0))→ ∀(s0,(s0 = s1 → ∃(s1, w0))))\n} = {\n  exlimi(s0, (s0 = s1 ∧ w0), ∀(s0,(s0 = s1 → ∃(s1, w0))))\n  nfa1(s0, (s0 = s1 → ∃(s1, w0)))\n  imp(s0 = s1, w0, ∀(s0,(s0 = s1 → ∃(s1, w0))))\n  syl5(s0 = s1, w0, ∀(s0,(s0 = s1 → ∃(s1, w0))), ∀(s1, ∃(s1, w0)))\n  19.23bi(s1, w0, ∀(s1, ∃(s1, w0)))\n  hbe1(s1, w0)\n  ax-12(s0, s1, ∃(s1, w0))\n}","parent":["exlimi","nfa1","imp","syl5","19.23bi","hbe1","ax-12"],"children":[]},{"name":"axc11r","content":"Same as ~ axc11 but with reversed antecedent. Note the use of ~ ax-12 (and not merely ~ ax12v as in ~ axc11rv ). (Contributed by NM, 25-Jul-2015.)","origin":"thm axc11r(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wi(wal(s1, w0), wal(s0, w0)))\n} = {\n  syld(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, w0), wal(s0, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  sps(s0, wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  ax-12(s0, s1, w0)\n  al2imi(s0, wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s1)), w0), w0)\n  pm2.27(wceq(cv(s0), cv(s1)), w0)\n}","pretty":"thm axc11r(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→(∀(s1, w0)→ ∀(s0, w0)))\n} = {\n  syld(∀(s0, s0 = s1), ∀(s1, w0), ∀(s0, w0), ∀(s0,(s0 = s1 → w0)))\n  sps(s0, s0 = s1, (∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))\n  ax-12(s0, s1, w0)\n  al2imi(s0, s0 = s1, (s0 = s1 → w0), w0)\n  pm2.27(s0 = s1, w0)\n}","parent":["syld","sps","ax-12","al2imi","pm2.27"],"children":["ax12","axc11n","axc11","hbae","dral1","dral1ALT","sb4a","axpowndlem3","axc11n11r","bj-ax12v3ALT","bj-axc11v","bj-dral1v","bj-hbaeb2"]}]}