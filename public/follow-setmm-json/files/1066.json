{"index":1066,"title":"Alternate ordered pairs","content":"","blocks":[{"name":"caltop","content":"Declare the syntax for an alternate ordered pair.","origin":"prop class caltop(class c0, class c1) { << c0, c1 >> }","pretty":"","parent":[],"children":[]},{"name":"diff.caltop.s","content":"","origin":"axiom diff.caltop.s(setvar sBase, class c0, class c1) {\n  |- diffsc(sBase, caltop(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.caltop.s(setvar sBase, class c0, class c1) {\n  ‚ä¢ d(sBase, << c0, c1 >>)\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.caltop.c","content":"","origin":"axiom diff.caltop.c(class cBase, class c0, class c1) {\n  |- diffcc(cBase, caltop(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.caltop.c(class cBase, class c0, class c1) {\n  ‚ä¢ d(cBase, << c0, c1 >>)\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.caltop.w","content":"","origin":"axiom diff.caltop.w(wff wBase, class c0, class c1) {\n  |- diffcw(caltop(c0, c1), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.caltop.w(wff wBase, class c0, class c1) {\n  ‚ä¢ d(<< c0, c1 >>, wBase)\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"caltxp","content":"Declare the syntax for an alternate Cartesian product.","origin":"prop class caltxp(class c0, class c1) { (c0 XX. c1) }","pretty":"","parent":[],"children":[]},{"name":"diff.caltxp.s","content":"","origin":"axiom diff.caltxp.s(setvar sBase, class c0, class c1) {\n  |- diffsc(sBase, caltxp(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.caltxp.s(setvar sBase, class c0, class c1) {\n  ‚ä¢ d(sBase,(c0 XX. c1))\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.caltxp.c","content":"","origin":"axiom diff.caltxp.c(class cBase, class c0, class c1) {\n  |- diffcc(cBase, caltxp(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.caltxp.c(class cBase, class c0, class c1) {\n  ‚ä¢ d(cBase,(c0 XX. c1))\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.caltxp.w","content":"","origin":"axiom diff.caltxp.w(wff wBase, class c0, class c1) {\n  |- diffcw(caltxp(c0, c1), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.caltxp.w(wff wBase, class c0, class c1) {\n  ‚ä¢ d((c0 XX. c1), wBase)\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"df-altop","content":"An alternative definition of ordered pairs. This definition removes a hypothesis from its defining theorem (see ~ altopth ), making it more convenient in some circumstances. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"axiom df-altop(class c0, class c1) {\n  |- wceq(caltop(c0, c1), cpr(csn(c0), cpr(c0, csn(c1))))\n}","pretty":"axiom df-altop(class c0, class c1) {\n  ‚ä¢ << c0, c1 >> = { { c0 }, { c0, { c1 } } }\n}","parent":[],"children":["altopex","altopthsn","altxpsspw","rankaltopb","nfaltop"]},{"name":"df-altxp","content":"Define Cartesian products of alternative ordered pairs. (Contributed by Scott Fenton, 23-Mar-2012.)","origin":"axiom df-altxp(setvar s0, setvar s1, setvar s2, class c0, class c1) {\n  |- wceq(caltxp(c0, c1), cab(s0, wrex(s1, c0, wrex(s2, c1, wceq(cv(s0), caltop(cv(s1), cv(s2)))))))\n  -| diffss(s1, s2)\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffsc(s1, c0)\n  -| diffsc(s2, c0)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s2, c1)\n  -| diffsc(s0, c1)\n}","pretty":"axiom df-altxp(setvar s0, setvar s1, setvar s2, class c0, class c1) {\n  ‚ä¢ (c0 XX. c1)= { s0 | ‚àÉ(s1 ‚àà c0, ‚àÉ(s2 ‚àà c1, s0 = << s1, s2 >>))}\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s2, c0)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s2, c1)\n  ‚ä£ d(s0, c1)\n}","parent":[],"children":["altxpeq1","altxpeq2","elaltxp"]},{"name":"altopex","content":"Alternative ordered pairs always exist. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopex(class c0, class c1) {\n  |- wcel(caltop(c0, c1), universe)\n} = {\n  eqeltri(caltop(c0, c1), universe, cpr(csn(c0), cpr(c0, csn(c1))))\n  df-altop(c0, c1)\n  prex(csn(c0), cpr(c0, csn(c1)))\n}","pretty":"thm altopex(class c0, class c1) {\n  ‚ä¢ << c0, c1 >> ‚àà ùïå\n} = {\n  eqeltri(<< c0, c1 >>, universe, { { c0 }, { c0, { c1 } } })\n  df-altop(c0, c1)\n  prex({ c0 }, { c0, { c1 } })\n}","parent":["eqeltri","df-altop","prex"],"children":["elaltxp"]},{"name":"altopthsn","content":"Two alternate ordered pairs are equal iff the singletons of their respective elements are equal. Note that this holds regardless of sethood of any of the elements. (Contributed by Scott Fenton, 16-Apr-2012.)","origin":"thm altopthsn(class c0, class c1, class c2, class c3) {\n  |- wb(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(csn(c0), csn(c2)), wceq(csn(c1), csn(c3))))\n} = {\n  bitri(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(csn(c0), csn(c2)), wceq(csn(c1), csn(c3))), wceq(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))))\n  eqeq12i(caltop(c0, c1), caltop(c2, c3), cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3))))\n  df-altop(c0, c1)\n  df-altop(c2, c3)\n  impbii(wceq(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))), wa(wceq(csn(c0), csn(c2)), wceq(csn(c1), csn(c3))))\n  jcai(wceq(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))), wceq(csn(c0), csn(c2)), wceq(csn(c1), csn(c3)))\n  sylbi(wceq(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))), wceq(csn(c0), csn(c2)), wo(wa(wceq(csn(c0), csn(c2)), wceq(cpr(c0, csn(c1)), cpr(c2, csn(c3)))), wa(wceq(csn(c0), cpr(c2, csn(c3))), wceq(cpr(c0, csn(c1)), csn(c2)))))\n  preq12b(csn(c0), cpr(c0, csn(c1)), csn(c2), cpr(c2, csn(c3)))\n  snex(c0)\n  prex(c0, csn(c1))\n  snex(c2)\n  jaoi(wa(wceq(csn(c0), csn(c2)), wceq(cpr(c0, csn(c1)), cpr(c2, csn(c3)))), wa(wceq(csn(c0), cpr(c2, csn(c3))), wceq(cpr(c0, csn(c1)), csn(c2))), wceq(csn(c0), csn(c2)))\n  simpl(wceq(csn(c0), csn(c2)), wceq(cpr(c0, csn(c1)), cpr(c2, csn(c3))))\n  eqssd(csn(c0), csn(c2), wa(wceq(csn(c0), cpr(c2, csn(c3))), wceq(cpr(c0, csn(c1)), csn(c2))))\n  adantl(wceq(csn(c0), cpr(c2, csn(c3))), wceq(cpr(c0, csn(c1)), csn(c2)), wss(csn(c0), csn(c2)))\n  mpbii(wceq(cpr(c0, csn(c1)), csn(c2)), wss(csn(c0), csn(c2)), wss(csn(c0), cpr(c0, csn(c1))))\n  snsspr1(c0, csn(c1))\n  sseq2(cpr(c0, csn(c1)), csn(c2), csn(c0))\n  adantr(wceq(csn(c0), cpr(c2, csn(c3))), wceq(cpr(c0, csn(c1)), csn(c2)), wss(csn(c2), csn(c0)))\n  mpbiri(wceq(csn(c0), cpr(c2, csn(c3))), wss(csn(c2), csn(c0)), wss(csn(c2), cpr(c2, csn(c3))))\n  snsspr1(c2, csn(c3))\n  sseq2(csn(c0), cpr(c2, csn(c3)), csn(c2))\n  syl6com(wceq(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))), wceq(csn(c0), csn(c2)), wceq(csn(c1), csn(c3)), wceq(cpr(csn(c2), cpr(c2, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))))\n  biimpd(wceq(csn(c0), csn(c2)), wceq(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))), wceq(cpr(csn(c2), cpr(c2, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))))\n  eqeq1d(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3))), cpr(csn(c2), cpr(c2, csn(c1))), wceq(csn(c0), csn(c2)))\n  syl(wceq(cpr(csn(c2), cpr(c2, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3)))), wceq(csn(c1), csn(c3)), wceq(cpr(c2, csn(c1)), cpr(c2, csn(c3))))\n  preqr2(csn(c2), cpr(c2, csn(c1)), cpr(c2, csn(c3)))\n  prex(c2, csn(c1))\n  prex(c2, csn(c3))\n  preqr2(c2, csn(c1), csn(c3))\n  snex(c1)\n  snex(c3)\n  sylan9eq(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c3))), cpr(csn(c2), cpr(c2, csn(c1))), wceq(csn(c0), csn(c2)), wceq(csn(c1), csn(c3)))\n  eqtrd(cpr(csn(c0), cpr(c0, csn(c1))), cpr(csn(c2), cpr(c2, csn(c1))), cpr(csn(c0), cpr(c2, csn(c1))), wceq(csn(c0), csn(c2)))\n  preq2d(csn(c0), cpr(c0, csn(c1)), cpr(c2, csn(c1)), wceq(csn(c0), csn(c2)))\n  3eqtr4g(cpr(c0, csn(c1)), cpr(c2, csn(c1)), cun(csn(c0), csn(csn(c1))), cun(csn(c2), csn(csn(c1))), wceq(csn(c0), csn(c2)))\n  uneq1(csn(c0), csn(c2), csn(csn(c1)))\n  df-pr(c0, csn(c1))\n  df-pr(c2, csn(c1))\n  preq1(csn(c0), csn(c2), cpr(c2, csn(c1)))\n  preq2d(csn(c2), cpr(c2, csn(c1)), cpr(c2, csn(c3)), wceq(csn(c1), csn(c3)))\n  preq2(csn(c1), csn(c3), c2)\n}","pretty":"thm altopthsn(class c0, class c1, class c2, class c3) {\n  ‚ä¢ (<< c0, c1 >> = << c2, c3 >> ‚Üî({ c0 } = { c2 } ‚àß { c1 } = { c3 }))\n} = {\n  bitri(<< c0, c1 >> = << c2, c3 >>, ({ c0 } = { c2 } ‚àß { c1 } = { c3 }), { { c0 }, { c0, { c1 } } } = { { c2 }, { c2, { c3 } } })\n  eqeq12i(<< c0, c1 >>, << c2, c3 >>, { { c0 }, { c0, { c1 } } }, { { c2 }, { c2, { c3 } } })\n  df-altop(c0, c1)\n  df-altop(c2, c3)\n  impbii({ { c0 }, { c0, { c1 } } } = { { c2 }, { c2, { c3 } } }, ({ c0 } = { c2 } ‚àß { c1 } = { c3 }))\n  jcai({ { c0 }, { c0, { c1 } } } = { { c2 }, { c2, { c3 } } }, { c0 } = { c2 }, { c1 } = { c3 })\n  sylbi({ { c0 }, { c0, { c1 } } } = { { c2 }, { c2, { c3 } } }, { c0 } = { c2 }, (({ c0 } = { c2 } ‚àß { c0, { c1 } } = { c2, { c3 } })‚à®({ c0 } = { c2, { c3 } } ‚àß { c0, { c1 } } = { c2 })))\n  preq12b({ c0 }, { c0, { c1 } }, { c2 }, { c2, { c3 } })\n  snex(c0)\n  prex(c0, { c1 })\n  snex(c2)\n  jaoi(({ c0 } = { c2 } ‚àß { c0, { c1 } } = { c2, { c3 } }), ({ c0 } = { c2, { c3 } } ‚àß { c0, { c1 } } = { c2 }), { c0 } = { c2 })\n  simpl({ c0 } = { c2 }, { c0, { c1 } } = { c2, { c3 } })\n  eqssd({ c0 }, { c2 }, ({ c0 } = { c2, { c3 } } ‚àß { c0, { c1 } } = { c2 }))\n  adantl({ c0 } = { c2, { c3 } }, { c0, { c1 } } = { c2 }, { c0 } ‚äÜ { c2 })\n  mpbii({ c0, { c1 } } = { c2 }, { c0 } ‚äÜ { c2 }, { c0 } ‚äÜ { c0, { c1 } })\n  snsspr1(c0, { c1 })\n  sseq2({ c0, { c1 } }, { c2 }, { c0 })\n  adantr({ c0 } = { c2, { c3 } }, { c0, { c1 } } = { c2 }, { c2 } ‚äÜ { c0 })\n  mpbiri({ c0 } = { c2, { c3 } }, { c2 } ‚äÜ { c0 }, { c2 } ‚äÜ { c2, { c3 } })\n  snsspr1(c2, { c3 })\n  sseq2({ c0 }, { c2, { c3 } }, { c2 })\n  syl6com({ { c0 }, { c0, { c1 } } } = { { c2 }, { c2, { c3 } } }, { c0 } = { c2 }, { c1 } = { c3 }, { { c2 }, { c2, { c1 } } } = { { c2 }, { c2, { c3 } } })\n  biimpd({ c0 } = { c2 }, { { c0 }, { c0, { c1 } } } = { { c2 }, { c2, { c3 } } }, { { c2 }, { c2, { c1 } } } = { { c2 }, { c2, { c3 } } })\n  eqeq1d({ { c0 }, { c0, { c1 } } }, { { c2 }, { c2, { c3 } } }, { { c2 }, { c2, { c1 } } }, { c0 } = { c2 })\n  syl({ { c2 }, { c2, { c1 } } } = { { c2 }, { c2, { c3 } } }, { c1 } = { c3 }, { c2, { c1 } } = { c2, { c3 } })\n  preqr2({ c2 }, { c2, { c1 } }, { c2, { c3 } })\n  prex(c2, { c1 })\n  prex(c2, { c3 })\n  preqr2(c2, { c1 }, { c3 })\n  snex(c1)\n  snex(c3)\n  sylan9eq({ { c0 }, { c0, { c1 } } }, { { c2 }, { c2, { c3 } } }, { { c2 }, { c2, { c1 } } }, { c0 } = { c2 }, { c1 } = { c3 })\n  eqtrd({ { c0 }, { c0, { c1 } } }, { { c2 }, { c2, { c1 } } }, { { c0 }, { c2, { c1 } } }, { c0 } = { c2 })\n  preq2d({ c0 }, { c0, { c1 } }, { c2, { c1 } }, { c0 } = { c2 })\n  3eqtr4g({ c0, { c1 } }, { c2, { c1 } }, ({ c0 } ‚ãÉ { { c1 } }), ({ c2 } ‚ãÉ { { c1 } }), { c0 } = { c2 })\n  uneq1({ c0 }, { c2 }, { { c1 } })\n  df-pr(c0, { c1 })\n  df-pr(c2, { c1 })\n  preq1({ c0 }, { c2 }, { c2, { c1 } })\n  preq2d({ c2 }, { c2, { c1 } }, { c2, { c3 } }, { c1 } = { c3 })\n  preq2({ c1 }, { c3 }, c2)\n}","parent":["bitri","eqeq12i","df-altop","impbii","jcai","sylbi","preq12b","snex","prex","jaoi","simpl","eqssd","adantl","mpbii","snsspr1","sseq2","adantr","mpbiri","syl6com","biimpd","eqeq1d","syl","preqr2","sylan9eq","eqtrd","preq2d","3eqtr4g","uneq1","df-pr","preq1","preq2"],"children":["altopeq12","altopth1","altopth2","altopthg","altopthbg"]},{"name":"altopeq12","content":"Equality for alternate ordered pairs. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopeq12(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wceq(c0, c1), wceq(c2, c3)), wceq(caltop(c0, c2), caltop(c1, c3)))\n} = {\n  sylibr(wa(wceq(c0, c1), wceq(c2, c3)), wceq(caltop(c0, c2), caltop(c1, c3)), wa(wceq(csn(c0), csn(c1)), wceq(csn(c2), csn(c3))))\n  anim12i(wceq(c0, c1), wceq(c2, c3), wceq(csn(c0), csn(c1)), wceq(csn(c2), csn(c3)))\n  sneq(c0, c1)\n  sneq(c2, c3)\n  altopthsn(c0, c2, c1, c3)\n}","pretty":"thm altopeq12(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 = c1 ‚àß c2 = c3)‚Üí << c0, c2 >> = << c1, c3 >>)\n} = {\n  sylibr((c0 = c1 ‚àß c2 = c3), << c0, c2 >> = << c1, c3 >>, ({ c0 } = { c1 } ‚àß { c2 } = { c3 }))\n  anim12i(c0 = c1, c2 = c3, { c0 } = { c1 }, { c2 } = { c3 })\n  sneq(c0, c1)\n  sneq(c2, c3)\n  altopthsn(c0, c2, c1, c3)\n}","parent":["sylibr","anim12i","sneq","altopthsn"],"children":["altopeq1","altopeq2"]},{"name":"altopeq1","content":"Equality for alternate ordered pairs. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopeq1(class c0, class c1, class c2) {\n  |- wi(wceq(c0, c1), wceq(caltop(c0, c2), caltop(c1, c2)))\n} = {\n  mpan2(wceq(c0, c1), wceq(caltop(c0, c2), caltop(c1, c2)), wceq(c2, c2))\n  eqid(c2)\n  altopeq12(c0, c1, c2, c2)\n}","pretty":"thm altopeq1(class c0, class c1, class c2) {\n  ‚ä¢ (c0 = c1 ‚Üí << c0, c2 >> = << c1, c2 >>)\n} = {\n  mpan2(c0 = c1, << c0, c2 >> = << c1, c2 >>, c2 = c2)\n  eqid(c2)\n  altopeq12(c0, c1, c2, c2)\n}","parent":["mpan2","eqid","altopeq12"],"children":["sbcaltop"]},{"name":"altopeq2","content":"Equality for alternate ordered pairs. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopeq2(class c0, class c1, class c2) {\n  |- wi(wceq(c0, c1), wceq(caltop(c2, c0), caltop(c2, c1)))\n} = {\n  mpan(wceq(c0, c1), wceq(caltop(c2, c0), caltop(c2, c1)), wceq(c2, c2))\n  eqid(c2)\n  altopeq12(c2, c2, c0, c1)\n}","pretty":"thm altopeq2(class c0, class c1, class c2) {\n  ‚ä¢ (c0 = c1 ‚Üí << c2, c0 >> = << c2, c1 >>)\n} = {\n  mpan(c0 = c1, << c2, c0 >> = << c2, c1 >>, c2 = c2)\n  eqid(c2)\n  altopeq12(c2, c2, c0, c1)\n}","parent":["mpan","eqid","altopeq12"],"children":["sbcaltop"]},{"name":"altopth1","content":"Equality of the first members of equal alternate ordered pairs, which holds regardless of the second members' sethood. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopth1(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wi(wceq(caltop(c0, c2), caltop(c3, c4)), wceq(c0, c3)))\n} = {\n  syl5bi(wcel(c0, c1), wceq(caltop(c0, c2), caltop(c3, c4)), wceq(c0, c3), wa(wceq(csn(c0), csn(c3)), wceq(csn(c2), csn(c4))))\n  altopthsn(c0, c2, c3, c4)\n  adantrd(wcel(c0, c1), wceq(csn(c0), csn(c3)), wceq(csn(c2), csn(c4)), wceq(c0, c3))\n  sneqrg(c0, c1, c3)\n}","pretty":"thm altopth1(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ (c0 ‚àà c1 ‚Üí(<< c0, c2 >> = << c3, c4 >> ‚Üí c0 = c3))\n} = {\n  syl5bi(c0 ‚àà c1, << c0, c2 >> = << c3, c4 >>, c0 = c3, ({ c0 } = { c3 } ‚àß { c2 } = { c4 }))\n  altopthsn(c0, c2, c3, c4)\n  adantrd(c0 ‚àà c1, { c0 } = { c3 }, { c2 } = { c4 }, c0 = c3)\n  sneqrg(c0, c1, c3)\n}","parent":["syl5bi","altopthsn","adantrd","sneqrg"],"children":[]},{"name":"altopth2","content":"Equality of the second members of equal alternate ordered pairs, which holds regardless of the first members' sethood. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopth2(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wi(wceq(caltop(c2, c0), caltop(c3, c4)), wceq(c0, c4)))\n} = {\n  syl5bi(wcel(c0, c1), wceq(caltop(c2, c0), caltop(c3, c4)), wceq(c0, c4), wa(wceq(csn(c2), csn(c3)), wceq(csn(c0), csn(c4))))\n  altopthsn(c2, c0, c3, c4)\n  adantld(wcel(c0, c1), wceq(csn(c2), csn(c3)), wceq(csn(c0), csn(c4)), wceq(c0, c4))\n  sneqrg(c0, c1, c4)\n}","pretty":"thm altopth2(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ (c0 ‚àà c1 ‚Üí(<< c2, c0 >> = << c3, c4 >> ‚Üí c0 = c4))\n} = {\n  syl5bi(c0 ‚àà c1, << c2, c0 >> = << c3, c4 >>, c0 = c4, ({ c2 } = { c3 } ‚àß { c0 } = { c4 }))\n  altopthsn(c2, c0, c3, c4)\n  adantld(c0 ‚àà c1, { c2 } = { c3 }, { c0 } = { c4 }, c0 = c4)\n  sneqrg(c0, c1, c4)\n}","parent":["syl5bi","altopthsn","adantld","sneqrg"],"children":[]},{"name":"altopthg","content":"Alternate ordered pair theorem. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopthg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wceq(caltop(c0, c2), caltop(c4, c5)), wa(wceq(c0, c4), wceq(c2, c5))))\n} = {\n  syl5bb(wa(wcel(c0, c1), wcel(c2, c3)), wceq(caltop(c0, c2), caltop(c4, c5)), wa(wceq(c0, c4), wceq(c2, c5)), wa(wceq(csn(c0), csn(c4)), wceq(csn(c2), csn(c5))))\n  altopthsn(c0, c2, c4, c5)\n  bi2anan9(wcel(c0, c1), wcel(c2, c3), wceq(csn(c0), csn(c4)), wceq(csn(c2), csn(c5)), wceq(c0, c4), wceq(c2, c5))\n  sneqbg(c0, c1, c4)\n  sneqbg(c2, c3, c5)\n}","pretty":"thm altopthg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(<< c0, c2 >> = << c4, c5 >> ‚Üî(c0 = c4 ‚àß c2 = c5)))\n} = {\n  syl5bb((c0 ‚àà c1 ‚àß c2 ‚àà c3), << c0, c2 >> = << c4, c5 >>, (c0 = c4 ‚àß c2 = c5), ({ c0 } = { c4 } ‚àß { c2 } = { c5 }))\n  altopthsn(c0, c2, c4, c5)\n  bi2anan9(c0 ‚àà c1, c2 ‚àà c3, { c0 } = { c4 }, { c2 } = { c5 }, c0 = c4, c2 = c5)\n  sneqbg(c0, c1, c4)\n  sneqbg(c2, c3, c5)\n}","parent":["syl5bb","altopthsn","bi2anan9","sneqbg"],"children":["altopth"]},{"name":"altopthbg","content":"Alternate ordered pair theorem. (Contributed by Scott Fenton, 14-Apr-2012.)","origin":"thm altopthbg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wb(wceq(caltop(c0, c4), caltop(c5, c2)), wa(wceq(c0, c5), wceq(c4, c2))))\n} = {\n  syl5bb(wa(wcel(c0, c1), wcel(c2, c3)), wceq(caltop(c0, c4), caltop(c5, c2)), wa(wceq(c0, c5), wceq(c4, c2)), wa(wceq(csn(c0), csn(c5)), wceq(csn(c4), csn(c2))))\n  altopthsn(c0, c4, c5, c2)\n  bi2anan9(wcel(c0, c1), wcel(c2, c3), wceq(csn(c0), csn(c5)), wceq(csn(c4), csn(c2)), wceq(c0, c5), wceq(c4, c2))\n  sneqbg(c0, c1, c5)\n  3bitr4g(wcel(c2, c3), wceq(csn(c4), csn(c2)), wceq(c4, c2), wceq(csn(c2), csn(c4)), wceq(c2, c4))\n  sneqbg(c2, c3, c4)\n  eqcom(csn(c4), csn(c2))\n  eqcom(c4, c2)\n}","pretty":"thm altopthbg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(<< c0, c4 >> = << c5, c2 >> ‚Üî(c0 = c5 ‚àß c4 = c2)))\n} = {\n  syl5bb((c0 ‚àà c1 ‚àß c2 ‚àà c3), << c0, c4 >> = << c5, c2 >>, (c0 = c5 ‚àß c4 = c2), ({ c0 } = { c5 } ‚àß { c4 } = { c2 }))\n  altopthsn(c0, c4, c5, c2)\n  bi2anan9(c0 ‚àà c1, c2 ‚àà c3, { c0 } = { c5 }, { c4 } = { c2 }, c0 = c5, c4 = c2)\n  sneqbg(c0, c1, c5)\n  3bitr4g(c2 ‚àà c3, { c4 } = { c2 }, c4 = c2, { c2 } = { c4 }, c2 = c4)\n  sneqbg(c2, c3, c4)\n  eqcom({ c4 }, { c2 })\n  eqcom(c4, c2)\n}","parent":["syl5bb","altopthsn","bi2anan9","sneqbg","3bitr4g","eqcom"],"children":["altopthb"]},{"name":"altopth","content":"The alternate ordered pair theorem. If two alternate ordered pairs are equal, their first elements are equal and their second elements are equal. Note that ` C ` and ` D ` are not required to be a set due to a peculiarity of our specific ordered pair definition, as opposed to the regular ordered pairs used here, which (as in ~ opth ), requires ` D ` to be a set. (Contributed by Scott Fenton, 23-Mar-2012.)","origin":"thm altopth(class c0, class c1, class c2, class c3) {\n  |- wb(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3)))\n  -| wcel(c0, universe)\n  -| wcel(c1, universe)\n} = {\n  mp2an(wb(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3))), wcel(c0, universe), wcel(c1, universe))\n  altopthg(c0, universe, c1, universe, c2, c3)\n}","pretty":"thm altopth(class c0, class c1, class c2, class c3) {\n  ‚ä¢ (<< c0, c1 >> = << c2, c3 >> ‚Üî(c0 = c2 ‚àß c1 = c3))\n  ‚ä£ c0 ‚àà ùïå\n  ‚ä£ c1 ‚àà ùïå\n} = {\n  mp2an((<< c0, c1 >> = << c2, c3 >> ‚Üî(c0 = c2 ‚àß c1 = c3)), c0 ‚àà ùïå, c1 ‚àà ùïå)\n  altopthg(c0, universe, c1, universe, c2, c3)\n}","parent":["mp2an","altopthg"],"children":["altopthd","altopelaltxp"]},{"name":"altopthb","content":"Alternate ordered pair theorem with different sethood requirements. See ~ altopth for more comments. (Contributed by Scott Fenton, 14-Apr-2012.)","origin":"thm altopthb(class c0, class c1, class c2, class c3) {\n  |- wb(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3)))\n  -| wcel(c0, universe)\n  -| wcel(c3, universe)\n} = {\n  mp2an(wb(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3))), wcel(c0, universe), wcel(c3, universe))\n  altopthbg(c0, universe, c3, universe, c1, c2)\n}","pretty":"thm altopthb(class c0, class c1, class c2, class c3) {\n  ‚ä¢ (<< c0, c1 >> = << c2, c3 >> ‚Üî(c0 = c2 ‚àß c1 = c3))\n  ‚ä£ c0 ‚àà ùïå\n  ‚ä£ c3 ‚àà ùïå\n} = {\n  mp2an((<< c0, c1 >> = << c2, c3 >> ‚Üî(c0 = c2 ‚àß c1 = c3)), c0 ‚àà ùïå, c3 ‚àà ùïå)\n  altopthbg(c0, universe, c3, universe, c1, c2)\n}","parent":["mp2an","altopthbg"],"children":["altopthc"]},{"name":"altopthc","content":"Alternate ordered pair theorem with different sethood requirements. See ~ altopth for more comments. (Contributed by Scott Fenton, 14-Apr-2012.)","origin":"thm altopthc(class c0, class c1, class c2, class c3) {\n  |- wb(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3)))\n  -| wcel(c1, universe)\n  -| wcel(c2, universe)\n} = {\n  3bitri(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3)), wceq(caltop(c2, c3), caltop(c0, c1)), wa(wceq(c2, c0), wceq(c3, c1)))\n  eqcom(caltop(c0, c1), caltop(c2, c3))\n  altopthb(c2, c3, c0, c1)\n  anbi12i(wceq(c2, c0), wceq(c3, c1), wceq(c0, c2), wceq(c1, c3))\n  eqcom(c2, c0)\n  eqcom(c3, c1)\n}","pretty":"thm altopthc(class c0, class c1, class c2, class c3) {\n  ‚ä¢ (<< c0, c1 >> = << c2, c3 >> ‚Üî(c0 = c2 ‚àß c1 = c3))\n  ‚ä£ c1 ‚àà ùïå\n  ‚ä£ c2 ‚àà ùïå\n} = {\n  3bitri(<< c0, c1 >> = << c2, c3 >>, (c0 = c2 ‚àß c1 = c3), << c2, c3 >> = << c0, c1 >>, (c2 = c0 ‚àß c3 = c1))\n  eqcom(<< c0, c1 >>, << c2, c3 >>)\n  altopthb(c2, c3, c0, c1)\n  anbi12i(c2 = c0, c3 = c1, c0 = c2, c1 = c3)\n  eqcom(c2, c0)\n  eqcom(c3, c1)\n}","parent":["3bitri","eqcom","altopthb","anbi12i"],"children":[]},{"name":"altopthd","content":"Alternate ordered pair theorem with different sethood requirements. See ~ altopth for more comments. (Contributed by Scott Fenton, 14-Apr-2012.)","origin":"thm altopthd(class c0, class c1, class c2, class c3) {\n  |- wb(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3)))\n  -| wcel(c2, universe)\n  -| wcel(c3, universe)\n} = {\n  3bitri(wceq(caltop(c0, c1), caltop(c2, c3)), wa(wceq(c0, c2), wceq(c1, c3)), wceq(caltop(c2, c3), caltop(c0, c1)), wa(wceq(c2, c0), wceq(c3, c1)))\n  eqcom(caltop(c0, c1), caltop(c2, c3))\n  altopth(c2, c3, c0, c1)\n  anbi12i(wceq(c2, c0), wceq(c3, c1), wceq(c0, c2), wceq(c1, c3))\n  eqcom(c2, c0)\n  eqcom(c3, c1)\n}","pretty":"thm altopthd(class c0, class c1, class c2, class c3) {\n  ‚ä¢ (<< c0, c1 >> = << c2, c3 >> ‚Üî(c0 = c2 ‚àß c1 = c3))\n  ‚ä£ c2 ‚àà ùïå\n  ‚ä£ c3 ‚àà ùïå\n} = {\n  3bitri(<< c0, c1 >> = << c2, c3 >>, (c0 = c2 ‚àß c1 = c3), << c2, c3 >> = << c0, c1 >>, (c2 = c0 ‚àß c3 = c1))\n  eqcom(<< c0, c1 >>, << c2, c3 >>)\n  altopth(c2, c3, c0, c1)\n  anbi12i(c2 = c0, c3 = c1, c0 = c2, c1 = c3)\n  eqcom(c2, c0)\n  eqcom(c3, c1)\n}","parent":["3bitri","eqcom","altopth","anbi12i"],"children":[]},{"name":"altxpeq1","content":"Equality for alternate Cartesian products. (Contributed by Scott Fenton, 24-Mar-2012.)","origin":"thm altxpeq1(class c0, class c1, class c2) {\n  |- wi(wceq(c0, c1), wceq(caltxp(c0, c2), caltxp(c1, c2)))\n} = {\n  3eqtr4g(caltxp(c0, c2), caltxp(c1, c2), cab(hs0, wrex(hs1, c0, wrex(hs2, c2, wceq(cv(hs0), caltop(cv(hs1), cv(hs2)))))), cab(hs0, wrex(hs1, c1, wrex(hs2, c2, wceq(cv(hs0), caltop(cv(hs1), cv(hs2)))))), wceq(c0, c1))\n  abbidv(hs0, wceq(c0, c1), wrex(hs1, c0, wrex(hs2, c2, wceq(cv(hs0), caltop(cv(hs1), cv(hs2))))), wrex(hs1, c1, wrex(hs2, c2, wceq(cv(hs0), caltop(cv(hs1), cv(hs2))))))\n  rexeq(hs1, c0, c1, wrex(hs2, c2, wceq(cv(hs0), caltop(cv(hs1), cv(hs2)))))\n  df-altxp(hs0, hs1, hs2, c0, c2)\n  df-altxp(hs0, hs1, hs2, c1, c2)\n  diff.hs0.w(wceq(c0, c1))\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs1.s(hs2)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs2.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.c(c2)\n  diff.hs2.c(c2)\n  diff.hs0.c(c2)\n  diff.hs2.c(c1)\n  diff.hs0.c(c1)\n}","pretty":"thm altxpeq1(class c0, class c1, class c2) {\n  ‚ä¢ (c0 = c1 ‚Üí(c0 XX. c2)=(c1 XX. c2))\n} = {\n  3eqtr4g((c0 XX. c2), (c1 XX. c2), { hs0 | ‚àÉ(hs1 ‚àà c0, ‚àÉ(hs2 ‚àà c2, hs0 = << hs1, hs2 >>))}, { hs0 | ‚àÉ(hs1 ‚àà c1, ‚àÉ(hs2 ‚àà c2, hs0 = << hs1, hs2 >>))}, c0 = c1)\n  abbidv(hs0, c0 = c1, ‚àÉ(hs1 ‚àà c0, ‚àÉ(hs2 ‚àà c2, hs0 = << hs1, hs2 >>)), ‚àÉ(hs1 ‚àà c1, ‚àÉ(hs2 ‚àà c2, hs0 = << hs1, hs2 >>)))\n  rexeq(hs1, c0, c1, ‚àÉ(hs2 ‚àà c2, hs0 = << hs1, hs2 >>))\n  df-altxp(hs0, hs1, hs2, c0, c2)\n  df-altxp(hs0, hs1, hs2, c1, c2)\n  diff.hs0.w(c0 = c1)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs1.s(hs2)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs2.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.c(c2)\n  diff.hs2.c(c2)\n  diff.hs0.c(c2)\n  diff.hs2.c(c1)\n  diff.hs0.c(c1)\n}","parent":["3eqtr4g","abbidv","rexeq","df-altxp","diff.hs0.w","diff.hs1.c","diff.hs1.s","diff.hs0.s","diff.hs2.c","diff.hs0.c"],"children":[]},{"name":"altxpeq2","content":"Equality for alternate Cartesian products. (Contributed by Scott Fenton, 24-Mar-2012.)","origin":"thm altxpeq2(class c0, class c1, class c2) {\n  |- wi(wceq(c0, c1), wceq(caltxp(c2, c0), caltxp(c2, c1)))\n} = {\n  3eqtr4g(caltxp(c2, c0), caltxp(c2, c1), cab(hs0, wrex(hs1, c2, wrex(hs2, c0, wceq(cv(hs0), caltop(cv(hs1), cv(hs2)))))), cab(hs0, wrex(hs1, c2, wrex(hs2, c1, wceq(cv(hs0), caltop(cv(hs1), cv(hs2)))))), wceq(c0, c1))\n  abbidv(hs0, wceq(c0, c1), wrex(hs1, c2, wrex(hs2, c0, wceq(cv(hs0), caltop(cv(hs1), cv(hs2))))), wrex(hs1, c2, wrex(hs2, c1, wceq(cv(hs0), caltop(cv(hs1), cv(hs2))))))\n  rexbidv(hs1, c2, wceq(c0, c1), wrex(hs2, c0, wceq(cv(hs0), caltop(cv(hs1), cv(hs2)))), wrex(hs2, c1, wceq(cv(hs0), caltop(cv(hs1), cv(hs2)))))\n  rexeq(hs2, c0, c1, wceq(cv(hs0), caltop(cv(hs1), cv(hs2))))\n  df-altxp(hs0, hs1, hs2, c2, c0)\n  df-altxp(hs0, hs1, hs2, c2, c1)\n  diff.hs0.w(wceq(c0, c1))\n  diff.hs1.w(wceq(c0, c1))\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.s(hs2)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.c(c2)\n  diff.hs2.c(c2)\n  diff.hs0.c(c2)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c1)\n}","pretty":"thm altxpeq2(class c0, class c1, class c2) {\n  ‚ä¢ (c0 = c1 ‚Üí(c2 XX. c0)=(c2 XX. c1))\n} = {\n  3eqtr4g((c2 XX. c0), (c2 XX. c1), { hs0 | ‚àÉ(hs1 ‚àà c2, ‚àÉ(hs2 ‚àà c0, hs0 = << hs1, hs2 >>))}, { hs0 | ‚àÉ(hs1 ‚àà c2, ‚àÉ(hs2 ‚àà c1, hs0 = << hs1, hs2 >>))}, c0 = c1)\n  abbidv(hs0, c0 = c1, ‚àÉ(hs1 ‚àà c2, ‚àÉ(hs2 ‚àà c0, hs0 = << hs1, hs2 >>)), ‚àÉ(hs1 ‚àà c2, ‚àÉ(hs2 ‚àà c1, hs0 = << hs1, hs2 >>)))\n  rexbidv(hs1, c2, c0 = c1, ‚àÉ(hs2 ‚àà c0, hs0 = << hs1, hs2 >>), ‚àÉ(hs2 ‚àà c1, hs0 = << hs1, hs2 >>))\n  rexeq(hs2, c0, c1, hs0 = << hs1, hs2 >>)\n  df-altxp(hs0, hs1, hs2, c2, c0)\n  df-altxp(hs0, hs1, hs2, c2, c1)\n  diff.hs0.w(c0 = c1)\n  diff.hs1.w(c0 = c1)\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.s(hs2)\n  diff.hs0.s(hs1)\n  diff.hs0.s(hs2)\n  diff.hs1.c(c2)\n  diff.hs2.c(c2)\n  diff.hs0.c(c2)\n  diff.hs1.c(c0)\n  diff.hs0.c(c0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c1)\n}","parent":["3eqtr4g","abbidv","rexbidv","rexeq","df-altxp","diff.hs0.w","diff.hs1.w","diff.hs2.c","diff.hs1.s","diff.hs0.s","diff.hs1.c","diff.hs0.c"],"children":[]},{"name":"elaltxp","content":"Membership in alternate Cartesian products. (Contributed by Scott Fenton, 23-Mar-2012.)","origin":"thm elaltxp(setvar s0, setvar s1, class c0, class c1, class c2) {\n  |- wb(wcel(c0, caltxp(c1, c2)), wrex(s0, c1, wrex(s1, c2, wceq(c0, caltop(cv(s0), cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n} = {\n  pm5.21nii(wcel(c0, caltxp(c1, c2)), wrex(s0, c1, wrex(s1, c2, wceq(c0, caltop(cv(s0), cv(s1))))), wcel(c0, universe))\n  elex(c0, caltxp(c1, c2))\n  rexlimivv(s0, s1, c1, c2, wceq(c0, caltop(cv(s0), cv(s1))), wcel(c0, universe))\n  a1i(wa(wcel(cv(s0), c1), wcel(cv(s1), c2)), wi(wceq(c0, caltop(cv(s0), cv(s1))), wcel(c0, universe)))\n  mpbiri(wceq(c0, caltop(cv(s0), cv(s1))), wcel(c0, universe), wcel(caltop(cv(s0), cv(s1)), universe))\n  altopex(cv(s0), cv(s1))\n  eleq1(c0, caltop(cv(s0), cv(s1)), universe)\n  elab2g(hs0, c0, universe, caltxp(c1, c2), wrex(s0, c1, wrex(s1, c2, wceq(c0, caltop(cv(s0), cv(s1))))), wrex(s0, c1, wrex(s1, c2, wceq(cv(hs0), caltop(cv(s0), cv(s1))))))\n  2rexbidv(s0, s1, c1, c2, wceq(cv(hs0), c0), wceq(cv(hs0), caltop(cv(s0), cv(s1))), wceq(c0, caltop(cv(s0), cv(s1))))\n  eqeq1(cv(hs0), c0, caltop(cv(s0), cv(s1)))\n  df-altxp(hs0, s0, s1, c1, c2)\n  diff.wcel.s(s0, c0, universe)\n  diff.universe.s(s0)\n  diff.wcel.s(s1, c0, universe)\n  diff.universe.s(s1)\n  diff.hs0.c(c0)\n  diff.hs0.w(wrex(s0, c1, wrex(s1, c2, wceq(c0, caltop(cv(s0), cv(s1))))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s1, cv(hs0), c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.s(s1)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n}","pretty":"thm elaltxp(setvar s0, setvar s1, class c0, class c1, class c2) {\n  ‚ä¢ (c0 ‚àà(c1 XX. c2)‚Üî ‚àÉ(s0 ‚àà c1, ‚àÉ(s1 ‚àà c2, c0 = << s0, s1 >>)))\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s1, c2)\n} = {\n  pm5.21nii(c0 ‚àà(c1 XX. c2), ‚àÉ(s0 ‚àà c1, ‚àÉ(s1 ‚àà c2, c0 = << s0, s1 >>)), c0 ‚àà ùïå)\n  elex(c0, (c1 XX. c2))\n  rexlimivv(s0, s1, c1, c2, c0 = << s0, s1 >>, c0 ‚àà ùïå)\n  a1i((s0 ‚àà c1 ‚àß s1 ‚àà c2), (c0 = << s0, s1 >> ‚Üí c0 ‚àà ùïå))\n  mpbiri(c0 = << s0, s1 >>, c0 ‚àà ùïå, << s0, s1 >> ‚àà ùïå)\n  altopex(s0, s1)\n  eleq1(c0, << s0, s1 >>, universe)\n  elab2g(hs0, c0, universe, (c1 XX. c2), ‚àÉ(s0 ‚àà c1, ‚àÉ(s1 ‚àà c2, c0 = << s0, s1 >>)), ‚àÉ(s0 ‚àà c1, ‚àÉ(s1 ‚àà c2, hs0 = << s0, s1 >>)))\n  2rexbidv(s0, s1, c1, c2, hs0 = c0, hs0 = << s0, s1 >>, c0 = << s0, s1 >>)\n  eqeq1(hs0, c0, << s0, s1 >>)\n  df-altxp(hs0, s0, s1, c1, c2)\n  diff.wcel.s(s0, c0, universe)\n  diff.universe.s(s0)\n  diff.wcel.s(s1, c0, universe)\n  diff.universe.s(s1)\n  diff.hs0.c(c0)\n  diff.hs0.w(‚àÉ(s0 ‚àà c1, ‚àÉ(s1 ‚àà c2, c0 = << s0, s1 >>)))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s1, hs0, c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.s(s1)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n}","parent":["pm5.21nii","elex","rexlimivv","a1i","mpbiri","altopex","eleq1","elab2g","2rexbidv","eqeq1","df-altxp","diff.wcel.s","diff.universe.s","diff.hs0.c","diff.hs0.w","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["altopelaltxp","altxpsspw"]},{"name":"altopelaltxp","content":"Alternate ordered pair membership in a Cartesian product. Note that, unlike ~ opelxp , there is no sethood requirement here. (Contributed by Scott Fenton, 22-Mar-2012.)","origin":"thm altopelaltxp(class c0, class c1, class c2, class c3) {\n  |- wb(wcel(caltop(c0, c1), caltxp(c2, c3)), wa(wcel(c0, c2), wcel(c1, c3)))\n} = {\n  bitri(wcel(caltop(c0, c1), caltxp(c2, c3)), wa(wcel(c0, c2), wcel(c1, c3)), wrex(hs0, c2, wrex(hs1, c3, wceq(caltop(c0, c1), caltop(cv(hs0), cv(hs1))))))\n  elaltxp(hs0, hs1, caltop(c0, c1), c2, c3)\n  3bitr4i(wrex(hs0, c2, wrex(hs1, c3, wceq(caltop(c0, c1), caltop(cv(hs0), cv(hs1))))), wa(wcel(c0, c2), wcel(c1, c3)), wrex(hs0, c2, wrex(hs1, c3, wa(wceq(cv(hs0), c0), wceq(cv(hs1), c1)))), wa(wrex(hs0, c2, wceq(cv(hs0), c0)), wrex(hs1, c3, wceq(cv(hs1), c1))))\n  reeanv(hs0, hs1, c2, c3, wceq(cv(hs0), c0), wceq(cv(hs1), c1))\n  2rexbii(hs0, hs1, c2, c3, wceq(caltop(c0, c1), caltop(cv(hs0), cv(hs1))), wa(wceq(cv(hs0), c0), wceq(cv(hs1), c1)))\n  bitri(wceq(caltop(c0, c1), caltop(cv(hs0), cv(hs1))), wa(wceq(cv(hs0), c0), wceq(cv(hs1), c1)), wceq(caltop(cv(hs0), cv(hs1)), caltop(c0, c1)))\n  eqcom(caltop(c0, c1), caltop(cv(hs0), cv(hs1)))\n  altopth(cv(hs0), cv(hs1), c0, c1)\n  vex(hs0)\n  vex(hs1)\n  anbi12i(wcel(c0, c2), wcel(c1, c3), wrex(hs0, c2, wceq(cv(hs0), c0)), wrex(hs1, c3, wceq(cv(hs1), c1)))\n  risset(hs0, c0, c2)\n  risset(hs1, c1, c3)\n  diff.hs0.s(hs1)\n  diff.hs0.c(caltop(c0, c1))\n  diff.hs0.c(c2)\n  diff.hs0.c(c3)\n  diff.hs1.c(caltop(c0, c1))\n  diff.hs1.c(c2)\n  diff.hs1.c(c3)\n  diff.hs0.w(wceq(cv(hs1), c1))\n  diff.hs1.w(wceq(cv(hs0), c0))\n  diff.hs0.c(c0)\n  diff.hs1.c(c1)\n}","pretty":"thm altopelaltxp(class c0, class c1, class c2, class c3) {\n  ‚ä¢ (<< c0, c1 >> ‚àà(c2 XX. c3)‚Üî(c0 ‚àà c2 ‚àß c1 ‚àà c3))\n} = {\n  bitri(<< c0, c1 >> ‚àà(c2 XX. c3), (c0 ‚àà c2 ‚àß c1 ‚àà c3), ‚àÉ(hs0 ‚àà c2, ‚àÉ(hs1 ‚àà c3, << c0, c1 >> = << hs0, hs1 >>)))\n  elaltxp(hs0, hs1, << c0, c1 >>, c2, c3)\n  3bitr4i(‚àÉ(hs0 ‚àà c2, ‚àÉ(hs1 ‚àà c3, << c0, c1 >> = << hs0, hs1 >>)), (c0 ‚àà c2 ‚àß c1 ‚àà c3), ‚àÉ(hs0 ‚àà c2, ‚àÉ(hs1 ‚àà c3,(hs0 = c0 ‚àß hs1 = c1))), (‚àÉ(hs0 ‚àà c2, hs0 = c0)‚àß ‚àÉ(hs1 ‚àà c3, hs1 = c1)))\n  reeanv(hs0, hs1, c2, c3, hs0 = c0, hs1 = c1)\n  2rexbii(hs0, hs1, c2, c3, << c0, c1 >> = << hs0, hs1 >>, (hs0 = c0 ‚àß hs1 = c1))\n  bitri(<< c0, c1 >> = << hs0, hs1 >>, (hs0 = c0 ‚àß hs1 = c1), << hs0, hs1 >> = << c0, c1 >>)\n  eqcom(<< c0, c1 >>, << hs0, hs1 >>)\n  altopth(hs0, hs1, c0, c1)\n  vex(hs0)\n  vex(hs1)\n  anbi12i(c0 ‚àà c2, c1 ‚àà c3, ‚àÉ(hs0 ‚àà c2, hs0 = c0), ‚àÉ(hs1 ‚àà c3, hs1 = c1))\n  risset(hs0, c0, c2)\n  risset(hs1, c1, c3)\n  diff.hs0.s(hs1)\n  diff.hs0.c(<< c0, c1 >>)\n  diff.hs0.c(c2)\n  diff.hs0.c(c3)\n  diff.hs1.c(<< c0, c1 >>)\n  diff.hs1.c(c2)\n  diff.hs1.c(c3)\n  diff.hs0.w(hs1 = c1)\n  diff.hs1.w(hs0 = c0)\n  diff.hs0.c(c0)\n  diff.hs1.c(c1)\n}","parent":["bitri","elaltxp","3bitr4i","reeanv","2rexbii","eqcom","altopth","vex","anbi12i","risset","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs0.w","diff.hs1.w"],"children":[]},{"name":"altxpsspw","content":"An inclusion rule for alternate Cartesian products. (Contributed by Scott Fenton, 24-Mar-2012.)","origin":"thm altxpsspw(class c0, class c1) {\n  |- wss(caltxp(c0, c1), cpw(cpw(cun(c0, cpw(c1)))))\n} = {\n  ssriv(hs0, caltxp(c0, c1), cpw(cpw(cun(c0, cpw(c1)))))\n  sylbi(wcel(cv(hs0), caltxp(c0, c1)), wcel(cv(hs0), cpw(cpw(cun(c0, cpw(c1))))), wrex(hs1, c0, wrex(hs2, c1, wceq(cv(hs0), caltop(cv(hs1), cv(hs2))))))\n  elaltxp(hs1, hs2, cv(hs0), c0, c1)\n  rexlimivv(hs1, hs2, c0, c1, wceq(cv(hs0), caltop(cv(hs1), cv(hs2))), wcel(cv(hs0), cpw(cpw(cun(c0, cpw(c1))))))\n  syl(wa(wcel(cv(hs1), c0), wcel(cv(hs2), c1)), wi(wceq(cv(hs0), caltop(cv(hs1), cv(hs2))), wcel(cv(hs0), cpw(cpw(cun(c0, cpw(c1)))))), wcel(caltop(cv(hs1), cv(hs2)), cpw(cpw(cun(c0, cpw(c1))))))\n  syl5eqel(caltop(cv(hs1), cv(hs2)), cpw(cpw(cun(c0, cpw(c1)))), cpr(csn(cv(hs1)), cpr(cv(hs1), csn(cv(hs2)))), wa(wcel(cv(hs1), c0), wcel(cv(hs2), c1)))\n  df-altop(cv(hs1), cv(hs2))\n  sylanbrc(wa(wcel(cv(hs1), c0), wcel(cv(hs2), c1)), wcel(cpr(csn(cv(hs1)), cpr(cv(hs1), csn(cv(hs2)))), cpw(cpw(cun(c0, cpw(c1))))), wss(csn(cv(hs1)), cun(c0, cpw(c1))), wss(cpr(cv(hs1), csn(cv(hs2))), cun(c0, cpw(c1))))\n  adantr(wcel(cv(hs1), c0), wcel(cv(hs2), c1), wss(csn(cv(hs1)), cun(c0, cpw(c1))))\n  syl(wcel(cv(hs1), c0), wss(csn(cv(hs1)), cun(c0, cpw(c1))), wss(csn(cv(hs1)), c0))\n  snssi(cv(hs1), c0)\n  ssun3(csn(cv(hs1)), c0, cpw(c1))\n  sylib(wa(wcel(cv(hs1), c0), wcel(cv(hs2), c1)), wss(cpr(cv(hs1), csn(cv(hs2))), cun(c0, cpw(c1))), wa(wcel(cv(hs1), cun(c0, cpw(c1))), wcel(csn(cv(hs2)), cun(c0, cpw(c1)))))\n  anim12i(wcel(cv(hs1), c0), wcel(cv(hs2), c1), wcel(cv(hs1), cun(c0, cpw(c1))), wcel(csn(cv(hs2)), cun(c0, cpw(c1))))\n  elun1(cv(hs1), c0, cpw(c1))\n  syl(wcel(cv(hs2), c1), wcel(csn(cv(hs2)), cun(c0, cpw(c1))), wss(csn(cv(hs2)), c1))\n  snssi(cv(hs2), c1)\n  sylbir(wss(csn(cv(hs2)), c1), wcel(csn(cv(hs2)), cun(c0, cpw(c1))), wcel(csn(cv(hs2)), cpw(c1)))\n  elpw(csn(cv(hs2)), c1)\n  elun2(csn(cv(hs2)), cpw(c1), c0)\n  prss(cv(hs1), cun(c0, cpw(c1)), csn(cv(hs2)))\n  vex(hs1)\n  snex(cv(hs2))\n  bitri(wcel(cpr(csn(cv(hs1)), cpr(cv(hs1), csn(cv(hs2)))), cpw(cpw(cun(c0, cpw(c1))))), wa(wss(csn(cv(hs1)), cun(c0, cpw(c1))), wss(cpr(cv(hs1), csn(cv(hs2))), cun(c0, cpw(c1)))), wss(cpr(csn(cv(hs1)), cpr(cv(hs1), csn(cv(hs2)))), cpw(cun(c0, cpw(c1)))))\n  elpw(cpr(csn(cv(hs1)), cpr(cv(hs1), csn(cv(hs2)))), cpw(cun(c0, cpw(c1))))\n  prex(csn(cv(hs1)), cpr(cv(hs1), csn(cv(hs2))))\n  prsspw(csn(cv(hs1)), cpr(cv(hs1), csn(cv(hs2))), cun(c0, cpw(c1)))\n  snex(cv(hs1))\n  prex(cv(hs1), csn(cv(hs2)))\n  eleq1a(caltop(cv(hs1), cv(hs2)), cpw(cpw(cun(c0, cpw(c1)))), cv(hs0))\n  diff.hs0.c(caltxp(c0, c1))\n  diff.hs0.c(cpw(cpw(cun(c0, cpw(c1)))))\n  diff.hs1.s(hs2)\n  diff.hs1.c(cv(hs0))\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs2.c(cv(hs0))\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.w(wcel(cv(hs0), cpw(cpw(cun(c0, cpw(c1))))))\n  diff.hs2.w(wcel(cv(hs0), cpw(cpw(cun(c0, cpw(c1))))))\n}","pretty":"thm altxpsspw(class c0, class c1) {\n  ‚ä¢ (c0 XX. c1)‚äÜ P(P((c0 ‚ãÉ P(c1))))\n} = {\n  ssriv(hs0, (c0 XX. c1), P(P((c0 ‚ãÉ P(c1)))))\n  sylbi(hs0 ‚àà(c0 XX. c1), hs0 ‚àà P(P((c0 ‚ãÉ P(c1)))), ‚àÉ(hs1 ‚àà c0, ‚àÉ(hs2 ‚àà c1, hs0 = << hs1, hs2 >>)))\n  elaltxp(hs1, hs2, hs0, c0, c1)\n  rexlimivv(hs1, hs2, c0, c1, hs0 = << hs1, hs2 >>, hs0 ‚àà P(P((c0 ‚ãÉ P(c1)))))\n  syl((hs1 ‚àà c0 ‚àß hs2 ‚àà c1), (hs0 = << hs1, hs2 >> ‚Üí hs0 ‚àà P(P((c0 ‚ãÉ P(c1))))), << hs1, hs2 >> ‚àà P(P((c0 ‚ãÉ P(c1)))))\n  syl5eqel(<< hs1, hs2 >>, P(P((c0 ‚ãÉ P(c1)))), { { hs1 }, { hs1, { hs2 } } }, (hs1 ‚àà c0 ‚àß hs2 ‚àà c1))\n  df-altop(hs1, hs2)\n  sylanbrc((hs1 ‚àà c0 ‚àß hs2 ‚àà c1), { { hs1 }, { hs1, { hs2 } } } ‚àà P(P((c0 ‚ãÉ P(c1)))), { hs1 } ‚äÜ(c0 ‚ãÉ P(c1)), { hs1, { hs2 } } ‚äÜ(c0 ‚ãÉ P(c1)))\n  adantr(hs1 ‚àà c0, hs2 ‚àà c1, { hs1 } ‚äÜ(c0 ‚ãÉ P(c1)))\n  syl(hs1 ‚àà c0, { hs1 } ‚äÜ(c0 ‚ãÉ P(c1)), { hs1 } ‚äÜ c0)\n  snssi(hs1, c0)\n  ssun3({ hs1 }, c0, P(c1))\n  sylib((hs1 ‚àà c0 ‚àß hs2 ‚àà c1), { hs1, { hs2 } } ‚äÜ(c0 ‚ãÉ P(c1)), (hs1 ‚àà(c0 ‚ãÉ P(c1))‚àß { hs2 } ‚àà(c0 ‚ãÉ P(c1))))\n  anim12i(hs1 ‚àà c0, hs2 ‚àà c1, hs1 ‚àà(c0 ‚ãÉ P(c1)), { hs2 } ‚àà(c0 ‚ãÉ P(c1)))\n  elun1(hs1, c0, P(c1))\n  syl(hs2 ‚àà c1, { hs2 } ‚àà(c0 ‚ãÉ P(c1)), { hs2 } ‚äÜ c1)\n  snssi(hs2, c1)\n  sylbir({ hs2 } ‚äÜ c1, { hs2 } ‚àà(c0 ‚ãÉ P(c1)), { hs2 } ‚àà P(c1))\n  elpw({ hs2 }, c1)\n  elun2({ hs2 }, P(c1), c0)\n  prss(hs1, (c0 ‚ãÉ P(c1)), { hs2 })\n  vex(hs1)\n  snex(hs2)\n  bitri({ { hs1 }, { hs1, { hs2 } } } ‚àà P(P((c0 ‚ãÉ P(c1)))), ({ hs1 } ‚äÜ(c0 ‚ãÉ P(c1))‚àß { hs1, { hs2 } } ‚äÜ(c0 ‚ãÉ P(c1))), { { hs1 }, { hs1, { hs2 } } } ‚äÜ P((c0 ‚ãÉ P(c1))))\n  elpw({ { hs1 }, { hs1, { hs2 } } }, P((c0 ‚ãÉ P(c1))))\n  prex({ hs1 }, { hs1, { hs2 } })\n  prsspw({ hs1 }, { hs1, { hs2 } }, (c0 ‚ãÉ P(c1)))\n  snex(hs1)\n  prex(hs1, { hs2 })\n  eleq1a(<< hs1, hs2 >>, P(P((c0 ‚ãÉ P(c1)))), hs0)\n  diff.hs0.c((c0 XX. c1))\n  diff.hs0.c(P(P((c0 ‚ãÉ P(c1)))))\n  diff.hs1.s(hs2)\n  diff.hs1.c(hs0)\n  diff.hs1.c(c0)\n  diff.hs1.c(c1)\n  diff.hs2.c(hs0)\n  diff.hs2.c(c0)\n  diff.hs2.c(c1)\n  diff.hs1.w(hs0 ‚àà P(P((c0 ‚ãÉ P(c1)))))\n  diff.hs2.w(hs0 ‚àà P(P((c0 ‚ãÉ P(c1)))))\n}","parent":["ssriv","sylbi","elaltxp","rexlimivv","syl","syl5eqel","df-altop","sylanbrc","adantr","snssi","ssun3","sylib","anim12i","elun1","sylbir","elpw","elun2","prss","vex","snex","bitri","prex","prsspw","eleq1a","diff.hs0.c","diff.hs1.s","diff.hs1.c","diff.hs2.c","diff.hs1.w","diff.hs2.w"],"children":["altxpexg"]},{"name":"altxpexg","content":"The alternate Cartesian product of two sets is a set. (Contributed by Scott Fenton, 24-Mar-2012.)","origin":"thm altxpexg(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wcel(caltxp(c0, c2), universe))\n} = {\n  sylancr(wa(wcel(c0, c1), wcel(c2, c3)), wcel(caltxp(c0, c2), universe), wss(caltxp(c0, c2), cpw(cpw(cun(c0, cpw(c2))))), wcel(cpw(cpw(cun(c0, cpw(c2)))), universe))\n  altxpsspw(c0, c2)\n  3syl(wa(wcel(c0, c1), wcel(c2, c3)), wcel(cpw(cpw(cun(c0, cpw(c2)))), universe), wcel(cun(c0, cpw(c2)), universe), wcel(cpw(cun(c0, cpw(c2))), universe))\n  sylan2(wcel(c0, c1), wcel(c2, c3), wcel(cun(c0, cpw(c2)), universe), wcel(cpw(c2), universe))\n  pwexg(c2, c3)\n  unexg(c0, c1, cpw(c2), universe)\n  pwexg(cun(c0, cpw(c2)), universe)\n  pwexg(cpw(cun(c0, cpw(c2))), universe)\n  ssexg(caltxp(c0, c2), cpw(cpw(cun(c0, cpw(c2)))), universe)\n}","pretty":"thm altxpexg(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0 XX. c2)‚àà ùïå)\n} = {\n  sylancr((c0 ‚àà c1 ‚àß c2 ‚àà c3), (c0 XX. c2)‚àà ùïå, (c0 XX. c2)‚äÜ P(P((c0 ‚ãÉ P(c2)))), P(P((c0 ‚ãÉ P(c2))))‚àà ùïå)\n  altxpsspw(c0, c2)\n  3syl((c0 ‚àà c1 ‚àß c2 ‚àà c3), P(P((c0 ‚ãÉ P(c2))))‚àà ùïå, (c0 ‚ãÉ P(c2))‚àà ùïå, P((c0 ‚ãÉ P(c2)))‚àà ùïå)\n  sylan2(c0 ‚àà c1, c2 ‚àà c3, (c0 ‚ãÉ P(c2))‚àà ùïå, P(c2)‚àà ùïå)\n  pwexg(c2, c3)\n  unexg(c0, c1, P(c2), universe)\n  pwexg((c0 ‚ãÉ P(c2)), universe)\n  pwexg(P((c0 ‚ãÉ P(c2))), universe)\n  ssexg((c0 XX. c2), P(P((c0 ‚ãÉ P(c2)))), universe)\n}","parent":["sylancr","altxpsspw","3syl","sylan2","pwexg","unexg","ssexg"],"children":[]},{"name":"rankaltopb","content":"Compute the rank of an alternate ordered pair. (Contributed by Scott Fenton, 18-Dec-2013.) (Revised by Mario Carneiro, 19-Apr-2014.)","origin":"thm rankaltopb(class c0, class c1) {\n  |- wi(wa(wcel(c0, cuni(cima(cr1, con0))), wcel(c1, cuni(cima(cr1, con0)))), wceq(cfv(crnk, caltop(c0, c1)), csuc(csuc(cun(cfv(crnk, c0), csuc(cfv(crnk, c1)))))))\n} = {\n  eqtrd(cfv(crnk, caltop(c0, c1)), csuc(csuc(cun(cfv(crnk, c0), csuc(cfv(crnk, c1))))), csuc(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1))))), wa(wcel(c0, cuni(cima(cr1, con0))), wcel(c1, cuni(cima(cr1, con0)))))\n  sylan2(wcel(c0, cuni(cima(cr1, con0))), wcel(c1, cuni(cima(cr1, con0))), wceq(cfv(crnk, caltop(c0, c1)), csuc(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1)))))), wcel(csn(c1), cuni(cima(cr1, con0))))\n  snwf(c1)\n  eqtrd(cfv(crnk, caltop(c0, c1)), csuc(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1))))), csuc(cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1))))), wa(wcel(c0, cuni(cima(cr1, con0))), wcel(csn(c1), cuni(cima(cr1, con0)))))\n  syl5eq(cfv(crnk, caltop(c0, c1)), csuc(cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1))))), cfv(crnk, cpr(csn(c0), cpr(c0, csn(c1)))), wa(wcel(c0, cuni(cima(cr1, con0))), wcel(csn(c1), cuni(cima(cr1, con0)))))\n  fveq2i(crnk, caltop(c0, c1), cpr(csn(c0), cpr(c0, csn(c1))))\n  df-altop(c0, c1)\n  syl2anc(wa(wcel(c0, cuni(cima(cr1, con0))), wcel(csn(c1), cuni(cima(cr1, con0)))), wceq(cfv(crnk, cpr(csn(c0), cpr(c0, csn(c1)))), csuc(cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1)))))), wcel(csn(c0), cuni(cima(cr1, con0))), wcel(cpr(c0, csn(c1)), cuni(cima(cr1, con0))))\n  rankprb(csn(c0), cpr(c0, csn(c1)))\n  syl(wa(wcel(c0, cuni(cima(cr1, con0))), wcel(csn(c1), cuni(cima(cr1, con0)))), wceq(csuc(cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1))))), csuc(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1)))))), wceq(cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1)))), csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1))))))\n  3eqtr3a(cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1)))), csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1)))), cfv(crnk, cun(csn(c0), cpr(c0, csn(c1)))), cfv(crnk, cpr(c0, csn(c1))), wa(wcel(c0, cuni(cima(cr1, con0))), wcel(csn(c1), cuni(cima(cr1, con0)))))\n  fveq2i(crnk, cun(csn(c0), cpr(c0, csn(c1))), cpr(c0, csn(c1)))\n  mpbi(wceq(cun(csn(c0), cpr(c0, csn(c1))), cpr(c0, csn(c1))), wss(csn(c0), cpr(c0, csn(c1))))\n  snsspr1(c0, csn(c1))\n  ssequn1(csn(c0), cpr(c0, csn(c1)))\n  syl2anc(wa(wcel(c0, cuni(cima(cr1, con0))), wcel(csn(c1), cuni(cima(cr1, con0)))), wceq(cfv(crnk, cun(csn(c0), cpr(c0, csn(c1)))), cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1))))), wcel(csn(c0), cuni(cima(cr1, con0))), wcel(cpr(c0, csn(c1)), cuni(cima(cr1, con0))))\n  adantr(wcel(c0, cuni(cima(cr1, con0))), wcel(csn(c1), cuni(cima(cr1, con0))), wcel(csn(c0), cuni(cima(cr1, con0))))\n  snwf(c0)\n  prwf(c0, csn(c1))\n  rankunb(csn(c0), cpr(c0, csn(c1)))\n  rankprb(c0, csn(c1))\n  suceq(cun(cfv(crnk, csn(c0)), cfv(crnk, cpr(c0, csn(c1)))), csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1)))))\n  adantl(wcel(c0, cuni(cima(cr1, con0))), wcel(c1, cuni(cima(cr1, con0))), wceq(csuc(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1))))), csuc(csuc(cun(cfv(crnk, c0), csuc(cfv(crnk, c1)))))))\n  3syl(wcel(c1, cuni(cima(cr1, con0))), wceq(csuc(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1))))), csuc(csuc(cun(cfv(crnk, c0), csuc(cfv(crnk, c1)))))), wceq(cun(cfv(crnk, c0), cfv(crnk, csn(c1))), cun(cfv(crnk, c0), csuc(cfv(crnk, c1)))), wceq(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1)))), csuc(cun(cfv(crnk, c0), csuc(cfv(crnk, c1))))))\n  uneq2d(cfv(crnk, c0), cfv(crnk, csn(c1)), csuc(cfv(crnk, c1)), wcel(c1, cuni(cima(cr1, con0))))\n  ranksnb(c1)\n  suceq(cun(cfv(crnk, c0), cfv(crnk, csn(c1))), cun(cfv(crnk, c0), csuc(cfv(crnk, c1))))\n  suceq(csuc(cun(cfv(crnk, c0), cfv(crnk, csn(c1)))), csuc(cun(cfv(crnk, c0), csuc(cfv(crnk, c1)))))\n}","pretty":"thm rankaltopb(class c0, class c1) {\n  ‚ä¢ ((c0 ‚àà ‚ãÉ(R1 \" On)‚àß c1 ‚àà ‚ãÉ(R1 \" On))‚Üí(rank ` << c0, c1 >>)= suc(suc(((rank ` c0)‚ãÉ suc((rank ` c1))))))\n} = {\n  eqtrd((rank ` << c0, c1 >>), suc(suc(((rank ` c0)‚ãÉ suc((rank ` c1))))), suc(suc(((rank ` c0)‚ãÉ(rank ` { c1 })))), (c0 ‚àà ‚ãÉ(R1 \" On)‚àß c1 ‚àà ‚ãÉ(R1 \" On)))\n  sylan2(c0 ‚àà ‚ãÉ(R1 \" On), c1 ‚àà ‚ãÉ(R1 \" On), (rank ` << c0, c1 >>)= suc(suc(((rank ` c0)‚ãÉ(rank ` { c1 })))), { c1 } ‚àà ‚ãÉ(R1 \" On))\n  snwf(c1)\n  eqtrd((rank ` << c0, c1 >>), suc(suc(((rank ` c0)‚ãÉ(rank ` { c1 })))), suc(((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } }))), (c0 ‚àà ‚ãÉ(R1 \" On)‚àß { c1 } ‚àà ‚ãÉ(R1 \" On)))\n  syl5eq((rank ` << c0, c1 >>), suc(((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } }))), (rank ` { { c0 }, { c0, { c1 } } }), (c0 ‚àà ‚ãÉ(R1 \" On)‚àß { c1 } ‚àà ‚ãÉ(R1 \" On)))\n  fveq2i(crnk, << c0, c1 >>, { { c0 }, { c0, { c1 } } })\n  df-altop(c0, c1)\n  syl2anc((c0 ‚àà ‚ãÉ(R1 \" On)‚àß { c1 } ‚àà ‚ãÉ(R1 \" On)), (rank ` { { c0 }, { c0, { c1 } } })= suc(((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } }))), { c0 } ‚àà ‚ãÉ(R1 \" On), { c0, { c1 } } ‚àà ‚ãÉ(R1 \" On))\n  rankprb({ c0 }, { c0, { c1 } })\n  syl((c0 ‚àà ‚ãÉ(R1 \" On)‚àß { c1 } ‚àà ‚ãÉ(R1 \" On)), suc(((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } })))= suc(suc(((rank ` c0)‚ãÉ(rank ` { c1 })))), ((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } }))= suc(((rank ` c0)‚ãÉ(rank ` { c1 }))))\n  3eqtr3a(((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } })), suc(((rank ` c0)‚ãÉ(rank ` { c1 }))), (rank `({ c0 } ‚ãÉ { c0, { c1 } })), (rank ` { c0, { c1 } }), (c0 ‚àà ‚ãÉ(R1 \" On)‚àß { c1 } ‚àà ‚ãÉ(R1 \" On)))\n  fveq2i(crnk, ({ c0 } ‚ãÉ { c0, { c1 } }), { c0, { c1 } })\n  mpbi(({ c0 } ‚ãÉ { c0, { c1 } })= { c0, { c1 } }, { c0 } ‚äÜ { c0, { c1 } })\n  snsspr1(c0, { c1 })\n  ssequn1({ c0 }, { c0, { c1 } })\n  syl2anc((c0 ‚àà ‚ãÉ(R1 \" On)‚àß { c1 } ‚àà ‚ãÉ(R1 \" On)), (rank `({ c0 } ‚ãÉ { c0, { c1 } }))=((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } })), { c0 } ‚àà ‚ãÉ(R1 \" On), { c0, { c1 } } ‚àà ‚ãÉ(R1 \" On))\n  adantr(c0 ‚àà ‚ãÉ(R1 \" On), { c1 } ‚àà ‚ãÉ(R1 \" On), { c0 } ‚àà ‚ãÉ(R1 \" On))\n  snwf(c0)\n  prwf(c0, { c1 })\n  rankunb({ c0 }, { c0, { c1 } })\n  rankprb(c0, { c1 })\n  suceq(((rank ` { c0 })‚ãÉ(rank ` { c0, { c1 } })), suc(((rank ` c0)‚ãÉ(rank ` { c1 }))))\n  adantl(c0 ‚àà ‚ãÉ(R1 \" On), c1 ‚àà ‚ãÉ(R1 \" On), suc(suc(((rank ` c0)‚ãÉ(rank ` { c1 }))))= suc(suc(((rank ` c0)‚ãÉ suc((rank ` c1))))))\n  3syl(c1 ‚àà ‚ãÉ(R1 \" On), suc(suc(((rank ` c0)‚ãÉ(rank ` { c1 }))))= suc(suc(((rank ` c0)‚ãÉ suc((rank ` c1))))), ((rank ` c0)‚ãÉ(rank ` { c1 }))=((rank ` c0)‚ãÉ suc((rank ` c1))), suc(((rank ` c0)‚ãÉ(rank ` { c1 })))= suc(((rank ` c0)‚ãÉ suc((rank ` c1)))))\n  uneq2d((rank ` c0), (rank ` { c1 }), suc((rank ` c1)), c1 ‚àà ‚ãÉ(R1 \" On))\n  ranksnb(c1)\n  suceq(((rank ` c0)‚ãÉ(rank ` { c1 })), ((rank ` c0)‚ãÉ suc((rank ` c1))))\n  suceq(suc(((rank ` c0)‚ãÉ(rank ` { c1 }))), suc(((rank ` c0)‚ãÉ suc((rank ` c1)))))\n}","parent":["eqtrd","sylan2","snwf","syl5eq","fveq2i","df-altop","syl2anc","rankprb","syl","3eqtr3a","mpbi","snsspr1","ssequn1","adantr","prwf","rankunb","suceq","adantl","3syl","uneq2d","ranksnb"],"children":[]},{"name":"nfaltop","content":"Bound-variable hypothesis builder for alternate ordered pairs. (Contributed by Scott Fenton, 25-Sep-2015.)","origin":"thm nfaltop(setvar s0, class c0, class c1) {\n  |- wnfc(s0, caltop(c0, c1))\n  -| wnfc(s0, c0)\n  -| wnfc(s0, c1)\n} = {\n  nfcxfr(s0, caltop(c0, c1), cpr(csn(c0), cpr(c0, csn(c1))))\n  df-altop(c0, c1)\n  nfpr(s0, csn(c0), cpr(c0, csn(c1)))\n  nfsn(s0, c0)\n  nfpr(s0, c0, csn(c1))\n  nfsn(s0, c1)\n}","pretty":"thm nfaltop(setvar s0, class c0, class c1) {\n  ‚ä¢ F/(s0, << c0, c1 >>)\n  ‚ä£ F/(s0, c0)\n  ‚ä£ F/(s0, c1)\n} = {\n  nfcxfr(s0, << c0, c1 >>, { { c0 }, { c0, { c1 } } })\n  df-altop(c0, c1)\n  nfpr(s0, { c0 }, { c0, { c1 } })\n  nfsn(s0, c0)\n  nfpr(s0, c0, { c1 })\n  nfsn(s0, c1)\n}","parent":["nfcxfr","df-altop","nfpr","nfsn"],"children":["sbcaltop"]},{"name":"sbcaltop","content":"Distribution of class substitution over alternate ordered pairs. (Contributed by Scott Fenton, 25-Sep-2015.)","origin":"thm sbcaltop(setvar s0, class c0, class c1, class c2) {\n  |- wi(wcel(c0, universe), wceq(csb(s0, c0, caltop(c1, c2)), caltop(csb(s0, c0, c1), csb(s0, c0, c2))))\n  -| diffsc(s0, c0)\n} = {\n  csbiegf(s0, c0, universe, caltop(c1, c2), caltop(csb(s0, c0, c1), csb(s0, c0, c2)))\n  a1i(wcel(c0, universe), wnfc(s0, caltop(csb(s0, c0, c1), csb(s0, c0, c2))))\n  nfaltop(s0, csb(s0, c0, c1), csb(s0, c0, c2))\n  nfcsb1v(s0, c0, c1)\n  nfcsb1v(s0, c0, c2)\n  eqtrd(caltop(c1, c2), caltop(csb(s0, c0, c1), csb(s0, c0, c2)), caltop(csb(s0, c0, c1), c2), wceq(cv(s0), c0))\n  syl(wceq(cv(s0), c0), wceq(caltop(c1, c2), caltop(csb(s0, c0, c1), c2)), wceq(c1, csb(s0, c0, c1)))\n  csbeq1a(s0, c0, c1)\n  altopeq1(c1, csb(s0, c0, c1), c2)\n  syl(wceq(cv(s0), c0), wceq(caltop(csb(s0, c0, c1), c2), caltop(csb(s0, c0, c1), csb(s0, c0, c2))), wceq(c2, csb(s0, c0, c2)))\n  csbeq1a(s0, c0, c2)\n  altopeq2(c2, csb(s0, c0, c2), csb(s0, c0, c1))\n  diff.universe.s(s0)\n}","pretty":"thm sbcaltop(setvar s0, class c0, class c1, class c2) {\n  ‚ä¢ (c0 ‚àà ùïå ‚Üí[c0 / s0]<< c1, c2 >> = <<[c0 / s0]c1,[c0 / s0]c2 >>)\n  ‚ä£ d(s0, c0)\n} = {\n  csbiegf(s0, c0, universe, << c1, c2 >>, <<[c0 / s0]c1,[c0 / s0]c2 >>)\n  a1i(c0 ‚àà ùïå, F/(s0, <<[c0 / s0]c1,[c0 / s0]c2 >>))\n  nfaltop(s0, [c0 / s0]c1, [c0 / s0]c2)\n  nfcsb1v(s0, c0, c1)\n  nfcsb1v(s0, c0, c2)\n  eqtrd(<< c1, c2 >>, <<[c0 / s0]c1,[c0 / s0]c2 >>, <<[c0 / s0]c1, c2 >>, s0 = c0)\n  syl(s0 = c0, << c1, c2 >> = <<[c0 / s0]c1, c2 >>, c1 =[c0 / s0]c1)\n  csbeq1a(s0, c0, c1)\n  altopeq1(c1, [c0 / s0]c1, c2)\n  syl(s0 = c0, <<[c0 / s0]c1, c2 >> = <<[c0 / s0]c1,[c0 / s0]c2 >>, c2 =[c0 / s0]c2)\n  csbeq1a(s0, c0, c2)\n  altopeq2(c2, [c0 / s0]c2, [c0 / s0]c1)\n  diff.universe.s(s0)\n}","parent":["csbiegf","a1i","nfaltop","nfcsb1v","eqtrd","syl","csbeq1a","altopeq1","altopeq2","diff.universe.s"],"children":[]}]}