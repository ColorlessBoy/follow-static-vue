{"index":1241,"title":"Experiments with weak deduction theorem","content":"","blocks":[{"name":"elimhyps","content":"A version of ~ elimhyp using explicit substitution. (Contributed by NM, 15-Jun-2019.)","origin":"thm elimhyps(setvar s0, class c0, wff w0) {\n  |- wsbc(s0, cif(cv(s0), c0, w0), w0)\n  -| wsbc(s0, c0, w0)\n} = {\n  elimhyp(cv(s0), c0, wsbc(s0, cif(cv(s0), c0, w0), w0), w0, wsbc(s0, c0, w0))\n  sbceq1a(s0, cif(cv(s0), c0, w0), w0)\n  dfsbcq(s0, c0, cif(cv(s0), c0, w0), w0)\n}","pretty":"thm elimhyps(setvar s0, class c0, wff w0) {\n  ⊢ [if(w0, s0, c0)/ s0]w0\n  ⊣ [c0 / s0]w0\n} = {\n  elimhyp(s0, c0, [if(w0, s0, c0)/ s0]w0, w0, [c0 / s0]w0)\n  sbceq1a(s0, if(w0, s0, c0), w0)\n  dfsbcq(s0, c0, if(w0, s0, c0), w0)\n}","parent":["elimhyp","sbceq1a","dfsbcq"],"children":["renegclALT"]},{"name":"dedths","content":"A version of weak deduction theorem ~ dedth using explicit substitution. (Contributed by NM, 15-Jun-2019.)","origin":"thm dedths(setvar s0, class c0, wff w0, wff w1) {\n  |- wi(w0, w1)\n  -| wsbc(s0, cif(cv(s0), c0, w0), w1)\n} = {\n  3imtr3i(w0, w1, wsbc(s0, cv(s0), w0), wsbc(s0, cv(s0), w1))\n  dedth(cv(s0), c0, wsbc(s0, cv(s0), w0), wsbc(s0, cv(s0), w1), wsbc(s0, cif(cv(s0), c0, wsbc(s0, cv(s0), w0)), w1))\n  dfsbcq(s0, cv(s0), cif(cv(s0), c0, wsbc(s0, cv(s0), w0)), w1)\n  mpbir(wsbc(s0, cif(cv(s0), c0, wsbc(s0, cv(s0), w0)), w1), wsbc(s0, cif(cv(s0), c0, w0), w1))\n  mp2b(wb(wsbc(s0, cif(cv(s0), c0, wsbc(s0, cv(s0), w0)), w1), wsbc(s0, cif(cv(s0), c0, w0), w1)), wb(wsbc(s0, cv(s0), w0), w0), wceq(cif(cv(s0), c0, wsbc(s0, cv(s0), w0)), cif(cv(s0), c0, w0)))\n  ifbi(cv(s0), c0, wsbc(s0, cv(s0), w0), w0)\n  dfsbcq(s0, cif(cv(s0), c0, wsbc(s0, cv(s0), w0)), cif(cv(s0), c0, w0), w1)\n  sbcid(s0, w0)\n  sbcid(s0, w1)\n}","pretty":"thm dedths(setvar s0, class c0, wff w0, wff w1) {\n  ⊢ (w0 → w1)\n  ⊣ [if(w0, s0, c0)/ s0]w1\n} = {\n  3imtr3i(w0, w1, [s0 / s0]w0, [s0 / s0]w1)\n  dedth(s0, c0, [s0 / s0]w0, [s0 / s0]w1, [if([s0 / s0]w0, s0, c0)/ s0]w1)\n  dfsbcq(s0, s0, if([s0 / s0]w0, s0, c0), w1)\n  mpbir([if([s0 / s0]w0, s0, c0)/ s0]w1, [if(w0, s0, c0)/ s0]w1)\n  mp2b(([if([s0 / s0]w0, s0, c0)/ s0]w1 ↔[if(w0, s0, c0)/ s0]w1), ([s0 / s0]w0 ↔ w0), if([s0 / s0]w0, s0, c0)= if(w0, s0, c0))\n  ifbi(s0, c0, [s0 / s0]w0, w0)\n  dfsbcq(s0, if([s0 / s0]w0, s0, c0), if(w0, s0, c0), w1)\n  sbcid(s0, w0)\n  sbcid(s0, w1)\n}","parent":["3imtr3i","dedth","dfsbcq","mpbir","mp2b","ifbi","sbcid"],"children":["renegclALT"]},{"name":"renegclALT","content":"Closure law for negative of reals. Demonstrates use of weak deduction theorem with explicit substitution. The proof is much longer than that of ~ renegcl . (Contributed by NM, 15-Jun-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm renegclALT(class c0) {\n  |- wi(wcel(c0, cr), wcel(cneg(c0), cr))\n} = {\n  vtoclga(hs0, c0, cr, wcel(cneg(c0), cr), wcel(cneg(cv(hs0)), cr))\n  eleq1d(cneg(cv(hs0)), cr, cneg(c0), wceq(cv(hs0), c0))\n  negeq(cv(hs0), c0)\n  dedths(hs0, nat0, wcel(cv(hs0), cr), wcel(cneg(cv(hs0)), cr))\n  mpbir(wsbc(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), wcel(cneg(cv(hs0)), cr)), wcel(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cneg(cv(hs0))), cr))\n  eqeltri(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cneg(cv(hs0))), cr, cneg(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cv(hs0))))\n  ax-mp(wceq(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cneg(cv(hs0))), cneg(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cv(hs0)))), wcel(cif(cv(hs0), nat0, wcel(cv(hs0), cr)), universe))\n  csbnegg(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), universe, cv(hs0))\n  renegcli(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cv(hs0)))\n  mpbi(wcel(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cv(hs0)), cr), wsbc(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), wcel(cv(hs0), cr)))\n  elimhyps(hs0, nat0, wcel(cv(hs0), cr))\n  mpbir(wsbc(hs0, nat0, wcel(cv(hs0), cr)), wcel(csb(hs0, nat0, cv(hs0)), cr))\n  eqeltri(csb(hs0, nat0, cv(hs0)), cr, nat0)\n  ax-mp(wceq(csb(hs0, nat0, cv(hs0)), nat0), wcel(nat0, universe))\n  csbvarg(hs0, nat0, universe)\n  0re()\n  ax-mp(wb(wsbc(hs0, nat0, wcel(cv(hs0), cr)), wcel(csb(hs0, nat0, cv(hs0)), cr)), wcel(nat0, universe))\n  sbcel1g(hs0, nat0, universe, cv(hs0), cr)\n  ax-mp(wb(wsbc(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), wcel(cv(hs0), cr)), wcel(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cv(hs0)), cr)), wcel(cif(cv(hs0), nat0, wcel(cv(hs0), cr)), universe))\n  sbcel1g(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), universe, cv(hs0), cr)\n  ax-mp(wb(wsbc(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), wcel(cneg(cv(hs0)), cr)), wcel(csb(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), cneg(cv(hs0))), cr)), wcel(cif(cv(hs0), nat0, wcel(cv(hs0), cr)), universe))\n  ifex(cv(hs0), nat0, wcel(cv(hs0), cr))\n  vex(hs0)\n  c0ex()\n  sbcel1g(hs0, cif(cv(hs0), nat0, wcel(cv(hs0), cr)), universe, cneg(cv(hs0)), cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(cr)\n  diff.hs0.w(wcel(cneg(c0), cr))\n}","pretty":"thm renegclALT(class c0) {\n  ⊢ (c0 ∈ ℝ → -u(c0)∈ ℝ)\n} = {\n  vtoclga(hs0, c0, cr, -u(c0)∈ ℝ, -u(hs0)∈ ℝ)\n  eleq1d(-u(hs0), cr, -u(c0), hs0 = c0)\n  negeq(hs0, c0)\n  dedths(hs0, nat0, hs0 ∈ ℝ, -u(hs0)∈ ℝ)\n  mpbir([if(hs0 ∈ ℝ, hs0, 0)/ hs0]-u(hs0)∈ ℝ, [if(hs0 ∈ ℝ, hs0, 0)/ hs0]-u(hs0)∈ ℝ)\n  eqeltri([if(hs0 ∈ ℝ, hs0, 0)/ hs0]-u(hs0), cr, -u([if(hs0 ∈ ℝ, hs0, 0)/ hs0]hs0))\n  ax-mp([if(hs0 ∈ ℝ, hs0, 0)/ hs0]-u(hs0)= -u([if(hs0 ∈ ℝ, hs0, 0)/ hs0]hs0), if(hs0 ∈ ℝ, hs0, 0)∈ 𝕌)\n  csbnegg(hs0, if(hs0 ∈ ℝ, hs0, 0), universe, hs0)\n  renegcli([if(hs0 ∈ ℝ, hs0, 0)/ hs0]hs0)\n  mpbi([if(hs0 ∈ ℝ, hs0, 0)/ hs0]hs0 ∈ ℝ, [if(hs0 ∈ ℝ, hs0, 0)/ hs0]hs0 ∈ ℝ)\n  elimhyps(hs0, nat0, hs0 ∈ ℝ)\n  mpbir([0 / hs0]hs0 ∈ ℝ, [0 / hs0]hs0 ∈ ℝ)\n  eqeltri([0 / hs0]hs0, cr, nat0)\n  ax-mp([0 / hs0]hs0 = 0, 0 ∈ 𝕌)\n  csbvarg(hs0, nat0, universe)\n  0re()\n  ax-mp(([0 / hs0]hs0 ∈ ℝ ↔[0 / hs0]hs0 ∈ ℝ), 0 ∈ 𝕌)\n  sbcel1g(hs0, nat0, universe, hs0, cr)\n  ax-mp(([if(hs0 ∈ ℝ, hs0, 0)/ hs0]hs0 ∈ ℝ ↔[if(hs0 ∈ ℝ, hs0, 0)/ hs0]hs0 ∈ ℝ), if(hs0 ∈ ℝ, hs0, 0)∈ 𝕌)\n  sbcel1g(hs0, if(hs0 ∈ ℝ, hs0, 0), universe, hs0, cr)\n  ax-mp(([if(hs0 ∈ ℝ, hs0, 0)/ hs0]-u(hs0)∈ ℝ ↔[if(hs0 ∈ ℝ, hs0, 0)/ hs0]-u(hs0)∈ ℝ), if(hs0 ∈ ℝ, hs0, 0)∈ 𝕌)\n  ifex(hs0, nat0, hs0 ∈ ℝ)\n  vex(hs0)\n  c0ex()\n  sbcel1g(hs0, if(hs0 ∈ ℝ, hs0, 0), universe, -u(hs0), cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(cr)\n  diff.hs0.w(-u(c0)∈ ℝ)\n}","parent":["vtoclga","eleq1d","negeq","dedths","mpbir","eqeltri","ax-mp","csbnegg","renegcli","mpbi","elimhyps","csbvarg","0re","sbcel1g","ifex","vex","c0ex","diff.hs0.c","diff.hs0.w"],"children":[]},{"name":"elimhyps2","content":"Generalization of ~ elimhyps that is not useful unless we can separately prove ` |- A e. _V ` . (Contributed by NM, 13-Jun-2019.)","origin":"thm elimhyps2(setvar s0, class c0, class c1, wff w0) {\n  |- wsbc(s0, cif(c0, c1, wsbc(s0, c0, w0)), w0)\n  -| wsbc(s0, c1, w0)\n} = {\n  elimhyp(c0, c1, wsbc(s0, cif(c0, c1, wsbc(s0, c0, w0)), w0), wsbc(s0, c0, w0), wsbc(s0, c1, w0))\n  dfsbcq(s0, c0, cif(c0, c1, wsbc(s0, c0, w0)), w0)\n  dfsbcq(s0, c1, cif(c0, c1, wsbc(s0, c0, w0)), w0)\n}","pretty":"thm elimhyps2(setvar s0, class c0, class c1, wff w0) {\n  ⊢ [if([c0 / s0]w0, c0, c1)/ s0]w0\n  ⊣ [c1 / s0]w0\n} = {\n  elimhyp(c0, c1, [if([c0 / s0]w0, c0, c1)/ s0]w0, [c0 / s0]w0, [c1 / s0]w0)\n  dfsbcq(s0, c0, if([c0 / s0]w0, c0, c1), w0)\n  dfsbcq(s0, c1, if([c0 / s0]w0, c0, c1), w0)\n}","parent":["elimhyp","dfsbcq"],"children":[]},{"name":"dedths2","content":"Generalization of ~ dedths that is not useful unless we can separately prove ` |- A e. _V ` . (Contributed by NM, 13-Jun-2019.)","origin":"thm dedths2(setvar s0, class c0, class c1, wff w0, wff w1) {\n  |- wi(wsbc(s0, c0, w0), wsbc(s0, c0, w1))\n  -| wsbc(s0, cif(c0, c1, wsbc(s0, c0, w0)), w1)\n} = {\n  dedth(c0, c1, wsbc(s0, c0, w0), wsbc(s0, c0, w1), wsbc(s0, cif(c0, c1, wsbc(s0, c0, w0)), w1))\n  dfsbcq(s0, c0, cif(c0, c1, wsbc(s0, c0, w0)), w1)\n}","pretty":"thm dedths2(setvar s0, class c0, class c1, wff w0, wff w1) {\n  ⊢ ([c0 / s0]w0 →[c0 / s0]w1)\n  ⊣ [if([c0 / s0]w0, c0, c1)/ s0]w1\n} = {\n  dedth(c0, c1, [c0 / s0]w0, [c0 / s0]w1, [if([c0 / s0]w0, c0, c1)/ s0]w1)\n  dfsbcq(s0, c0, if([c0 / s0]w0, c0, c1), w1)\n}","parent":["dedth","dfsbcq"],"children":[]},{"name":"nfcxfrdf","content":"A utility lemma to transfer a bound-variable hypothesis builder into a definition. (Contributed by NM, 19-Nov-2020.)","origin":"thm nfcxfrdf(setvar s0, class c0, class c1, wff w0) {\n  |- wi(w0, wnfc(s0, c0))\n  -| wnf(s0, w0)\n  -| wi(w0, wceq(c0, c1))\n  -| wi(w0, wnfc(s0, c1))\n} = {\n  mpbird(w0, wnfc(s0, c0), wnfc(s0, c1))\n  nfceqdf(s0, c0, c1, w0)\n}","pretty":"thm nfcxfrdf(setvar s0, class c0, class c1, wff w0) {\n  ⊢ (w0 → F/(s0, c0))\n  ⊣ F/(s0, w0)\n  ⊣ (w0 → c0 = c1)\n  ⊣ (w0 → F/(s0, c1))\n} = {\n  mpbird(w0, F/(s0, c0), F/(s0, c1))\n  nfceqdf(s0, c0, c1, w0)\n}","parent":["mpbird","nfceqdf"],"children":[]},{"name":"nfded","content":"A deduction theorem that converts a not-free inference directly to deduction form. The first hypothesis is the hypothesis of the deduction form. The second is an equality deduction (e.g., ` ( F/_ x A -> U. { y | A. x y e. A } = U. A ) ` ) that starts from ~ abidnf . The last is assigned to the inference form (e.g., ` F/_ x U. { y | A. x y e. A } ` ) whose hypothesis is satisfied using ~ nfaba1 . (Contributed by NM, 19-Nov-2020.)","origin":"thm nfded(setvar s0, class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wnfc(s0, c0))\n  -| wi(w0, wnfc(s0, c1))\n  -| wi(wnfc(s0, c1), wceq(c2, c0))\n  -| wnfc(s0, c2)\n} = {\n  mpbii(w0, wnfc(s0, c0), wnfc(s0, c2))\n  syl(w0, wb(wnfc(s0, c2), wnfc(s0, c0)), wnfc(s0, c1))\n  nfceqdf(s0, c2, c0, wnfc(s0, c1))\n  nfnfc1(s0, c1)\n}","pretty":"thm nfded(setvar s0, class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 → F/(s0, c0))\n  ⊣ (w0 → F/(s0, c1))\n  ⊣ (F/(s0, c1)→ c2 = c0)\n  ⊣ F/(s0, c2)\n} = {\n  mpbii(w0, F/(s0, c0), F/(s0, c2))\n  syl(w0, (F/(s0, c2)↔ F/(s0, c0)), F/(s0, c1))\n  nfceqdf(s0, c2, c0, F/(s0, c1))\n  nfnfc1(s0, c1)\n}","parent":["mpbii","syl","nfceqdf","nfnfc1"],"children":["nfunidALT"]},{"name":"nfded2","content":"A deduction theorem that converts a not-free inference directly to deduction form. The first 2 hypotheses are the hypotheses of the deduction form. The third is an equality deduction (e.g., ` ( ( F/_ x A /\\ F/_ x B ) ` ` -> <. { y | A. x y e. A } , { y | A. x y e. B } >. = <. A , B >. ) ` for ~ nfopd ) that starts from ~ abidnf . The last is assigned to the inference form (e.g., ` F/_ x <. { y | A. x y e. A } , { y | A. x y e. B } >. ` for ~ nfop ) whose hypotheses are satisfied using ~ nfaba1 . (Contributed by NM, 19-Nov-2020.)","origin":"thm nfded2(setvar s0, class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(w0, wnfc(s0, c0))\n  -| wi(w0, wnfc(s0, c1))\n  -| wi(w0, wnfc(s0, c2))\n  -| wi(wa(wnfc(s0, c1), wnfc(s0, c2)), wceq(c3, c0))\n  -| wnfc(s0, c3)\n} = {\n  mpbii(w0, wnfc(s0, c0), wnfc(s0, c3))\n  syl2anc(w0, wb(wnfc(s0, c3), wnfc(s0, c0)), wnfc(s0, c1), wnfc(s0, c2))\n  nfceqdf(s0, c3, c0, wa(wnfc(s0, c1), wnfc(s0, c2)))\n  nfan(s0, wnfc(s0, c1), wnfc(s0, c2))\n  nfnfc1(s0, c1)\n  nfnfc1(s0, c2)\n}","pretty":"thm nfded2(setvar s0, class c0, class c1, class c2, class c3, wff w0) {\n  ⊢ (w0 → F/(s0, c0))\n  ⊣ (w0 → F/(s0, c1))\n  ⊣ (w0 → F/(s0, c2))\n  ⊣ ((F/(s0, c1)∧ F/(s0, c2))→ c3 = c0)\n  ⊣ F/(s0, c3)\n} = {\n  mpbii(w0, F/(s0, c0), F/(s0, c3))\n  syl2anc(w0, (F/(s0, c3)↔ F/(s0, c0)), F/(s0, c1), F/(s0, c2))\n  nfceqdf(s0, c3, c0, (F/(s0, c1)∧ F/(s0, c2)))\n  nfan(s0, F/(s0, c1), F/(s0, c2))\n  nfnfc1(s0, c1)\n  nfnfc1(s0, c2)\n}","parent":["mpbii","syl2anc","nfceqdf","nfan","nfnfc1"],"children":["nfopdALT"]},{"name":"nfunidALT2","content":"Deduction version of ~ nfuni . (Contributed by NM, 19-Nov-2020.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm nfunidALT2(setvar s0, class c0, wff w0) {\n  |- wi(w0, wnfc(s0, cuni(c0)))\n  -| wi(w0, wnfc(s0, c0))\n} = {\n  mpbii(w0, wnfc(s0, cuni(c0)), wnfc(s0, cuni(cab(hs0, wal(s0, wcel(cv(hs0), c0))))))\n  nfuni(s0, cab(hs0, wal(s0, wcel(cv(hs0), c0))))\n  nfaba1(s0, hs0, wcel(cv(hs0), c0))\n  syl(w0, wb(wnfc(s0, cuni(cab(hs0, wal(s0, wcel(cv(hs0), c0))))), wnfc(s0, cuni(c0))), wnfc(s0, c0))\n  nfceqdf(s0, cuni(cab(hs0, wal(s0, wcel(cv(hs0), c0)))), cuni(c0), wnfc(s0, c0))\n  nfnfc1(s0, c0)\n  unieqd(cab(hs0, wal(s0, wcel(cv(hs0), c0))), c0, wnfc(s0, c0))\n  abidnf(s0, hs0, c0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n}","pretty":"thm nfunidALT2(setvar s0, class c0, wff w0) {\n  ⊢ (w0 → F/(s0, ⋃ c0))\n  ⊣ (w0 → F/(s0, c0))\n} = {\n  mpbii(w0, F/(s0, ⋃ c0), F/(s0, ⋃ { hs0 | ∀(s0, hs0 ∈ c0)}))\n  nfuni(s0, { hs0 | ∀(s0, hs0 ∈ c0)})\n  nfaba1(s0, hs0, hs0 ∈ c0)\n  syl(w0, (F/(s0, ⋃ { hs0 | ∀(s0, hs0 ∈ c0)})↔ F/(s0, ⋃ c0)), F/(s0, c0))\n  nfceqdf(s0, ⋃ { hs0 | ∀(s0, hs0 ∈ c0)}, ⋃ c0, F/(s0, c0))\n  nfnfc1(s0, c0)\n  unieqd({ hs0 | ∀(s0, hs0 ∈ c0)}, c0, F/(s0, c0))\n  abidnf(s0, hs0, c0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n}","parent":["mpbii","nfuni","nfaba1","syl","nfceqdf","nfnfc1","unieqd","abidnf","diffss.ex","diff.hs0.s","diff.hs0.c"],"children":[]},{"name":"nfunidALT","content":"Deduction version of ~ nfuni . (Contributed by NM, 19-Nov-2020.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm nfunidALT(setvar s0, class c0, wff w0) {\n  |- wi(w0, wnfc(s0, cuni(c0)))\n  -| wi(w0, wnfc(s0, c0))\n} = {\n  nfded(s0, cuni(c0), c0, cuni(cab(hs0, wal(s0, wcel(cv(hs0), c0)))), w0)\n  unieqd(cab(hs0, wal(s0, wcel(cv(hs0), c0))), c0, wnfc(s0, c0))\n  abidnf(s0, hs0, c0)\n  nfuni(s0, cab(hs0, wal(s0, wcel(cv(hs0), c0))))\n  nfaba1(s0, hs0, wcel(cv(hs0), c0))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n}","pretty":"thm nfunidALT(setvar s0, class c0, wff w0) {\n  ⊢ (w0 → F/(s0, ⋃ c0))\n  ⊣ (w0 → F/(s0, c0))\n} = {\n  nfded(s0, ⋃ c0, c0, ⋃ { hs0 | ∀(s0, hs0 ∈ c0)}, w0)\n  unieqd({ hs0 | ∀(s0, hs0 ∈ c0)}, c0, F/(s0, c0))\n  abidnf(s0, hs0, c0)\n  nfuni(s0, { hs0 | ∀(s0, hs0 ∈ c0)})\n  nfaba1(s0, hs0, hs0 ∈ c0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n}","parent":["nfded","unieqd","abidnf","nfuni","nfaba1","diffss.ex","diff.hs0.s","diff.hs0.c"],"children":[]},{"name":"nfopdALT","content":"Deduction version of bound-variable hypothesis builder ~ nfop . This shows how the deduction version of a not-free theorem such as ~ nfop can be created from the corresponding not-free inference theorem. (Contributed by NM, 19-Nov-2020.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm nfopdALT(setvar s0, class c0, class c1, wff w0) {\n  |- wi(w0, wnfc(s0, cop(c0, c1)))\n  -| wi(w0, wnfc(s0, c0))\n  -| wi(w0, wnfc(s0, c1))\n} = {\n  nfded2(s0, cop(c0, c1), c0, c1, cop(cab(hs0, wal(s0, wcel(cv(hs0), c0))), cab(hs0, wal(s0, wcel(cv(hs0), c1)))), w0)\n  opeq12d(cab(hs0, wal(s0, wcel(cv(hs0), c0))), cab(hs0, wal(s0, wcel(cv(hs0), c1))), c0, c1, wa(wnfc(s0, c0), wnfc(s0, c1)))\n  adantr(wnfc(s0, c0), wnfc(s0, c1), wceq(cab(hs0, wal(s0, wcel(cv(hs0), c0))), c0))\n  abidnf(s0, hs0, c0)\n  adantl(wnfc(s0, c0), wnfc(s0, c1), wceq(cab(hs0, wal(s0, wcel(cv(hs0), c1))), c1))\n  abidnf(s0, hs0, c1)\n  nfop(s0, cab(hs0, wal(s0, wcel(cv(hs0), c0))), cab(hs0, wal(s0, wcel(cv(hs0), c1))))\n  nfaba1(s0, hs0, wcel(cv(hs0), c0))\n  nfaba1(s0, hs0, wcel(cv(hs0), c1))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","pretty":"thm nfopdALT(setvar s0, class c0, class c1, wff w0) {\n  ⊢ (w0 → F/(s0, < c0, c1 >))\n  ⊣ (w0 → F/(s0, c0))\n  ⊣ (w0 → F/(s0, c1))\n} = {\n  nfded2(s0, < c0, c1 >, c0, c1, < { hs0 | ∀(s0, hs0 ∈ c0)}, { hs0 | ∀(s0, hs0 ∈ c1)} >, w0)\n  opeq12d({ hs0 | ∀(s0, hs0 ∈ c0)}, { hs0 | ∀(s0, hs0 ∈ c1)}, c0, c1, (F/(s0, c0)∧ F/(s0, c1)))\n  adantr(F/(s0, c0), F/(s0, c1), { hs0 | ∀(s0, hs0 ∈ c0)} = c0)\n  abidnf(s0, hs0, c0)\n  adantl(F/(s0, c0), F/(s0, c1), { hs0 | ∀(s0, hs0 ∈ c1)} = c1)\n  abidnf(s0, hs0, c1)\n  nfop(s0, { hs0 | ∀(s0, hs0 ∈ c0)}, { hs0 | ∀(s0, hs0 ∈ c1)})\n  nfaba1(s0, hs0, hs0 ∈ c0)\n  nfaba1(s0, hs0, hs0 ∈ c1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","parent":["nfded2","opeq12d","adantr","abidnf","adantl","nfop","nfaba1","diffss.ex","diff.hs0.s","diff.hs0.c"],"children":[]}]}