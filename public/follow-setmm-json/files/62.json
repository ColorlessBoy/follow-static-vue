{"index":62,"title":"Axiom scheme ax-10 (Quantified Negation)","content":"","blocks":[{"name":"ax-10","content":"Axiom of Quantified Negation. Axiom C5-2 of [Monk2] p. 113. This axiom scheme is logically redundant (see ~ ax10w ) but is used as an auxiliary axiom scheme to achieve scheme completeness. It means that ` x ` is not free in ` -. A. x ph ` . (Contributed by NM, 21-May-2008.) Use its alias ~ hbn1 instead if you must use it. Any theorem in first order logic (FOL) that contains only set variables that are all mutually distinct, and has no wff variables, can be proved *without* using ~ ax-10 through ~ ax-13 , by invoking ~ ax10w through ~ ax13w . We encourage proving theorems *without* ~ ax-10 through ~ ax-13 and moving them up to the ~ ax-4 through ~ ax-9 section. (New usage is discouraged.)","origin":"axiom ax-10(setvar s0, wff w0) {\n  |- wi(wn(wal(s0, w0)), wal(s0, wn(wal(s0, w0))))\n}","pretty":"axiom ax-10(setvar s0, wff w0) {\n  ⊢ (¬ ∀(s0, w0)→ ∀(s0, ¬ ∀(s0, w0)))\n}","parent":[],"children":["hbn1"]},{"name":"hbn1","content":"Alias for ~ ax-10 to be used instead of it. (Contributed by NM, 24-Jan-1993.) (Proof shortened by Wolf Lammen, 18-Aug-2014.)","origin":"thm hbn1(setvar s0, wff w0) {\n  |- wi(wn(wal(s0, w0)), wal(s0, wn(wal(s0, w0))))\n} = {\n  ax-10(s0, w0)\n}","pretty":"thm hbn1(setvar s0, wff w0) {\n  ⊢ (¬ ∀(s0, w0)→ ∀(s0, ¬ ∀(s0, w0)))\n} = {\n  ax-10(s0, w0)\n}","parent":["ax-10"],"children":["hbe1","hbe1a","modal5","axc7","axc4","axc14","ax12indn","axc5c4c711","vk15.4j","ax6e2nd","ax6e2ndVD","ax6e2ndALT"]},{"name":"hbe1","content":"The setvar ` x ` is not free in ` E. x ph ` . Corresponds to the axiom (5) of modal logic (see also ~ modal5 ). (Contributed by NM, 24-Jan-1993.)","origin":"thm hbe1(setvar s0, wff w0) {\n  |- wi(wex(s0, w0), wal(s0, wex(s0, w0)))\n} = {\n  hbxfrbi(s0, wex(s0, w0), wn(wal(s0, wn(w0))))\n  df-ex(s0, w0)\n  hbn1(s0, wn(w0))\n}","pretty":"thm hbe1(setvar s0, wff w0) {\n  ⊢ (∃(s0, w0)→ ∀(s0, ∃(s0, w0)))\n} = {\n  hbxfrbi(s0, ∃(s0, w0), ¬ ∀(s0, ¬ w0))\n  df-ex(s0, w0)\n  hbn1(s0, ¬ w0)\n}","parent":["hbxfrbi","df-ex","hbn1"],"children":["nfe1","equs5eALT","nfeqf2","nfeqf2OLD","equs5e","axie1","bj-nnfe1","ac6s6","exlimexi","vk15.4j","vk15.4jVD"]},{"name":"hbe1a","content":"Dual statement of ~ hbe1 . Modified version of ~ axc7e with a universally quantified consequent. (Contributed by Wolf Lammen, 15-Sep-2021.)","origin":"thm hbe1a(setvar s0, wff w0) {\n  |- wi(wex(s0, wal(s0, w0)), wal(s0, w0))\n} = {\n  sylbi(wex(s0, wal(s0, w0)), wal(s0, w0), wn(wal(s0, wn(wal(s0, w0)))))\n  df-ex(s0, wal(s0, w0))\n  con1i(wal(s0, wn(wal(s0, w0))), wal(s0, w0))\n  hbn1(s0, w0)\n}","pretty":"thm hbe1a(setvar s0, wff w0) {\n  ⊢ (∃(s0, ∀(s0, w0))→ ∀(s0, w0))\n} = {\n  sylbi(∃(s0, ∀(s0, w0)), ∀(s0, w0), ¬ ∀(s0, ¬ ∀(s0, w0)))\n  df-ex(s0, ∀(s0, w0))\n  con1i(∀(s0, ¬ ∀(s0, w0)), ∀(s0, w0))\n  hbn1(s0, w0)\n}","parent":["sylbi","df-ex","con1i","hbn1"],"children":["nf5-1","axc7e","nfeqf2","nfeqf2OLD","bj-19.41al","bj-sb56","bj-hba1","bj-nnfa1"]},{"name":"nf5-1","content":"One direction of ~ nf5 can be proved with a smaller footprint on axiom usage. (Contributed by Wolf Lammen, 16-Sep-2021.)","origin":"thm nf5-1(setvar s0, wff w0) {\n  |- wi(wal(s0, wi(w0, wal(s0, w0))), wnf(s0, w0))\n} = {\n  nfd(s0, wal(s0, wi(w0, wal(s0, w0))), w0)\n  syl6(wal(s0, wi(w0, wal(s0, w0))), wex(s0, w0), wal(s0, w0), wex(s0, wal(s0, w0)))\n  exim(s0, w0, wal(s0, w0))\n  hbe1a(s0, w0)\n}","pretty":"thm nf5-1(setvar s0, wff w0) {\n  ⊢ (∀(s0,(w0 → ∀(s0, w0)))→ F/(s0, w0))\n} = {\n  nfd(s0, ∀(s0,(w0 → ∀(s0, w0))), w0)\n  syl6(∀(s0,(w0 → ∀(s0, w0))), ∃(s0, w0), ∀(s0, w0), ∃(s0, ∀(s0, w0)))\n  exim(s0, w0, ∀(s0, w0))\n  hbe1a(s0, w0)\n}","parent":["nfd","syl6","exim","hbe1a"],"children":["nf5i","nf5dh","nf5d","hbnt"]},{"name":"nf5i","content":"Deduce that ` x ` is not free in ` ph ` from the definition. (Contributed by Mario Carneiro, 11-Aug-2016.)","origin":"thm nf5i(setvar s0, wff w0) {\n  |- wnf(s0, w0)\n  -| wi(w0, wal(s0, w0))\n} = {\n  mpg(s0, wnf(s0, w0), wi(w0, wal(s0, w0)))\n  nf5-1(s0, w0)\n}","pretty":"thm nf5i(setvar s0, wff w0) {\n  ⊢ F/(s0, w0)\n  ⊣ (w0 → ∀(s0, w0))\n} = {\n  mpg(s0, F/(s0, w0), (w0 → ∀(s0, w0)))\n  nf5-1(s0, w0)\n}","parent":["mpg","nf5-1"],"children":["nfe1","nf5di","19.9h","19.21h","19.23h","exlimih","exlimdh","equsalhw","equsexhv","hban","hb3an","nfal","hbex","cbv3hv","dvelimhw","cbv3h","equsalh","equsexh","nfae","axc16i","dvelimh","sbh","nfs1","hbsb","sb7h","nfsab1","nfsab","cleqh","nfcii","nfcri","bnj596","bnj1146","bnj1379","bnj1464","bnj1468","bnj605","bnj607","bnj916","bnj964","bnj981","bnj983","bnj1014","bnj1123","bnj1373","bnj1417","bnj1445","bnj1463","bnj1497","bj-cbv3hv2","bj-equsalhv","bj-nfs1v","bj-nfsab1","wl-nfalv","nfequid-o","nfa1-o","2sb5ndVD","2sb5ndALT"]},{"name":"nf5dh","content":"Deduce that ` x ` is not free in ` ps ` in a context. (Contributed by Mario Carneiro, 24-Sep-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Oct-2021.)","origin":"thm nf5dh(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wnf(s0, w1))\n  -| wi(w0, wal(s0, w0))\n  -| wi(w0, wi(w1, wal(s0, w1)))\n} = {\n  syl(w0, wnf(s0, w1), wal(s0, wi(w1, wal(s0, w1))))\n  alrimih(s0, w0, wi(w1, wal(s0, w1)))\n  nf5-1(s0, w1)\n}","pretty":"thm nf5dh(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → F/(s0, w1))\n  ⊣ (w0 → ∀(s0, w0))\n  ⊣ (w0 →(w1 → ∀(s0, w1)))\n} = {\n  syl(w0, F/(s0, w1), ∀(s0,(w1 → ∀(s0, w1))))\n  alrimih(s0, w0, (w1 → ∀(s0, w1)))\n  nf5-1(s0, w1)\n}","parent":["syl","alrimih","nf5-1"],"children":["nf5dv","hbimd","ax12indalem","ax12inda2ALT"]},{"name":"nf5dv","content":"Apply the definition of not-free in a context. (Contributed by Mario Carneiro, 11-Aug-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 18-Sep-2021.) (Proof shortened by Wolf Lammen, 13-Jul-2022.)","origin":"thm nf5dv(setvar s0, wff w0, wff w1) {\n  |- wi(w0, wnf(s0, w1))\n  -| wi(w0, wi(w1, wal(s0, w1)))\n  -| diffsw(s0, w0)\n} = {\n  nf5dh(s0, w0, w1)\n  ax-5(s0, w0)\n}","pretty":"thm nf5dv(setvar s0, wff w0, wff w1) {\n  ⊢ (w0 → F/(s0, w1))\n  ⊣ (w0 →(w1 → ∀(s0, w1)))\n  ⊣ d(s0, w0)\n} = {\n  nf5dh(s0, w0, w1)\n  ax-5(s0, w0)\n}","parent":["nf5dh","ax-5"],"children":[]},{"name":"nfe1","content":"The setvar ` x ` is not free in ` E. x ph ` . (Contributed by Mario Carneiro, 11-Aug-2016.)","origin":"thm nfe1(setvar s0, wff w0) {\n  |- wnf(s0, wex(s0, w0))\n} = {\n  nf5i(s0, wex(s0, w0))\n  hbe1(s0, w0)\n}","pretty":"thm nfe1(setvar s0, wff w0) {\n  ⊢ F/(s0, ∃(s0, w0))\n} = {\n  nf5i(s0, ∃(s0, w0))\n  hbe1(s0, w0)\n}","parent":["nf5i","hbe1"],"children":["nfa1","nfnf1","nf6","exdistrf","nfeu1ALT","nfmo1OLD","euor2","eupicka","mopick2","moexex","2moex","2euex","2moswap","2mo","2eu7","2eu8","nfre1","ceqsexg","morex","intab","nfopab1","nfopab2","axrep1","axrep2","axrep3","axrep4","eusv2nf","copsexg","copsex2t","copsex2g","mosubopt","dfid3","dmcoss","imadif","nfoprab1","nfoprab2","nfoprab3","fsplit","zfcndrep","zfcndpow","zfcndreg","zfcndinf","reclem2pr","ex-natded9.26","brabgaf","bnj607","bnj849","bnj1398","bnj1449","finminlem","exisym1","bj-alexbiex","bj-exexbiex","bj-biexal2","bj-biexex","bj-axrep1","bj-axrep2","bj-axrep3","bj-axrep4","bj-sbf3","sbexi","ac6s6","e2ebind","e2ebindVD","e2ebindALT","stoweidlem57","ovncvrrp","reuopreuprim"]},{"name":"nfa1","content":"The setvar ` x ` is not free in ` A. x ph ` . (Contributed by Mario Carneiro, 11-Aug-2016.) ~ df-nf changed. (Revised by Wolf Lammen, 11-Sep-2021.) Remove dependency on ~ ax-12 . (Revised by Wolf Lammen, 12-Oct-2021.)","origin":"thm nfa1(setvar s0, wff w0) {\n  |- wnf(s0, wal(s0, w0))\n} = {\n  nfxfr(s0, wal(s0, w0), wn(wex(s0, wn(w0))))\n  alex(s0, w0)\n  nfn(s0, wex(s0, wn(w0)))\n  nfe1(s0, wn(w0))\n}","pretty":"thm nfa1(setvar s0, wff w0) {\n  ⊢ F/(s0, ∀(s0, w0))\n} = {\n  nfxfr(s0, ∀(s0, w0), ¬ ∃(s0, ¬ w0))\n  alex(s0, w0)\n  nfn(s0, ∃(s0, ¬ w0))\n  nfe1(s0, ¬ w0)\n}","parent":["nfxfr","alex","nfn","nfe1"],"children":["nfna1","nfia1","nfnf1","nfa2","sb56","nfs1v","nf5","hba1","spsbimvOLD","axc4i","19.12","exsb","equs5aALT","equs5eALT","cbv1h","axc15OLD","dral1","nfald2","equs5a","equs5e","equs5","axc14","sbf2","exsbOLD","nfsb4t","sbcom3","nfsb4tALT","nfmo1","nfeu1","moexex","2eu6","exists2OLD","axi12","nfaba1","nfra1","ceqsalgALT","elrab3t","sbcbi2","csbie2t","sbcnestgf","dfnfc2","mpteq12f","axrep2","axrep3","axrep4","alxfr","axprlem1","axprlem2","axprlem4","axprlem5","axpr","copsex2t","mosubopt","fv3","fvmptt","fnoprabg","pssnn","fiint","aceq1","zorn2lem4","zfcndrep","mreexexd","dfon2lem7","bj-alalbial","bj-exalbial","bj-biexal1","bj-bialal","bj-cbv1hv","bj-dral1v","bj-axrep2","bj-axrep3","bj-axrep4","ax11-pm","bj-snsetex","exlimim","exellim","wl-nfimf1","wl-nfae1","wl-sb8t","wl-sbnf1","wl-2spsbbi","wl-ich-lem1","wl-ich-lem1b","wl-ich-lem1d","wl-lem-moexsb","wl-mo2tf","wl-eutf","wl-mo2t","wl-mo3t","wl-sb8eut","wl-ax11-lem3","sbali","nfbii2OLD","setindtr","axc11next","iotain","pm14.122b","pm14.123b","eubiOLD","ax6e2ndeqVD","e2ebindALT","ax6e2ndeqALT","rexsb","dfich2bi"]},{"name":"nfna1","content":"A convenience theorem particularly designed to remove dependencies on ~ ax-11 in conjunction with distinctors. (Contributed by Wolf Lammen, 2-Sep-2018.)","origin":"thm nfna1(setvar s0, wff w0) {\n  |- wnf(s0, wn(wal(s0, w0)))\n} = {\n  nfn(s0, wal(s0, w0))\n  nfa1(s0, w0)\n}","pretty":"thm nfna1(setvar s0, wff w0) {\n  ⊢ F/(s0, ¬ ∀(s0, w0))\n} = {\n  nfn(s0, ∀(s0, w0))\n  nfa1(s0, w0)\n}","parent":["nfn","nfa1"],"children":["dvelimhw","nfeqf","equs5","nfsb2","nfsb2ALT","wl-equsb3","wl-sbcom2d-lem1","wl-euequf","wl-ax11-lem3","wl-ax11-lem4","wl-ax11-lem6","wl-ax11-lem7"]},{"name":"nfia1","content":"Lemma 23 of [Monk2] p. 114. (Contributed by Mario Carneiro, 24-Sep-2016.)","origin":"thm nfia1(setvar s0, wff w0, wff w1) {\n  |- wnf(s0, wi(wal(s0, w0), wal(s0, w1)))\n} = {\n  nfim(s0, wal(s0, w0), wal(s0, w1))\n  nfa1(s0, w0)\n  nfa1(s0, w1)\n}","pretty":"thm nfia1(setvar s0, wff w0, wff w1) {\n  ⊢ F/(s0,(∀(s0, w0)→ ∀(s0, w1)))\n} = {\n  nfim(s0, ∀(s0, w0), ∀(s0, w1))\n  nfa1(s0, w0)\n  nfa1(s0, w1)\n}","parent":["nfim","nfa1"],"children":["dfmo","2eu6"]},{"name":"nfnf1","content":"The setvar ` x ` is not free in ` F/ x ph ` . (Contributed by Mario Carneiro, 11-Aug-2016.) Remove dependency on ~ ax-12 . (Revised by Wolf Lammen, 12-Oct-2021.)","origin":"thm nfnf1(setvar s0, wff w0) {\n  |- wnf(s0, wnf(s0, w0))\n} = {\n  nfxfr(s0, wnf(s0, w0), wi(wex(s0, w0), wal(s0, w0)))\n  df-nf(s0, w0)\n  nfim(s0, wex(s0, w0), wal(s0, w0))\n  nfe1(s0, w0)\n  nfa1(s0, w0)\n}","pretty":"thm nfnf1(setvar s0, wff w0) {\n  ⊢ F/(s0, F/(s0, w0))\n} = {\n  nfxfr(s0, F/(s0, w0), (∃(s0, w0)→ ∀(s0, w0)))\n  df-nf(s0, w0)\n  nfim(s0, ∃(s0, w0), ∀(s0, w0))\n  nfe1(s0, w0)\n  nfa1(s0, w0)\n}","parent":["nfxfr","df-nf","nfim","nfe1","nfa1"],"children":["sb4b","nfsb4t","nfsb4tALT","nfnfc1","sbcnestgf","bj-sbf4","wl-equsal1t","wl-sb6rft","wl-sb8t","wl-ich-lem1c","wl-ich-lem1d","wl-mo2tf","wl-eutf","wl-mo2t","wl-mo3t","wl-sb8eut"]},{"name":"modal5","content":"The analogue in our predicate calculus of axiom (5) of modal logic S5. See also ~ hbe1 . (Contributed by NM, 5-Oct-2005.)","origin":"thm modal5(setvar s0, wff w0) {\n  |- wi(wn(wal(s0, wn(w0))), wal(s0, wn(wal(s0, wn(w0)))))\n} = {\n  hbn1(s0, wn(w0))\n}","pretty":"thm modal5(setvar s0, wff w0) {\n  ⊢ (¬ ∀(s0, ¬ w0)→ ∀(s0, ¬ ∀(s0, ¬ w0)))\n} = {\n  hbn1(s0, ¬ w0)\n}","parent":["hbn1"],"children":[]}]}