{"index":983,"title":"Words over a set - misc additions","content":"","blocks":[{"name":"wrdfd","content":"A word is a zero-based sequence with a recoverable upper limit, deduction version. (Contributed by Thierry Arnoux, 22-Dec-2021.)","origin":"thm wrdfd(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wf(c0, co(nat0, cfzo, c1), c2))\n  -| wi(w0, wceq(c1, cfv(chash, c0)))\n  -| wi(w0, wcel(c0, cword(c2)))\n} = {\n  mpbird(w0, wf(c0, co(nat0, cfzo, c1), c2), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c2))\n  syl(w0, wf(c0, co(nat0, cfzo, cfv(chash, c0)), c2), wcel(c0, cword(c2)))\n  wrdf(c0, c2)\n  feq23d(c0, co(nat0, cfzo, c1), c2, co(nat0, cfzo, cfv(chash, c0)), c2, w0)\n  oveq2d(nat0, cfzo, c1, cfv(chash, c0), w0)\n  eqidd(c2, w0)\n}","pretty":"thm wrdfd(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 :(0[..^]c1)→ c2))\n  ⊣ (w0 → c1 =(# ` c0))\n  ⊣ (w0 → c0 ∈ Word(c2))\n} = {\n  mpbird(w0, (c0 :(0[..^]c1)→ c2), (c0 :(0[..^](# ` c0))→ c2))\n  syl(w0, (c0 :(0[..^](# ` c0))→ c2), c0 ∈ Word(c2))\n  wrdf(c0, c2)\n  feq23d(c0, (0[..^]c1), c2, (0[..^](# ` c0)), c2, w0)\n  oveq2d(nat0, cfzo, c1, (# ` c0), w0)\n  eqidd(c2, w0)\n}","parent":["mpbird","syl","wrdf","feq23d","oveq2d","eqidd"],"children":["circlemethhgt"]},{"name":"wrdres","content":"Condition for the restriction of a word to be a word itself. (Contributed by Thierry Arnoux, 5-Oct-2018.)","origin":"thm wrdres(class c0, class c1, class c2) {\n  |- wi(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wcel(cres(c0, co(nat0, cfzo, c2)), cword(c1)))\n} = {\n  syl(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wcel(cres(c0, co(nat0, cfzo, c2)), cword(c1)), wf(cres(c0, co(nat0, cfzo, c2)), co(nat0, cfzo, c2), c1))\n  syl2an(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wf(cres(c0, co(nat0, cfzo, c2)), co(nat0, cfzo, c2), c1), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1), wss(co(nat0, cfzo, c2), co(nat0, cfzo, cfv(chash, c0))))\n  wrdf(c0, c1)\n  syl(wcel(c2, co(nat0, cfz, cfv(chash, c0))), wss(co(nat0, cfzo, c2), co(nat0, cfzo, cfv(chash, c0))), wcel(cfv(chash, c0), cfv(cuz, c2)))\n  elfzuz3(c2, nat0, cfv(chash, c0))\n  fzoss2(cfv(chash, c0), c2, nat0)\n  fssres(c0, co(nat0, cfzo, cfv(chash, c0)), c1, co(nat0, cfzo, c2))\n  iswrdi(cres(c0, co(nat0, cfzo, c2)), c2, c1)\n}","pretty":"thm wrdres(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0)))→(c0 |`(0[..^]c2))∈ Word(c1))\n} = {\n  syl((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))), (c0 |`(0[..^]c2))∈ Word(c1), ((c0 |`(0[..^]c2)):(0[..^]c2)→ c1))\n  syl2an(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)), ((c0 |`(0[..^]c2)):(0[..^]c2)→ c1), (c0 :(0[..^](# ` c0))→ c1), (0[..^]c2)⊆(0[..^](# ` c0)))\n  wrdf(c0, c1)\n  syl(c2 ∈(0[...](# ` c0)), (0[..^]c2)⊆(0[..^](# ` c0)), (# ` c0)∈(ℤ≥ ` c2))\n  elfzuz3(c2, nat0, (# ` c0))\n  fzoss2((# ` c0), c2, nat0)\n  fssres(c0, (0[..^](# ` c0)), c1, (0[..^]c2))\n  iswrdi((c0 |`(0[..^]c2)), c2, c1)\n}","parent":["syl","syl2an","wrdf","elfzuz3","fzoss2","fssres","iswrdi"],"children":["signstres"]},{"name":"wrdsplex","content":"Existence of a split of a word at a given index. (Contributed by Thierry Arnoux, 11-Oct-2018.) (Proof shortened by AV, 3-Nov-2022.)","origin":"thm wrdsplex(setvar s0, class c0, class c1, class c2) {\n  |- wi(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wrex(s0, cword(c1), wceq(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, cv(s0)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  syl2an2r(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wrex(s0, cword(c1), wceq(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, cv(s0)))), wcel(co(c0, csubstr, cop(c2, cfv(chash, c0))), cword(c1)), wceq(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0))))))\n  swrdcl(c0, c1, c2, cfv(chash, c0))\n  3eqtr3rd(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(co(c0, cpfx, c2), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(c0, cpfx, cfv(chash, c0)), wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))))\n  mpd3an3(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wceq(co(co(c0, cpfx, c2), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(c0, cpfx, cfv(chash, c0))), wcel(cfv(chash, c0), co(nat0, cfz, cfv(chash, c0))))\n  3syl(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wcel(cfv(chash, c0), co(nat0, cfz, cfv(chash, c0))), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wcel(cfv(chash, c0), cfv(cuz, nat0)))\n  simpr(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))))\n  elfzuz2(c2, nat0, cfv(chash, c0))\n  eluzfz2(cfv(chash, c0), nat0)\n  ccatpfx(c0, c1, c2, cfv(chash, c0))\n  oveq1d(co(c0, cpfx, c2), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0))), cres(c0, co(nat0, cfzo, c2)), wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))))\n  pfxres(c0, c1, c2)\n  adantr(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wceq(co(c0, cpfx, cfv(chash, c0)), c0))\n  pfxid(c0, c1)\n  rspceeqv(s0, co(c0, csubstr, cop(c2, cfv(chash, c0))), cword(c1), c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(cres(c0, co(nat0, cfzo, c2)), cconcat, cv(s0)))\n  oveq2(cv(s0), co(c0, csubstr, cop(c2, cfv(chash, c0))), cres(c0, co(nat0, cfzo, c2)), cconcat)\n  diff.cword.s(s0, c1)\n  diff.co.s(s0, cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0))))\n  diff.cres.s(s0, c0, co(nat0, cfzo, c2))\n  diff.co.s(s0, nat0, cfzo, c2)\n  diff.nat0.s(s0)\n  diff.cfzo.s(s0)\n  diff.cconcat.s(s0)\n  diff.co.s(s0, c0, csubstr, cop(c2, cfv(chash, c0)))\n  diff.csubstr.s(s0)\n  diff.cop.s(s0, c2, cfv(chash, c0))\n  diff.cfv.s(s0, chash, c0)\n  diff.chash.s(s0)\n}","pretty":"thm wrdsplex(setvar s0, class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0)))→ ∃(s0 ∈ Word(c1), c0 =((c0 |`(0[..^]c2))[++]s0)))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n} = {\n  syl2an2r(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)), ∃(s0 ∈ Word(c1), c0 =((c0 |`(0[..^]c2))[++]s0)), (c0[substr]< c2,(# ` c0)>)∈ Word(c1), c0 =((c0 |`(0[..^]c2))[++](c0[substr]< c2,(# ` c0)>)))\n  swrdcl(c0, c1, c2, (# ` c0))\n  3eqtr3rd(c0, ((c0 |`(0[..^]c2))[++](c0[substr]< c2,(# ` c0)>)), ((c0[prefix]c2)[++](c0[substr]< c2,(# ` c0)>)), (c0[prefix](# ` c0)), (c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))))\n  mpd3an3(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)), ((c0[prefix]c2)[++](c0[substr]< c2,(# ` c0)>))=(c0[prefix](# ` c0)), (# ` c0)∈(0[...](# ` c0)))\n  3syl((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))), (# ` c0)∈(0[...](# ` c0)), c2 ∈(0[...](# ` c0)), (# ` c0)∈(ℤ≥ ` 0))\n  simpr(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)))\n  elfzuz2(c2, nat0, (# ` c0))\n  eluzfz2((# ` c0), nat0)\n  ccatpfx(c0, c1, c2, (# ` c0))\n  oveq1d((c0[prefix]c2), cconcat, (c0[substr]< c2,(# ` c0)>), (c0 |`(0[..^]c2)), (c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))))\n  pfxres(c0, c1, c2)\n  adantr(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)), (c0[prefix](# ` c0))= c0)\n  pfxid(c0, c1)\n  rspceeqv(s0, (c0[substr]< c2,(# ` c0)>), Word(c1), c0, ((c0 |`(0[..^]c2))[++](c0[substr]< c2,(# ` c0)>)), ((c0 |`(0[..^]c2))[++]s0))\n  oveq2(s0, (c0[substr]< c2,(# ` c0)>), (c0 |`(0[..^]c2)), cconcat)\n  diff.cword.s(s0, c1)\n  diff.co.s(s0, (c0 |`(0[..^]c2)), cconcat, (c0[substr]< c2,(# ` c0)>))\n  diff.cres.s(s0, c0, (0[..^]c2))\n  diff.co.s(s0, nat0, cfzo, c2)\n  diff.nat0.s(s0)\n  diff.cfzo.s(s0)\n  diff.cconcat.s(s0)\n  diff.co.s(s0, c0, csubstr, < c2,(# ` c0)>)\n  diff.csubstr.s(s0)\n  diff.cop.s(s0, c2, (# ` c0))\n  diff.cfv.s(s0, chash, c0)\n  diff.chash.s(s0)\n}","parent":["syl2an2r","swrdcl","3eqtr3rd","mpd3an3","3syl","simpr","elfzuz2","eluzfz2","ccatpfx","oveq1d","pfxres","adantr","pfxid","rspceeqv","oveq2","diff.cword.s","diff.co.s","diff.cres.s","diff.nat0.s","diff.cfzo.s","diff.cconcat.s","diff.csubstr.s","diff.cop.s","diff.cfv.s","diff.chash.s"],"children":["signstres"]},{"name":"wrdsplexOLD","content":"Obsolete proof of ~ wrdsplex as of 12-Oct-2022. (Contributed by Thierry Arnoux, 11-Oct-2018.) (New usage is discouraged.) (Proof modification is discouraged.)","origin":"thm wrdsplexOLD(setvar s0, class c0, class c1, class c2) {\n  |- wi(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wrex(s0, cword(c1), wceq(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, cv(s0)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  syl2anc(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wrex(s0, cword(c1), wceq(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, cv(s0)))), wcel(co(c0, csubstr, cop(c2, cfv(chash, c0))), cword(c1)), wceq(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0))))))\n  adantr(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wcel(co(c0, csubstr, cop(c2, cfv(chash, c0))), cword(c1)))\n  swrdcl(c0, c1, c2, cfv(chash, c0))\n  3eqtr3rd(c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(co(c0, csubstr, cop(nat0, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(c0, csubstr, cop(nat0, cfv(chash, c0))), wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))))\n  syl13anc(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wceq(co(co(c0, csubstr, cop(nat0, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(c0, csubstr, cop(nat0, cfv(chash, c0)))), wcel(c0, cword(c1)), wcel(nat0, co(nat0, cfz, c2)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wcel(cfv(chash, c0), co(nat0, cfz, cfv(chash, c0))))\n  simpl(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))))\n  3syl(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wcel(nat0, co(nat0, cfz, c2)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wcel(c2, cfv(cuz, nat0)))\n  elfzuz(c2, nat0, cfv(chash, c0))\n  eluzfz1(c2, nat0)\n  3syl(wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))), wcel(cfv(chash, c0), co(nat0, cfz, cfv(chash, c0))), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wcel(cfv(chash, c0), cfv(cuz, nat0)))\n  simpr(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))))\n  elfzuz2(c2, nat0, cfv(chash, c0))\n  eluzfz2(cfv(chash, c0), nat0)\n  ccatswrd(c0, c1, nat0, c2, cfv(chash, c0))\n  oveq1d(co(c0, csubstr, cop(nat0, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0))), cres(c0, co(nat0, cfzo, c2)), wa(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0)))))\n  swrd0valOLD(c0, c1, c2)\n  adantr(wcel(c0, cword(c1)), wcel(c2, co(nat0, cfz, cfv(chash, c0))), wceq(co(c0, csubstr, cop(nat0, cfv(chash, c0))), c0))\n  swrdidOLD(c0, c1)\n  rspceeqv(s0, co(c0, csubstr, cop(c2, cfv(chash, c0))), cword(c1), c0, co(cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0)))), co(cres(c0, co(nat0, cfzo, c2)), cconcat, cv(s0)))\n  oveq2(cv(s0), co(c0, csubstr, cop(c2, cfv(chash, c0))), cres(c0, co(nat0, cfzo, c2)), cconcat)\n  diff.cword.s(s0, c1)\n  diff.co.s(s0, cres(c0, co(nat0, cfzo, c2)), cconcat, co(c0, csubstr, cop(c2, cfv(chash, c0))))\n  diff.cres.s(s0, c0, co(nat0, cfzo, c2))\n  diff.co.s(s0, nat0, cfzo, c2)\n  diff.nat0.s(s0)\n  diff.cfzo.s(s0)\n  diff.cconcat.s(s0)\n  diff.co.s(s0, c0, csubstr, cop(c2, cfv(chash, c0)))\n  diff.csubstr.s(s0)\n  diff.cop.s(s0, c2, cfv(chash, c0))\n  diff.cfv.s(s0, chash, c0)\n  diff.chash.s(s0)\n}","pretty":"thm wrdsplexOLD(setvar s0, class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0)))→ ∃(s0 ∈ Word(c1), c0 =((c0 |`(0[..^]c2))[++]s0)))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n} = {\n  syl2anc((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))), ∃(s0 ∈ Word(c1), c0 =((c0 |`(0[..^]c2))[++]s0)), (c0[substr]< c2,(# ` c0)>)∈ Word(c1), c0 =((c0 |`(0[..^]c2))[++](c0[substr]< c2,(# ` c0)>)))\n  adantr(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)), (c0[substr]< c2,(# ` c0)>)∈ Word(c1))\n  swrdcl(c0, c1, c2, (# ` c0))\n  3eqtr3rd(c0, ((c0 |`(0[..^]c2))[++](c0[substr]< c2,(# ` c0)>)), ((c0[substr]< 0, c2 >)[++](c0[substr]< c2,(# ` c0)>)), (c0[substr]< 0,(# ` c0)>), (c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))))\n  syl13anc((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))), ((c0[substr]< 0, c2 >)[++](c0[substr]< c2,(# ` c0)>))=(c0[substr]< 0,(# ` c0)>), c0 ∈ Word(c1), 0 ∈(0[...]c2), c2 ∈(0[...](# ` c0)), (# ` c0)∈(0[...](# ` c0)))\n  simpl(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)))\n  3syl((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))), 0 ∈(0[...]c2), c2 ∈(0[...](# ` c0)), c2 ∈(ℤ≥ ` 0))\n  elfzuz(c2, nat0, (# ` c0))\n  eluzfz1(c2, nat0)\n  3syl((c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))), (# ` c0)∈(0[...](# ` c0)), c2 ∈(0[...](# ` c0)), (# ` c0)∈(ℤ≥ ` 0))\n  simpr(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)))\n  elfzuz2(c2, nat0, (# ` c0))\n  eluzfz2((# ` c0), nat0)\n  ccatswrd(c0, c1, nat0, c2, (# ` c0))\n  oveq1d((c0[substr]< 0, c2 >), cconcat, (c0[substr]< c2,(# ` c0)>), (c0 |`(0[..^]c2)), (c0 ∈ Word(c1)∧ c2 ∈(0[...](# ` c0))))\n  swrd0valOLD(c0, c1, c2)\n  adantr(c0 ∈ Word(c1), c2 ∈(0[...](# ` c0)), (c0[substr]< 0,(# ` c0)>)= c0)\n  swrdidOLD(c0, c1)\n  rspceeqv(s0, (c0[substr]< c2,(# ` c0)>), Word(c1), c0, ((c0 |`(0[..^]c2))[++](c0[substr]< c2,(# ` c0)>)), ((c0 |`(0[..^]c2))[++]s0))\n  oveq2(s0, (c0[substr]< c2,(# ` c0)>), (c0 |`(0[..^]c2)), cconcat)\n  diff.cword.s(s0, c1)\n  diff.co.s(s0, (c0 |`(0[..^]c2)), cconcat, (c0[substr]< c2,(# ` c0)>))\n  diff.cres.s(s0, c0, (0[..^]c2))\n  diff.co.s(s0, nat0, cfzo, c2)\n  diff.nat0.s(s0)\n  diff.cfzo.s(s0)\n  diff.cconcat.s(s0)\n  diff.co.s(s0, c0, csubstr, < c2,(# ` c0)>)\n  diff.csubstr.s(s0)\n  diff.cop.s(s0, c2, (# ` c0))\n  diff.cfv.s(s0, chash, c0)\n  diff.chash.s(s0)\n}","parent":["syl2anc","adantr","swrdcl","3eqtr3rd","syl13anc","simpl","3syl","elfzuz","eluzfz1","simpr","elfzuz2","eluzfz2","ccatswrd","oveq1d","swrd0valOLD","swrdidOLD","rspceeqv","oveq2","diff.cword.s","diff.co.s","diff.cres.s","diff.nat0.s","diff.cfzo.s","diff.cconcat.s","diff.csubstr.s","diff.cop.s","diff.cfv.s","diff.chash.s"],"children":[]}]}