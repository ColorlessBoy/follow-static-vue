{"index":113,"title":"Derive the Axiom of Separation","content":"","blocks":[{"name":"axsep","content":"Separation Scheme, which is an axiom scheme of Zermelo's original theory. Scheme Sep of [BellMachover] p. 463. As we show here, it is redundant if we assume Replacement in the form of ~ ax-rep . Some textbooks present Separation as a separate axiom scheme in order to show that much of set theory can be derived without the stronger Replacement. The Separation Scheme is a weak form of Frege's Axiom of Comprehension, conditioning it (with ` x e. z ` ) so that it asserts the existence of a collection only if it is smaller than some other collection ` z ` that already exists. This prevents Russell's paradox ~ ru . In some texts, this scheme is called \"Aussonderung\" or the Subset Axiom. The variable ` x ` can appear free in the wff ` ph ` , which in textbooks is often written ` ph ( x ) ` . To specify this in the Metamath language, we _omit_ the distinct variable requirement ($d) that ` x ` not appear in ` ph ` . For a version using a class variable, see ~ zfauscl , which requires the Axiom of Extensionality as well as Separation for its derivation. If we omit the requirement that ` y ` not occur in ` ph ` , we can derive a contradiction, as ~ notzfaus shows (showing the necessity of that condition in ~ zfauscl ). However, as ~ axsep2 shows, we can eliminate the restriction that ` z ` not occur in ` ph ` . Note: the distinct variable restriction that ` z ` not occur in ` ph ` is actually redundant in this particular proof, but we keep it since its purpose is to demonstrate the derivation of the exact ~ ax-sep from ~ ax-rep . This theorem should not be referenced by any proof. Instead, use ~ ax-sep below so that the uses of the Axiom of Separation can be more easily identified. (Contributed by NM, 11-Sep-2006.) (New usage is discouraged.)","origin":"thm axsep(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s0, w0)\n  -| diffsw(s2, w0)\n} = {\n  a1ii(wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))), diffsw(s2, w0))\n  mpbi(wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wex(hs0, wa(wcel(cv(hs0), cv(s2)), wa(wceq(cv(hs0), cv(s1)), w0)))))))\n  mpg(hs0, wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wex(hs0, wa(wcel(cv(hs0), cv(s2)), wa(wceq(cv(hs0), cv(s1)), w0)))))), wi(wcel(cv(hs0), cv(s2)), wex(s0, wal(s1, wi(wa(wceq(cv(hs0), cv(s1)), w0), wceq(cv(s1), cv(s0)))))))\n  axrep5(hs0, s2, s0, s1, wa(wceq(cv(hs0), cv(s1)), w0))\n  nfv(s0, wa(wceq(cv(hs0), cv(s1)), w0))\n  spimev(s0, hs0, wcel(cv(hs0), cv(s2)), wal(s1, wi(wa(wceq(cv(hs0), cv(s1)), w0), wceq(cv(s1), cv(s0)))))\n  a1d(wceq(cv(s0), cv(hs0)), wcel(cv(hs0), cv(s2)), wal(s1, wi(wa(wceq(cv(hs0), cv(s1)), w0), wceq(cv(s1), cv(s0)))))\n  alrimiv(s1, wceq(cv(s0), cv(hs0)), wi(wa(wceq(cv(hs0), cv(s1)), w0), wceq(cv(s1), cv(s0))))\n  adantrd(wceq(cv(s0), cv(hs0)), wceq(cv(hs0), cv(s1)), w0, wceq(cv(s1), cv(s0)))\n  syl6(wceq(cv(s0), cv(hs0)), wceq(cv(hs0), cv(s1)), wceq(cv(s1), cv(s0)), wceq(cv(s0), cv(s1)))\n  equtr(s0, hs0, s1)\n  equcomi(s0, s1)\n  exbii(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wex(hs0, wa(wcel(cv(hs0), cv(s2)), wa(wceq(cv(hs0), cv(s1)), w0))))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0))))\n  albii(s1, wb(wcel(cv(s1), cv(s0)), wex(hs0, wa(wcel(cv(hs0), cv(s2)), wa(wceq(cv(hs0), cv(s1)), w0)))), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))\n  bibi2i(wcel(cv(s1), cv(s0)), wex(hs0, wa(wcel(cv(hs0), cv(s2)), wa(wceq(cv(hs0), cv(s1)), w0))), wa(wcel(cv(s1), cv(s2)), w0))\n  bitr3i(wex(hs0, wa(wcel(cv(hs0), cv(s2)), wa(wceq(cv(hs0), cv(s1)), w0))), wa(wcel(cv(s1), cv(s2)), w0), wex(hs0, wa(wceq(cv(hs0), cv(s1)), wa(wcel(cv(hs0), cv(s2)), w0))))\n  exbii(hs0, wa(wceq(cv(hs0), cv(s1)), wa(wcel(cv(hs0), cv(s2)), w0)), wa(wcel(cv(hs0), cv(s2)), wa(wceq(cv(hs0), cv(s1)), w0)))\n  an12(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), cv(s2)), w0)\n  equsexvw(hs0, s1, wa(wcel(cv(hs0), cv(s2)), w0), wa(wcel(cv(s1), cv(s2)), w0))\n  anbi1d(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), cv(s2)), w0, wcel(cv(s1), cv(s2)))\n  elequ1(hs0, s1, s2)\n  diff.hs0.s(s2)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n  diff.wa.s(s0, wceq(cv(hs0), cv(s1)), w0)\n  diff.wceq.s(s0, cv(hs0), cv(s1))\n  diff.cv.s(s0, s1)\n  diff.wcel.s(s0, cv(hs0), cv(s2))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s2)\n  diff.wceq.s(s1, cv(s0), cv(hs0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(wa(wcel(cv(s1), cv(s2)), w0))\n}","pretty":"thm axsep(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, w0)\n  ⊣ d(s2, w0)\n} = {\n  a1ii(∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))), d(s2, w0))\n  mpbi(∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))), ∃(s0, ∀(s1,(s1 ∈ s0 ↔ ∃(hs0,(hs0 ∈ s2 ∧(hs0 = s1 ∧ w0)))))))\n  mpg(hs0, ∃(s0, ∀(s1,(s1 ∈ s0 ↔ ∃(hs0,(hs0 ∈ s2 ∧(hs0 = s1 ∧ w0)))))), (hs0 ∈ s2 → ∃(s0, ∀(s1,((hs0 = s1 ∧ w0)→ s1 = s0)))))\n  axrep5(hs0, s2, s0, s1, (hs0 = s1 ∧ w0))\n  nfv(s0, (hs0 = s1 ∧ w0))\n  spimev(s0, hs0, hs0 ∈ s2, ∀(s1,((hs0 = s1 ∧ w0)→ s1 = s0)))\n  a1d(s0 = hs0, hs0 ∈ s2, ∀(s1,((hs0 = s1 ∧ w0)→ s1 = s0)))\n  alrimiv(s1, s0 = hs0, ((hs0 = s1 ∧ w0)→ s1 = s0))\n  adantrd(s0 = hs0, hs0 = s1, w0, s1 = s0)\n  syl6(s0 = hs0, hs0 = s1, s1 = s0, s0 = s1)\n  equtr(s0, hs0, s1)\n  equcomi(s0, s1)\n  exbii(s0, ∀(s1,(s1 ∈ s0 ↔ ∃(hs0,(hs0 ∈ s2 ∧(hs0 = s1 ∧ w0))))), ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0))))\n  albii(s1, (s1 ∈ s0 ↔ ∃(hs0,(hs0 ∈ s2 ∧(hs0 = s1 ∧ w0)))), (s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))\n  bibi2i(s1 ∈ s0, ∃(hs0,(hs0 ∈ s2 ∧(hs0 = s1 ∧ w0))), (s1 ∈ s2 ∧ w0))\n  bitr3i(∃(hs0,(hs0 ∈ s2 ∧(hs0 = s1 ∧ w0))), (s1 ∈ s2 ∧ w0), ∃(hs0,(hs0 = s1 ∧(hs0 ∈ s2 ∧ w0))))\n  exbii(hs0, (hs0 = s1 ∧(hs0 ∈ s2 ∧ w0)), (hs0 ∈ s2 ∧(hs0 = s1 ∧ w0)))\n  an12(hs0 = s1, hs0 ∈ s2, w0)\n  equsexvw(hs0, s1, (hs0 ∈ s2 ∧ w0), (s1 ∈ s2 ∧ w0))\n  anbi1d(hs0 = s1, hs0 ∈ s2, w0, s1 ∈ s2)\n  elequ1(hs0, s1, s2)\n  diff.hs0.s(s2)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n  diff.wa.s(s0, hs0 = s1, w0)\n  diff.wceq.s(s0, hs0, s1)\n  diff.cv.s(s0, s1)\n  diff.wcel.s(s0, hs0, s2)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s2)\n  diff.wceq.s(s1, s0, hs0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w((s1 ∈ s2 ∧ w0))\n}","parent":["a1ii","mpbi","mpg","axrep5","nfv","spimev","a1d","alrimiv","adantrd","syl6","equtr","equcomi","exbii","albii","bibi2i","bitr3i","an12","equsexvw","anbi1d","elequ1","diff.hs0.s","diffss.ex","diff.wa.s","diff.wceq.s","diff.cv.s","diff.wcel.s","diff.hs0.w"],"children":[]},{"name":"ax-sep","content":"The Axiom of Separation of ZF set theory. See ~ axsep for more information. It was derived as ~ axsep above and is therefore redundant, but we state it as a separate axiom here so that its uses can be identified more easily. (Contributed by NM, 11-Sep-2006.)","origin":"axiom ax-sep(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0))))\n  -| diffss(s0, s1)\n  -| diffss(s1, s2)\n  -| diffss(s0, s2)\n  -| diffsw(s0, w0)\n  -| diffsw(s2, w0)\n}","pretty":"axiom ax-sep(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, s2)\n  ⊣ d(s0, w0)\n  ⊣ d(s2, w0)\n}","parent":[],"children":["axsep2","zfauscl","bm1.3ii","ax6vsep","axnul","nalset","bj-axsep2","bj-zfauscl","bj-bm1.3ii"]},{"name":"axsep2","content":"A less restrictive version of the Separation Scheme ~ axsep , where variables ` x ` and ` z ` can both appear free in the wff ` ph ` , which can therefore be thought of as ` ph ( x , z ) ` . This version was derived from the more restrictive ~ ax-sep with no additional set theory axioms. (Contributed by NM, 10-Dec-2006.) (Proof shortened by Mario Carneiro, 17-Nov-2016.)","origin":"thm axsep2(setvar s0, setvar s1, setvar s2, wff w0) {\n  |- wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s0, w0)\n} = {\n  chvarv(hs0, s2, wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), wa(wcel(cv(s1), cv(s2)), w0))))))\n  exbidv(s0, wceq(cv(hs0), cv(s2)), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), wa(wcel(cv(s1), cv(s2)), w0)))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0))))\n  albidv(s1, wceq(cv(hs0), cv(s2)), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), wa(wcel(cv(s1), cv(s2)), w0))), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))\n  bibi2d(wceq(cv(hs0), cv(s2)), wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), wa(wcel(cv(s1), cv(s2)), w0)), wa(wcel(cv(s1), cv(s2)), w0))\n  syl6bb(wceq(cv(hs0), cv(s2)), wa(wcel(cv(s1), cv(hs0)), wa(wcel(cv(s1), cv(s2)), w0)), wa(wcel(cv(s1), cv(s2)), w0), wa(wcel(cv(s1), cv(s2)), wa(wcel(cv(s1), cv(s2)), w0)))\n  anbi1d(wceq(cv(hs0), cv(s2)), wcel(cv(s1), cv(hs0)), wa(wcel(cv(s1), cv(s2)), w0), wcel(cv(s1), cv(s2)))\n  elequ2(hs0, s2, s1)\n  anabs5(wcel(cv(s1), cv(s2)), w0)\n  ax-sep(s0, s1, hs0, wa(wcel(cv(s1), cv(s2)), w0))\n  diff.hs0.w(wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(s2)), w0)))))\n  diff.wceq.s(s0, cv(hs0), cv(s2))\n  diff.cv.s(s0, hs0)\n  diff.wceq.s(s1, cv(hs0), cv(s2))\n  diff.cv.s(s1, hs0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wa.s(s0, wcel(cv(s1), cv(s2)), w0)\n  diff.wcel.s(s0, cv(s1), cv(s2))\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, s2)\n  diff.hs0.w(wa(wcel(cv(s1), cv(s2)), w0))\n}","pretty":"thm axsep2(setvar s0, setvar s1, setvar s2, wff w0) {\n  ⊢ ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, w0)\n} = {\n  chvarv(hs0, s2, ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))), ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧(s1 ∈ s2 ∧ w0))))))\n  exbidv(s0, hs0 = s2, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧(s1 ∈ s2 ∧ w0)))), ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0))))\n  albidv(s1, hs0 = s2, (s1 ∈ s0 ↔(s1 ∈ hs0 ∧(s1 ∈ s2 ∧ w0))), (s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))\n  bibi2d(hs0 = s2, s1 ∈ s0, (s1 ∈ hs0 ∧(s1 ∈ s2 ∧ w0)), (s1 ∈ s2 ∧ w0))\n  syl6bb(hs0 = s2, (s1 ∈ hs0 ∧(s1 ∈ s2 ∧ w0)), (s1 ∈ s2 ∧ w0), (s1 ∈ s2 ∧(s1 ∈ s2 ∧ w0)))\n  anbi1d(hs0 = s2, s1 ∈ hs0, (s1 ∈ s2 ∧ w0), s1 ∈ s2)\n  elequ2(hs0, s2, s1)\n  anabs5(s1 ∈ s2, w0)\n  ax-sep(s0, s1, hs0, (s1 ∈ s2 ∧ w0))\n  diff.hs0.w(∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ s2 ∧ w0)))))\n  diff.wceq.s(s0, hs0, s2)\n  diff.cv.s(s0, hs0)\n  diff.wceq.s(s1, hs0, s2)\n  diff.cv.s(s1, hs0)\n  diff.cv.s(s1, s2)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wa.s(s0, s1 ∈ s2, w0)\n  diff.wcel.s(s0, s1, s2)\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, s2)\n  diff.hs0.w((s1 ∈ s2 ∧ w0))\n}","parent":["chvarv","exbidv","albidv","bibi2d","syl6bb","anbi1d","elequ2","anabs5","ax-sep","diff.hs0.w","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.wa.s","diff.wcel.s"],"children":[]},{"name":"zfauscl","content":"Separation Scheme (Aussonderung) using a class variable. To derive this from ~ ax-sep , we invoke the Axiom of Extensionality (indirectly via ~ vtocl ), which is needed for the justification of class variable notation. If we omit the requirement that ` y ` not occur in ` ph ` , we can derive a contradiction, as ~ notzfaus shows. (Contributed by NM, 21-Jun-1993.)","origin":"thm zfauscl(setvar s0, setvar s1, class c0, wff w0) {\n  |- wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0))))\n  -| wcel(c0, universe)\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsw(s0, w0)\n} = {\n  vtocl(hs0, c0, wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)))))\n  exbidv(s0, wceq(cv(hs0), c0), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0))))\n  albidv(s1, wceq(cv(hs0), c0), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))\n  bibi2d(wceq(cv(hs0), c0), wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0), wa(wcel(cv(s1), c0), w0))\n  anbi1d(wceq(cv(hs0), c0), wcel(cv(s1), cv(hs0)), w0, wcel(cv(s1), c0))\n  eleq2(cv(hs0), c0, cv(s1))\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.c(c0)\n  diff.hs0.w(wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), c0), w0)))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diff.wceq.s(s1, cv(hs0), c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","pretty":"thm zfauscl(setvar s0, setvar s1, class c0, wff w0) {\n  ⊢ ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0))))\n  ⊣ c0 ∈ 𝕌\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s0, w0)\n} = {\n  vtocl(hs0, c0, ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))), ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)))))\n  exbidv(s0, hs0 = c0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0))), ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0))))\n  albidv(s1, hs0 = c0, (s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)), (s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))\n  bibi2d(hs0 = c0, s1 ∈ s0, (s1 ∈ hs0 ∧ w0), (s1 ∈ c0 ∧ w0))\n  anbi1d(hs0 = c0, s1 ∈ hs0, w0, s1 ∈ c0)\n  eleq2(hs0, c0, s1)\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.c(c0)\n  diff.hs0.w(∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ c0 ∧ w0)))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diff.wceq.s(s1, hs0, c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w0)\n}","parent":["vtocl","exbidv","albidv","bibi2d","anbi1d","eleq2","ax-sep","diff.hs0.c","diff.hs0.w","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["inex1"]},{"name":"bm1.3ii","content":"Convert implication to equivalence using the Separation Scheme (Aussonderung) ~ ax-sep . Similar to Theorem 1.3(ii) of [BellMachover] p. 463. (Contributed by NM, 21-Jun-1993.)","origin":"thm bm1.3ii(setvar s0, setvar s1, wff w0) {\n  |- wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), w0)))\n  -| wex(s0, wal(s1, wi(w0, wcel(cv(s1), cv(s0)))))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w0)\n} = {\n  exlimiiv(hs0, wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), w0))), wa(wal(s1, wi(w0, wcel(cv(s1), cv(hs0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0))))))\n  sylbir(wa(wal(s1, wi(w0, wcel(cv(s1), cv(hs0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0))))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), w0))), wex(s0, wa(wal(s1, wi(w0, wcel(cv(s1), cv(hs0)))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0))))))\n  19.42v(s0, wal(s1, wi(w0, wcel(cv(s1), cv(hs0)))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0))))\n  eximi(s0, wa(wal(s1, wi(w0, wcel(cv(s1), cv(hs0)))), wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)))), wal(s1, wb(wcel(cv(s1), cv(s0)), w0)))\n  alanimi(s1, wi(w0, wcel(cv(s1), cv(hs0))), wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)), wb(wcel(cv(s1), cv(s0)), w0))\n  bimsc1(w0, wcel(cv(s1), cv(hs0)), wcel(cv(s1), cv(s0)))\n  exan(hs0, wal(s1, wi(w0, wcel(cv(s1), cv(hs0)))), wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), wa(wcel(cv(s1), cv(hs0)), w0)))))\n  mpbi(wex(hs0, wal(s1, wi(w0, wcel(cv(s1), cv(hs0))))), wex(s0, wal(s1, wi(w0, wcel(cv(s1), cv(s0))))))\n  cbvexvw(s0, hs0, wal(s1, wi(w0, wcel(cv(s1), cv(s0)))), wal(s1, wi(w0, wcel(cv(s1), cv(hs0)))))\n  albidv(s1, wceq(cv(s0), cv(hs0)), wi(w0, wcel(cv(s1), cv(s0))), wi(w0, wcel(cv(s1), cv(hs0))))\n  imbi2d(wceq(cv(s0), cv(hs0)), w0, wcel(cv(s1), cv(s0)), wcel(cv(s1), cv(hs0)))\n  elequ2(s0, hs0, s1)\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.w(wex(s0, wal(s1, wb(wcel(cv(s1), cv(s0)), w0))))\n  diff.wal.s(s0, s1, wi(w0, wcel(cv(s1), cv(hs0))))\n  diff.wi.s(s0, w0, wcel(cv(s1), cv(hs0)))\n  diff.wcel.s(s0, cv(s1), cv(hs0))\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wal(s1, wi(w0, wcel(cv(s1), cv(s0)))))\n  diff.wceq.s(s1, cv(s0), cv(hs0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n}","pretty":"thm bm1.3ii(setvar s0, setvar s1, wff w0) {\n  ⊢ ∃(s0, ∀(s1,(s1 ∈ s0 ↔ w0)))\n  ⊣ ∃(s0, ∀(s1,(w0 → s1 ∈ s0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w0)\n} = {\n  exlimiiv(hs0, ∃(s0, ∀(s1,(s1 ∈ s0 ↔ w0))), (∀(s1,(w0 → s1 ∈ hs0))∧ ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0))))))\n  sylbir((∀(s1,(w0 → s1 ∈ hs0))∧ ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0))))), ∃(s0, ∀(s1,(s1 ∈ s0 ↔ w0))), ∃(s0,(∀(s1,(w0 → s1 ∈ hs0))∧ ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0))))))\n  19.42v(s0, ∀(s1,(w0 → s1 ∈ hs0)), ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0))))\n  eximi(s0, (∀(s1,(w0 → s1 ∈ hs0))∧ ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)))), ∀(s1,(s1 ∈ s0 ↔ w0)))\n  alanimi(s1, (w0 → s1 ∈ hs0), (s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)), (s1 ∈ s0 ↔ w0))\n  bimsc1(w0, s1 ∈ hs0, s1 ∈ s0)\n  exan(hs0, ∀(s1,(w0 → s1 ∈ hs0)), ∃(s0, ∀(s1,(s1 ∈ s0 ↔(s1 ∈ hs0 ∧ w0)))))\n  mpbi(∃(hs0, ∀(s1,(w0 → s1 ∈ hs0))), ∃(s0, ∀(s1,(w0 → s1 ∈ s0))))\n  cbvexvw(s0, hs0, ∀(s1,(w0 → s1 ∈ s0)), ∀(s1,(w0 → s1 ∈ hs0)))\n  albidv(s1, s0 = hs0, (w0 → s1 ∈ s0), (w0 → s1 ∈ hs0))\n  imbi2d(s0 = hs0, w0, s1 ∈ s0, s1 ∈ hs0)\n  elequ2(s0, hs0, s1)\n  ax-sep(s0, s1, hs0, w0)\n  diff.hs0.w(∃(s0, ∀(s1,(s1 ∈ s0 ↔ w0))))\n  diff.wal.s(s0, s1, (w0 → s1 ∈ hs0))\n  diff.wi.s(s0, w0, s1 ∈ hs0)\n  diff.wcel.s(s0, s1, hs0)\n  diff.cv.s(s0, s1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(∀(s1,(w0 → s1 ∈ s0)))\n  diff.wceq.s(s1, s0, hs0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(w0)\n}","parent":["exlimiiv","sylbir","19.42v","eximi","alanimi","bimsc1","exan","mpbi","cbvexvw","albidv","imbi2d","elequ2","ax-sep","diff.hs0.w","diff.wal.s","diff.wi.s","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.wceq.s"],"children":["axpow3","vpwex","axprlem1","axprlem2","zfpair2","axun2","uniex2"]},{"name":"ax6vsep","content":"Derive ~ ax6v (a weakened version of ~ ax-6 where ` x ` and ` y ` must be distinct), from Separation ~ ax-sep and Extensionality ~ ax-ext . See ~ ax6 for the derivation of ~ ax-6 from ~ ax6v . (Contributed by NM, 12-Nov-2013.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ax6vsep(setvar s0, setvar s1) {\n  |- wn(wal(s0, wn(wceq(cv(s0), cv(s1)))))\n  -| diffss(s0, s1)\n} = {\n  mpbi(wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wex(s0, wceq(cv(s0), cv(s1))))\n  ax-mp(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, wal(hs0, wb(wcel(cv(hs0), cv(s0)), wa(wcel(cv(hs0), cv(s1)), wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0))))))))\n  ax-sep(s0, hs0, s1, wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0))))\n  eximi(s0, wal(hs0, wb(wcel(cv(hs0), cv(s0)), wa(wcel(cv(hs0), cv(s1)), wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0)))))), wceq(cv(s0), cv(s1)))\n  syl(wal(hs0, wb(wcel(cv(hs0), cv(s0)), wa(wcel(cv(hs0), cv(s1)), wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0)))))), wceq(cv(s0), cv(s1)), wal(hs0, wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1)))))\n  alimi(hs0, wb(wcel(cv(hs0), cv(s0)), wa(wcel(cv(hs0), cv(s1)), wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0))))), wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1))))\n  biimpri(wb(wcel(cv(hs0), cv(s0)), wa(wcel(cv(hs0), cv(s1)), wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0))))), wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1))))\n  bibi2i(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cv(s1)), wa(wcel(cv(hs0), cv(s1)), wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0)))))\n  biantru(wcel(cv(hs0), cv(s1)), wi(wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0))))\n  id(wceq(cv(hs0), cv(hs0)))\n  ax-ext(hs0, s0, s1)\n  df-ex(s0, wceq(cv(s0), cv(s1)))\n  diff.wi.s(s0, wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0)))\n  diff.wceq.s(s0, cv(hs0), cv(hs0))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wi.s(s1, wceq(cv(hs0), cv(hs0)), wceq(cv(hs0), cv(hs0)))\n  diff.wceq.s(s1, cv(hs0), cv(hs0))\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.s(s0)\n}","pretty":"thm ax6vsep(setvar s0, setvar s1) {\n  ⊢ ¬ ∀(s0, ¬ s0 = s1)\n  ⊣ d(s0, s1)\n} = {\n  mpbi(¬ ∀(s0, ¬ s0 = s1), ∃(s0, s0 = s1))\n  ax-mp(∃(s0, s0 = s1), ∃(s0, ∀(hs0,(hs0 ∈ s0 ↔(hs0 ∈ s1 ∧(hs0 = hs0 → hs0 = hs0))))))\n  ax-sep(s0, hs0, s1, (hs0 = hs0 → hs0 = hs0))\n  eximi(s0, ∀(hs0,(hs0 ∈ s0 ↔(hs0 ∈ s1 ∧(hs0 = hs0 → hs0 = hs0)))), s0 = s1)\n  syl(∀(hs0,(hs0 ∈ s0 ↔(hs0 ∈ s1 ∧(hs0 = hs0 → hs0 = hs0)))), s0 = s1, ∀(hs0,(hs0 ∈ s0 ↔ hs0 ∈ s1)))\n  alimi(hs0, (hs0 ∈ s0 ↔(hs0 ∈ s1 ∧(hs0 = hs0 → hs0 = hs0))), (hs0 ∈ s0 ↔ hs0 ∈ s1))\n  biimpri((hs0 ∈ s0 ↔(hs0 ∈ s1 ∧(hs0 = hs0 → hs0 = hs0))), (hs0 ∈ s0 ↔ hs0 ∈ s1))\n  bibi2i(hs0 ∈ s0, hs0 ∈ s1, (hs0 ∈ s1 ∧(hs0 = hs0 → hs0 = hs0)))\n  biantru(hs0 ∈ s1, (hs0 = hs0 → hs0 = hs0))\n  id(hs0 = hs0)\n  ax-ext(hs0, s0, s1)\n  df-ex(s0, s0 = s1)\n  diff.wi.s(s0, hs0 = hs0, hs0 = hs0)\n  diff.wceq.s(s0, hs0, hs0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wi.s(s1, hs0 = hs0, hs0 = hs0)\n  diff.wceq.s(s1, hs0, hs0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.s(s0)\n}","parent":["mpbi","ax-mp","ax-sep","eximi","syl","alimi","biimpri","bibi2i","biantru","id","ax-ext","df-ex","diff.wi.s","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":[]}]}