{"index":1096,"title":"Inferences for finite induction on generic function values","content":"","blocks":[{"name":"fveleq","content":"Please add description here. (Contributed by Jeff Hoffman, 12-Feb-2008.)","origin":"thm fveleq(class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(wceq(c0, c1), wb(wi(w0, wcel(cfv(c2, c0), c3)), wi(w0, wcel(cfv(c2, c1), c3))))\n} = {\n  imbi2d(wceq(c0, c1), w0, wcel(cfv(c2, c0), c3), wcel(cfv(c2, c1), c3))\n  eleq1d(cfv(c2, c0), c3, cfv(c2, c1), wceq(c0, c1))\n  fveq2(c0, c1, c2)\n}","pretty":"thm fveleq(class c0, class c1, class c2, class c3, wff w0) {\n  ‚ä¢ (c0 = c1 ‚Üí((w0 ‚Üí(c2 ` c0)‚àà c3)‚Üî(w0 ‚Üí(c2 ` c1)‚àà c3)))\n} = {\n  imbi2d(c0 = c1, w0, (c2 ` c0)‚àà c3, (c2 ` c1)‚àà c3)\n  eleq1d((c2 ` c0), c3, (c2 ` c1), c0 = c1)\n  fveq2(c0, c1, c2)\n}","parent":["imbi2d","eleq1d","fveq2"],"children":["findfvcl"]},{"name":"findfvcl","content":"Please add description here. (Contributed by Jeff Hoffman, 12-Feb-2008.)","origin":"thm findfvcl(setvar s0, class c0, class c1, class c2, wff w0) {\n  |- wi(wcel(c0, com), wi(w0, wcel(cfv(c1, c0), c2)))\n  -| wi(w0, wcel(cfv(c1, emptycls), c2))\n  -| wi(wcel(cv(s0), com), wi(w0, wi(wcel(cfv(c1, cv(s0)), c2), wcel(cfv(c1, csuc(cv(s0))), c2))))\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsw(s0, w0)\n} = {\n  finds(hs0, s0, c0, wi(w0, wcel(cfv(c1, c0), c2)), wi(w0, wcel(cfv(c1, cv(hs0)), c2)), wi(w0, wcel(cfv(c1, emptycls), c2)), wi(w0, wcel(cfv(c1, cv(s0)), c2)), wi(w0, wcel(cfv(c1, csuc(cv(s0))), c2)))\n  fveleq(cv(hs0), emptycls, c1, c2, w0)\n  fveleq(cv(hs0), cv(s0), c1, c2, w0)\n  fveleq(cv(hs0), csuc(cv(s0)), c1, c2, w0)\n  fveleq(cv(hs0), c0, c1, c2, w0)\n  a2d(wcel(cv(s0), com), w0, wcel(cfv(c1, cv(s0)), c2), wcel(cfv(c1, csuc(cv(s0))), c2))\n  diff.hs0.c(c0)\n  diff.hs0.w(wi(w0, wcel(cfv(c1, c0), c2)))\n  diff.hs0.w(wi(w0, wcel(cfv(c1, emptycls), c2)))\n  diff.hs0.w(wi(w0, wcel(cfv(c1, cv(s0)), c2)))\n  diff.hs0.w(wi(w0, wcel(cfv(c1, csuc(cv(s0))), c2)))\n  diff.wi.s(s0, w0, wcel(cfv(c1, cv(hs0)), c2))\n  diff.wcel.s(s0, cfv(c1, cv(hs0)), c2)\n  diff.cfv.s(s0, c1, cv(hs0))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm findfvcl(setvar s0, class c0, class c1, class c2, wff w0) {\n  ‚ä¢ (c0 ‚àà _om ‚Üí(w0 ‚Üí(c1 ` c0)‚àà c2))\n  ‚ä£ (w0 ‚Üí(c1 ` ‚àÖ)‚àà c2)\n  ‚ä£ (s0 ‚àà _om ‚Üí(w0 ‚Üí((c1 ` s0)‚àà c2 ‚Üí(c1 ` suc(s0))‚àà c2)))\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, w0)\n} = {\n  finds(hs0, s0, c0, (w0 ‚Üí(c1 ` c0)‚àà c2), (w0 ‚Üí(c1 ` hs0)‚àà c2), (w0 ‚Üí(c1 ` ‚àÖ)‚àà c2), (w0 ‚Üí(c1 ` s0)‚àà c2), (w0 ‚Üí(c1 ` suc(s0))‚àà c2))\n  fveleq(hs0, emptycls, c1, c2, w0)\n  fveleq(hs0, s0, c1, c2, w0)\n  fveleq(hs0, suc(s0), c1, c2, w0)\n  fveleq(hs0, c0, c1, c2, w0)\n  a2d(s0 ‚àà _om, w0, (c1 ` s0)‚àà c2, (c1 ` suc(s0))‚àà c2)\n  diff.hs0.c(c0)\n  diff.hs0.w((w0 ‚Üí(c1 ` c0)‚àà c2))\n  diff.hs0.w((w0 ‚Üí(c1 ` ‚àÖ)‚àà c2))\n  diff.hs0.w((w0 ‚Üí(c1 ` s0)‚àà c2))\n  diff.hs0.w((w0 ‚Üí(c1 ` suc(s0))‚àà c2))\n  diff.wi.s(s0, w0, (c1 ` hs0)‚àà c2)\n  diff.wcel.s(s0, (c1 ` hs0), c2)\n  diff.cfv.s(s0, c1, hs0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["finds","fveleq","a2d","diff.hs0.c","diff.hs0.w","diff.wi.s","diff.wcel.s","diff.cfv.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["findreccl"]},{"name":"findreccl","content":"Please add description here. (Contributed by Jeff Hoffman, 19-Feb-2008.)","origin":"thm findreccl(setvar s0, class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, com), wi(wcel(c1, c2), wcel(cfv(crdg(c3, c1), c0), c2)))\n  -| wi(wcel(cv(s0), c2), wcel(cfv(c3, cv(s0)), c2))\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  findfvcl(hs0, c0, crdg(c3, c1), c2, wcel(c1, c2))\n  mpd(wcel(c1, c2), wcel(cfv(crdg(c3, c1), emptycls), c2), wceq(cfv(crdg(c3, c1), emptycls), c1))\n  rdg0g(c1, c2, c3)\n  eleq1a(c1, c2, cfv(crdg(c3, c1), emptycls))\n  a1d(wcel(cv(hs0), com), wcel(c1, c2), wi(wcel(cfv(crdg(c3, c1), cv(hs0)), c2), wcel(cfv(crdg(c3, c1), csuc(cv(hs0))), c2)))\n  syl(wcel(cv(hs0), com), wi(wcel(cfv(crdg(c3, c1), cv(hs0)), c2), wcel(cfv(crdg(c3, c1), csuc(cv(hs0))), c2)), wcel(cv(hs0), con0))\n  nnon(cv(hs0))\n  syl5ibr(wcel(cv(hs0), con0), wcel(cfv(crdg(c3, c1), cv(hs0)), c2), wcel(cfv(crdg(c3, c1), csuc(cv(hs0))), c2), wcel(cfv(c3, cfv(crdg(c3, c1), cv(hs0))), c2))\n  vtoclga(s0, cfv(crdg(c3, c1), cv(hs0)), c2, wcel(cfv(c3, cfv(crdg(c3, c1), cv(hs0))), c2), wcel(cfv(c3, cv(s0)), c2))\n  eleq1d(cfv(c3, cv(s0)), c2, cfv(c3, cfv(crdg(c3, c1), cv(hs0))), wceq(cv(s0), cfv(crdg(c3, c1), cv(hs0))))\n  fveq2(cv(s0), cfv(crdg(c3, c1), cv(hs0)), c3)\n  eleq1d(cfv(crdg(c3, c1), csuc(cv(hs0))), c2, cfv(c3, cfv(crdg(c3, c1), cv(hs0))), wcel(cv(hs0), con0))\n  rdgsuc(cv(hs0), c3, c1)\n  diff.hs0.c(crdg(c3, c1))\n  diff.hs0.c(c2)\n  diff.hs0.w(wcel(c1, c2))\n  diff.wcel.s(s0, cfv(c3, cfv(crdg(c3, c1), cv(hs0))), c2)\n  diff.cfv.s(s0, c3, cfv(crdg(c3, c1), cv(hs0)))\n  diff.cfv.s(s0, crdg(c3, c1), cv(hs0))\n  diff.crdg.s(s0, c3, c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","pretty":"thm findreccl(setvar s0, class c0, class c1, class c2, class c3) {\n  ‚ä¢ (c0 ‚àà _om ‚Üí(c1 ‚àà c2 ‚Üí(rec(c3, c1)` c0)‚àà c2))\n  ‚ä£ (s0 ‚àà c2 ‚Üí(c3 ` s0)‚àà c2)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n} = {\n  findfvcl(hs0, c0, rec(c3, c1), c2, c1 ‚àà c2)\n  mpd(c1 ‚àà c2, (rec(c3, c1)` ‚àÖ)‚àà c2, (rec(c3, c1)` ‚àÖ)= c1)\n  rdg0g(c1, c2, c3)\n  eleq1a(c1, c2, (rec(c3, c1)` ‚àÖ))\n  a1d(hs0 ‚àà _om, c1 ‚àà c2, ((rec(c3, c1)` hs0)‚àà c2 ‚Üí(rec(c3, c1)` suc(hs0))‚àà c2))\n  syl(hs0 ‚àà _om, ((rec(c3, c1)` hs0)‚àà c2 ‚Üí(rec(c3, c1)` suc(hs0))‚àà c2), hs0 ‚àà On)\n  nnon(hs0)\n  syl5ibr(hs0 ‚àà On, (rec(c3, c1)` hs0)‚àà c2, (rec(c3, c1)` suc(hs0))‚àà c2, (c3 `(rec(c3, c1)` hs0))‚àà c2)\n  vtoclga(s0, (rec(c3, c1)` hs0), c2, (c3 `(rec(c3, c1)` hs0))‚àà c2, (c3 ` s0)‚àà c2)\n  eleq1d((c3 ` s0), c2, (c3 `(rec(c3, c1)` hs0)), s0 =(rec(c3, c1)` hs0))\n  fveq2(s0, (rec(c3, c1)` hs0), c3)\n  eleq1d((rec(c3, c1)` suc(hs0)), c2, (c3 `(rec(c3, c1)` hs0)), hs0 ‚àà On)\n  rdgsuc(hs0, c3, c1)\n  diff.hs0.c(rec(c3, c1))\n  diff.hs0.c(c2)\n  diff.hs0.w(c1 ‚àà c2)\n  diff.wcel.s(s0, (c3 `(rec(c3, c1)` hs0)), c2)\n  diff.cfv.s(s0, c3, (rec(c3, c1)` hs0))\n  diff.cfv.s(s0, rec(c3, c1), hs0)\n  diff.crdg.s(s0, c3, c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n}","parent":["findfvcl","mpd","rdg0g","eleq1a","a1d","syl","nnon","syl5ibr","vtoclga","eleq1d","fveq2","rdgsuc","diff.hs0.c","diff.hs0.w","diff.wcel.s","diff.cfv.s","diff.crdg.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["findabrcl"]},{"name":"findabrcl","content":"Please add description here. (Contributed by Jeff Hoffman, 16-Feb-2008.) (Revised by Mario Carneiro, 11-Sep-2015.)","origin":"thm findabrcl(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, com), wcel(c1, c2)), wcel(cfv(cmpt(s0, universe, cfv(crdg(c3, c1), cv(s0))), c0), c2))\n  -| wi(wcel(cv(s1), c2), wcel(cfv(c3, cv(s1)), c2))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c3)\n  -| diffsc(s1, c1)\n  -| diffsc(s1, c2)\n  -| diffsc(s1, c3)\n} = {\n  eqeltrd(cfv(cmpt(s0, universe, cfv(crdg(c3, c1), cv(s0))), c0), c2, cfv(crdg(c3, c1), c0), wa(wcel(c0, com), wcel(c1, c2)))\n  adantr(wcel(c0, com), wcel(c1, c2), wceq(cfv(cmpt(s0, universe, cfv(crdg(c3, c1), cv(s0))), c0), cfv(crdg(c3, c1), c0)))\n  syl(wcel(c0, com), wceq(cfv(cmpt(s0, universe, cfv(crdg(c3, c1), cv(s0))), c0), cfv(crdg(c3, c1), c0)), wcel(c0, universe))\n  elex(c0, com)\n  fvmpt(s0, c0, universe, cmpt(s0, universe, cfv(crdg(c3, c1), cv(s0))), cfv(crdg(c3, c1), c0), cfv(crdg(c3, c1), cv(s0)))\n  fveq2(cv(s0), c0, crdg(c3, c1))\n  eqid(cmpt(s0, universe, cfv(crdg(c3, c1), cv(s0))))\n  fvex(crdg(c3, c1), c0)\n  imp(wcel(c0, com), wcel(c1, c2), wcel(cfv(crdg(c3, c1), c0), c2))\n  findreccl(s1, c0, c1, c2, c3)\n  diff.universe.s(s0)\n  diff.cfv.s(s0, crdg(c3, c1), c0)\n  diff.crdg.s(s0, c3, c1)\n}","pretty":"thm findabrcl(setvar s0, setvar s1, class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà _om ‚àß c1 ‚àà c2)‚Üí((s0 ‚àà ùïå ‚Ü¶(rec(c3, c1)` s0))` c0)‚àà c2)\n  ‚ä£ (s1 ‚àà c2 ‚Üí(c3 ` s1)‚àà c2)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c3)\n  ‚ä£ d(s1, c1)\n  ‚ä£ d(s1, c2)\n  ‚ä£ d(s1, c3)\n} = {\n  eqeltrd(((s0 ‚àà ùïå ‚Ü¶(rec(c3, c1)` s0))` c0), c2, (rec(c3, c1)` c0), (c0 ‚àà _om ‚àß c1 ‚àà c2))\n  adantr(c0 ‚àà _om, c1 ‚àà c2, ((s0 ‚àà ùïå ‚Ü¶(rec(c3, c1)` s0))` c0)=(rec(c3, c1)` c0))\n  syl(c0 ‚àà _om, ((s0 ‚àà ùïå ‚Ü¶(rec(c3, c1)` s0))` c0)=(rec(c3, c1)` c0), c0 ‚àà ùïå)\n  elex(c0, com)\n  fvmpt(s0, c0, universe, (s0 ‚àà ùïå ‚Ü¶(rec(c3, c1)` s0)), (rec(c3, c1)` c0), (rec(c3, c1)` s0))\n  fveq2(s0, c0, rec(c3, c1))\n  eqid((s0 ‚àà ùïå ‚Ü¶(rec(c3, c1)` s0)))\n  fvex(rec(c3, c1), c0)\n  imp(c0 ‚àà _om, c1 ‚àà c2, (rec(c3, c1)` c0)‚àà c2)\n  findreccl(s1, c0, c1, c2, c3)\n  diff.universe.s(s0)\n  diff.cfv.s(s0, rec(c3, c1), c0)\n  diff.crdg.s(s0, c3, c1)\n}","parent":["eqeltrd","adantr","syl","elex","fvmpt","fveq2","eqid","fvex","imp","findreccl","diff.universe.s","diff.cfv.s","diff.crdg.s"],"children":[]}]}