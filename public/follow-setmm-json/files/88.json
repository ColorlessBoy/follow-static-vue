{"index":88,"title":"Define basic set operations and relations","content":"","blocks":[{"name":"cdif","content":"Extend class notation to include class difference (read: \" ` A ` minus ` B ` \").","origin":"prop class cdif(class c0, class c1) { (c0 \\ c1) }","pretty":"","parent":[],"children":[]},{"name":"diff.cdif.s","content":"","origin":"axiom diff.cdif.s(setvar sBase, class c0, class c1) {\n  |- diffsc(sBase, cdif(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.cdif.s(setvar sBase, class c0, class c1) {\n  ⊢ d(sBase,(c0 \\ c1))\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cdif.c","content":"","origin":"axiom diff.cdif.c(class cBase, class c0, class c1) {\n  |- diffcc(cBase, cdif(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.cdif.c(class cBase, class c0, class c1) {\n  ⊢ d(cBase,(c0 \\ c1))\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cdif.w","content":"","origin":"axiom diff.cdif.w(wff wBase, class c0, class c1) {\n  |- diffcw(cdif(c0, c1), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.cdif.w(wff wBase, class c0, class c1) {\n  ⊢ d((c0 \\ c1), wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"cun","content":"Extend class notation to include union of two classes (read: \" ` A ` union ` B ` \").","origin":"prop class cun(class c0, class c1) { (c0 ⋃ c1) }","pretty":"","parent":[],"children":[]},{"name":"diff.cun.s","content":"","origin":"axiom diff.cun.s(setvar sBase, class c0, class c1) {\n  |- diffsc(sBase, cun(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.cun.s(setvar sBase, class c0, class c1) {\n  ⊢ d(sBase,(c0 ⋃ c1))\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cun.c","content":"","origin":"axiom diff.cun.c(class cBase, class c0, class c1) {\n  |- diffcc(cBase, cun(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.cun.c(class cBase, class c0, class c1) {\n  ⊢ d(cBase,(c0 ⋃ c1))\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cun.w","content":"","origin":"axiom diff.cun.w(wff wBase, class c0, class c1) {\n  |- diffcw(cun(c0, c1), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.cun.w(wff wBase, class c0, class c1) {\n  ⊢ d((c0 ⋃ c1), wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"cin","content":"Extend class notation to include the intersection of two classes (read: \" ` A ` intersect ` B ` \").","origin":"prop class cin(class c0, class c1) { (c0 ⋂ c1) }","pretty":"","parent":[],"children":[]},{"name":"diff.cin.s","content":"","origin":"axiom diff.cin.s(setvar sBase, class c0, class c1) {\n  |- diffsc(sBase, cin(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.cin.s(setvar sBase, class c0, class c1) {\n  ⊢ d(sBase,(c0 ⋂ c1))\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cin.c","content":"","origin":"axiom diff.cin.c(class cBase, class c0, class c1) {\n  |- diffcc(cBase, cin(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.cin.c(class cBase, class c0, class c1) {\n  ⊢ d(cBase,(c0 ⋂ c1))\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cin.w","content":"","origin":"axiom diff.cin.w(wff wBase, class c0, class c1) {\n  |- diffcw(cin(c0, c1), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.cin.w(wff wBase, class c0, class c1) {\n  ⊢ d((c0 ⋂ c1), wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"wss","content":"Extend wff notation to include the subclass relation. This is read \" ` A ` is a subclass of ` B ` \" or \" ` B ` includes ` A ` \". When ` A ` exists as a set, it is also read \" ` A ` is a subset of ` B ` \".","origin":"prop wff wss(class c0, class c1) { c0 ⊆ c1 }","pretty":"","parent":[],"children":[]},{"name":"diff.wss.s","content":"","origin":"axiom diff.wss.s(setvar sBase, class c0, class c1) {\n  |- diffsw(sBase, wss(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.wss.s(setvar sBase, class c0, class c1) {\n  ⊢ d(sBase, c0 ⊆ c1)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.wss.c","content":"","origin":"axiom diff.wss.c(class cBase, class c0, class c1) {\n  |- diffcw(cBase, wss(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.wss.c(class cBase, class c0, class c1) {\n  ⊢ d(cBase, c0 ⊆ c1)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.wss.w","content":"","origin":"axiom diff.wss.w(wff wBase, class c0, class c1) {\n  |- diffww(wBase, wss(c0, c1))\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.wss.w(wff wBase, class c0, class c1) {\n  ⊢ d(wBase, c0 ⊆ c1)\n  ⊣ d(c0, wBase)\n  ⊣ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"wpss","content":"Extend wff notation with proper subclass relation.","origin":"prop wff wpss(class c0, class c1) { c0 ⊊ c1 }","pretty":"","parent":[],"children":[]},{"name":"diff.wpss.s","content":"","origin":"axiom diff.wpss.s(setvar sBase, class c0, class c1) {\n  |- diffsw(sBase, wpss(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.wpss.s(setvar sBase, class c0, class c1) {\n  ⊢ d(sBase, c0 ⊊ c1)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.wpss.c","content":"","origin":"axiom diff.wpss.c(class cBase, class c0, class c1) {\n  |- diffcw(cBase, wpss(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.wpss.c(class cBase, class c0, class c1) {\n  ⊢ d(cBase, c0 ⊊ c1)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.wpss.w","content":"","origin":"axiom diff.wpss.w(wff wBase, class c0, class c1) {\n  |- diffww(wBase, wpss(c0, c1))\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.wpss.w(wff wBase, class c0, class c1) {\n  ⊢ d(wBase, c0 ⊊ c1)\n  ⊣ d(c0, wBase)\n  ⊣ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"difjust","content":"Soundness justification theorem for ~ df-dif . (Contributed by Rodolfo Medina, 27-Apr-2010.) (Proof shortened by Andrew Salmon, 9-Jul-2011.)","origin":"thm difjust(setvar s0, setvar s1, class c0, class c1) {\n  |- wceq(cab(s0, wa(wcel(cv(s0), c0), wn(wcel(cv(s0), c1)))), cab(s1, wa(wcel(cv(s1), c0), wn(wcel(cv(s1), c1)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  eqtri(cab(s0, wa(wcel(cv(s0), c0), wn(wcel(cv(s0), c1)))), cab(s1, wa(wcel(cv(s1), c0), wn(wcel(cv(s1), c1)))), cab(hs0, wa(wcel(cv(hs0), c0), wn(wcel(cv(hs0), c1)))))\n  cbvabv(s0, hs0, wa(wcel(cv(s0), c0), wn(wcel(cv(s0), c1))), wa(wcel(cv(hs0), c0), wn(wcel(cv(hs0), c1))))\n  anbi12d(wceq(cv(s0), cv(hs0)), wcel(cv(s0), c0), wn(wcel(cv(s0), c1)), wcel(cv(hs0), c0), wn(wcel(cv(hs0), c1)))\n  eleq1w(s0, hs0, c0)\n  notbid(wceq(cv(s0), cv(hs0)), wcel(cv(s0), c1), wcel(cv(hs0), c1))\n  eleq1w(s0, hs0, c1)\n  cbvabv(hs0, s1, wa(wcel(cv(hs0), c0), wn(wcel(cv(hs0), c1))), wa(wcel(cv(s1), c0), wn(wcel(cv(s1), c1))))\n  anbi12d(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), c0), wn(wcel(cv(hs0), c1)), wcel(cv(s1), c0), wn(wcel(cv(s1), c1)))\n  eleq1w(hs0, s1, c0)\n  notbid(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), c1), wcel(cv(s1), c1))\n  eleq1w(hs0, s1, c1)\n  diff.wa.s(s0, wcel(cv(hs0), c0), wn(wcel(cv(hs0), c1)))\n  diff.wcel.s(s0, cv(hs0), c0)\n  diff.wn.s(s0, wcel(cv(hs0), c1))\n  diff.wcel.s(s0, cv(hs0), c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wa(wcel(cv(s0), c0), wn(wcel(cv(s0), c1))))\n  diff.hs0.w(wa(wcel(cv(s1), c0), wn(wcel(cv(s1), c1))))\n  diff.wa.s(s1, wcel(cv(hs0), c0), wn(wcel(cv(hs0), c1)))\n  diff.wcel.s(s1, cv(hs0), c0)\n  diff.wn.s(s1, wcel(cv(hs0), c1))\n  diff.wcel.s(s1, cv(hs0), c1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","pretty":"thm difjust(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ { s0 |(s0 ∈ c0 ∧ ¬ s0 ∈ c1)} = { s1 |(s1 ∈ c0 ∧ ¬ s1 ∈ c1)}\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  eqtri({ s0 |(s0 ∈ c0 ∧ ¬ s0 ∈ c1)}, { s1 |(s1 ∈ c0 ∧ ¬ s1 ∈ c1)}, { hs0 |(hs0 ∈ c0 ∧ ¬ hs0 ∈ c1)})\n  cbvabv(s0, hs0, (s0 ∈ c0 ∧ ¬ s0 ∈ c1), (hs0 ∈ c0 ∧ ¬ hs0 ∈ c1))\n  anbi12d(s0 = hs0, s0 ∈ c0, ¬ s0 ∈ c1, hs0 ∈ c0, ¬ hs0 ∈ c1)\n  eleq1w(s0, hs0, c0)\n  notbid(s0 = hs0, s0 ∈ c1, hs0 ∈ c1)\n  eleq1w(s0, hs0, c1)\n  cbvabv(hs0, s1, (hs0 ∈ c0 ∧ ¬ hs0 ∈ c1), (s1 ∈ c0 ∧ ¬ s1 ∈ c1))\n  anbi12d(hs0 = s1, hs0 ∈ c0, ¬ hs0 ∈ c1, s1 ∈ c0, ¬ s1 ∈ c1)\n  eleq1w(hs0, s1, c0)\n  notbid(hs0 = s1, hs0 ∈ c1, s1 ∈ c1)\n  eleq1w(hs0, s1, c1)\n  diff.wa.s(s0, hs0 ∈ c0, ¬ hs0 ∈ c1)\n  diff.wcel.s(s0, hs0, c0)\n  diff.wn.s(s0, hs0 ∈ c1)\n  diff.wcel.s(s0, hs0, c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w((s0 ∈ c0 ∧ ¬ s0 ∈ c1))\n  diff.hs0.w((s1 ∈ c0 ∧ ¬ s1 ∈ c1))\n  diff.wa.s(s1, hs0 ∈ c0, ¬ hs0 ∈ c1)\n  diff.wcel.s(s1, hs0, c0)\n  diff.wn.s(s1, hs0 ∈ c1)\n  diff.wcel.s(s1, hs0, c1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","parent":["eqtri","cbvabv","anbi12d","eleq1w","notbid","diff.wa.s","diff.wcel.s","diff.wn.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":[]},{"name":"df-dif","content":"Define class difference, also called relative complement. Definition 5.12 of [TakeutiZaring] p. 20. For example, ` ( { 1 , 3 } \\ { 1 , 8 } ) = { 3 } ` ( ~ ex-dif ). Contrast this operation with union ` ( A u. B ) ` ( ~ df-un ) and intersection ` ( A i^i B ) ` ( ~ df-in ). Several notations are used in the literature; we chose the ` \\ ` convention used in Definition 5.3 of [Eisenberg] p. 67 instead of the more common minus sign to reserve the latter for later use in, e.g., arithmetic. We will use the terminology \" ` A ` excludes ` B ` \" to mean ` A \\ B ` . We will use \" ` B ` is removed from ` A ` \" to mean ` A \\ { B } ` i.e. the removal of an element or equivalently the exclusion of a singleton. (Contributed by NM, 29-Apr-1994.)","origin":"axiom df-dif(setvar s0, class c0, class c1) {\n  |- wceq(cdif(c0, c1), cab(s0, wa(wcel(cv(s0), c0), wn(wcel(cv(s0), c1)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n}","pretty":"axiom df-dif(setvar s0, class c0, class c1) {\n  ⊢ (c0 \\ c1)= { s0 |(s0 ∈ c0 ∧ ¬ s0 ∈ c1)}\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n}","parent":[],"children":["dfdif2","eldif","dfnul2","noel","rabdif"]},{"name":"unjust","content":"Soundness justification theorem for ~ df-un . (Contributed by Rodolfo Medina, 28-Apr-2010.) (Proof shortened by Andrew Salmon, 9-Jul-2011.)","origin":"thm unjust(setvar s0, setvar s1, class c0, class c1) {\n  |- wceq(cab(s0, wo(wcel(cv(s0), c0), wcel(cv(s0), c1))), cab(s1, wo(wcel(cv(s1), c0), wcel(cv(s1), c1))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  eqtri(cab(s0, wo(wcel(cv(s0), c0), wcel(cv(s0), c1))), cab(s1, wo(wcel(cv(s1), c0), wcel(cv(s1), c1))), cab(hs0, wo(wcel(cv(hs0), c0), wcel(cv(hs0), c1))))\n  cbvabv(s0, hs0, wo(wcel(cv(s0), c0), wcel(cv(s0), c1)), wo(wcel(cv(hs0), c0), wcel(cv(hs0), c1)))\n  orbi12d(wceq(cv(s0), cv(hs0)), wcel(cv(s0), c0), wcel(cv(s0), c1), wcel(cv(hs0), c0), wcel(cv(hs0), c1))\n  eleq1w(s0, hs0, c0)\n  eleq1w(s0, hs0, c1)\n  cbvabv(hs0, s1, wo(wcel(cv(hs0), c0), wcel(cv(hs0), c1)), wo(wcel(cv(s1), c0), wcel(cv(s1), c1)))\n  orbi12d(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), c0), wcel(cv(hs0), c1), wcel(cv(s1), c0), wcel(cv(s1), c1))\n  eleq1w(hs0, s1, c0)\n  eleq1w(hs0, s1, c1)\n  diff.wo.s(s0, wcel(cv(hs0), c0), wcel(cv(hs0), c1))\n  diff.wcel.s(s0, cv(hs0), c0)\n  diff.wcel.s(s0, cv(hs0), c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wo(wcel(cv(s0), c0), wcel(cv(s0), c1)))\n  diff.hs0.w(wo(wcel(cv(s1), c0), wcel(cv(s1), c1)))\n  diff.wo.s(s1, wcel(cv(hs0), c0), wcel(cv(hs0), c1))\n  diff.wcel.s(s1, cv(hs0), c0)\n  diff.wcel.s(s1, cv(hs0), c1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","pretty":"thm unjust(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ { s0 |(s0 ∈ c0 ∨ s0 ∈ c1)} = { s1 |(s1 ∈ c0 ∨ s1 ∈ c1)}\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  eqtri({ s0 |(s0 ∈ c0 ∨ s0 ∈ c1)}, { s1 |(s1 ∈ c0 ∨ s1 ∈ c1)}, { hs0 |(hs0 ∈ c0 ∨ hs0 ∈ c1)})\n  cbvabv(s0, hs0, (s0 ∈ c0 ∨ s0 ∈ c1), (hs0 ∈ c0 ∨ hs0 ∈ c1))\n  orbi12d(s0 = hs0, s0 ∈ c0, s0 ∈ c1, hs0 ∈ c0, hs0 ∈ c1)\n  eleq1w(s0, hs0, c0)\n  eleq1w(s0, hs0, c1)\n  cbvabv(hs0, s1, (hs0 ∈ c0 ∨ hs0 ∈ c1), (s1 ∈ c0 ∨ s1 ∈ c1))\n  orbi12d(hs0 = s1, hs0 ∈ c0, hs0 ∈ c1, s1 ∈ c0, s1 ∈ c1)\n  eleq1w(hs0, s1, c0)\n  eleq1w(hs0, s1, c1)\n  diff.wo.s(s0, hs0 ∈ c0, hs0 ∈ c1)\n  diff.wcel.s(s0, hs0, c0)\n  diff.wcel.s(s0, hs0, c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w((s0 ∈ c0 ∨ s0 ∈ c1))\n  diff.hs0.w((s1 ∈ c0 ∨ s1 ∈ c1))\n  diff.wo.s(s1, hs0 ∈ c0, hs0 ∈ c1)\n  diff.wcel.s(s1, hs0, c0)\n  diff.wcel.s(s1, hs0, c1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","parent":["eqtri","cbvabv","orbi12d","eleq1w","diff.wo.s","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":[]},{"name":"df-un","content":"Define the union of two classes. Definition 5.6 of [TakeutiZaring] p. 16. For example, ` ( { 1 , 3 } u. { 1 , 8 } ) = { 1 , 3 , 8 } ` ( ~ ex-un ). Contrast this operation with difference ` ( A \\ B ) ` ( ~ df-dif ) and intersection ` ( A i^i B ) ` ( ~ df-in ). For an alternate definition in terms of class difference, requiring no dummy variables, see ~ dfun2 . For union defined in terms of intersection, see ~ dfun3 . (Contributed by NM, 23-Aug-1993.)","origin":"axiom df-un(setvar s0, class c0, class c1) {\n  |- wceq(cun(c0, c1), cab(s0, wo(wcel(cv(s0), c0), wcel(cv(s0), c1))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n}","pretty":"axiom df-un(setvar s0, class c0, class c1) {\n  ⊢ (c0 ⋃ c1)= { s0 |(s0 ∈ c0 ∨ s0 ∈ c1)}\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n}","parent":[],"children":["elun","nfun","unipr","iinuni","fvclss","bnj98"]},{"name":"injust","content":"Soundness justification theorem for ~ df-in . (Contributed by Rodolfo Medina, 28-Apr-2010.) (Proof shortened by Andrew Salmon, 9-Jul-2011.)","origin":"thm injust(setvar s0, setvar s1, class c0, class c1) {\n  |- wceq(cab(s0, wa(wcel(cv(s0), c0), wcel(cv(s0), c1))), cab(s1, wa(wcel(cv(s1), c0), wcel(cv(s1), c1))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n} = {\n  eqtri(cab(s0, wa(wcel(cv(s0), c0), wcel(cv(s0), c1))), cab(s1, wa(wcel(cv(s1), c0), wcel(cv(s1), c1))), cab(hs0, wa(wcel(cv(hs0), c0), wcel(cv(hs0), c1))))\n  cbvabv(s0, hs0, wa(wcel(cv(s0), c0), wcel(cv(s0), c1)), wa(wcel(cv(hs0), c0), wcel(cv(hs0), c1)))\n  anbi12d(wceq(cv(s0), cv(hs0)), wcel(cv(s0), c0), wcel(cv(s0), c1), wcel(cv(hs0), c0), wcel(cv(hs0), c1))\n  eleq1w(s0, hs0, c0)\n  eleq1w(s0, hs0, c1)\n  cbvabv(hs0, s1, wa(wcel(cv(hs0), c0), wcel(cv(hs0), c1)), wa(wcel(cv(s1), c0), wcel(cv(s1), c1)))\n  anbi12d(wceq(cv(hs0), cv(s1)), wcel(cv(hs0), c0), wcel(cv(hs0), c1), wcel(cv(s1), c0), wcel(cv(s1), c1))\n  eleq1w(hs0, s1, c0)\n  eleq1w(hs0, s1, c1)\n  diff.wa.s(s0, wcel(cv(hs0), c0), wcel(cv(hs0), c1))\n  diff.wcel.s(s0, cv(hs0), c0)\n  diff.wcel.s(s0, cv(hs0), c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wa(wcel(cv(s0), c0), wcel(cv(s0), c1)))\n  diff.hs0.w(wa(wcel(cv(s1), c0), wcel(cv(s1), c1)))\n  diff.wa.s(s1, wcel(cv(hs0), c0), wcel(cv(hs0), c1))\n  diff.wcel.s(s1, cv(hs0), c0)\n  diff.wcel.s(s1, cv(hs0), c1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","pretty":"thm injust(setvar s0, setvar s1, class c0, class c1) {\n  ⊢ { s0 |(s0 ∈ c0 ∧ s0 ∈ c1)} = { s1 |(s1 ∈ c0 ∧ s1 ∈ c1)}\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n} = {\n  eqtri({ s0 |(s0 ∈ c0 ∧ s0 ∈ c1)}, { s1 |(s1 ∈ c0 ∧ s1 ∈ c1)}, { hs0 |(hs0 ∈ c0 ∧ hs0 ∈ c1)})\n  cbvabv(s0, hs0, (s0 ∈ c0 ∧ s0 ∈ c1), (hs0 ∈ c0 ∧ hs0 ∈ c1))\n  anbi12d(s0 = hs0, s0 ∈ c0, s0 ∈ c1, hs0 ∈ c0, hs0 ∈ c1)\n  eleq1w(s0, hs0, c0)\n  eleq1w(s0, hs0, c1)\n  cbvabv(hs0, s1, (hs0 ∈ c0 ∧ hs0 ∈ c1), (s1 ∈ c0 ∧ s1 ∈ c1))\n  anbi12d(hs0 = s1, hs0 ∈ c0, hs0 ∈ c1, s1 ∈ c0, s1 ∈ c1)\n  eleq1w(hs0, s1, c0)\n  eleq1w(hs0, s1, c1)\n  diff.wa.s(s0, hs0 ∈ c0, hs0 ∈ c1)\n  diff.wcel.s(s0, hs0, c0)\n  diff.wcel.s(s0, hs0, c1)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w((s0 ∈ c0 ∧ s0 ∈ c1))\n  diff.hs0.w((s1 ∈ c0 ∧ s1 ∈ c1))\n  diff.wa.s(s1, hs0 ∈ c0, hs0 ∈ c1)\n  diff.wcel.s(s1, hs0, c0)\n  diff.wcel.s(s1, hs0, c1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n}","parent":["eqtri","cbvabv","anbi12d","eleq1w","diff.wa.s","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":[]},{"name":"df-in","content":"Define the intersection of two classes. Definition 5.6 of [TakeutiZaring] p. 16. For example, ` ( { 1 , 3 } i^i { 1 , 8 } ) = { 1 } ` ( ~ ex-in ). Contrast this operation with union ` ( A u. B ) ` ( ~ df-un ) and difference ` ( A \\ B ) ` ( ~ df-dif ). For alternate definitions in terms of class difference, requiring no dummy variables, see ~ dfin2 and ~ dfin4 . For intersection defined in terms of union, see ~ dfin3 . (Contributed by NM, 29-Apr-1994.)","origin":"axiom df-in(setvar s0, class c0, class c1) {\n  |- wceq(cin(c0, c1), cab(s0, wa(wcel(cv(s0), c0), wcel(cv(s0), c1))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n}","pretty":"axiom df-in(setvar s0, class c0, class c1) {\n  ⊢ (c0 ⋂ c1)= { s0 |(s0 ∈ c0 ∧ s0 ∈ c1)}\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n}","parent":[],"children":["dfin5","dfss2","elin","disj","iinxprg","disjex","disjexc","eulerpartlemt","iocinico","csbingVD"]},{"name":"dfin5","content":"Alternate definition for the intersection of two classes. (Contributed by NM, 6-Jul-2005.)","origin":"thm dfin5(setvar s0, class c0, class c1) {\n  |- wceq(cin(c0, c1), crab(s0, c0, wcel(cv(s0), c1)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  eqtr4i(cin(c0, c1), crab(s0, c0, wcel(cv(s0), c1)), cab(s0, wa(wcel(cv(s0), c0), wcel(cv(s0), c1))))\n  df-in(s0, c0, c1)\n  df-rab(s0, c0, wcel(cv(s0), c1))\n}","pretty":"thm dfin5(setvar s0, class c0, class c1) {\n  ⊢ (c0 ⋂ c1)= { s0 ∈ c0 | s0 ∈ c1 }\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  eqtr4i((c0 ⋂ c1), { s0 ∈ c0 | s0 ∈ c1 }, { s0 |(s0 ∈ c0 ∧ s0 ∈ c1)})\n  df-in(s0, c0, c1)\n  df-rab(s0, c0, s0 ∈ c1)\n}","parent":["eqtr4i","df-in","df-rab"],"children":["nfin","rabbi2dva","dfss7","dfepfr","epfrc","pmtrmvd","ablfaclem3","mretopd","ptclsg","xkopt","iscmet3","xrlimcnp","ppiub","xppreima","fpwrelmapffs","orvcelval","sstotbnd2","glbconN","2polssN","rfovcnvf1od","fsovcnvlem","ntrneifv3","ntrneifv4","clsneifv3","clsneifv4","neicvgfv"]},{"name":"dfdif2","content":"Alternate definition of class difference. (Contributed by NM, 25-Mar-2004.)","origin":"thm dfdif2(setvar s0, class c0, class c1) {\n  |- wceq(cdif(c0, c1), crab(s0, c0, wn(wcel(cv(s0), c1))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  eqtr4i(cdif(c0, c1), crab(s0, c0, wn(wcel(cv(s0), c1))), cab(s0, wa(wcel(cv(s0), c0), wn(wcel(cv(s0), c1)))))\n  df-dif(s0, c0, c1)\n  df-rab(s0, c0, wn(wcel(cv(s0), c1)))\n}","pretty":"thm dfdif2(setvar s0, class c0, class c1) {\n  ⊢ (c0 \\ c1)= { s0 ∈ c0 | ¬ s0 ∈ c1 }\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  eqtr4i((c0 \\ c1), { s0 ∈ c0 | ¬ s0 ∈ c1 }, { s0 |(s0 ∈ c0 ∧ ¬ s0 ∈ c1)})\n  df-dif(s0, c0, c1)\n  df-rab(s0, c0, ¬ s0 ∈ c1)\n}","parent":["eqtr4i","df-dif","df-rab"],"children":["dfdif3","difeq1","difeq2","nfdif","difidALT","ordintdif","kmlem3","incexc2","cnambfre"]},{"name":"eldif","content":"Expansion of membership in a class difference. (Contributed by NM, 29-Apr-1994.)","origin":"thm eldif(class c0, class c1, class c2) {\n  |- wb(wcel(c0, cdif(c1, c2)), wa(wcel(c0, c1), wn(wcel(c0, c2))))\n} = {\n  pm5.21nii(wcel(c0, cdif(c1, c2)), wa(wcel(c0, c1), wn(wcel(c0, c2))), wcel(c0, universe))\n  elex(c0, cdif(c1, c2))\n  adantr(wcel(c0, c1), wn(wcel(c0, c2)), wcel(c0, universe))\n  elex(c0, c1)\n  elab2g(hs0, c0, universe, cdif(c1, c2), wa(wcel(c0, c1), wn(wcel(c0, c2))), wa(wcel(cv(hs0), c1), wn(wcel(cv(hs0), c2))))\n  anbi12d(wceq(cv(hs0), c0), wcel(cv(hs0), c1), wn(wcel(cv(hs0), c2)), wcel(c0, c1), wn(wcel(c0, c2)))\n  eleq1(cv(hs0), c0, c1)\n  notbid(wceq(cv(hs0), c0), wcel(cv(hs0), c2), wcel(c0, c2))\n  eleq1(cv(hs0), c0, c2)\n  df-dif(hs0, c1, c2)\n  diff.hs0.c(c0)\n  diff.hs0.w(wa(wcel(c0, c1), wn(wcel(c0, c2))))\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n}","pretty":"thm eldif(class c0, class c1, class c2) {\n  ⊢ (c0 ∈(c1 \\ c2)↔(c0 ∈ c1 ∧ ¬ c0 ∈ c2))\n} = {\n  pm5.21nii(c0 ∈(c1 \\ c2), (c0 ∈ c1 ∧ ¬ c0 ∈ c2), c0 ∈ 𝕌)\n  elex(c0, (c1 \\ c2))\n  adantr(c0 ∈ c1, ¬ c0 ∈ c2, c0 ∈ 𝕌)\n  elex(c0, c1)\n  elab2g(hs0, c0, universe, (c1 \\ c2), (c0 ∈ c1 ∧ ¬ c0 ∈ c2), (hs0 ∈ c1 ∧ ¬ hs0 ∈ c2))\n  anbi12d(hs0 = c0, hs0 ∈ c1, ¬ hs0 ∈ c2, c0 ∈ c1, ¬ c0 ∈ c2)\n  eleq1(hs0, c0, c1)\n  notbid(hs0 = c0, hs0 ∈ c2, c0 ∈ c2)\n  eleq1(hs0, c0, c2)\n  df-dif(hs0, c1, c2)\n  diff.hs0.c(c0)\n  diff.hs0.w((c0 ∈ c1 ∧ ¬ c0 ∈ c2))\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n}","parent":["pm5.21nii","elex","adantr","elab2g","anbi12d","eleq1","notbid","df-dif","diff.hs0.c","diff.hs0.w"],"children":["eldifd","eldifad","eldifbd","difeqri","eldifi","eldifn","neldif","difdif","ddif","ssconb","sscon","ssdif","raldifb","elsymdif","symdif2OLD","dfss4","dfun2","dfin2","difin","indifdir","undif3","difin2","dfnul2OLD","ssdif0","difin0ss","inssdif0","reldisj","disj3","undif4","pssnel","inundif","ssundif","eldifpr","elpwunsn","eldiftp","eldifsn","eldifsnneqOLD","difprsnss","iundif2","iindif2","disjss3","brdif","difopab","intirr","cnvdif","difxp","xpdifid","wfi","ordunidif","onmindif","imadif","dffv2","eldifpw","ressuppssdif","extmptsuppeq","suppss","suppssr","suppss2","ondif2","oelim2","boxcutc","brsdom","brsdom2","php3","unblem1","unfilem1","elfi2","dfsup2","ordtypelem7","kmlem4","ackbij1lem18","infpssr","isf34lem4","fin17","fin67","dffin7-2","fin1a2lem6","axcclem","pwfseqlem3","grothprim","xrlenlt","nzadd","irradd","irrmul","difreicc","modirr","hashinf","sumss","fsumss","prodss","fprodss","fprodn0f","rpnnen2lem12","dvdsaddre2b","sumeven","bitscmp","lcmfunsnlem2","iserodd","prmodvdslcmf","symgfix2","pmtrdifellem4","sylow2alem2","efgsfo","gsumval3","gsum2dlem1","gsum2dlem2","ablfac1eu","gsumdixp","isnirred","isirred2","irredn0","lsppratlem1","lbsextlem2","mplsubrglem","mplcoe1","mplcoe5","opsrtoslem2","xrsmgmdifsgrp","psgnodpm","symgmatr01lem","elcls","isclo","maxlp","restntr","isreg2","cmpcld","hausdiag","txkgen","kqcldsat","ufinffr","fin1aufil","alexsublem","alexsubALTlem3","ptcmplem5","blcld","shftmbl","vitalilem4","vitalilem5","vitali","mbfeqalem1","itg1val2","itg10a","itg1ge0a","mbfi1fseqlem4","itg2uba","itg2splitlem","itg2monolem1","itg2cnlem1","itg2cnlem2","itgss","dvtaylp","pserdvlem2","ellogdm","relogbcxp","cxplogb","logbmpt","atandm","atans2","eldmgm","igamgam","igamf","igamcl","lgam1","gam1","wilthlem2","basellem3","fsumvma","dchrelbas2","dchreq","dchrsum","gausslemma2dlem4","2sqreultblem","dchrisum0fno1","rplogsum","islnopp","frgrncvvdeq","fusgr2wsp2nb","eleigvec","strlem1","strlem5","hstrlem5","difrab2","suppss3","fsuppcurry1","fsuppcurry2","xrdifh","nndiffz1","ordtconnlem1","esumpinfval","eulerpartlems","eulerpartlemgc","eulerpartlemb","eulerpartlemf","eulerpartlemt","eulerpartlemgh","ballotlemodife","ballotth","reprdifc","hgt750lemb","elmrsubrn","mrsubvrs","dftr6","dffr5","frpoind","frind","brsset","dfon3","ellimits","dffun10","elfuns","fullfunfv","dfrecs2","dfrdg4","dfint3","hfext","onsucsuccmpi","bj-rest10b","iundif1","lindsadd","poimirlem2","poimirlem11","poimirlem12","poimirlem18","poimirlem21","poimirlem22","poimirlem30","itg2addnclem","ftc1anclem5","areacirc","fdc","isfldidl","opelvvdif","iswatN","dochsnkrlem1","rabdif","ellz1","pellexlem4","pellexlem5","pwinfig","elnonrel","clsk3nimkb","ntrclselnel1","ntrneiel2","ntrneik4w","compel","undif3VD","limcrecl","icccncfext","dvmptfprodlem","stoweidlem26","stoweidlem39","stoweidlem52","fourierdlem42","etransclem18","etransclem46","ovolval4lem1","requad01","0ringdif","0ring1eq0","lindslinindsimp1","dignn0fr"]},{"name":"eldifd","content":"If a class is in one class and not another, it is also in their difference. One-way deduction form of ~ eldif . (Contributed by David Moews, 1-May-2017.)","origin":"thm eldifd(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wcel(c0, cdif(c1, c2)))\n  -| wi(w0, wcel(c0, c1))\n  -| wi(w0, wn(wcel(c0, c2)))\n} = {\n  sylanbrc(w0, wcel(c0, cdif(c1, c2)), wcel(c0, c1), wn(wcel(c0, c2)))\n  eldif(c0, c1, c2)\n}","pretty":"thm eldifd(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 → c0 ∈(c1 \\ c2))\n  ⊣ (w0 → c0 ∈ c1)\n  ⊣ (w0 → ¬ c0 ∈ c2)\n} = {\n  sylanbrc(w0, c0 ∈(c1 \\ c2), c0 ∈ c1, ¬ c0 ∈ c2)\n  eldif(c0, c1, c2)\n}","parent":["sylanbrc","eldif"],"children":["eqoreldif","xpdifid","ressuppssdif","oaf1o","findcard2d","cantnflem1","cantnflem2","fin23lem26","isf34lem4","isfin7-2","axdc3lem4","axdc4lem","ttukeylem7","pwfseqlem1","pwfseqlem3","hashf1lem1","seqcoll","seqcoll2","rlimcld2","sumrblem","fsumcvg","fsumss","incexclem","prodrblem","fprodcvg","fprodss","fprodn0f","ruclem12","sqrt2irr0","coprmproddvdslem","nnoddn2prmb","prmreclem5","ramub1lem1","mreexd","frgpnabllem1","gsumzaddlem","gsum2d","dmdprdsplitlem","pgpfac1lem2","pgpfac1lem3","irredrmul","lsppratlem3","lbsextlem4","psgnodpmr","frlmsslsp","regsep2","1stckgen","regr1lem","opnsubg","zcld","recld2","bcthlem4","iundisj","iblss2","itgeqa","limcnlp","dvloglem","dvlog2lem","2irrexpq","logbgcd1irr","ressatans","regamcl","facgam","wilthlem2","2lgslem2","tgelrnln","incistruhgr","upgrres1","usgr2pthlem","iundisjf","iundisjfi","submateqlem1","submateqlem2","elzrhunit","qqhval2","esumrnmpt2","inelpisys","plymulx","signstfvneq0","noetalem3","onint1","lindsadd","lindsenlbs","poimirlem23","poimirlem30","dvasin","areacirclem4","pridlc3","nelsubginvcld","nelsubgcld","rtprmirr","prjspersym","prjspreln0","prjspvs","rmspecsqrtnq","rmspecnonsq","disjf1o","difmap","difmapsn","supminfxr2","icoiccdif","iccdificc","climrec","limciccioolb","limcrecl","sumnnodd","lptioo2","lptioo1","limcicciooub","lptre2pt","reclimc","cnrefiisplem","icccncfext","fperdvper","dvnmul","itgcoscmulx","itgsincmulx","stoweidlem34","stoweidlem39","stoweidlem57","wallispi","stirlinglem8","dirkercncflem2","dirkercncflem4","fourierdlem38","fourierdlem40","fourierdlem42","fourierdlem46","fourierdlem53","fourierdlem56","fourierdlem58","fourierdlem62","fourierdlem74","fourierdlem75","fourierdlem76","fourierdlem78","fourierdlem93","fourierdlem103","fourierdlem104","fouriersw","elaa2","etransc","gsumge0cl","sge0fodjrnlem","iundjiun","meadjiunlem","meaiininclem","caragendifcl","caratheodorylem1","hoidmvlelem1","hoidmvlelem2","hoidmvlelem4","hspdifhsp","hspmbllem2","preimagelt","preimalegt","sqrtnegnre","requad01","dig1"]},{"name":"eldifad","content":"If a class is in the difference of two classes, it is also in the minuend. One-way deduction form of ~ eldif . (Contributed by David Moews, 1-May-2017.)","origin":"thm eldifad(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wcel(c0, c1))\n  -| wi(w0, wcel(c0, cdif(c1, c2)))\n} = {\n  simpld(w0, wcel(c0, c1), wn(wcel(c0, c2)))\n  sylib(w0, wa(wcel(c0, c1), wn(wcel(c0, c2))), wcel(c0, cdif(c1, c2)))\n  eldif(c0, c1, c2)\n}","pretty":"thm eldifad(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 → c0 ∈ c1)\n  ⊣ (w0 → c0 ∈(c1 \\ c2))\n} = {\n  simpld(w0, c0 ∈ c1, ¬ c0 ∈ c2)\n  sylib(w0, (c0 ∈ c1 ∧ ¬ c0 ∈ c2), c0 ∈(c1 \\ c2))\n  eldif(c0, c1, c2)\n}","parent":["simpld","sylib","eldif"],"children":["xpdifid","unblem1","cantnflem3","cantnflem4","oef1o","infxpenc","acndom2","ackbij1lem18","infpssrlem3","fin23lem26","fin23lem30","pwfseqlem4a","expclz","symgextf","pmtrfinv","symggen","efgsdmi","efgs1b","efgsp1","efgsres","efgsresOLD","efgredlemf","efgredlemd","efgredlem","efgredlemOLD","efgrelexlemb","gsum2d2lem","pgpfac1lem2","pgpfac1lem3a","pgpfac1lem3","pgpfac1lem4","isdrng2","lvecinv","lspsncmp","lspsnne1","lspsnnecom","lspabs2","lspsneu","lspdisjb","lspexch","lspindp1","lvecindp2","lspsolv","lspsnat","lsppratlem1","lsppratlem2","fidomndrnglem","frlmssuvc2","maducoeval2","hauscmplem","1stccnp","imasdsf1olem","rrxmetlem","divcncf","dvrec","dvmptdiv","ftc1lem6","elqaalem1","elqaalem3","ulmdvlem3","abelthlem6","abelthlem7a","abelthlem7","logtayl","dmgmn0","dmgmaddnn0","dmgmdivn0","lgamgulmlem2","lgamgulmlem3","lgamgulmlem5","lgamgulmlem6","lgamgulm2","lgambdd","lgamucov","lgamcvg2","gamcvg","gamcvg2lem","ftalem3","lgsqrlem1","lgsqrlem2","lgsqrlem3","lgsqrlem4","lgseisenlem1","lgseisenlem2","lgseisenlem3","lgseisenlem4","lgseisen","lgsquadlem1","lgsquadlem2","lgsquadlem3","chebbnd1lem1","dchrisum0re","dchrisum0lema","dchrisum0lem1b","dchrisum0lem1","dchrisum0lem2a","dchrisum0lem2","tgisline","elntg","uhgrss","upgrex","edguhgr","1loopgrvd0","disjiunel","suppovss","lindssn","lindfpropd","lindsunlem","fedgmullem1","fedgmullem2","submatminr1","qtophaus","qqhval2","esummono","gsumesum","esum2dlem","measvuni","fiunelcarsg","sitgclg","sitgaddlemb","eulerpartlemsv2","eulerpartlemsv3","eulerpartlemgc","eulerpartlemv","signstfvneq0","signstfvcl","signstfveq0a","signstfveq0","signstfveq0OLD","signsvfn","signsvtp","signsvtn","signsvfpn","signsvfnn","signlem0","hgt750leme","iprodgam","poimirlem2","rrndstprj2","lsatelbN","lsatfixedN","lkreqN","lkrlspeqN","dochnel2","dochnel","djhcvat42","dochsnshp","dochexmidat","dochsnkr","dochsnkr2","dochsnkr2cl","dochflcl","dochfl1","dochfln0","lcfl6lem","lcfl7lem","lcfl8b","lclkrlem2a","lclkrlem2b","lclkrlem2c","lclkrlem2d","lclkrlem2e","lclkrlem2f","lcfrlem14","lcfrlem15","lcfrlem16","lcfrlem17","lcfrlem18","lcfrlem19","lcfrlem20","lcfrlem21","lcfrlem23","lcfrlem25","lcfrlem26","lcfrlem35","lcfrlem36","mapdn0","mapdpglem29","mapdpglem24","baerlem3lem1","baerlem5alem1","baerlem5blem1","baerlem3lem2","baerlem5alem2","baerlem5blem2","baerlem5amN","baerlem5bmN","baerlem5abmN","mapdindp0","mapdindp1","mapdindp2","mapdindp3","mapdindp4","mapdheq2","mapdheq4lem","mapdheq4","mapdh6lem1N","mapdh6lem2N","mapdh6aN","mapdh6bN","mapdh6cN","mapdh6dN","mapdh6eN","mapdh6fN","mapdh6gN","mapdh6hN","mapdh6iN","mapdh7eN","mapdh7cN","mapdh7dN","mapdh7fN","mapdh75e","mapdh75fN","hvmaplfl","mapdhvmap","mapdh8aa","mapdh8ab","mapdh8ad","mapdh8b","mapdh8c","mapdh8d0N","mapdh8d","mapdh8e","mapdh9a","mapdh9aOLDN","hdmap1val2","hdmap1eq","hdmap1valc","hdmap1eq2","hdmap1eq4N","hdmap1l6lem1","hdmap1l6lem2","hdmap1l6a","hdmap1l6b","hdmap1l6c","hdmap1l6d","hdmap1l6e","hdmap1l6f","hdmap1l6g","hdmap1l6h","hdmap1l6i","hdmap1eulem","hdmap1eulemOLDN","hdmapcl","hdmapval2lem","hdmapval0","hdmapeveclem","hdmapevec","hdmapval3lemN","hdmapval3N","hdmap10lem","hdmap11lem1","hdmap11lem2","hdmapnzcl","hdmaprnlem3N","hdmaprnlem3uN","hdmaprnlem4N","hdmaprnlem7N","hdmaprnlem8N","hdmaprnlem9N","hdmaprnlem3eN","hdmaprnlem16N","hdmap14lem1","hdmap14lem2N","hdmap14lem3","hdmap14lem4a","hdmap14lem6","hdmap14lem8","hdmap14lem9","hdmap14lem10","hdmap14lem11","hdmap14lem12","hgmaprnlem1N","hgmaprnlem2N","hgmaprnlem3N","hgmaprnlem4N","hdmapip1","hdmapinvlem1","hdmapinvlem2","hdmapinvlem3","hdmapinvlem4","hdmapglem5","hgmapvvlem1","hgmapvvlem2","hgmapvvlem3","hdmapglem7a","hdmapglem7b","hdmapglem7","nelsubginvcld","nelsubgcld","nelsubgsubcld","dffltz","qirropth","rmxyneg","rmxm1","rmxluc","rmxdbl","ltrmxnn0","jm2.19lem1","jm2.23","rmxdiophlem","aomclem2","bccm1k","dstregt0","fprodexp","fprodabs2","mccllem","fprodcnlem","climrec","climdivf","islpcn","lptre2pt","0ellimcdiv","reclimc","divlimc","cncficcgt0","dvdivf","stoweidlem34","stoweidlem43","etransclem46","etransclem47","etransclem48","hsphoidmvle2","hsphoidmvle","hoidmvlelem3","hoidmvlelem4","hspdifhsp","readdcnnred","resubcnnred","recnmulnred","cndivrenred","zrzeroorngc","zrtermoringc","zrninitoringc","nzerooringczr"]},{"name":"eldifbd","content":"If a class is in the difference of two classes, it is not in the subtrahend. One-way deduction form of ~ eldif . (Contributed by David Moews, 1-May-2017.)","origin":"thm eldifbd(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wn(wcel(c0, c1)))\n  -| wi(w0, wcel(c0, cdif(c2, c1)))\n} = {\n  simprd(w0, wn(wcel(c0, c1)), wcel(c0, c2))\n  sylib(w0, wa(wcel(c0, c2), wn(wcel(c0, c1))), wcel(c0, cdif(c2, c1)))\n  eldif(c0, c2, c1)\n}","pretty":"thm eldifbd(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 → ¬ c0 ∈ c1)\n  ⊣ (w0 → c0 ∈(c2 \\ c1))\n} = {\n  simprd(w0, ¬ c0 ∈ c1, c0 ∈ c2)\n  sylib(w0, (c0 ∈ c2 ∧ ¬ c0 ∈ c1), c0 ∈(c2 \\ c1))\n  eldif(c0, c2, c1)\n}","parent":["simprd","sylib","eldif"],"children":["xpdifid","boxcutc","infeq5i","cantnflem2","ackbij1lem18","infpssrlem4","fin23lem30","domtriomlem","pwfseqlem4","dvdsaddre2b","dprdfadd","pgpfac1lem2","pgpfac1lem3a","pgpfac1lem3","lspsolv","lsppratlem3","mplsubrglem","frlmssuvc2","hauscmplem","1stccnp","1stckgen","alexsublem","bcthlem4","plyeq0lem","ftalem3","tglngne","1loopgrvd0","disjiunel","ofpreima2","fedgmullem2","qqhval2","esum2dlem","carsgclctunlem1","sibfof","sitgaddlemb","eulerpartlemsv2","eulerpartlemv","eulerpartlemgs2","dochnel2","nelsubginvcld","nelsubgcld","fltne","rmspecnonsq","disjiun2","dstregt0","fprodexp","fprodabs2","fprodcnlem","lptre2pt","dvnprodlem2","stoweidlem43","fourierdlem66","hsphoidmvle2","hsphoidmvle","hoidmvlelem1","hoidmvlelem2","hoidmvlelem3","hoidmvlelem4","readdcnnred","resubcnnred","recnmulnred","cndivrenred"]}]}