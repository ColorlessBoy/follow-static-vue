{"index":925,"title":"Lindel&ouml;f spaces","content":"","blocks":[{"name":"cldlf","content":"Extend class notation with the class of all Lindel&ouml;f spaces.","origin":"const class cldlf { Ldlf }","pretty":"","parent":[],"children":[]},{"name":"diff.cldlf.s","content":"","origin":"axiom diff.cldlf.s(setvar s0) {\n  |- diffsc(s0, cldlf)\n}","pretty":"axiom diff.cldlf.s(setvar s0) {\n  ⊢ d(s0, Ldlf)\n}","parent":[],"children":[]},{"name":"diff.cldlf.c","content":"","origin":"axiom diff.cldlf.c(class c0) {\n  |- diffcc(cldlf, c0)\n}","pretty":"axiom diff.cldlf.c(class c0) {\n  ⊢ d(Ldlf, c0)\n}","parent":[],"children":[]},{"name":"diff.cldlf.w","content":"","origin":"axiom diff.cldlf.w(wff w0) {\n  |- diffcw(cldlf, w0)\n}","pretty":"axiom diff.cldlf.w(wff w0) {\n  ⊢ d(Ldlf, w0)\n}","parent":[],"children":[]},{"name":"df-ldlf","content":"Definition of a Lindel&ouml;f space. A Lindel&ouml;f space is a topological space in which every open cover has a countable subcover. Definition 1 of [BourbakiTop2] p. 195. (Contributed by Thierry Arnoux, 30-Jan-2020.)","origin":"axiom df-ldlf(setvar s0) {\n  |- wceq(cldlf, ccref(cab(s0, wbr(cv(s0), cdom, com))))\n}","pretty":"axiom df-ldlf(setvar s0) {\n  ⊢ Ldlf = CovHasRef({ s0 | s0[≼]_om })\n}","parent":[],"children":["ldlfcntref"]},{"name":"ldlfcntref","content":"Every open cover of a Lindel&ouml;f space has a countable refinement. (Contributed by Thierry Arnoux, 1-Feb-2020.)","origin":"thm ldlfcntref(setvar s0, class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cldlf), wss(c1, c0), wceq(c2, cuni(c1))), wrex(s0, cpw(c0), wa(wbr(cv(s0), cdom, com), wbr(cv(s0), cref, c1))))\n  -| wceq(c2, cuni(c0))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  crefdf(s0, c0, cldlf, c1, c2, cab(hs0, wbr(cv(hs0), cdom, com)), wbr(cv(s0), cdom, com))\n  df-ldlf(hs0)\n  biimpi(wcel(cv(s0), cab(hs0, wbr(cv(hs0), cdom, com))), wbr(cv(s0), cdom, com))\n  elab(hs0, cv(s0), wbr(cv(hs0), cdom, com), wbr(cv(s0), cdom, com))\n  vex(s0)\n  breq1(cv(hs0), cv(s0), cdom, com)\n  diff.cab.s(s0, hs0, wbr(cv(hs0), cdom, com))\n  diff.wbr.s(s0, cv(hs0), cdom, com)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cdom.s(s0)\n  diff.com.s(s0)\n  diff.hs0.c(cv(s0))\n  diff.hs0.w(wbr(cv(s0), cdom, com))\n}","pretty":"thm ldlfcntref(setvar s0, class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ Ldlf ∧ c1 ⊆ c0 ∧ c2 = ⋃ c1)→ ∃(s0 ∈ P(c0),(s0[≼]_om ∧ s0[Ref]c1)))\n  ⊣ c2 = ⋃ c0\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  crefdf(s0, c0, cldlf, c1, c2, { hs0 | hs0[≼]_om }, s0[≼]_om)\n  df-ldlf(hs0)\n  biimpi(s0 ∈ { hs0 | hs0[≼]_om }, s0[≼]_om)\n  elab(hs0, s0, hs0[≼]_om, s0[≼]_om)\n  vex(s0)\n  breq1(hs0, s0, cdom, com)\n  diff.cab.s(s0, hs0, hs0[≼]_om)\n  diff.wbr.s(s0, hs0, cdom, com)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cdom.s(s0)\n  diff.com.s(s0)\n  diff.hs0.c(s0)\n  diff.hs0.w(s0[≼]_om)\n}","parent":["crefdf","df-ldlf","biimpi","elab","vex","breq1","diff.cab.s","diff.wbr.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.cdom.s","diff.com.s","diff.hs0.c","diff.hs0.w"],"children":[]}]}