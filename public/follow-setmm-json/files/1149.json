{"index":1149,"title":"Complements on direct products","content":"A few utility theorems on direct products.","blocks":[{"name":"bj-xpimasn","content":"The image of a singleton, general case. [Change and relabel ~ xpimasn accordingly, maybe to xpima2sn.] (Contributed by BJ, 6-Apr-2019.)","origin":"thm bj-xpimasn(class c0, class c1, class c2) {\n  |- wceq(cima(cxp(c0, c1), csn(c2)), cif(c1, emptycls, wcel(c2, c0)))\n} = {\n  3eqtri(cima(cxp(c0, c1), csn(c2)), cif(c1, emptycls, wcel(c2, c0)), cif(emptycls, c1, wceq(cin(c0, csn(c2)), emptycls)), cif(emptycls, c1, wn(wcel(c2, c0))))\n  xpima(c0, c1, csn(c2))\n  ifbieq2i(emptycls, c1, c1, wceq(cin(c0, csn(c2)), emptycls), wn(wcel(c2, c0)))\n  disjsn(c0, c2)\n  eqid(c1)\n  ifnot(emptycls, c1, wcel(c2, c0))\n}","pretty":"thm bj-xpimasn(class c0, class c1, class c2) {\n  ⊢ ((c0 × c1)\" { c2 })= if(c2 ∈ c0, c1, ∅)\n} = {\n  3eqtri(((c0 × c1)\" { c2 }), if(c2 ∈ c0, c1, ∅), if((c0 ⋂ { c2 })= ∅, ∅, c1), if(¬ c2 ∈ c0, ∅, c1))\n  xpima(c0, c1, { c2 })\n  ifbieq2i(emptycls, c1, c1, (c0 ⋂ { c2 })= ∅, ¬ c2 ∈ c0)\n  disjsn(c0, c2)\n  eqid(c1)\n  ifnot(emptycls, c1, c2 ∈ c0)\n}","parent":["3eqtri","xpima","ifbieq2i","disjsn","eqid","ifnot"],"children":["bj-xpima1sn","bj-xpima2sn"]},{"name":"bj-xpima1sn","content":"The image of a singleton by a direct product, empty case. [Change and relabel ~ xpimasn accordingly, maybe to xpima2sn.] (Contributed by BJ, 6-Apr-2019.)","origin":"thm bj-xpima1sn(class c0, class c1, class c2) {\n  |- wi(wnel(c0, c1), wceq(cima(cxp(c1, c2), csn(c0)), emptycls))\n} = {\n  syl5eq(cima(cxp(c1, c2), csn(c0)), emptycls, cif(c2, emptycls, wcel(c0, c1)), wnel(c0, c1))\n  bj-xpimasn(c1, c2, c0)\n  sylbi(wnel(c0, c1), wceq(cif(c2, emptycls, wcel(c0, c1)), emptycls), wn(wcel(c0, c1)))\n  df-nel(c0, c1)\n  iffalse(c2, emptycls, wcel(c0, c1))\n}","pretty":"thm bj-xpima1sn(class c0, class c1, class c2) {\n  ⊢ (c0 ∉ c1 →((c1 × c2)\" { c0 })= ∅)\n} = {\n  syl5eq(((c1 × c2)\" { c0 }), emptycls, if(c0 ∈ c1, c2, ∅), c0 ∉ c1)\n  bj-xpimasn(c1, c2, c0)\n  sylbi(c0 ∉ c1, if(c0 ∈ c1, c2, ∅)= ∅, ¬ c0 ∈ c1)\n  df-nel(c0, c1)\n  iffalse(c2, emptycls, c0 ∈ c1)\n}","parent":["syl5eq","bj-xpimasn","sylbi","df-nel","iffalse"],"children":["bj-projval"]},{"name":"bj-xpima1snALT","content":"Alternate proof of ~ bj-xpima1sn . (Contributed by BJ, 6-Apr-2019.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-xpima1snALT(class c0, class c1, class c2) {\n  |- wi(wnel(c0, c1), wceq(cima(cxp(c1, c2), csn(c0)), emptycls))\n} = {\n  sylbir(wnel(c0, c1), wceq(cima(cxp(c1, c2), csn(c0)), emptycls), wceq(cin(c1, csn(c0)), emptycls))\n  bitr4i(wceq(cin(c1, csn(c0)), emptycls), wnel(c0, c1), wn(wcel(c0, c1)))\n  disjsn(c1, c0)\n  df-nel(c0, c1)\n  xpima1(c1, csn(c0), c2)\n}","pretty":"thm bj-xpima1snALT(class c0, class c1, class c2) {\n  ⊢ (c0 ∉ c1 →((c1 × c2)\" { c0 })= ∅)\n} = {\n  sylbir(c0 ∉ c1, ((c1 × c2)\" { c0 })= ∅, (c1 ⋂ { c0 })= ∅)\n  bitr4i((c1 ⋂ { c0 })= ∅, c0 ∉ c1, ¬ c0 ∈ c1)\n  disjsn(c1, c0)\n  df-nel(c0, c1)\n  xpima1(c1, { c0 }, c2)\n}","parent":["sylbir","bitr4i","disjsn","df-nel","xpima1"],"children":[]},{"name":"bj-xpima2sn","content":"The image of a singleton by a direct product, nonempty case. [To replace ~ xpimasn ] (Contributed by BJ, 6-Apr-2019.) (Proof modification is discouraged.)","origin":"thm bj-xpima2sn(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wceq(cima(cxp(c1, c2), csn(c0)), c2))\n} = {\n  syl5eq(cima(cxp(c1, c2), csn(c0)), c2, cif(c2, emptycls, wcel(c0, c1)), wcel(c0, c1))\n  bj-xpimasn(c1, c2, c0)\n  iftrue(c2, emptycls, wcel(c0, c1))\n}","pretty":"thm bj-xpima2sn(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 →((c1 × c2)\" { c0 })= c2)\n} = {\n  syl5eq(((c1 × c2)\" { c0 }), c2, if(c0 ∈ c1, c2, ∅), c0 ∈ c1)\n  bj-xpimasn(c1, c2, c0)\n  iftrue(c2, emptycls, c0 ∈ c1)\n}","parent":["syl5eq","bj-xpimasn","iftrue"],"children":["bj-projval"]},{"name":"bj-xpnzex","content":"If the first factor of a product is nonempty, and the product is a set, then the second factor is a set. UPDATE: this is actually the curried (exported) form of ~ xpexcnv (up to commutation in the product). (Contributed by BJ, 6-Oct-2018.) (Proof modification is discouraged.)","origin":"thm bj-xpnzex(class c0, class c1, class c2) {\n  |- wi(wne(c0, emptycls), wi(wcel(cxp(c0, c1), c2), wcel(c1, universe)))\n} = {\n  pm2.61ine(c1, emptycls, wi(wne(c0, emptycls), wi(wcel(cxp(c0, c1), c2), wcel(c1, universe))))\n  a1d(wceq(c1, emptycls), wne(c0, emptycls), wi(wcel(cxp(c0, c1), c2), wcel(c1, universe)))\n  a1d(wceq(c1, emptycls), wcel(cxp(c0, c1), c2), wcel(c1, universe))\n  ax-mp(wi(wceq(c1, emptycls), wcel(c1, universe)), wcel(emptycls, universe))\n  0ex()\n  eleq1a(emptycls, universe, c1)\n  expcom(wne(c1, emptycls), wne(c0, emptycls), wi(wcel(cxp(c0, c1), c2), wcel(c1, universe)))\n  sylbi(wa(wne(c0, emptycls), wne(c1, emptycls)), wi(wcel(cxp(c0, c1), c2), wcel(c1, universe)), wne(cxp(c0, c1), emptycls))\n  xpnz(c0, c1)\n  expcom(wne(cxp(c0, c1), emptycls), wcel(cxp(c0, c1), c2), wcel(c1, universe))\n  simprd(wa(wcel(cxp(c0, c1), c2), wne(cxp(c0, c1), emptycls)), wcel(c1, universe), wcel(c0, universe))\n  xpexr2(c0, c1, c2)\n}","pretty":"thm bj-xpnzex(class c0, class c1, class c2) {\n  ⊢ (c0 ≠ ∅ →((c0 × c1)∈ c2 → c1 ∈ 𝕌))\n} = {\n  pm2.61ine(c1, emptycls, (c0 ≠ ∅ →((c0 × c1)∈ c2 → c1 ∈ 𝕌)))\n  a1d(c1 = ∅, c0 ≠ ∅, ((c0 × c1)∈ c2 → c1 ∈ 𝕌))\n  a1d(c1 = ∅, (c0 × c1)∈ c2, c1 ∈ 𝕌)\n  ax-mp((c1 = ∅ → c1 ∈ 𝕌), ∅ ∈ 𝕌)\n  0ex()\n  eleq1a(emptycls, universe, c1)\n  expcom(c1 ≠ ∅, c0 ≠ ∅, ((c0 × c1)∈ c2 → c1 ∈ 𝕌))\n  sylbi((c0 ≠ ∅ ∧ c1 ≠ ∅), ((c0 × c1)∈ c2 → c1 ∈ 𝕌), (c0 × c1)≠ ∅)\n  xpnz(c0, c1)\n  expcom((c0 × c1)≠ ∅, (c0 × c1)∈ c2, c1 ∈ 𝕌)\n  simprd(((c0 × c1)∈ c2 ∧(c0 × c1)≠ ∅), c1 ∈ 𝕌, c0 ∈ 𝕌)\n  xpexr2(c0, c1, c2)\n}","parent":["pm2.61ine","a1d","ax-mp","0ex","eleq1a","expcom","sylbi","xpnz","simprd","xpexr2"],"children":["bj-xpnzexb"]},{"name":"bj-xpexg2","content":"Curried (exported) form of ~ xpexg . (Contributed by BJ, 2-Apr-2019.)","origin":"thm bj-xpexg2(class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, c1), wi(wcel(c2, c3), wcel(cxp(c0, c2), universe)))\n} = {\n  ex(wcel(c0, c1), wcel(c2, c3), wcel(cxp(c0, c2), universe))\n  xpexg(c0, c1, c2, c3)\n}","pretty":"thm bj-xpexg2(class c0, class c1, class c2, class c3) {\n  ⊢ (c0 ∈ c1 →(c2 ∈ c3 →(c0 × c2)∈ 𝕌))\n} = {\n  ex(c0 ∈ c1, c2 ∈ c3, (c0 × c2)∈ 𝕌)\n  xpexg(c0, c1, c2, c3)\n}","parent":["ex","xpexg"],"children":["bj-xpnzexb","bj-xtagex"]},{"name":"bj-xpnzexb","content":"If the first factor of a product is a nonempty set, then the product is a set if and only if the second factor is a set. (Contributed by BJ, 2-Apr-2019.)","origin":"thm bj-xpnzexb(class c0, class c1, class c2) {\n  |- wi(wcel(c0, cdif(c1, csn(emptycls))), wb(wcel(c2, universe), wcel(cxp(c0, c2), universe)))\n} = {\n  impbid(wcel(c0, cdif(c1, csn(emptycls))), wcel(c2, universe), wcel(cxp(c0, c2), universe))\n  bj-xpexg2(c0, cdif(c1, csn(emptycls)), c2, universe)\n  syl(wcel(c0, cdif(c1, csn(emptycls))), wi(wcel(cxp(c0, c2), universe), wcel(c2, universe)), wne(c0, emptycls))\n  eldifsni(c0, c1, emptycls)\n  bj-xpnzex(c0, c2, universe)\n}","pretty":"thm bj-xpnzexb(class c0, class c1, class c2) {\n  ⊢ (c0 ∈(c1 \\ { ∅ })→(c2 ∈ 𝕌 ↔(c0 × c2)∈ 𝕌))\n} = {\n  impbid(c0 ∈(c1 \\ { ∅ }), c2 ∈ 𝕌, (c0 × c2)∈ 𝕌)\n  bj-xpexg2(c0, (c1 \\ { ∅ }), c2, universe)\n  syl(c0 ∈(c1 \\ { ∅ }), ((c0 × c2)∈ 𝕌 → c2 ∈ 𝕌), c0 ≠ ∅)\n  eldifsni(c0, c1, emptycls)\n  bj-xpnzex(c0, c2, universe)\n}","parent":["impbid","bj-xpexg2","syl","eldifsni","bj-xpnzex"],"children":[]},{"name":"bj-cleq","content":"Substitution property for certain classes. (Contributed by BJ, 2-Apr-2019.)","origin":"thm bj-cleq(setvar s0, class c0, class c1, class c2) {\n  |- wi(wceq(c0, c1), wceq(cab(s0, wcel(csn(cv(s0)), cima(c0, c2))), cab(s0, wcel(csn(cv(s0)), cima(c1, c2)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  sylib(wceq(c0, c1), wceq(cab(s0, wcel(csn(cv(s0)), cima(c0, c2))), cab(s0, wcel(csn(cv(s0)), cima(c1, c2)))), wal(s0, wb(wcel(csn(cv(s0)), cima(c0, c2)), wcel(csn(cv(s0)), cima(c1, c2)))))\n  syl(wceq(c0, c1), wal(s0, wb(wcel(csn(cv(s0)), cima(c0, c2)), wcel(csn(cv(s0)), cima(c1, c2)))), wceq(cima(c0, c2), cima(c1, c2)))\n  imaeq1(c0, c1, c2)\n  alrimiv(s0, wceq(cima(c0, c2), cima(c1, c2)), wb(wcel(csn(cv(s0)), cima(c0, c2)), wcel(csn(cv(s0)), cima(c1, c2))))\n  eleq2(cima(c0, c2), cima(c1, c2), csn(cv(s0)))\n  abbi(s0, wcel(csn(cv(s0)), cima(c0, c2)), wcel(csn(cv(s0)), cima(c1, c2)))\n  diff.wceq.s(s0, cima(c0, c2), cima(c1, c2))\n  diff.cima.s(s0, c0, c2)\n  diff.cima.s(s0, c1, c2)\n}","pretty":"thm bj-cleq(setvar s0, class c0, class c1, class c2) {\n  ⊢ (c0 = c1 → { s0 | { s0 } ∈(c0 \" c2)} = { s0 | { s0 } ∈(c1 \" c2)})\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, c2)\n} = {\n  sylib(c0 = c1, { s0 | { s0 } ∈(c0 \" c2)} = { s0 | { s0 } ∈(c1 \" c2)}, ∀(s0,({ s0 } ∈(c0 \" c2)↔ { s0 } ∈(c1 \" c2))))\n  syl(c0 = c1, ∀(s0,({ s0 } ∈(c0 \" c2)↔ { s0 } ∈(c1 \" c2))), (c0 \" c2)=(c1 \" c2))\n  imaeq1(c0, c1, c2)\n  alrimiv(s0, (c0 \" c2)=(c1 \" c2), ({ s0 } ∈(c0 \" c2)↔ { s0 } ∈(c1 \" c2)))\n  eleq2((c0 \" c2), (c1 \" c2), { s0 })\n  abbi(s0, { s0 } ∈(c0 \" c2), { s0 } ∈(c1 \" c2))\n  diff.wceq.s(s0, (c0 \" c2), (c1 \" c2))\n  diff.cima.s(s0, c0, c2)\n  diff.cima.s(s0, c1, c2)\n}","parent":["sylib","syl","imaeq1","alrimiv","eleq2","abbi","diff.wceq.s","diff.cima.s"],"children":[]}]}