{"index":35,"title":"Implicational Calculus","content":"Implicational calculus is the fragment of propositional logic that uses only material implication, and not negation. It can be axiomatized by inference rule modus ponens ~ ax-mp together with the axioms { ~ ax-1 , ~ ax-2 , ~ peirce } or the Tarski-Bernays axioms { ~ ax-1 , ~ imim1 , ~ peirce } or with the single axiom { ~ impsingle }. From either one of these three axiom sets, all tautologies containing only material implication may be proved. In contrast, minimal implicational calculus, which is presented just before this section, cannot prove certain tautologies ( ~ peirce , for example ). The class of theorems proved by minimal implicational calculus is thus a subset of the class of theorems proved by implicational calculus. The primary source for this section is the paper by Lukasiewicz, _The Shortest Axiom of the Implicational Calculus of Propositions_, Proceedings of the Royal Irish Academy, Section A, vol. 52 (1948-1950), 25--33. It will be cited as simply \"Lukasiewicz\" in the remainder of this section. This section proves that the above three distinct axiom sets for implicational calculus all produce the same class of theorems. (Contributed by Larry Lesyna and Jeffrey P. Machado, 1-Aug-2023.)","blocks":[{"name":"impsingle","content":"The shortest single axiom for implicational calculus, due to Lukasiewicz. It is now known to be the _unique_ shortest axiom. The axiom is proved here starting from { ~ ax-1 , ~ ax-2 and ~ peirce }. (Contributed by Larry Lesyna and Jeffrey P. Machado, 18-Jul-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(wi(wi(w0, w1), w2), wi(wi(w2, w0), wi(w3, w0)))\n} = {\n  syl6(wi(wi(w0, w1), w2), wi(w2, w0), wi(w3, w0), wi(wi(w0, w1), w0))\n  imim1(wi(w0, w1), w2, w0)\n  a1d(wi(wi(w0, w1), w0), w3, w0)\n  peirce(w0, w1)\n}","pretty":"thm impsingle(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (((w0 → w1)→ w2)→((w2 → w0)→(w3 → w0)))\n} = {\n  syl6(((w0 → w1)→ w2), (w2 → w0), (w3 → w0), ((w0 → w1)→ w0))\n  imim1((w0 → w1), w2, w0)\n  a1d(((w0 → w1)→ w0), w3, w0)\n  peirce(w0, w1)\n}","parent":["syl6","imim1","a1d","peirce"],"children":["impsingle-step4","impsingle-step8","impsingle-step15","impsingle-step18","impsingle-step20","impsingle-step22"]},{"name":"impsingle-step4","content":"Derivation of impsingle-step4 from ~ ax-mp and ~ impsingle . It is used as a lemma in proofs of ~ imim1 and ~ peirce from ~ impsingle . It is Step 4 in Lukasiewicz, where it appears as 'CCCpqpCsp' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step4(wff w0, wff w1, wff w2) {\n  |- wi(wi(wi(w0, w1), w0), wi(w2, w0))\n} = {\n  ax-mp(wi(wi(wi(w0, w1), w0), wi(w2, w0)), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n  impsingle(hw0, hw1, hw2, hw3)\n  ax-mp(wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(w0, w1), w0), wi(w2, w0))), wi(wi(wi(w0, hw4), wi(w0, w1)), wi(wi(wi(w0, w1), w0), wi(w2, w0))))\n  impsingle(w0, hw4, wi(w0, w1), w2)\n  ax-mp(wi(wi(wi(wi(w0, hw4), wi(w0, w1)), wi(wi(wi(w0, w1), w0), wi(w2, w0))), wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(w0, w1), w0), wi(w2, w0)))), wi(wi(wi(wi(wi(w0, w1), w0), wi(w2, w0)), wi(w0, w1)), wi(wi(w0, hw4), wi(w0, w1))))\n  ax-mp(wi(wi(wi(wi(wi(w0, w1), w0), wi(w2, w0)), wi(w0, w1)), wi(wi(w0, hw4), wi(w0, w1))), wi(wi(wi(w0, w1), wi(w0, w1)), wi(wi(wi(w0, w1), w0), wi(w2, w0))))\n  impsingle(w0, w1, wi(w0, w1), w2)\n  impsingle(wi(w0, w1), wi(w0, w1), wi(wi(wi(w0, w1), w0), wi(w2, w0)), wi(w0, hw4))\n  impsingle(wi(wi(wi(w0, w1), w0), wi(w2, w0)), wi(w0, w1), wi(wi(w0, hw4), wi(w0, w1)), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n}","pretty":"thm impsingle-step4(wff w0, wff w1, wff w2) {\n  ⊢ (((w0 → w1)→ w0)→(w2 → w0))\n} = {\n  ax-mp((((w0 → w1)→ w0)→(w2 → w0)), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n  impsingle(hw0, hw1, hw2, hw3)\n  ax-mp(((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((w0 → w1)→ w0)→(w2 → w0))), (((w0 → hw4)→(w0 → w1))→(((w0 → w1)→ w0)→(w2 → w0))))\n  impsingle(w0, hw4, (w0 → w1), w2)\n  ax-mp(((((w0 → hw4)→(w0 → w1))→(((w0 → w1)→ w0)→(w2 → w0)))→((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((w0 → w1)→ w0)→(w2 → w0)))), (((((w0 → w1)→ w0)→(w2 → w0))→(w0 → w1))→((w0 → hw4)→(w0 → w1))))\n  ax-mp((((((w0 → w1)→ w0)→(w2 → w0))→(w0 → w1))→((w0 → hw4)→(w0 → w1))), (((w0 → w1)→(w0 → w1))→(((w0 → w1)→ w0)→(w2 → w0))))\n  impsingle(w0, w1, (w0 → w1), w2)\n  impsingle((w0 → w1), (w0 → w1), (((w0 → w1)→ w0)→(w2 → w0)), (w0 → hw4))\n  impsingle((((w0 → w1)→ w0)→(w2 → w0)), (w0 → w1), ((w0 → hw4)→(w0 → w1)), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n}","parent":["ax-mp","impsingle"],"children":["impsingle-step22"]},{"name":"impsingle-step8","content":"Derivation of impsingle-step8 from ~ ax-mp and ~ impsingle . It is used as a lemma in proofs of ~ ax-1 ~ imim1 and ~ peirce from ~ impsingle . It is Step 8 in Lukasiewicz, where it appears as 'CCCsqpCqp' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step8(wff w0, wff w1, wff w2) {\n  |- wi(wi(wi(w0, w1), w2), wi(w1, w2))\n} = {\n  ax-mp(wi(wi(wi(w0, w1), w2), wi(w1, w2)), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n  ax-mp(wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(w0, w1), w2), wi(w1, w2))), wi(wi(wi(w2, hw4), wi(w0, w1)), wi(wi(wi(w0, w1), w2), wi(w1, w2))))\n  impsingle(w2, hw4, wi(w0, w1), w1)\n  ax-mp(wi(wi(wi(wi(w2, hw4), wi(w0, w1)), wi(wi(wi(w0, w1), w2), wi(w1, w2))), wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(w0, w1), w2), wi(w1, w2)))), wi(wi(wi(wi(wi(w0, w1), w2), wi(w1, w2)), wi(w0, w1)), wi(wi(w2, hw4), wi(w0, w1))))\n  ax-mp(wi(wi(wi(wi(wi(w0, w1), w2), wi(w1, w2)), wi(w0, w1)), wi(wi(w2, hw4), wi(w0, w1))), wi(wi(wi(w0, w1), wi(w1, w2)), wi(wi(wi(w0, w1), w2), wi(w1, w2))))\n  ax-mp(wi(wi(wi(w0, w1), wi(w1, w2)), wi(wi(wi(w0, w1), w2), wi(w1, w2))), wi(wi(wi(w1, w2), w1), wi(w0, w1)))\n  ax-mp(wi(wi(wi(w1, w2), w1), wi(w0, w1)), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n  impsingle(hw0, hw1, hw2, hw3)\n  ax-mp(wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(w1, w2), w1), wi(w0, w1))), wi(wi(wi(w1, hw4), wi(w1, w2)), wi(wi(wi(w1, w2), w1), wi(w0, w1))))\n  impsingle(w1, hw4, wi(w1, w2), w0)\n  ax-mp(wi(wi(wi(wi(w1, hw4), wi(w1, w2)), wi(wi(wi(w1, w2), w1), wi(w0, w1))), wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(w1, w2), w1), wi(w0, w1)))), wi(wi(wi(wi(wi(w1, w2), w1), wi(w0, w1)), wi(w1, w2)), wi(wi(w1, hw4), wi(w1, w2))))\n  ax-mp(wi(wi(wi(wi(wi(w1, w2), w1), wi(w0, w1)), wi(w1, w2)), wi(wi(w1, hw4), wi(w1, w2))), wi(wi(wi(w1, w2), wi(w1, w2)), wi(wi(wi(w1, w2), w1), wi(w0, w1))))\n  impsingle(w1, w2, wi(w1, w2), w0)\n  impsingle(wi(w1, w2), wi(w1, w2), wi(wi(wi(w1, w2), w1), wi(w0, w1)), wi(w1, hw4))\n  impsingle(wi(wi(wi(w1, w2), w1), wi(w0, w1)), wi(w1, w2), wi(wi(w1, hw4), wi(w1, w2)), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n  impsingle(wi(w1, w2), w1, wi(w0, w1), wi(wi(w0, w1), w2))\n  impsingle(wi(w0, w1), wi(w1, w2), wi(wi(wi(w0, w1), w2), wi(w1, w2)), wi(w2, hw4))\n  impsingle(wi(wi(wi(w0, w1), w2), wi(w1, w2)), wi(w0, w1), wi(wi(w2, hw4), wi(w0, w1)), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n}","pretty":"thm impsingle-step8(wff w0, wff w1, wff w2) {\n  ⊢ (((w0 → w1)→ w2)→(w1 → w2))\n} = {\n  ax-mp((((w0 → w1)→ w2)→(w1 → w2)), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n  ax-mp(((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((w0 → w1)→ w2)→(w1 → w2))), (((w2 → hw4)→(w0 → w1))→(((w0 → w1)→ w2)→(w1 → w2))))\n  impsingle(w2, hw4, (w0 → w1), w1)\n  ax-mp(((((w2 → hw4)→(w0 → w1))→(((w0 → w1)→ w2)→(w1 → w2)))→((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((w0 → w1)→ w2)→(w1 → w2)))), (((((w0 → w1)→ w2)→(w1 → w2))→(w0 → w1))→((w2 → hw4)→(w0 → w1))))\n  ax-mp((((((w0 → w1)→ w2)→(w1 → w2))→(w0 → w1))→((w2 → hw4)→(w0 → w1))), (((w0 → w1)→(w1 → w2))→(((w0 → w1)→ w2)→(w1 → w2))))\n  ax-mp((((w0 → w1)→(w1 → w2))→(((w0 → w1)→ w2)→(w1 → w2))), (((w1 → w2)→ w1)→(w0 → w1)))\n  ax-mp((((w1 → w2)→ w1)→(w0 → w1)), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n  impsingle(hw0, hw1, hw2, hw3)\n  ax-mp(((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((w1 → w2)→ w1)→(w0 → w1))), (((w1 → hw4)→(w1 → w2))→(((w1 → w2)→ w1)→(w0 → w1))))\n  impsingle(w1, hw4, (w1 → w2), w0)\n  ax-mp(((((w1 → hw4)→(w1 → w2))→(((w1 → w2)→ w1)→(w0 → w1)))→((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((w1 → w2)→ w1)→(w0 → w1)))), (((((w1 → w2)→ w1)→(w0 → w1))→(w1 → w2))→((w1 → hw4)→(w1 → w2))))\n  ax-mp((((((w1 → w2)→ w1)→(w0 → w1))→(w1 → w2))→((w1 → hw4)→(w1 → w2))), (((w1 → w2)→(w1 → w2))→(((w1 → w2)→ w1)→(w0 → w1))))\n  impsingle(w1, w2, (w1 → w2), w0)\n  impsingle((w1 → w2), (w1 → w2), (((w1 → w2)→ w1)→(w0 → w1)), (w1 → hw4))\n  impsingle((((w1 → w2)→ w1)→(w0 → w1)), (w1 → w2), ((w1 → hw4)→(w1 → w2)), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n  impsingle((w1 → w2), w1, (w0 → w1), ((w0 → w1)→ w2))\n  impsingle((w0 → w1), (w1 → w2), (((w0 → w1)→ w2)→(w1 → w2)), (w2 → hw4))\n  impsingle((((w0 → w1)→ w2)→(w1 → w2)), (w0 → w1), ((w2 → hw4)→(w0 → w1)), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n}","parent":["ax-mp","impsingle"],"children":["impsingle-ax1","impsingle-step15","impsingle-step18","impsingle-step20","impsingle-step25"]},{"name":"impsingle-ax1","content":"Derivation of impsingle-ax1 ( ~ ax-1 ) from ~ ax-mp and ~ impsingle . Lukasiewicz was used to construct this proof. Every formula corresponding to a detachment step was converted to its corresponding Metamath formula. mmj2 was used to unify each formula using ~ ax-mp , which in turn produced this proof. With extremely high confidence, this result shows that the Lukasiewicz proof of ~ ax-1 (step 27) is correct and that Metamath correctly verifies the proof. The same comments apply to the proofs that follow this one. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-ax1(wff w0, wff w1) {\n  |- wi(w0, wi(w1, w0))\n} = {\n  ax-mp(wi(w0, wi(w1, w0)), wi(wi(wi(hw0, w1), w0), wi(w1, w0)))\n  impsingle-step8(hw0, w1, w0)\n  impsingle-step8(wi(hw0, w1), w0, wi(w1, w0))\n}","pretty":"thm impsingle-ax1(wff w0, wff w1) {\n  ⊢ (w0 →(w1 → w0))\n} = {\n  ax-mp((w0 →(w1 → w0)), (((hw0 → w1)→ w0)→(w1 → w0)))\n  impsingle-step8(hw0, w1, w0)\n  impsingle-step8((hw0 → w1), w0, (w1 → w0))\n}","parent":["ax-mp","impsingle-step8"],"children":[]},{"name":"impsingle-step15","content":"Derivation of impsingle-step15 from ~ ax-mp and ~ impsingle . It is used as a lemma in proofs of ~ imim1 and ~ peirce from ~ impsingle . It is Step 15 in Lukasiewicz, where it appears as 'CCCrqCspCCrpCsp' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step15(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))\n} = {\n  ax-mp(wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))))\n  impsingle(w3, hw0, w0, w2)\n  ax-mp(wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(wi(hw1, hw2), hw3), wi(wi(hw3, hw1), wi(hw4, hw1))))\n  impsingle(hw1, hw2, hw3, hw4)\n  ax-mp(wi(wi(wi(wi(hw1, hw2), hw3), wi(wi(hw3, hw1), wi(hw4, hw1))), wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))))), wi(wi(wi(wi(wi(w0, w3), wi(w2, w3)), hw5), wi(wi(w3, hw0), w0)), wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))))))\n  impsingle(wi(wi(w0, w3), wi(w2, w3)), hw5, wi(wi(w3, hw0), w0), wi(wi(w0, w1), wi(w2, w3)))\n  ax-mp(wi(wi(wi(wi(wi(wi(w0, w3), wi(w2, w3)), hw5), wi(wi(w3, hw0), w0)), wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))))), wi(wi(wi(wi(hw1, hw2), hw3), wi(wi(hw3, hw1), wi(hw4, hw1))), wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))))), wi(wi(wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(w3, hw0), w0)), wi(wi(wi(wi(w0, w3), wi(w2, w3)), hw5), wi(wi(w3, hw0), w0))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(w3, hw0), w0)), wi(wi(wi(wi(w0, w3), wi(w2, w3)), hw5), wi(wi(w3, hw0), w0))), wi(wi(wi(wi(w3, hw0), w0), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))))))\n  ax-mp(wi(wi(wi(wi(w3, hw0), w0), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))))), wi(wi(wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))), w0), wi(wi(w3, hw0), w0)))\n  ax-mp(wi(wi(wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))), w0), wi(wi(w3, hw0), w0)), wi(wi(w0, w1), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))))\n  ax-mp(wi(wi(w0, w1), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(wi(wi(w2, w3), hw6), wi(w0, w1)), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))))\n  impsingle(wi(w2, w3), hw6, wi(w0, w1), wi(w0, w3))\n  impsingle-step8(wi(wi(w2, w3), hw6), wi(w0, w1), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))))\n  impsingle(w0, w1, wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))), wi(w3, hw0))\n  impsingle(wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))), w0, wi(wi(w3, hw0), w0), wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))))\n  impsingle(wi(wi(w3, hw0), w0), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(wi(w0, w3), wi(w2, w3)), hw5))\n  impsingle(wi(wi(wi(wi(w3, hw0), w0), wi(wi(w0, w3), wi(w2, w3))), wi(wi(wi(w0, w1), wi(w2, w3)), wi(wi(w0, w3), wi(w2, w3)))), wi(wi(w3, hw0), w0), wi(wi(wi(wi(w0, w3), wi(w2, w3)), hw5), wi(wi(w3, hw0), w0)), wi(wi(wi(hw1, hw2), hw3), wi(wi(hw3, hw1), wi(hw4, hw1))))\n}","pretty":"thm impsingle-step15(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))\n} = {\n  ax-mp((((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))), (((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3))))\n  impsingle(w3, hw0, w0, w2)\n  ax-mp(((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))), (((hw1 → hw2)→ hw3)→((hw3 → hw1)→(hw4 → hw1))))\n  impsingle(hw1, hw2, hw3, hw4)\n  ax-mp(((((hw1 → hw2)→ hw3)→((hw3 → hw1)→(hw4 → hw1)))→((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))), (((((w0 → w3)→(w2 → w3))→ hw5)→((w3 → hw0)→ w0))→((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))))\n  impsingle(((w0 → w3)→(w2 → w3)), hw5, ((w3 → hw0)→ w0), ((w0 → w1)→(w2 → w3)))\n  ax-mp(((((((w0 → w3)→(w2 → w3))→ hw5)→((w3 → hw0)→ w0))→((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))))→((((hw1 → hw2)→ hw3)→((hw3 → hw1)→(hw4 → hw1)))→((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))))), ((((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))→((w3 → hw0)→ w0))→((((w0 → w3)→(w2 → w3))→ hw5)→((w3 → hw0)→ w0))))\n  ax-mp(((((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))→((w3 → hw0)→ w0))→((((w0 → w3)→(w2 → w3))→ hw5)→((w3 → hw0)→ w0))), ((((w3 → hw0)→ w0)→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))→((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))))\n  ax-mp(((((w3 → hw0)→ w0)→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))→((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))), (((((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))→ w0)→((w3 → hw0)→ w0)))\n  ax-mp((((((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))→ w0)→((w3 → hw0)→ w0)), ((w0 → w1)→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))))\n  ax-mp(((w0 → w1)→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))), ((((w2 → w3)→ hw6)→(w0 → w1))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))))\n  impsingle((w2 → w3), hw6, (w0 → w1), (w0 → w3))\n  impsingle-step8(((w2 → w3)→ hw6), (w0 → w1), (((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))))\n  impsingle(w0, w1, (((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))), (w3 → hw0))\n  impsingle((((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))), w0, ((w3 → hw0)→ w0), (((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3))))\n  impsingle(((w3 → hw0)→ w0), (((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3))), ((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))), (((w0 → w3)→(w2 → w3))→ hw5))\n  impsingle(((((w3 → hw0)→ w0)→((w0 → w3)→(w2 → w3)))→(((w0 → w1)→(w2 → w3))→((w0 → w3)→(w2 → w3)))), ((w3 → hw0)→ w0), ((((w0 → w3)→(w2 → w3))→ hw5)→((w3 → hw0)→ w0)), (((hw1 → hw2)→ hw3)→((hw3 → hw1)→(hw4 → hw1))))\n}","parent":["ax-mp","impsingle","impsingle-step8"],"children":["impsingle-step18","impsingle-step21","impsingle-step25"]},{"name":"impsingle-step18","content":"Derivation of impsingle-step18 from ~ ax-mp and ~ impsingle . It is used as a lemma in proofs of ~ imim1 and ~ peirce from ~ impsingle . It is Step 18 in Lukasiewicz, where it appears as 'CCCCrpCspCCCpqrtCuCCCpqrt' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step18(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  |- wi(wi(wi(wi(w0, w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), w4)), wi(w5, wi(wi(wi(w1, w3), w0), w4)))\n} = {\n  ax-mp(wi(wi(wi(wi(w0, w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), w4)), wi(w5, wi(wi(wi(w1, w3), w0), w4))), wi(wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1))))\n  ax-mp(wi(wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1))), wi(wi(wi(w1, w3), w0), wi(wi(w0, w1), wi(w2, w1))))\n  impsingle(w1, w3, w0, w2)\n  ax-mp(wi(wi(wi(wi(w1, w3), w0), wi(wi(w0, w1), wi(w2, w1))), wi(wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1)))), wi(wi(wi(wi(w1, w3), w0), w4), wi(wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1)))))\n  ax-mp(wi(wi(wi(wi(w1, w3), w0), w4), wi(wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1)))), wi(wi(wi(wi(w2, w1), hw0), wi(wi(wi(w1, w3), w0), w4)), wi(wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1)))))\n  impsingle(wi(w2, w1), hw0, wi(wi(wi(w1, w3), w0), w4), wi(w0, w1))\n  impsingle-step8(wi(wi(w2, w1), hw0), wi(wi(wi(w1, w3), w0), w4), wi(wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1))))\n  impsingle-step15(wi(wi(w1, w3), w0), w4, wi(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1)), wi(wi(w0, w1), wi(w2, w1)))\n  impsingle(wi(wi(wi(w1, w3), w0), w4), wi(w2, w1), wi(wi(w0, w1), wi(w2, w1)), w5)\n}","pretty":"thm impsingle-step18(wff w0, wff w1, wff w2, wff w3, wff w4, wff w5) {\n  ⊢ ((((w0 → w1)→(w2 → w1))→(((w1 → w3)→ w0)→ w4))→(w5 →(((w1 → w3)→ w0)→ w4)))\n} = {\n  ax-mp(((((w0 → w1)→(w2 → w1))→(((w1 → w3)→ w0)→ w4))→(w5 →(((w1 → w3)→ w0)→ w4))), (((((w1 → w3)→ w0)→ w4)→(w2 → w1))→((w0 → w1)→(w2 → w1))))\n  ax-mp((((((w1 → w3)→ w0)→ w4)→(w2 → w1))→((w0 → w1)→(w2 → w1))), (((w1 → w3)→ w0)→((w0 → w1)→(w2 → w1))))\n  impsingle(w1, w3, w0, w2)\n  ax-mp(((((w1 → w3)→ w0)→((w0 → w1)→(w2 → w1)))→(((((w1 → w3)→ w0)→ w4)→(w2 → w1))→((w0 → w1)→(w2 → w1)))), ((((w1 → w3)→ w0)→ w4)→(((((w1 → w3)→ w0)→ w4)→(w2 → w1))→((w0 → w1)→(w2 → w1)))))\n  ax-mp(((((w1 → w3)→ w0)→ w4)→(((((w1 → w3)→ w0)→ w4)→(w2 → w1))→((w0 → w1)→(w2 → w1)))), ((((w2 → w1)→ hw0)→(((w1 → w3)→ w0)→ w4))→(((((w1 → w3)→ w0)→ w4)→(w2 → w1))→((w0 → w1)→(w2 → w1)))))\n  impsingle((w2 → w1), hw0, (((w1 → w3)→ w0)→ w4), (w0 → w1))\n  impsingle-step8(((w2 → w1)→ hw0), (((w1 → w3)→ w0)→ w4), (((((w1 → w3)→ w0)→ w4)→(w2 → w1))→((w0 → w1)→(w2 → w1))))\n  impsingle-step15(((w1 → w3)→ w0), w4, ((((w1 → w3)→ w0)→ w4)→(w2 → w1)), ((w0 → w1)→(w2 → w1)))\n  impsingle((((w1 → w3)→ w0)→ w4), (w2 → w1), ((w0 → w1)→(w2 → w1)), w5)\n}","parent":["ax-mp","impsingle","impsingle-step8","impsingle-step15"],"children":["impsingle-step19"]},{"name":"impsingle-step19","content":"Derivation of impsingle-step19 from ~ ax-mp and ~ impsingle . It is used as a lemma in proofs of ~ imim1 and ~ peirce from ~ impsingle . It is Step 19 in Lukasiewicz, where it appears as 'CCCCspqCrpCCCpqrCsp' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step19(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(wi(wi(wi(w0, w1), w2), wi(w3, w1)), wi(wi(wi(w1, w2), w3), wi(w0, w1)))\n} = {\n  ax-mp(wi(wi(wi(wi(w0, w1), w2), wi(w3, w1)), wi(wi(wi(w1, w2), w3), wi(w0, w1))), wi(wi(wi(wi(hw0, hw1), wi(hw2, hw1)), wi(wi(wi(hw1, hw3), hw0), hw4)), wi(hw5, wi(wi(wi(hw1, hw3), hw0), hw4))))\n  impsingle-step18(hw0, hw1, hw2, hw3, hw4, hw5)\n  ax-mp(wi(wi(wi(wi(wi(hw0, hw1), wi(hw2, hw1)), wi(wi(wi(hw1, hw3), hw0), hw4)), wi(hw5, wi(wi(wi(hw1, hw3), hw0), hw4))), wi(wi(wi(wi(w0, w1), w2), wi(w3, w1)), wi(wi(wi(w1, w2), w3), wi(w0, w1)))), wi(wi(wi(wi(w3, w1), wi(w0, w1)), wi(wi(wi(w1, w2), w3), wi(w0, w1))), wi(wi(wi(wi(w0, w1), w2), wi(w3, w1)), wi(wi(wi(w1, w2), w3), wi(w0, w1)))))\n  impsingle-step18(w3, w1, w0, w2, wi(w0, w1), wi(wi(wi(w0, w1), w2), wi(w3, w1)))\n  impsingle-step18(wi(w3, w1), wi(w0, w1), wi(wi(w1, w2), w3), w2, wi(wi(wi(w1, w2), w3), wi(w0, w1)), wi(wi(wi(wi(hw0, hw1), wi(hw2, hw1)), wi(wi(wi(hw1, hw3), hw0), hw4)), wi(hw5, wi(wi(wi(hw1, hw3), hw0), hw4))))\n}","pretty":"thm impsingle-step19(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ((((w0 → w1)→ w2)→(w3 → w1))→(((w1 → w2)→ w3)→(w0 → w1)))\n} = {\n  ax-mp(((((w0 → w1)→ w2)→(w3 → w1))→(((w1 → w2)→ w3)→(w0 → w1))), ((((hw0 → hw1)→(hw2 → hw1))→(((hw1 → hw3)→ hw0)→ hw4))→(hw5 →(((hw1 → hw3)→ hw0)→ hw4))))\n  impsingle-step18(hw0, hw1, hw2, hw3, hw4, hw5)\n  ax-mp((((((hw0 → hw1)→(hw2 → hw1))→(((hw1 → hw3)→ hw0)→ hw4))→(hw5 →(((hw1 → hw3)→ hw0)→ hw4)))→((((w0 → w1)→ w2)→(w3 → w1))→(((w1 → w2)→ w3)→(w0 → w1)))), ((((w3 → w1)→(w0 → w1))→(((w1 → w2)→ w3)→(w0 → w1)))→((((w0 → w1)→ w2)→(w3 → w1))→(((w1 → w2)→ w3)→(w0 → w1)))))\n  impsingle-step18(w3, w1, w0, w2, (w0 → w1), (((w0 → w1)→ w2)→(w3 → w1)))\n  impsingle-step18((w3 → w1), (w0 → w1), ((w1 → w2)→ w3), w2, (((w1 → w2)→ w3)→(w0 → w1)), ((((hw0 → hw1)→(hw2 → hw1))→(((hw1 → hw3)→ hw0)→ hw4))→(hw5 →(((hw1 → hw3)→ hw0)→ hw4))))\n}","parent":["ax-mp","impsingle-step18"],"children":["impsingle-step20"]},{"name":"impsingle-step20","content":"Derivation of impsingle-step20 from ~ ax-mp and ~ impsingle . It is used as a lemma in proofs of ~ imim1 and ~ peirce from ~ impsingle . It is Step 20 in Lukasiewicz, where it appears as 'CCCCrppCspCCCpqrCsp' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step20(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))\n} = {\n  ax-mp(wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))\n  impsingle-step19(w2, w1, w3, w0)\n  ax-mp(wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n  impsingle(hw0, hw1, hw2, hw3)\n  ax-mp(wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))), wi(wi(wi(wi(wi(wi(w1, w3), w0), wi(w2, w1)), hw4), wi(wi(wi(w2, w1), w3), wi(w0, w1))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))))\n  impsingle(wi(wi(wi(w1, w3), w0), wi(w2, w1)), hw4, wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w0, w1), w1), wi(w2, w1)))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w1, w3), w0), wi(w2, w1)), hw4), wi(wi(wi(w2, w1), w3), wi(w0, w1))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))), wi(wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))))), wi(wi(wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(w2, w1), w3), wi(w0, w1))), wi(wi(wi(wi(wi(w1, w3), w0), wi(w2, w1)), hw4), wi(wi(wi(w2, w1), w3), wi(w0, w1)))))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(w2, w1), w3), wi(w0, w1))), wi(wi(wi(wi(wi(w1, w3), w0), wi(w2, w1)), hw4), wi(wi(wi(w2, w1), w3), wi(w0, w1)))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))))\n  ax-mp(wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))), wi(wi(wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(w0, w1)), wi(wi(wi(w2, w1), w3), wi(w0, w1))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(w0, w1)), wi(wi(wi(w2, w1), w3), wi(w0, w1))), wi(wi(wi(w0, w1), w1), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))))\n  ax-mp(wi(wi(wi(w0, w1), w1), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(wi(w2, w1), hw0), wi(wi(w0, w1), w1)), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))))\n  impsingle(wi(w2, w1), hw0, wi(wi(w0, w1), w1), wi(wi(w1, w3), w0))\n  impsingle-step8(wi(wi(w2, w1), hw0), wi(wi(w0, w1), w1), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))\n  impsingle(wi(w0, w1), w1, wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(w2, w1), w3))\n  impsingle(wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(w0, w1), wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))))\n  impsingle(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(wi(w1, w3), w0), wi(w2, w1)), hw4))\n  impsingle(wi(wi(wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1))), wi(wi(wi(wi(w0, w1), w1), wi(w2, w1)), wi(wi(wi(w1, w3), w0), wi(w2, w1)))), wi(wi(wi(w2, w1), w3), wi(w0, w1)), wi(wi(wi(wi(wi(w1, w3), w0), wi(w2, w1)), hw4), wi(wi(wi(w2, w1), w3), wi(w0, w1))), wi(wi(wi(hw0, hw1), hw2), wi(wi(hw2, hw0), wi(hw3, hw0))))\n}","pretty":"thm impsingle-step20(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ ((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))\n} = {\n  ax-mp(((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))), ((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))\n  impsingle-step19(w2, w1, w3, w0)\n  ax-mp((((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n  impsingle(hw0, hw1, hw2, hw3)\n  ax-mp(((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))), ((((((w1 → w3)→ w0)→(w2 → w1))→ hw4)→(((w2 → w1)→ w3)→(w0 → w1)))→(((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))))\n  impsingle((((w1 → w3)→ w0)→(w2 → w1)), hw4, (((w2 → w1)→ w3)→(w0 → w1)), (((w0 → w1)→ w1)→(w2 → w1)))\n  ax-mp((((((((w1 → w3)→ w0)→(w2 → w1))→ hw4)→(((w2 → w1)→ w3)→(w0 → w1)))→(((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))))→((((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0)))→(((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))))), (((((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))→(((w2 → w1)→ w3)→(w0 → w1)))→(((((w1 → w3)→ w0)→(w2 → w1))→ hw4)→(((w2 → w1)→ w3)→(w0 → w1)))))\n  ax-mp((((((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))→(((w2 → w1)→ w3)→(w0 → w1)))→(((((w1 → w3)→ w0)→(w2 → w1))→ hw4)→(((w2 → w1)→ w3)→(w0 → w1)))), (((((w2 → w1)→ w3)→(w0 → w1))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))→(((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))))\n  ax-mp((((((w2 → w1)→ w3)→(w0 → w1))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))→(((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))), ((((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→(w0 → w1))→(((w2 → w1)→ w3)→(w0 → w1))))\n  ax-mp(((((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→(w0 → w1))→(((w2 → w1)→ w3)→(w0 → w1))), (((w0 → w1)→ w1)→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))))\n  ax-mp((((w0 → w1)→ w1)→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))), ((((w2 → w1)→ hw0)→((w0 → w1)→ w1))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))))\n  impsingle((w2 → w1), hw0, ((w0 → w1)→ w1), ((w1 → w3)→ w0))\n  impsingle-step8(((w2 → w1)→ hw0), ((w0 → w1)→ w1), ((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))\n  impsingle((w0 → w1), w1, ((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))), ((w2 → w1)→ w3))\n  impsingle(((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))), (w0 → w1), (((w2 → w1)→ w3)→(w0 → w1)), ((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1))))\n  impsingle((((w2 → w1)→ w3)→(w0 → w1)), ((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1))), (((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))), ((((w1 → w3)→ w0)→(w2 → w1))→ hw4))\n  impsingle((((((w2 → w1)→ w3)→(w0 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))→((((w0 → w1)→ w1)→(w2 → w1))→(((w1 → w3)→ w0)→(w2 → w1)))), (((w2 → w1)→ w3)→(w0 → w1)), (((((w1 → w3)→ w0)→(w2 → w1))→ hw4)→(((w2 → w1)→ w3)→(w0 → w1))), (((hw0 → hw1)→ hw2)→((hw2 → hw0)→(hw3 → hw0))))\n}","parent":["ax-mp","impsingle-step19","impsingle","impsingle-step8"],"children":["impsingle-step21","impsingle-step25"]},{"name":"impsingle-step21","content":"Derivation of impsingle-step21 from ~ ax-mp and ~ impsingle . It is used as a lemma in the proof of ~ imim1 from ~ impsingle . It is Step 21 in Lukasiewicz, where it appears as 'CCCCprqqCCqrCpr' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step21(wff w0, wff w1, wff w2) {\n  |- wi(wi(wi(wi(w0, w1), w2), w2), wi(wi(w2, w1), wi(w0, w1)))\n} = {\n  ax-mp(wi(wi(wi(wi(w0, w1), w2), w2), wi(wi(w2, w1), wi(w0, w1))), wi(wi(wi(w2, wi(w0, w1)), wi(w0, w1)), wi(wi(w2, w1), wi(w0, w1))))\n  impsingle-step15(w2, wi(w0, w1), w0, w1)\n  impsingle-step20(w2, wi(w0, w1), wi(w2, w1), w2)\n}","pretty":"thm impsingle-step21(wff w0, wff w1, wff w2) {\n  ⊢ ((((w0 → w1)→ w2)→ w2)→((w2 → w1)→(w0 → w1)))\n} = {\n  ax-mp(((((w0 → w1)→ w2)→ w2)→((w2 → w1)→(w0 → w1))), (((w2 →(w0 → w1))→(w0 → w1))→((w2 → w1)→(w0 → w1))))\n  impsingle-step15(w2, (w0 → w1), w0, w1)\n  impsingle-step20(w2, (w0 → w1), (w2 → w1), w2)\n}","parent":["ax-mp","impsingle-step15","impsingle-step20"],"children":["impsingle-imim1"]},{"name":"impsingle-step22","content":"Derivation of impsingle-step22 from ~ ax-mp and ~ impsingle . It is used as a lemma in proofs of ~ imim1 and ~ peirce from ~ impsingle . It is Step 22 in Lukasiewicz, where it appears as 'Cpp' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step22(wff w0) {\n  |- wi(w0, w0)\n} = {\n  ax-mp(wi(w0, w0), wi(wi(wi(hw0, hw1), hw0), wi(hw2, hw0)))\n  impsingle-step4(hw0, hw1, hw2)\n  ax-mp(wi(wi(wi(wi(hw0, hw1), hw0), wi(hw2, hw0)), wi(w0, w0)), wi(wi(wi(w0, hw3), w0), wi(w0, w0)))\n  impsingle-step4(w0, hw3, w0)\n  ax-mp(wi(wi(wi(wi(w0, hw3), w0), wi(w0, w0)), wi(wi(wi(wi(hw0, hw1), hw0), wi(hw2, hw0)), wi(w0, w0))), wi(wi(wi(w0, w0), w0), wi(wi(w0, hw3), w0)))\n  impsingle-step4(w0, w0, wi(w0, hw3))\n  impsingle(wi(w0, w0), w0, wi(wi(w0, hw3), w0), wi(wi(wi(hw0, hw1), hw0), wi(hw2, hw0)))\n}","pretty":"thm impsingle-step22(wff w0) {\n  ⊢ (w0 → w0)\n} = {\n  ax-mp((w0 → w0), (((hw0 → hw1)→ hw0)→(hw2 → hw0)))\n  impsingle-step4(hw0, hw1, hw2)\n  ax-mp(((((hw0 → hw1)→ hw0)→(hw2 → hw0))→(w0 → w0)), (((w0 → hw3)→ w0)→(w0 → w0)))\n  impsingle-step4(w0, hw3, w0)\n  ax-mp(((((w0 → hw3)→ w0)→(w0 → w0))→((((hw0 → hw1)→ hw0)→(hw2 → hw0))→(w0 → w0))), (((w0 → w0)→ w0)→((w0 → hw3)→ w0)))\n  impsingle-step4(w0, w0, (w0 → hw3))\n  impsingle((w0 → w0), w0, ((w0 → hw3)→ w0), (((hw0 → hw1)→ hw0)→(hw2 → hw0)))\n}","parent":["ax-mp","impsingle-step4","impsingle"],"children":["impsingle-step25","impsingle-peirce"]},{"name":"impsingle-step25","content":"Derivation of impsingle-step25 from ~ ax-mp and ~ impsingle . It is used as a lemma in the proof of ~ imim1 from ~ impsingle . It is Step 25 in Lukasiewicz, where it appears as 'CCpqCCCprqq' using parenthesis-free prefix notation. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-step25(wff w0, wff w1, wff w2) {\n  |- wi(wi(w0, w1), wi(wi(wi(w0, w2), w1), w1))\n} = {\n  ax-mp(wi(wi(w0, w1), wi(wi(wi(w0, w2), w1), w1)), wi(wi(w0, w2), wi(wi(wi(w0, w2), w1), w1)))\n  ax-mp(wi(wi(w0, w2), wi(wi(wi(w0, w2), w1), w1)), wi(wi(wi(w1, hw0), wi(w0, w2)), wi(wi(wi(w0, w2), w1), w1)))\n  ax-mp(wi(wi(wi(w1, hw0), wi(w0, w2)), wi(wi(wi(w0, w2), w1), w1)), wi(wi(wi(wi(w0, w2), w1), w1), wi(wi(wi(w0, w2), w1), w1)))\n  impsingle-step22(wi(wi(wi(w0, w2), w1), w1))\n  impsingle-step20(wi(w0, w2), w1, wi(wi(w0, w2), w1), hw0)\n  impsingle-step8(wi(w1, hw0), wi(w0, w2), wi(wi(wi(w0, w2), w1), w1))\n  impsingle-step15(w0, w2, wi(wi(w0, w2), w1), w1)\n}","pretty":"thm impsingle-step25(wff w0, wff w1, wff w2) {\n  ⊢ ((w0 → w1)→(((w0 → w2)→ w1)→ w1))\n} = {\n  ax-mp(((w0 → w1)→(((w0 → w2)→ w1)→ w1)), ((w0 → w2)→(((w0 → w2)→ w1)→ w1)))\n  ax-mp(((w0 → w2)→(((w0 → w2)→ w1)→ w1)), (((w1 → hw0)→(w0 → w2))→(((w0 → w2)→ w1)→ w1)))\n  ax-mp((((w1 → hw0)→(w0 → w2))→(((w0 → w2)→ w1)→ w1)), ((((w0 → w2)→ w1)→ w1)→(((w0 → w2)→ w1)→ w1)))\n  impsingle-step22((((w0 → w2)→ w1)→ w1))\n  impsingle-step20((w0 → w2), w1, ((w0 → w2)→ w1), hw0)\n  impsingle-step8((w1 → hw0), (w0 → w2), (((w0 → w2)→ w1)→ w1))\n  impsingle-step15(w0, w2, ((w0 → w2)→ w1), w1)\n}","parent":["ax-mp","impsingle-step22","impsingle-step20","impsingle-step8","impsingle-step15"],"children":["impsingle-imim1","impsingle-peirce"]},{"name":"impsingle-imim1","content":"Derivation of impsingle-imim1 ( ~ imim1 ) from ~ ax-mp and ~ impsingle . It is step 29 in Lukasiewicz. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-imim1(wff w0, wff w1, wff w2) {\n  |- wi(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2)))\n} = {\n  ax-mp(wi(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w0, w2), w1), w1), wi(wi(w1, w2), wi(w0, w2))))\n  impsingle-step21(w0, w2, w1)\n  ax-mp(wi(wi(wi(wi(wi(w0, w2), w1), w1), wi(wi(w1, w2), wi(w0, w2))), wi(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2)))), wi(wi(wi(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(w0, w2), w1), w1)), wi(wi(wi(w0, w2), w1), w1)))\n  ax-mp(wi(wi(wi(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(w0, w2), w1), w1)), wi(wi(wi(w0, w2), w1), w1)), wi(wi(w0, w1), wi(wi(wi(w0, w2), w1), w1)))\n  impsingle-step25(w0, w1, w2)\n  impsingle-step25(wi(w0, w1), wi(wi(wi(w0, w2), w1), w1), wi(wi(w1, w2), wi(w0, w2)))\n  impsingle-step21(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(w0, w2), w1), w1))\n}","pretty":"thm impsingle-imim1(wff w0, wff w1, wff w2) {\n  ⊢ ((w0 → w1)→((w1 → w2)→(w0 → w2)))\n} = {\n  ax-mp(((w0 → w1)→((w1 → w2)→(w0 → w2))), ((((w0 → w2)→ w1)→ w1)→((w1 → w2)→(w0 → w2))))\n  impsingle-step21(w0, w2, w1)\n  ax-mp((((((w0 → w2)→ w1)→ w1)→((w1 → w2)→(w0 → w2)))→((w0 → w1)→((w1 → w2)→(w0 → w2)))), ((((w0 → w1)→((w1 → w2)→(w0 → w2)))→(((w0 → w2)→ w1)→ w1))→(((w0 → w2)→ w1)→ w1)))\n  ax-mp(((((w0 → w1)→((w1 → w2)→(w0 → w2)))→(((w0 → w2)→ w1)→ w1))→(((w0 → w2)→ w1)→ w1)), ((w0 → w1)→(((w0 → w2)→ w1)→ w1)))\n  impsingle-step25(w0, w1, w2)\n  impsingle-step25((w0 → w1), (((w0 → w2)→ w1)→ w1), ((w1 → w2)→(w0 → w2)))\n  impsingle-step21((w0 → w1), ((w1 → w2)→(w0 → w2)), (((w0 → w2)→ w1)→ w1))\n}","parent":["ax-mp","impsingle-step21","impsingle-step25"],"children":[]},{"name":"impsingle-peirce","content":"Derivation of impsingle-peirce ( ~ peirce ) from ~ ax-mp and ~ impsingle . It is step 28 in Lukasiewicz. (Contributed by Larry Lesyna and Jeffrey P. Machado, 2-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm impsingle-peirce(wff w0, wff w1) {\n  |- wi(wi(wi(w0, w1), w0), w0)\n} = {\n  ax-mp(wi(wi(wi(w0, w1), w0), w0), wi(w0, w0))\n  impsingle-step22(w0)\n  impsingle-step25(w0, w0, w1)\n}","pretty":"thm impsingle-peirce(wff w0, wff w1) {\n  ⊢ (((w0 → w1)→ w0)→ w0)\n} = {\n  ax-mp((((w0 → w1)→ w0)→ w0), (w0 → w0))\n  impsingle-step22(w0)\n  impsingle-step25(w0, w0, w1)\n}","parent":["ax-mp","impsingle-step22","impsingle-step25"],"children":[]},{"name":"tarski-bernays-ax2","content":"Derivation of ~ ax-2 from the Tarski-Bernays axiom set { ~ ax-1 , ~ imim1 , ~ peirce }. Note that no inference rule other than ~ ax-mp is used in this proof. This proof establishes a circle of equivalence: From { ~ impsingle }, { ~ ax-1 , ~ imim1 , ~ peirce } was proved. From { ~ ax-1 , ~ imim1 , ~ peirce }, { ~ ax-1 , ~ ax-2 and ~ peirce } was proved. From { ~ ax-1 , ~ ax-2 and ~ peirce }, { ~ impsingle } was proved. Therefore, the theorems that can be proved by selecting any one of these three distinct axiom sets must be equivalent. Prover9 and mmj2 were used to help constuct this proof. (Contributed by Larry Lesyna and Jeffrey P. Machado, 1-Aug-2023.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm tarski-bernays-ax2(wff w0, wff w1, wff w2) {\n  |- wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))\n} = {\n  ax-mp(wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2))), wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  peirce(wi(w0, w2), w2)\n  ax-1(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))\n  imim1(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))))\n  peirce(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))), wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))))\n  imim1(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  imim1(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w0, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2)))))\n  imim1(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2), wi(w0, w2))\n  imim1(wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2))))\n  imim1(wi(w1, w2), wi(w0, w2), w2)\n  imim1(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(w0, w2), w2), wi(wi(w1, w2), w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  peirce(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2)))))\n  ax-1(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)))\n  imim1(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))), wi(wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))))), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))))))\n  imim1(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))\n  imim1(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))))\n  ax-mp(wi(wi(wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))), wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2))))\n  imim1(w0, wi(w1, w2), w2)\n  imim1(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))))\n  peirce(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2)))))\n  ax-1(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)))\n  imim1(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(wi(w1, w2), wi(w0, w2))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))), wi(wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))))\n  imim1(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))))), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))))))\n  imim1(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))\n  imim1(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w1, w2), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))))\n  ax-mp(wi(wi(wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))), wi(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2))))\n  imim1(w0, w1, w2)\n  imim1(wi(w0, w1), wi(wi(w1, w2), wi(w0, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))), wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))))\n  peirce(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))))\n  imim1(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2)), wi(w0, w2))\n  imim1(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))), wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2)))))\n  ax-1(wi(w0, wi(w1, w2)), wi(wi(w0, wi(w1, w2)), wi(w0, w2)))\n  imim1(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, wi(w1, w2))), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)))\n  ax-mp(wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2))))), wi(wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))), wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2))))))\n  ax-mp(wi(wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))), wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2))))), wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2)))))\n  imim1(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))\n  imim1(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2))))\n  ax-mp(wi(wi(wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))), wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2))))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))))), wi(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2))))))\n  imim1(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2)))\n  imim1(wi(wi(w0, wi(w1, w2)), wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2))), wi(wi(wi(wi(wi(w0, wi(w1, w2)), wi(w0, w2)), wi(w0, w2)), wi(wi(w0, w1), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))), wi(wi(wi(w0, w1), wi(wi(w0, wi(w1, w2)), wi(w0, w2))), wi(wi(w0, wi(w1, w2)), wi(wi(w0, w1), wi(w0, w2)))))\n}","pretty":"thm tarski-bernays-ax2(wff w0, wff w1, wff w2) {\n  ⊢ ((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2)))\n} = {\n  ax-mp(((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))), ((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2))))\n  ax-mp(((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2))), (((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))\n  ax-mp((((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))), ((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp(((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))), ((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))), (((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((w0 → w2)→ w2)→((w1 → w2)→ w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((w0 → w2)→ w2)→((w1 → w2)→ w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), (((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp((((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))))\n  ax-mp(((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))), ((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  peirce((w0 → w2), w2)\n  ax-1(((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2)), (((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))\n  imim1((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2)), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  ax-mp((((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))), (((((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))))\n  peirce(((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  ax-mp(((((((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))→(((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))), (((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))→((((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))))\n  imim1((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  imim1(((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))), ((((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))), ((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp((((((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))), (((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2)))→(((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))))\n  imim1((((w1 → w2)→ w2)→(w0 → w2)), (((w0 → w2)→ w2)→(w0 → w2)), (w0 → w2))\n  imim1(((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2))), (((((w0 → w2)→ w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  ax-mp(((((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w0 → w2)→ w2)→((w1 → w2)→ w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))), ((((w0 → w2)→ w2)→((w1 → w2)→ w2))→((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2)))))\n  imim1(((w0 → w2)→ w2), ((w1 → w2)→ w2), (w0 → w2))\n  imim1((((w0 → w2)→ w2)→((w1 → w2)→ w2)), ((((w1 → w2)→ w2)→(w0 → w2))→(((w0 → w2)→ w2)→(w0 → w2))), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  ax-mp((((((w0 → w2)→ w2)→((w1 → w2)→ w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))), (((w1 → w2)→(w0 → w2))→(((w0 → w2)→ w2)→((w1 → w2)→ w2))))\n  imim1((w1 → w2), (w0 → w2), w2)\n  imim1(((w1 → w2)→(w0 → w2)), (((w0 → w2)→ w2)→((w1 → w2)→ w2)), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  ax-mp(((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))), ((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), ((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), ((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), ((((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  peirce((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  ax-mp((((((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))), ((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))))\n  imim1(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)), (((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  imim1((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), (((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), (((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp((((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))), ((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))))\n  imim1(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)), (((w1 → w2)→ w2)→(w0 → w2)), (w0 → w2))\n  imim1((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2))), (((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), (((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp((((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2)))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))), ((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2)))))\n  ax-1((((w1 → w2)→ w2)→(w0 → w2)), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))\n  imim1((((w1 → w2)→ w2)→(w0 → w2)), (((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(((w1 → w2)→ w2)→(w0 → w2))), (((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp((((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))), ((((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))→((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))))\n  ax-mp(((((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))→((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))), ((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))))\n  imim1(((w1 → w2)→(w0 → w2)), ((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  imim1((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))), ((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))), ((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))\n  ax-mp((((((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))→((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))))→(((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))))), (((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))))))\n  imim1((((w1 → w2)→ w2)→(w0 → w2)), (((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)), (((w1 → w2)→(w0 → w2))→(w0 → w2)))\n  imim1(((((w1 → w2)→ w2)→(w0 → w2))→(((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), (((((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))), ((((w1 → w2)→(w0 → w2))→((((w1 → w2)→ w2)→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))))\n  ax-mp((((((w1 → w2)→ w2)→(w0 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))), ((w0 →(w1 → w2))→(((w1 → w2)→ w2)→(w0 → w2))))\n  imim1(w0, (w1 → w2), w2)\n  imim1((w0 →(w1 → w2)), (((w1 → w2)→ w2)→(w0 → w2)), (((w1 → w2)→(w0 → w2))→(w0 → w2)))\n  ax-mp((((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))), (((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp((((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), (((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp((((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), (((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp((((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), (((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))))\n  peirce(((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  ax-mp(((((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))), (((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))))\n  imim1((((w1 → w2)→(w0 → w2))→(w0 → w2)), ((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  imim1(((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), ((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), ((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp(((((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))), (((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))))\n  imim1((((w1 → w2)→(w0 → w2))→(w0 → w2)), ((w1 → w2)→(w0 → w2)), (w0 → w2))\n  imim1(((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2))), ((((w1 → w2)→(w0 → w2))→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), ((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp(((((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2)))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))), (((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2)))))\n  ax-1(((w1 → w2)→(w0 → w2)), (((w1 → w2)→(w0 → w2))→(w0 → w2)))\n  imim1(((w1 → w2)→(w0 → w2)), ((((w1 → w2)→(w0 → w2))→(w0 → w2))→((w1 → w2)→(w0 → w2))), ((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp(((((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))), (((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))→(((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))))\n  ax-mp((((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))→(((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))), (((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))))\n  imim1((w0 →(w1 → w2)), (((w1 → w2)→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  imim1(((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2))), (((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))), (((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))\n  ax-mp(((((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))→(((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))))→((((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))))), ((((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)))→((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2))))))\n  imim1(((w1 → w2)→(w0 → w2)), ((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2)), ((w0 →(w1 → w2))→(w0 → w2)))\n  imim1((((w1 → w2)→(w0 → w2))→((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))), ((((((w1 → w2)→(w0 → w2))→(w0 → w2))→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))), (((w0 →(w1 → w2))→(((w1 → w2)→(w0 → w2))→(w0 → w2)))→(((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))))\n  ax-mp(((((w1 → w2)→(w0 → w2))→((w0 →(w1 → w2))→(w0 → w2)))→((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))), ((w0 → w1)→((w1 → w2)→(w0 → w2))))\n  imim1(w0, w1, w2)\n  imim1((w0 → w1), ((w1 → w2)→(w0 → w2)), ((w0 →(w1 → w2))→(w0 → w2)))\n  ax-mp((((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2)))), ((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp(((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))), ((((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))), ((((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))))\n  ax-mp(((((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))), ((((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))))\n  peirce((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  ax-mp((((((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→((((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))), ((((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))))\n  imim1(((w0 →(w1 → w2))→(w0 → w2)), (((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)), (w0 → w2))\n  imim1((((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))), (((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))), (((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp((((((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→((((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))), ((((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))))\n  imim1(((w0 →(w1 → w2))→(w0 → w2)), (w0 →(w1 → w2)), (w0 → w2))\n  imim1((((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2))), (((w0 →(w1 → w2))→(w0 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))), (((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp((((((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2)))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))), ((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2)))))\n  ax-1((w0 →(w1 → w2)), ((w0 →(w1 → w2))→(w0 → w2)))\n  imim1((w0 →(w1 → w2)), (((w0 →(w1 → w2))→(w0 → w2))→(w0 →(w1 → w2))), (((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))\n  ax-mp((((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))), ((((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→((w0 → w1)→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))→(((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))))\n  ax-mp(((((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→((w0 → w1)→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))→(((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))), (((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→((w0 → w1)→(w0 → w2)))))\n  imim1((w0 → w1), ((w0 →(w1 → w2))→(w0 → w2)), (w0 → w2))\n  imim1(((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2))), ((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→((w0 → w1)→(w0 → w2))), ((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))\n  ax-mp((((((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→((w0 → w1)→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))→(((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2)))))→(((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2)))))), (((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)))→(((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→((w0 → w1)→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2))))))\n  imim1((w0 →(w1 → w2)), (((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2)), ((w0 → w1)→(w0 → w2)))\n  imim1(((w0 →(w1 → w2))→(((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))), (((((w0 →(w1 → w2))→(w0 → w2))→(w0 → w2))→((w0 → w1)→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2)))), (((w0 → w1)→((w0 →(w1 → w2))→(w0 → w2)))→((w0 →(w1 → w2))→((w0 → w1)→(w0 → w2)))))\n}","parent":["ax-mp","peirce","ax-1","imim1"],"children":[]}]}