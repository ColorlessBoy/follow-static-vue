{"index":846,"title":"Double restricted existential uniqueness quantification syntax","content":"","blocks":[{"name":"w2reu","content":"Syntax for double restricted existential uniqueness quantification.","origin":"prop wff w2reu(setvar s0, setvar s1, class c0, class c1, wff w0) { ∃!(s0 ∈ c0, s1 ∈ c1, w0) }","pretty":"","parent":[],"children":[]},{"name":"diff.w2reu.s","content":"","origin":"axiom diff.w2reu.s(setvar sBase, setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- diffsw(sBase, w2reu(s0, s1, c0, c1, w0))\n  -| diffss(sBase, s0)\n  -| diffss(sBase, s1)\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.w2reu.s(setvar sBase, setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ d(sBase, ∃!(s0 ∈ c0, s1 ∈ c1, w0))\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, s1)\n  ⊣ d(sBase, c0)\n  ⊣ d(sBase, c1)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.w2reu.c","content":"","origin":"axiom diff.w2reu.c(class cBase, setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- diffcw(cBase, w2reu(s0, s1, c0, c1, w0))\n  -| diffsc(s0, cBase)\n  -| diffsc(s1, cBase)\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.w2reu.c(class cBase, setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ d(cBase, ∃!(s0 ∈ c0, s1 ∈ c1, w0))\n  ⊣ d(s0, cBase)\n  ⊣ d(s1, cBase)\n  ⊣ d(cBase, c0)\n  ⊣ d(cBase, c1)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.w2reu.w","content":"","origin":"axiom diff.w2reu.w(wff wBase, setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- diffww(wBase, w2reu(s0, s1, c0, c1, w0))\n  -| diffsw(s0, wBase)\n  -| diffsw(s1, wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.w2reu.w(wff wBase, setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ d(wBase, ∃!(s0 ∈ c0, s1 ∈ c1, w0))\n  ⊣ d(s0, wBase)\n  ⊣ d(s1, wBase)\n  ⊣ d(c0, wBase)\n  ⊣ d(c1, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"df-2reu","content":"Define the double restricted existential uniqueness quantifier. (Contributed by Thierry Arnoux, 4-Jul-2023.)","origin":"axiom df-2reu(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wb(w2reu(s0, s1, c0, c1, w0), wa(wreu(s0, c0, wrex(s1, c1, w0)), wreu(s1, c1, wrex(s0, c0, w0))))\n}","pretty":"axiom df-2reu(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, s1 ∈ c1, w0)↔(∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0))∧ ∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0))))\n}","parent":[],"children":["2reucom","2reu2rex1","2reureurex","2reu2reu2","opreu2reu1","sq2reunnltb","addsqnot2reu"]},{"name":"2reucom","content":"Double restricted existential uniqueness commutes. (Contributed by Thierry Arnoux, 4-Jul-2023.)","origin":"thm 2reucom(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wb(w2reu(s0, s1, c0, c1, w0), w2reu(s1, s0, c1, c0, w0))\n} = {\n  3bitr4i(w2reu(s0, s1, c0, c1, w0), w2reu(s1, s0, c1, c0, w0), wa(wreu(s0, c0, wrex(s1, c1, w0)), wreu(s1, c1, wrex(s0, c0, w0))), wa(wreu(s1, c1, wrex(s0, c0, w0)), wreu(s0, c0, wrex(s1, c1, w0))))\n  ancom(wreu(s0, c0, wrex(s1, c1, w0)), wreu(s1, c1, wrex(s0, c0, w0)))\n  df-2reu(s0, s1, c0, c1, w0)\n  df-2reu(s1, s0, c1, c0, w0)\n}","pretty":"thm 2reucom(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, s1 ∈ c1, w0)↔ ∃!(s1 ∈ c1, s0 ∈ c0, w0))\n} = {\n  3bitr4i(∃!(s0 ∈ c0, s1 ∈ c1, w0), ∃!(s1 ∈ c1, s0 ∈ c0, w0), (∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0))∧ ∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0))), (∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0))∧ ∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0))))\n  ancom(∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0)), ∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0)))\n  df-2reu(s0, s1, c0, c1, w0)\n  df-2reu(s1, s0, c1, c0, w0)\n}","parent":["3bitr4i","ancom","df-2reu"],"children":[]},{"name":"2reu2rex1","content":"Double restricted existential uniqueness implies double restricted existence. (Contributed by Thierry Arnoux, 4-Jul-2023.)","origin":"thm 2reu2rex1(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wi(w2reu(s0, s1, c0, c1, w0), wrex(s0, c0, wrex(s1, c1, w0)))\n} = {\n  syl(w2reu(s0, s1, c0, c1, w0), wrex(s0, c0, wrex(s1, c1, w0)), wreu(s0, c0, wrex(s1, c1, w0)))\n  simplbi(w2reu(s0, s1, c0, c1, w0), wreu(s0, c0, wrex(s1, c1, w0)), wreu(s1, c1, wrex(s0, c0, w0)))\n  df-2reu(s0, s1, c0, c1, w0)\n  reurex(s0, c0, wrex(s1, c1, w0))\n}","pretty":"thm 2reu2rex1(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, s1 ∈ c1, w0)→ ∃(s0 ∈ c0, ∃(s1 ∈ c1, w0)))\n} = {\n  syl(∃!(s0 ∈ c0, s1 ∈ c1, w0), ∃(s0 ∈ c0, ∃(s1 ∈ c1, w0)), ∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0)))\n  simplbi(∃!(s0 ∈ c0, s1 ∈ c1, w0), ∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0)), ∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0)))\n  df-2reu(s0, s1, c0, c1, w0)\n  reurex(s0, c0, ∃(s1 ∈ c1, w0))\n}","parent":["syl","simplbi","df-2reu","reurex"],"children":[]},{"name":"2reureurex","content":"Double restricted existential uniqueness implies restricted existential uniqueness with restricted existence. (Contributed by AV, 5-Jul-2023.)","origin":"thm 2reureurex(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wi(w2reu(s0, s1, c0, c1, w0), wreu(s0, c0, wrex(s1, c1, w0)))\n} = {\n  simplbi(w2reu(s0, s1, c0, c1, w0), wreu(s0, c0, wrex(s1, c1, w0)), wreu(s1, c1, wrex(s0, c0, w0)))\n  df-2reu(s0, s1, c0, c1, w0)\n}","pretty":"thm 2reureurex(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, s1 ∈ c1, w0)→ ∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0)))\n} = {\n  simplbi(∃!(s0 ∈ c0, s1 ∈ c1, w0), ∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0)), ∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0)))\n  df-2reu(s0, s1, c0, c1, w0)\n}","parent":["simplbi","df-2reu"],"children":[]},{"name":"2reu2reu2","content":"Double restricted existential uniqueness implies two nested restricted existential uniqueness. (Contributed by AV, 5-Jul-2023.)","origin":"thm 2reu2reu2(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wi(w2reu(s0, s1, c0, c1, w0), wreu(s0, c0, wreu(s1, c1, w0)))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n} = {\n  sylbi(w2reu(s0, s1, c0, c1, w0), wreu(s0, c0, wreu(s1, c1, w0)), wa(wreu(s0, c0, wrex(s1, c1, w0)), wreu(s1, c1, wrex(s0, c0, w0))))\n  df-2reu(s0, s1, c0, c1, w0)\n  2rexreu(s0, s1, c0, c1, w0)\n}","pretty":"thm 2reu2reu2(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (∃!(s0 ∈ c0, s1 ∈ c1, w0)→ ∃!(s0 ∈ c0, ∃!(s1 ∈ c1, w0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n} = {\n  sylbi(∃!(s0 ∈ c0, s1 ∈ c1, w0), ∃!(s0 ∈ c0, ∃!(s1 ∈ c1, w0)), (∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0))∧ ∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0))))\n  df-2reu(s0, s1, c0, c1, w0)\n  2rexreu(s0, s1, c0, c1, w0)\n}","parent":["sylbi","df-2reu","2rexreu"],"children":[]},{"name":"opreu2reu1","content":"Equivalent definition of the double restricted existential uniqueness quantifier, using uniqueness of ordered pairs. (Contributed by Thierry Arnoux, 4-Jul-2023.)","origin":"thm opreu2reu1(setvar s0, setvar s1, setvar s2, class c0, class c1, wff w0, wff w1) {\n  |- wb(w2reu(s0, s1, c0, c1, w0), wreu(s2, cxp(c0, c1), w1))\n  -| wi(wceq(cv(s2), cop(cv(s0), cv(s1))), wb(w1, w0))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsc(s2, c0)\n  -| diffsc(s2, c1)\n  -| diffsw(s0, w0)\n  -| diffsw(s0, w1)\n  -| diffsw(s1, w0)\n  -| diffsw(s1, w1)\n  -| diffsw(s2, w0)\n} = {\n  a1ii(wb(w2reu(s0, s1, c0, c1, w0), wreu(s2, cxp(c0, c1), w1)), diffsw(s0, w0))\n  a1ii(wb(w2reu(s0, s1, c0, c1, w0), wreu(s2, cxp(c0, c1), w1)), diffsw(s1, w0))\n  bitr4i(w2reu(s0, s1, c0, c1, w0), wreu(s2, cxp(c0, c1), w1), wa(wreu(s0, c0, wrex(s1, c1, w0)), wreu(s1, c1, wrex(s0, c0, w0))))\n  df-2reu(s0, s1, c0, c1, w0)\n  opreu2reurex(s2, s0, s1, c0, c1, w1, w0)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n}","pretty":"thm opreu2reu1(setvar s0, setvar s1, setvar s2, class c0, class c1, wff w0, wff w1) {\n  ⊢ (∃!(s0 ∈ c0, s1 ∈ c1, w0)↔ ∃!(s2 ∈(c0 × c1), w1))\n  ⊣ (s2 = < s0, s1 > →(w1 ↔ w0))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s2, c0)\n  ⊣ d(s2, c1)\n  ⊣ d(s0, w0)\n  ⊣ d(s0, w1)\n  ⊣ d(s1, w0)\n  ⊣ d(s1, w1)\n  ⊣ d(s2, w0)\n} = {\n  a1ii((∃!(s0 ∈ c0, s1 ∈ c1, w0)↔ ∃!(s2 ∈(c0 × c1), w1)), d(s0, w0))\n  a1ii((∃!(s0 ∈ c0, s1 ∈ c1, w0)↔ ∃!(s2 ∈(c0 × c1), w1)), d(s1, w0))\n  bitr4i(∃!(s0 ∈ c0, s1 ∈ c1, w0), ∃!(s2 ∈(c0 × c1), w1), (∃!(s0 ∈ c0, ∃(s1 ∈ c1, w0))∧ ∃!(s1 ∈ c1, ∃(s0 ∈ c0, w0))))\n  df-2reu(s0, s1, c0, c1, w0)\n  opreu2reurex(s2, s0, s1, c0, c1, w1, w0)\n  diffss.ex(s2, s0)\n  diffss.ex(s2, s1)\n}","parent":["a1ii","bitr4i","df-2reu","opreu2reurex","diffss.ex"],"children":[]},{"name":"sq2reunnltb","content":"There exists a unique decomposition of a prime as a sum of squares of two different positive integers iff the prime is of the form ` 4 k + 1 ` . Double restricted existential uniqueness variant of ~ 2sqreunnltb . (Contributed by AV, 5-Jul-2023.)","origin":"thm sq2reunnltb(setvar s0, setvar s1, class c0) {\n  |- wi(wcel(c0, cprime), wb(wceq(co(c0, cmo, nat4), nat1), w2reu(s0, s1, cn, cn, wa(wbr(cv(s0), clt, cv(s1)), wceq(co(co(cv(s0), cexp, nat2), caddc, co(cv(s1), cexp, nat2)), c0)))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  syl6bbr(wcel(c0, cprime), wceq(co(c0, cmo, nat4), nat1), w2reu(s0, s1, cn, cn, wa(wbr(cv(s0), clt, cv(s1)), wceq(co(co(cv(s0), cexp, nat2), caddc, co(cv(s1), cexp, nat2)), c0))), wa(wreu(s0, cn, wrex(s1, cn, wa(wbr(cv(s0), clt, cv(s1)), wceq(co(co(cv(s0), cexp, nat2), caddc, co(cv(s1), cexp, nat2)), c0)))), wreu(s1, cn, wrex(s0, cn, wa(wbr(cv(s0), clt, cv(s1)), wceq(co(co(cv(s0), cexp, nat2), caddc, co(cv(s1), cexp, nat2)), c0))))))\n  2sqreunnltb(s0, s1, c0, wa(wbr(cv(s0), clt, cv(s1)), wceq(co(co(cv(s0), cexp, nat2), caddc, co(cv(s1), cexp, nat2)), c0)))\n  biid(wa(wbr(cv(s0), clt, cv(s1)), wceq(co(co(cv(s0), cexp, nat2), caddc, co(cv(s1), cexp, nat2)), c0)))\n  df-2reu(s0, s1, cn, cn, wa(wbr(cv(s0), clt, cv(s1)), wceq(co(co(cv(s0), cexp, nat2), caddc, co(cv(s1), cexp, nat2)), c0)))\n}","pretty":"thm sq2reunnltb(setvar s0, setvar s1, class c0) {\n  ⊢ (c0 ∈ Prime →((c0[mod]4)= 1 ↔ ∃!(s0 ∈ ℕ, s1 ∈ ℕ,(s0[<]s1 ∧((s0[^]2)[+](s1[^]2))= c0))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  syl6bbr(c0 ∈ Prime, (c0[mod]4)= 1, ∃!(s0 ∈ ℕ, s1 ∈ ℕ,(s0[<]s1 ∧((s0[^]2)[+](s1[^]2))= c0)), (∃!(s0 ∈ ℕ, ∃(s1 ∈ ℕ,(s0[<]s1 ∧((s0[^]2)[+](s1[^]2))= c0)))∧ ∃!(s1 ∈ ℕ, ∃(s0 ∈ ℕ,(s0[<]s1 ∧((s0[^]2)[+](s1[^]2))= c0)))))\n  2sqreunnltb(s0, s1, c0, (s0[<]s1 ∧((s0[^]2)[+](s1[^]2))= c0))\n  biid((s0[<]s1 ∧((s0[^]2)[+](s1[^]2))= c0))\n  df-2reu(s0, s1, cn, cn, (s0[<]s1 ∧((s0[^]2)[+](s1[^]2))= c0))\n}","parent":["syl6bbr","2sqreunnltb","biid","df-2reu"],"children":[]},{"name":"addsqnot2reu","content":"For each complex number ` C ` , there does not uniquely exist two complex numbers ` a ` and ` b ` , with ` b ` squared and added to ` a ` resulting in the given complex number ` C ` . Double restricted existential uniqueness variant of ~ addsqn2reurex2 . (Contributed by AV, 5-Jul-2023.)","origin":"thm addsqnot2reu(setvar s0, setvar s1, class c0) {\n  |- wi(wcel(c0, cc), wn(w2reu(s0, s1, cc, cc, wceq(co(cv(s0), caddc, co(cv(s1), cexp, nat2)), c0))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  sylnibr(wcel(c0, cc), w2reu(s0, s1, cc, cc, wceq(co(cv(s0), caddc, co(cv(s1), cexp, nat2)), c0)), wa(wreu(s0, cc, wrex(s1, cc, wceq(co(cv(s0), caddc, co(cv(s1), cexp, nat2)), c0))), wreu(s1, cc, wrex(s0, cc, wceq(co(cv(s0), caddc, co(cv(s1), cexp, nat2)), c0)))))\n  addsqn2reurex2(s0, s1, c0)\n  df-2reu(s0, s1, cc, cc, wceq(co(cv(s0), caddc, co(cv(s1), cexp, nat2)), c0))\n}","pretty":"thm addsqnot2reu(setvar s0, setvar s1, class c0) {\n  ⊢ (c0 ∈ ℂ → ¬ ∃!(s0 ∈ ℂ, s1 ∈ ℂ,(s0[+](s1[^]2))= c0))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  sylnibr(c0 ∈ ℂ, ∃!(s0 ∈ ℂ, s1 ∈ ℂ,(s0[+](s1[^]2))= c0), (∃!(s0 ∈ ℂ, ∃(s1 ∈ ℂ,(s0[+](s1[^]2))= c0))∧ ∃!(s1 ∈ ℂ, ∃(s0 ∈ ℂ,(s0[+](s1[^]2))= c0))))\n  addsqn2reurex2(s0, s1, c0)\n  df-2reu(s0, s1, cc, cc, (s0[+](s1[^]2))= c0)\n}","parent":["sylnibr","addsqn2reurex2","df-2reu"],"children":[]}]}