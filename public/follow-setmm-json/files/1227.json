{"index":1227,"title":"Transitivity","content":"","blocks":[{"name":"df-trs","content":"Define the class of all transitive sets (versus the transitive class defined in ~ df-tr ). It is used only by ~ df-trrels . Note the similarity of the definitions of ~ df-refs , ~ df-syms and ~ df-trs . (Contributed by Peter Mazsa, 17-Jul-2021.)","origin":"axiom df-trs(setvar s0) {\n  |- wceq(ctrs, cab(s0, wbr(ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), cssr, cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))))))\n}","pretty":"axiom df-trs(setvar s0) {\n  ⊢ Trs = { s0 |((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0))))[_S](s0 ⋂(dom(s0)× ran(s0)))}\n}","parent":[],"children":["dftrrels2"]},{"name":"df-trrels","content":"Define the class of transitive relations. For sets, being an element of the class of transitive relations is equivalent to satisfying the transitive relation predicate, see ~ eltrrelsrel . Alternate definitions are ~ dftrrels2 and ~ dftrrels3 . This definition is similar to the definitions of the classes of reflexive ( ~ df-refrels ) and symmetric ( ~ df-symrels ) relations. (Contributed by Peter Mazsa, 7-Jul-2019.)","origin":"axiom df-trrels() {\n  |- wceq(ctrrels, cin(ctrs, crels))\n}","pretty":"axiom df-trrels() {\n  ⊢ TrRels =(Trs ⋂ Rels)\n}","parent":[],"children":["dftrrels2"]},{"name":"df-trrel","content":"Define the transitive relation predicate. (Read: ` R ` is a transitive relation.) For sets, being an element of the class of transitive relations ( ~ df-trrels ) is equivalent to satisfying the transitive relation predicate, see ~ eltrrelsrel . Alternate definitions are ~ dftrrel2 and ~ dftrrel3 . (Contributed by Peter Mazsa, 17-Jul-2021.)","origin":"axiom df-trrel(class c0) {\n  |- wb(wtrrel(c0), wa(wss(ccom(cin(c0, cxp(cdm(c0), crn(c0))), cin(c0, cxp(cdm(c0), crn(c0)))), cin(c0, cxp(cdm(c0), crn(c0)))), wrel(c0)))\n}","pretty":"axiom df-trrel(class c0) {\n  ⊢ (TrRel(c0)↔(((c0 ⋂(dom(c0)× ran(c0)))∘(c0 ⋂(dom(c0)× ran(c0))))⊆(c0 ⋂(dom(c0)× ran(c0)))∧ Rel(c0)))\n}","parent":[],"children":["dftrrel2"]},{"name":"dftrrels2","content":"Alternate definition of the class of transitive relations. I'd prefer to define the class of transitive relations by using the definition of composition by [Suppes] p. 63. df-coSUP ` ( A o. B ) = { <. x , y >. | E. u ( x A u /\\ u B y ) } ` as opposed to the present definition of composition ~ df-co ` ( A o. B ) = { <. x , y >. | E. u ( x B u /\\ u A y ) } ` because the Suppes definition keeps the order of ` A ` , ` B ` , ` C ` , ` R ` , ` S ` , ` T ` by default in trsinxpSUP ( ( ( R i^i ( A X. B ) ) o. ( S i^i ( B X. C ) ) ) C_ ( T i^i ( A X. C ) ) <-> A. x e. A A. y e. B A. z e. C ( ( x R y /\\ y S z ) -> x T z ) ) while the present definition of composition disarranges them: trsinxp ( ( ( S i^i ( B X. C ) ) o. ( R i^i ( A X. B ) ) ) C_ ( T i^i ( A X. C ) ) <-> A. x e. A A. y e. B A. z e. C ( ( x R y /\\ y S z ) -> x T z ) ). This is not mission critical to me, the implication of the Suppes definition is just more aesthetic, at least in the above case. If we swap to the Suppes definition of class composition, I would define the present class of all transitive sets as df-trsSUP and I would consider to switch the definition of the class of cosets by ` R ` from the present ~ df-coss to a df-cossSUP. But perhaps there is a mathematical reason to keep the present definition of composition. (Contributed by Peter Mazsa, 21-Jul-2021.)","origin":"thm dftrrels2(setvar s0) {\n  |- wceq(ctrrels, crab(s0, crels, wss(ccom(cv(s0), cv(s0)), cv(s0))))\n} = {\n  abeqinbi(s0, ctrrels, crels, ctrs, wss(ccom(cv(s0), cv(s0)), cv(s0)), wbr(ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), cssr, cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))))\n  df-trrels()\n  df-trs(s0)\n  syl5bb(wcel(cv(s0), crels), wbr(ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), cssr, cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), wss(ccom(cv(s0), cv(s0)), cv(s0)), wss(ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))))\n  ax-mp(wb(wbr(ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), cssr, cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), wss(ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))))), wcel(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), universe))\n  elv(s0, wcel(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), universe))\n  inex1g(cv(s0), universe, cxp(cdm(cv(s0)), crn(cv(s0))))\n  brssr(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), universe, ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))))\n  sseq12d(ccom(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0))))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), ccom(cv(s0), cv(s0)), cv(s0), wcel(cv(s0), crels))\n  coeq12d(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cv(s0), cv(s0), wcel(cv(s0), crels))\n  biimpi(wcel(cv(s0), crels), wceq(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cv(s0)))\n  elv(s0, wb(wcel(cv(s0), crels), wceq(cin(cv(s0), cxp(cdm(cv(s0)), crn(cv(s0)))), cv(s0))))\n  elrels6(cv(s0), universe)\n  diff.crels.s(s0)\n}","pretty":"thm dftrrels2(setvar s0) {\n  ⊢ TrRels = { s0 ∈ Rels |(s0 ∘ s0)⊆ s0 }\n} = {\n  abeqinbi(s0, ctrrels, crels, ctrs, (s0 ∘ s0)⊆ s0, ((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0))))[_S](s0 ⋂(dom(s0)× ran(s0))))\n  df-trrels()\n  df-trs(s0)\n  syl5bb(s0 ∈ Rels, ((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0))))[_S](s0 ⋂(dom(s0)× ran(s0))), (s0 ∘ s0)⊆ s0, ((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0))))⊆(s0 ⋂(dom(s0)× ran(s0))))\n  ax-mp((((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0))))[_S](s0 ⋂(dom(s0)× ran(s0)))↔((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0))))⊆(s0 ⋂(dom(s0)× ran(s0)))), (s0 ⋂(dom(s0)× ran(s0)))∈ 𝕌)\n  elv(s0, (s0 ⋂(dom(s0)× ran(s0)))∈ 𝕌)\n  inex1g(s0, universe, (dom(s0)× ran(s0)))\n  brssr((s0 ⋂(dom(s0)× ran(s0))), universe, ((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0)))))\n  sseq12d(((s0 ⋂(dom(s0)× ran(s0)))∘(s0 ⋂(dom(s0)× ran(s0)))), (s0 ⋂(dom(s0)× ran(s0))), (s0 ∘ s0), s0, s0 ∈ Rels)\n  coeq12d((s0 ⋂(dom(s0)× ran(s0))), (s0 ⋂(dom(s0)× ran(s0))), s0, s0, s0 ∈ Rels)\n  biimpi(s0 ∈ Rels, (s0 ⋂(dom(s0)× ran(s0)))= s0)\n  elv(s0, (s0 ∈ Rels ↔(s0 ⋂(dom(s0)× ran(s0)))= s0))\n  elrels6(s0, universe)\n  diff.crels.s(s0)\n}","parent":["abeqinbi","df-trrels","df-trs","syl5bb","ax-mp","elv","inex1g","brssr","sseq12d","coeq12d","biimpi","elrels6","diff.crels.s"],"children":["dftrrels3","eltrrels2","dfeqvrels2"]},{"name":"dftrrels3","content":"Alternate definition of the class of transitive relations. (Contributed by Peter Mazsa, 22-Jul-2021.)","origin":"thm dftrrels3(setvar s0, setvar s1, setvar s2, setvar s3) {\n  |- wceq(ctrrels, crab(s0, crels, wal(s1, wal(s2, wal(s3, wi(wa(wbr(cv(s1), cv(s0), cv(s2)), wbr(cv(s2), cv(s0), cv(s3))), wbr(cv(s1), cv(s0), cv(s3))))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s0, s3)\n  -| diffss(s1, s2)\n  -| diffss(s1, s3)\n  -| diffss(s2, s3)\n} = {\n  rabbieq(s0, ctrrels, crels, wal(s1, wal(s2, wal(s3, wi(wa(wbr(cv(s1), cv(s0), cv(s2)), wbr(cv(s2), cv(s0), cv(s3))), wbr(cv(s1), cv(s0), cv(s3)))))), wss(ccom(cv(s0), cv(s0)), cv(s0)))\n  dftrrels2(s0)\n  cotr(s1, s2, s3, cv(s0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n}","pretty":"thm dftrrels3(setvar s0, setvar s1, setvar s2, setvar s3) {\n  ⊢ TrRels = { s0 ∈ Rels | ∀(s1, ∀(s2, ∀(s3,((s1[s0]s2 ∧ s2[s0]s3)→ s1[s0]s3))))}\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s0, s3)\n  ⊣ d(s1, s2)\n  ⊣ d(s1, s3)\n  ⊣ d(s2, s3)\n} = {\n  rabbieq(s0, ctrrels, crels, ∀(s1, ∀(s2, ∀(s3,((s1[s0]s2 ∧ s2[s0]s3)→ s1[s0]s3)))), (s0 ∘ s0)⊆ s0)\n  dftrrels2(s0)\n  cotr(s1, s2, s3, s0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s3, s0)\n  diffss.ex(s3, s0)\n}","parent":["rabbieq","dftrrels2","cotr","diff.cv.s","diffss.ex"],"children":["eltrrels3"]},{"name":"dftrrel2","content":"Alternate definition of the transitive relation predicate. (Contributed by Peter Mazsa, 22-Aug-2021.)","origin":"thm dftrrel2(class c0) {\n  |- wb(wtrrel(c0), wa(wss(ccom(c0, c0), c0), wrel(c0)))\n} = {\n  bitri(wtrrel(c0), wa(wss(ccom(c0, c0), c0), wrel(c0)), wa(wss(ccom(cin(c0, cxp(cdm(c0), crn(c0))), cin(c0, cxp(cdm(c0), crn(c0)))), cin(c0, cxp(cdm(c0), crn(c0)))), wrel(c0)))\n  df-trrel(c0)\n  pm5.32ri(wss(ccom(cin(c0, cxp(cdm(c0), crn(c0))), cin(c0, cxp(cdm(c0), crn(c0)))), cin(c0, cxp(cdm(c0), crn(c0)))), wrel(c0), wss(ccom(c0, c0), c0))\n  sseq12d(ccom(cin(c0, cxp(cdm(c0), crn(c0))), cin(c0, cxp(cdm(c0), crn(c0)))), cin(c0, cxp(cdm(c0), crn(c0))), ccom(c0, c0), c0, wrel(c0))\n  coeq12d(cin(c0, cxp(cdm(c0), crn(c0))), cin(c0, cxp(cdm(c0), crn(c0))), c0, c0, wrel(c0))\n  biimpi(wrel(c0), wceq(cin(c0, cxp(cdm(c0), crn(c0))), c0))\n  dfrel6(c0)\n}","pretty":"thm dftrrel2(class c0) {\n  ⊢ (TrRel(c0)↔((c0 ∘ c0)⊆ c0 ∧ Rel(c0)))\n} = {\n  bitri(TrRel(c0), ((c0 ∘ c0)⊆ c0 ∧ Rel(c0)), (((c0 ⋂(dom(c0)× ran(c0)))∘(c0 ⋂(dom(c0)× ran(c0))))⊆(c0 ⋂(dom(c0)× ran(c0)))∧ Rel(c0)))\n  df-trrel(c0)\n  pm5.32ri(((c0 ⋂(dom(c0)× ran(c0)))∘(c0 ⋂(dom(c0)× ran(c0))))⊆(c0 ⋂(dom(c0)× ran(c0))), Rel(c0), (c0 ∘ c0)⊆ c0)\n  sseq12d(((c0 ⋂(dom(c0)× ran(c0)))∘(c0 ⋂(dom(c0)× ran(c0)))), (c0 ⋂(dom(c0)× ran(c0))), (c0 ∘ c0), c0, Rel(c0))\n  coeq12d((c0 ⋂(dom(c0)× ran(c0))), (c0 ⋂(dom(c0)× ran(c0))), c0, c0, Rel(c0))\n  biimpi(Rel(c0), (c0 ⋂(dom(c0)× ran(c0)))= c0)\n  dfrel6(c0)\n}","parent":["bitri","df-trrel","pm5.32ri","sseq12d","coeq12d","biimpi","dfrel6"],"children":["dftrrel3","eltrrelsrel","trreleq","dfeqvrel2"]},{"name":"dftrrel3","content":"Alternate definition of the transitive relation predicate. (Contributed by Peter Mazsa, 22-Aug-2021.)","origin":"thm dftrrel3(setvar s0, setvar s1, setvar s2, class c0) {\n  |- wb(wtrrel(c0), wa(wal(s0, wal(s1, wal(s2, wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2)))))), wrel(c0)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsc(s2, c0)\n} = {\n  bitri(wtrrel(c0), wa(wal(s0, wal(s1, wal(s2, wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2)))))), wrel(c0)), wa(wss(ccom(c0, c0), c0), wrel(c0)))\n  dftrrel2(c0)\n  anbi1i(wss(ccom(c0, c0), c0), wrel(c0), wal(s0, wal(s1, wal(s2, wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2)))))))\n  cotr(s0, s1, s2, c0)\n}","pretty":"thm dftrrel3(setvar s0, setvar s1, setvar s2, class c0) {\n  ⊢ (TrRel(c0)↔(∀(s0, ∀(s1, ∀(s2,((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2))))∧ Rel(c0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s2, c0)\n} = {\n  bitri(TrRel(c0), (∀(s0, ∀(s1, ∀(s2,((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2))))∧ Rel(c0)), ((c0 ∘ c0)⊆ c0 ∧ Rel(c0)))\n  dftrrel2(c0)\n  anbi1i((c0 ∘ c0)⊆ c0, Rel(c0), ∀(s0, ∀(s1, ∀(s2,((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2)))))\n  cotr(s0, s1, s2, c0)\n}","parent":["bitri","dftrrel2","anbi1i","cotr"],"children":["dfeqvrel3"]},{"name":"eltrrels2","content":"Element of the class of transitive relations. (Contributed by Peter Mazsa, 22-Aug-2021.)","origin":"thm eltrrels2(class c0) {\n  |- wb(wcel(c0, ctrrels), wa(wss(ccom(c0, c0), c0), wcel(c0, crels)))\n} = {\n  rabeqel(hs0, c0, ctrrels, crels, wss(ccom(c0, c0), c0), wss(ccom(cv(hs0), cv(hs0)), cv(hs0)))\n  dftrrels2(hs0)\n  sseq12d(ccom(cv(hs0), cv(hs0)), cv(hs0), ccom(c0, c0), c0, wceq(cv(hs0), c0))\n  coideq(cv(hs0), c0)\n  id(wceq(cv(hs0), c0))\n  diff.hs0.c(c0)\n  diff.hs0.c(crels)\n  diff.hs0.w(wss(ccom(c0, c0), c0))\n}","pretty":"thm eltrrels2(class c0) {\n  ⊢ (c0 ∈ TrRels ↔((c0 ∘ c0)⊆ c0 ∧ c0 ∈ Rels))\n} = {\n  rabeqel(hs0, c0, ctrrels, crels, (c0 ∘ c0)⊆ c0, (hs0 ∘ hs0)⊆ hs0)\n  dftrrels2(hs0)\n  sseq12d((hs0 ∘ hs0), hs0, (c0 ∘ c0), c0, hs0 = c0)\n  coideq(hs0, c0)\n  id(hs0 = c0)\n  diff.hs0.c(c0)\n  diff.hs0.c(crels)\n  diff.hs0.w((c0 ∘ c0)⊆ c0)\n}","parent":["rabeqel","dftrrels2","sseq12d","coideq","id","diff.hs0.c","diff.hs0.w"],"children":["eltrrelsrel"]},{"name":"eltrrels3","content":"Element of the class of transitive relations. (Contributed by Peter Mazsa, 22-Aug-2021.)","origin":"thm eltrrels3(setvar s0, setvar s1, setvar s2, class c0) {\n  |- wb(wcel(c0, ctrrels), wa(wal(s0, wal(s1, wal(s2, wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2)))))), wcel(c0, crels)))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n  -| diffsc(s2, c0)\n} = {\n  rabeqel(hs0, c0, ctrrels, crels, wal(s0, wal(s1, wal(s2, wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2)))))), wal(s0, wal(s1, wal(s2, wi(wa(wbr(cv(s0), cv(hs0), cv(s1)), wbr(cv(s1), cv(hs0), cv(s2))), wbr(cv(s0), cv(hs0), cv(s2)))))))\n  dftrrels3(hs0, s0, s1, s2)\n  albidv(s0, wceq(cv(hs0), c0), wal(s1, wal(s2, wi(wa(wbr(cv(s0), cv(hs0), cv(s1)), wbr(cv(s1), cv(hs0), cv(s2))), wbr(cv(s0), cv(hs0), cv(s2))))), wal(s1, wal(s2, wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2))))))\n  2albidv(s1, s2, wceq(cv(hs0), c0), wi(wa(wbr(cv(s0), cv(hs0), cv(s1)), wbr(cv(s1), cv(hs0), cv(s2))), wbr(cv(s0), cv(hs0), cv(s2))), wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2))))\n  imbi12d(wceq(cv(hs0), c0), wa(wbr(cv(s0), cv(hs0), cv(s1)), wbr(cv(s1), cv(hs0), cv(s2))), wbr(cv(s0), cv(hs0), cv(s2)), wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2)))\n  anbi12d(wceq(cv(hs0), c0), wbr(cv(s0), cv(hs0), cv(s1)), wbr(cv(s1), cv(hs0), cv(s2)), wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2)))\n  breq(cv(hs0), c0, cv(s0), cv(s1))\n  breq(cv(hs0), c0, cv(s1), cv(s2))\n  breq(cv(hs0), c0, cv(s0), cv(s2))\n  diff.hs0.c(c0)\n  diff.hs0.c(crels)\n  diff.hs0.w(wal(s0, wal(s1, wal(s2, wi(wa(wbr(cv(s0), c0, cv(s1)), wbr(cv(s1), c0, cv(s2))), wbr(cv(s0), c0, cv(s2)))))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wceq.s(s1, cv(hs0), c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.wceq.s(s2, cv(hs0), c0)\n  diff.cv.s(s2, hs0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n}","pretty":"thm eltrrels3(setvar s0, setvar s1, setvar s2, class c0) {\n  ⊢ (c0 ∈ TrRels ↔(∀(s0, ∀(s1, ∀(s2,((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2))))∧ c0 ∈ Rels))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n  ⊣ d(s2, c0)\n} = {\n  rabeqel(hs0, c0, ctrrels, crels, ∀(s0, ∀(s1, ∀(s2,((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2)))), ∀(s0, ∀(s1, ∀(s2,((s0[hs0]s1 ∧ s1[hs0]s2)→ s0[hs0]s2)))))\n  dftrrels3(hs0, s0, s1, s2)\n  albidv(s0, hs0 = c0, ∀(s1, ∀(s2,((s0[hs0]s1 ∧ s1[hs0]s2)→ s0[hs0]s2))), ∀(s1, ∀(s2,((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2))))\n  2albidv(s1, s2, hs0 = c0, ((s0[hs0]s1 ∧ s1[hs0]s2)→ s0[hs0]s2), ((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2))\n  imbi12d(hs0 = c0, (s0[hs0]s1 ∧ s1[hs0]s2), s0[hs0]s2, (s0[c0]s1 ∧ s1[c0]s2), s0[c0]s2)\n  anbi12d(hs0 = c0, s0[hs0]s1, s1[hs0]s2, s0[c0]s1, s1[c0]s2)\n  breq(hs0, c0, s0, s1)\n  breq(hs0, c0, s1, s2)\n  breq(hs0, c0, s0, s2)\n  diff.hs0.c(c0)\n  diff.hs0.c(crels)\n  diff.hs0.w(∀(s0, ∀(s1, ∀(s2,((s0[c0]s1 ∧ s1[c0]s2)→ s0[c0]s2)))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wceq.s(s1, hs0, c0)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.wceq.s(s2, hs0, c0)\n  diff.cv.s(s2, hs0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n}","parent":["rabeqel","dftrrels3","albidv","2albidv","imbi12d","anbi12d","breq","diff.hs0.c","diff.hs0.w","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":[]},{"name":"eltrrelsrel","content":"For sets, being an element of the class of transitive relations is equivalent to satisfying the transitive relation predicate. (Contributed by Peter Mazsa, 22-Aug-2021.)","origin":"thm eltrrelsrel(class c0, class c1) {\n  |- wi(wcel(c0, c1), wb(wcel(c0, ctrrels), wtrrel(c0)))\n} = {\n  3bitr4g(wcel(c0, c1), wcel(c0, ctrrels), wtrrel(c0), wa(wss(ccom(c0, c0), c0), wcel(c0, crels)), wa(wss(ccom(c0, c0), c0), wrel(c0)))\n  anbi2d(wcel(c0, c1), wss(ccom(c0, c0), c0), wcel(c0, crels), wrel(c0))\n  elrelsrel(c0, c1)\n  eltrrels2(c0)\n  dftrrel2(c0)\n}","pretty":"thm eltrrelsrel(class c0, class c1) {\n  ⊢ (c0 ∈ c1 →(c0 ∈ TrRels ↔ TrRel(c0)))\n} = {\n  3bitr4g(c0 ∈ c1, c0 ∈ TrRels, TrRel(c0), ((c0 ∘ c0)⊆ c0 ∧ c0 ∈ Rels), ((c0 ∘ c0)⊆ c0 ∧ Rel(c0)))\n  anbi2d(c0 ∈ c1, (c0 ∘ c0)⊆ c0, c0 ∈ Rels, Rel(c0))\n  elrelsrel(c0, c1)\n  eltrrels2(c0)\n  dftrrel2(c0)\n}","parent":["3bitr4g","anbi2d","elrelsrel","eltrrels2","dftrrel2"],"children":[]},{"name":"trreleq","content":"Equality theorem for the transitive relation predicate. (Contributed by Peter Mazsa, 15-Apr-2019.) (Revised by Peter Mazsa, 23-Sep-2021.)","origin":"thm trreleq(class c0, class c1) {\n  |- wi(wceq(c0, c1), wb(wtrrel(c0), wtrrel(c1)))\n} = {\n  3bitr4g(wceq(c0, c1), wtrrel(c0), wtrrel(c1), wa(wss(ccom(c0, c0), c0), wrel(c0)), wa(wss(ccom(c1, c1), c1), wrel(c1)))\n  anbi12d(wceq(c0, c1), wss(ccom(c0, c0), c0), wrel(c0), wss(ccom(c1, c1), c1), wrel(c1))\n  sseq12d(ccom(c0, c0), c0, ccom(c1, c1), c1, wceq(c0, c1))\n  coideq(c0, c1)\n  id(wceq(c0, c1))\n  releq(c0, c1)\n  dftrrel2(c0)\n  dftrrel2(c1)\n}","pretty":"thm trreleq(class c0, class c1) {\n  ⊢ (c0 = c1 →(TrRel(c0)↔ TrRel(c1)))\n} = {\n  3bitr4g(c0 = c1, TrRel(c0), TrRel(c1), ((c0 ∘ c0)⊆ c0 ∧ Rel(c0)), ((c1 ∘ c1)⊆ c1 ∧ Rel(c1)))\n  anbi12d(c0 = c1, (c0 ∘ c0)⊆ c0, Rel(c0), (c1 ∘ c1)⊆ c1, Rel(c1))\n  sseq12d((c0 ∘ c0), c0, (c1 ∘ c1), c1, c0 = c1)\n  coideq(c0, c1)\n  id(c0 = c1)\n  releq(c0, c1)\n  dftrrel2(c0)\n  dftrrel2(c1)\n}","parent":["3bitr4g","anbi12d","sseq12d","coideq","id","releq","dftrrel2"],"children":["eqvreleq"]}]}