{"index":1239,"title":"Rederive new axioms ax-4, ax-10, ax-6, ax-12, ax-13 from old","content":"Theorems ~ ax12fromc15 and ~ ax13fromc9 require some intermediate theorems that are included in this section.","blocks":[{"name":"axc5","content":"This theorem repeats ~ sp under the name ~ axc5 , so that the Metamath program \"MM> VERIFY MARKUP\" command will check that it matches axiom scheme ~ ax-c5 . (Contributed by NM, 18-Aug-2017.) (Proof modification is discouraged.) Use ~ sp instead. (New usage is discouraged.)","origin":"thm axc5(setvar s0, wff w0) {\n  |- wi(wal(s0, w0), w0)\n} = {\n  sp(s0, w0)\n}","pretty":"thm axc5(setvar s0, wff w0) {\n  ⊢ (∀(s0, w0)→ w0)\n} = {\n  sp(s0, w0)\n}","parent":["sp"],"children":[]},{"name":"ax4fromc4","content":"Rederivation of axiom ~ ax-4 from ~ ax-c4 , ~ ax-c5 , ~ ax-gen and minimal implicational calculus { ~ ax-mp , ~ ax-1 , ~ ax-2 }. See ~ axc4 for the derivation of ~ ax-c4 from ~ ax-4 . (Contributed by NM, 23-May-2008.) (Proof modification is discouraged.) Use ~ ax-4 instead. (New usage is discouraged.)","origin":"thm ax4fromc4(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, wi(w0, w1)), wi(wal(s0, w0), wal(s0, w1)))\n} = {\n  syl(wal(s0, wi(w0, w1)), wi(wal(s0, w0), wal(s0, w1)), wal(s0, wi(wal(s0, w0), w1)))\n  mpg(s0, wi(wal(s0, wi(w0, w1)), wal(s0, wi(wal(s0, w0), w1))), wi(wal(s0, wi(w0, w1)), wi(wal(s0, w0), w1)))\n  ax-c4(s0, wi(w0, w1), wi(wal(s0, w0), w1))\n  syl5(wal(s0, wi(w0, w1)), wal(s0, w0), w1, w0)\n  ax-c5(s0, w0)\n  ax-c5(s0, wi(w0, w1))\n  ax-c4(s0, w0, w1)\n}","pretty":"thm ax4fromc4(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0,(w0 → w1))→(∀(s0, w0)→ ∀(s0, w1)))\n} = {\n  syl(∀(s0,(w0 → w1)), (∀(s0, w0)→ ∀(s0, w1)), ∀(s0,(∀(s0, w0)→ w1)))\n  mpg(s0, (∀(s0,(w0 → w1))→ ∀(s0,(∀(s0, w0)→ w1))), (∀(s0,(w0 → w1))→(∀(s0, w0)→ w1)))\n  ax-c4(s0, (w0 → w1), (∀(s0, w0)→ w1))\n  syl5(∀(s0,(w0 → w1)), ∀(s0, w0), w1, w0)\n  ax-c5(s0, w0)\n  ax-c5(s0, (w0 → w1))\n  ax-c4(s0, w0, w1)\n}","parent":["syl","mpg","ax-c4","syl5","ax-c5"],"children":[]},{"name":"ax10fromc7","content":"Rederivation of axiom ~ ax-10 from ~ ax-c7 , ~ ax-c4 , ~ ax-c5 , ~ ax-gen and propositional calculus. See ~ axc7 for the derivation of ~ ax-c7 from ~ ax-10 . (Contributed by NM, 23-May-2008.) (Proof modification is discouraged.) Use ~ ax-10 instead. (New usage is discouraged.)","origin":"thm ax10fromc7(setvar s0, wff w0) {\n  |- wi(wn(wal(s0, w0)), wal(s0, wn(wal(s0, w0))))\n} = {\n  nsyl4(wal(s0, w0), wal(s0, wn(wal(s0, w0))), wal(s0, wn(wal(s0, wal(s0, w0)))))\n  mpg(s0, wi(wal(s0, wn(wal(s0, wal(s0, w0)))), wal(s0, wn(wal(s0, w0)))), wi(wal(s0, wn(wal(s0, wal(s0, w0)))), wn(wal(s0, w0))))\n  ax-c4(s0, wn(wal(s0, wal(s0, w0))), wn(wal(s0, w0)))\n  nsyl(wal(s0, wn(wal(s0, wal(s0, w0)))), wal(s0, w0), wal(s0, wal(s0, w0)))\n  ax-c5(s0, wn(wal(s0, wal(s0, w0))))\n  mpg(s0, wi(wal(s0, w0), wal(s0, wal(s0, w0))), wi(wal(s0, w0), wal(s0, w0)))\n  ax-c4(s0, w0, wal(s0, w0))\n  id(wal(s0, w0))\n  ax-c7(s0, wal(s0, w0))\n}","pretty":"thm ax10fromc7(setvar s0, wff w0) {\n  ⊢ (¬ ∀(s0, w0)→ ∀(s0, ¬ ∀(s0, w0)))\n} = {\n  nsyl4(∀(s0, w0), ∀(s0, ¬ ∀(s0, w0)), ∀(s0, ¬ ∀(s0, ∀(s0, w0))))\n  mpg(s0, (∀(s0, ¬ ∀(s0, ∀(s0, w0)))→ ∀(s0, ¬ ∀(s0, w0))), (∀(s0, ¬ ∀(s0, ∀(s0, w0)))→ ¬ ∀(s0, w0)))\n  ax-c4(s0, ¬ ∀(s0, ∀(s0, w0)), ¬ ∀(s0, w0))\n  nsyl(∀(s0, ¬ ∀(s0, ∀(s0, w0))), ∀(s0, w0), ∀(s0, ∀(s0, w0)))\n  ax-c5(s0, ¬ ∀(s0, ∀(s0, w0)))\n  mpg(s0, (∀(s0, w0)→ ∀(s0, ∀(s0, w0))), (∀(s0, w0)→ ∀(s0, w0)))\n  ax-c4(s0, w0, ∀(s0, w0))\n  id(∀(s0, w0))\n  ax-c7(s0, ∀(s0, w0))\n}","parent":["nsyl4","mpg","ax-c4","nsyl","ax-c5","id","ax-c7"],"children":["hba1-o","axc5c711","equidq"]},{"name":"ax6fromc10","content":"Rederivation of axiom ~ ax-6 from ~ ax-c7 , ~ ax-c10 , ~ ax-gen and propositional calculus. See ~ axc10 for the derivation of ~ ax-c10 from ~ ax-6 . Lemma L18 in [Megill] p. 446 (p. 14 of the preprint). (Contributed by NM, 14-May-1993.) (Proof modification is discouraged.) Use ~ ax-6 instead. (New usage is discouraged.)","origin":"thm ax6fromc10(setvar s0, setvar s1) {\n  |- wn(wal(s0, wn(wceq(cv(s0), cv(s1)))))\n} = {\n  mpg(s0, wn(wal(s0, wn(wceq(cv(s0), cv(s1))))), wi(wceq(cv(s0), cv(s1)), wal(s0, wn(wal(s0, wn(wceq(cv(s0), cv(s1))))))))\n  ax-c10(s0, s1, wn(wal(s0, wn(wceq(cv(s0), cv(s1))))))\n  con4i(wceq(cv(s0), cv(s1)), wal(s0, wn(wal(s0, wn(wceq(cv(s0), cv(s1)))))))\n  ax-c7(s0, wn(wceq(cv(s0), cv(s1))))\n}","pretty":"thm ax6fromc10(setvar s0, setvar s1) {\n  ⊢ ¬ ∀(s0, ¬ s0 = s1)\n} = {\n  mpg(s0, ¬ ∀(s0, ¬ s0 = s1), (s0 = s1 → ∀(s0, ¬ ∀(s0, ¬ s0 = s1))))\n  ax-c10(s0, s1, ¬ ∀(s0, ¬ s0 = s1))\n  con4i(s0 = s1, ∀(s0, ¬ ∀(s0, ¬ s0 = s1)))\n  ax-c7(s0, ¬ s0 = s1)\n}","parent":["mpg","ax-c10","con4i","ax-c7"],"children":["equidqe"]},{"name":"hba1-o","content":"The setvar ` x ` is not free in ` A. x ph ` . Example in Appendix in [Megill] p. 450 (p. 19 of the preprint). Also Lemma 22 of [Monk2] p. 114. (Contributed by NM, 24-Jan-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm hba1-o(setvar s0, wff w0) {\n  |- wi(wal(s0, w0), wal(s0, wal(s0, w0)))\n} = {\n  3syl(wal(s0, w0), wal(s0, wal(s0, w0)), wn(wal(s0, wn(wal(s0, w0)))), wal(s0, wn(wal(s0, wn(wal(s0, w0))))))\n  con2i(wal(s0, w0), wal(s0, wn(wal(s0, w0))))\n  ax-c5(s0, wn(wal(s0, w0)))\n  ax10fromc7(s0, wn(wal(s0, w0)))\n  alimi(s0, wn(wal(s0, wn(wal(s0, w0)))), wal(s0, w0))\n  con1i(wal(s0, wn(wal(s0, w0))), wal(s0, w0))\n  ax10fromc7(s0, w0)\n}","pretty":"thm hba1-o(setvar s0, wff w0) {\n  ⊢ (∀(s0, w0)→ ∀(s0, ∀(s0, w0)))\n} = {\n  3syl(∀(s0, w0), ∀(s0, ∀(s0, w0)), ¬ ∀(s0, ¬ ∀(s0, w0)), ∀(s0, ¬ ∀(s0, ¬ ∀(s0, w0))))\n  con2i(∀(s0, w0), ∀(s0, ¬ ∀(s0, w0)))\n  ax-c5(s0, ¬ ∀(s0, w0))\n  ax10fromc7(s0, ¬ ∀(s0, w0))\n  alimi(s0, ¬ ∀(s0, ¬ ∀(s0, w0)), ∀(s0, w0))\n  con1i(∀(s0, ¬ ∀(s0, w0)), ∀(s0, w0))\n  ax10fromc7(s0, w0)\n}","parent":["3syl","con2i","ax-c5","ax10fromc7","alimi","con1i"],"children":["axc4i-o","nfa1-o","axc711toc7","axc5c711toc7","dvelimf-o","ax12indalem","ax12inda2ALT","ax12inda"]},{"name":"axc4i-o","content":"Inference version of ~ ax-c4 . (Contributed by NM, 3-Jan-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm axc4i-o(setvar s0, wff w0, wff w1) {\n  |- wi(wal(s0, w0), wal(s0, w1))\n  -| wi(wal(s0, w0), w1)\n} = {\n  alrimih(s0, wal(s0, w0), w1)\n  hba1-o(s0, w0)\n}","pretty":"thm axc4i-o(setvar s0, wff w0, wff w1) {\n  ⊢ (∀(s0, w0)→ ∀(s0, w1))\n  ⊣ (∀(s0, w0)→ w1)\n} = {\n  alrimih(s0, ∀(s0, w0), w1)\n  hba1-o(s0, w0)\n}","parent":["alrimih","hba1-o"],"children":["hbae-o","aev-o","axc11n-16","ax12indalem","ax12inda2ALT"]},{"name":"equid1","content":"Proof of ~ equid from our older axioms. This is often an axiom of equality in textbook systems, but we don't need it as an axiom since it can be proved from our other axioms (although the proof, as you can see below, is not as obvious as you might think). This proof uses only axioms without distinct variable conditions and requires no dummy variables. A simpler proof, similar to Tarski's, is possible if we make use of ~ ax-5 ; see the proof of ~ equid . See ~ equid1ALT for an alternate proof. (Contributed by NM, 10-Jan-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm equid1(setvar s0) {\n  |- wceq(cv(s0), cv(s0))\n} = {\n  pm2.61i(wceq(cv(s0), cv(s0)), wal(s0, wn(wal(s0, wceq(cv(s0), cv(s0))))))\n  syl(wal(s0, wn(wal(s0, wceq(cv(s0), cv(s0))))), wceq(cv(s0), cv(s0)), wal(s0, wi(wceq(cv(s0), cv(s0)), wal(s0, wceq(cv(s0), cv(s0))))))\n  mpg(s0, wi(wal(s0, wn(wal(s0, wceq(cv(s0), cv(s0))))), wal(s0, wi(wceq(cv(s0), cv(s0)), wal(s0, wceq(cv(s0), cv(s0)))))), wi(wal(s0, wn(wal(s0, wceq(cv(s0), cv(s0))))), wi(wceq(cv(s0), cv(s0)), wal(s0, wceq(cv(s0), cv(s0))))))\n  ax-c4(s0, wn(wal(s0, wceq(cv(s0), cv(s0)))), wi(wceq(cv(s0), cv(s0)), wal(s0, wceq(cv(s0), cv(s0)))))\n  sylc(wal(s0, wn(wal(s0, wceq(cv(s0), cv(s0))))), wi(wceq(cv(s0), cv(s0)), wal(s0, wceq(cv(s0), cv(s0)))), wn(wal(s0, wceq(cv(s0), cv(s0)))), wn(wal(s0, wceq(cv(s0), cv(s0)))))\n  ax-c5(s0, wn(wal(s0, wceq(cv(s0), cv(s0)))))\n  ax-c9(s0, s0, s0)\n  ax-c10(s0, s0, wceq(cv(s0), cv(s0)))\n  ax-c7(s0, wceq(cv(s0), cv(s0)))\n}","pretty":"thm equid1(setvar s0) {\n  ⊢ s0 = s0\n} = {\n  pm2.61i(s0 = s0, ∀(s0, ¬ ∀(s0, s0 = s0)))\n  syl(∀(s0, ¬ ∀(s0, s0 = s0)), s0 = s0, ∀(s0,(s0 = s0 → ∀(s0, s0 = s0))))\n  mpg(s0, (∀(s0, ¬ ∀(s0, s0 = s0))→ ∀(s0,(s0 = s0 → ∀(s0, s0 = s0)))), (∀(s0, ¬ ∀(s0, s0 = s0))→(s0 = s0 → ∀(s0, s0 = s0))))\n  ax-c4(s0, ¬ ∀(s0, s0 = s0), (s0 = s0 → ∀(s0, s0 = s0)))\n  sylc(∀(s0, ¬ ∀(s0, s0 = s0)), (s0 = s0 → ∀(s0, s0 = s0)), ¬ ∀(s0, s0 = s0), ¬ ∀(s0, s0 = s0))\n  ax-c5(s0, ¬ ∀(s0, s0 = s0))\n  ax-c9(s0, s0, s0)\n  ax-c10(s0, s0, s0 = s0)\n  ax-c7(s0, s0 = s0)\n}","parent":["pm2.61i","syl","mpg","ax-c4","sylc","ax-c5","ax-c9","ax-c10","ax-c7"],"children":["equcomi1"]},{"name":"equcomi1","content":"Proof of ~ equcomi from ~ equid1 , avoiding use of ~ ax-5 (the only use of ~ ax-5 is via ~ ax7 , so using ~ ax-7 instead would remove dependency on ~ ax-5 ). (Contributed by BJ, 8-Jul-2021.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm equcomi1(setvar s0, setvar s1) {\n  |- wi(wceq(cv(s0), cv(s1)), wceq(cv(s1), cv(s0)))\n} = {\n  mpi(wceq(cv(s0), cv(s1)), wceq(cv(s1), cv(s0)), wceq(cv(s0), cv(s0)))\n  equid1(s0)\n  ax7(s0, s1, s0)\n}","pretty":"thm equcomi1(setvar s0, setvar s1) {\n  ⊢ (s0 = s1 → s1 = s0)\n} = {\n  mpi(s0 = s1, s1 = s0, s0 = s0)\n  equid1(s0)\n  ax7(s0, s1, s0)\n}","parent":["mpi","equid1","ax7"],"children":["aecom-o"]},{"name":"aecom-o","content":"Commutation law for identical variable specifiers. The antecedent and consequent are true when ` x ` and ` y ` are substituted with the same variable. Lemma L12 in [Megill] p. 445 (p. 12 of the preprint). Version of ~ aecom using ~ ax-c11 . Unlike ~ axc11nfromc11 , this version does not require ~ ax-5 (see comment of ~ equcomi1 ). (Contributed by NM, 10-May-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm aecom-o(setvar s0, setvar s1) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n} = {\n  syl(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))), wal(s1, wceq(cv(s0), cv(s1))))\n  pm2.43i(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1))))\n  ax-c11(s0, s1, wceq(cv(s0), cv(s1)))\n  alimi(s1, wceq(cv(s0), cv(s1)), wceq(cv(s1), cv(s0)))\n  equcomi1(s0, s1)\n}","pretty":"thm aecom-o(setvar s0, setvar s1) {\n  ⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n} = {\n  syl(∀(s0, s0 = s1), ∀(s1, s1 = s0), ∀(s1, s0 = s1))\n  pm2.43i(∀(s0, s0 = s1), ∀(s1, s0 = s1))\n  ax-c11(s0, s1, s0 = s1)\n  alimi(s1, s0 = s1, s1 = s0)\n  equcomi1(s0, s1)\n}","parent":["syl","pm2.43i","ax-c11","alimi","equcomi1"],"children":["aecoms-o","naecoms-o","aev-o","ax12indalem"]},{"name":"aecoms-o","content":"A commutation rule for identical variable specifiers. Version of ~ aecoms using ~ ax-c11 . (Contributed by NM, 10-May-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm aecoms-o(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), w0)\n  -| wi(wal(s1, wceq(cv(s1), cv(s0))), w0)\n} = {\n  syl(wal(s0, wceq(cv(s0), cv(s1))), w0, wal(s1, wceq(cv(s1), cv(s0))))\n  aecom-o(s0, s1)\n}","pretty":"thm aecoms-o(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, s0 = s1)→ w0)\n  ⊣ (∀(s1, s1 = s0)→ w0)\n} = {\n  syl(∀(s0, s0 = s1), w0, ∀(s1, s1 = s0))\n  aecom-o(s0, s1)\n}","parent":["syl","aecom-o"],"children":["hbae-o","dral1-o","dvelimf-o","aev-o","ax12indalem","ax12inda2ALT"]},{"name":"hbae-o","content":"All variables are effectively bound in an identical variable specifier. Version of ~ hbae using ~ ax-c11 . (Contributed by NM, 13-May-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm hbae-o(setvar s0, setvar s1, setvar s2) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wal(s0, wceq(cv(s0), cv(s1)))))\n} = {\n  syl(wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wal(s0, wceq(cv(s0), cv(s1)))), wal(s0, wal(s2, wceq(cv(s0), cv(s1)))))\n  axc4i-o(s0, wceq(cv(s0), cv(s1)), wal(s2, wceq(cv(s0), cv(s1))))\n  pm2.61ii(wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wceq(cv(s0), cv(s1)))), wal(s2, wceq(cv(s2), cv(s0))), wal(s2, wceq(cv(s2), cv(s1))))\n  syl7(wn(wal(s2, wceq(cv(s2), cv(s0)))), wn(wal(s2, wceq(cv(s2), cv(s1)))), wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wceq(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))\n  ax-c5(s0, wceq(cv(s0), cv(s1)))\n  ax-c9(s2, s0, s1)\n  aecoms-o(s2, s0, wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wceq(cv(s0), cv(s1)))))\n  ax-c11(s0, s2, wceq(cv(s0), cv(s1)))\n  aecoms-o(s2, s1, wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wceq(cv(s0), cv(s1)))))\n  syl5(wal(s1, wceq(cv(s1), cv(s2))), wal(s0, wceq(cv(s0), cv(s1))), wal(s2, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1))))\n  pm2.43i(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1))))\n  ax-c11(s0, s1, wceq(cv(s0), cv(s1)))\n  ax-c11(s1, s2, wceq(cv(s0), cv(s1)))\n  ax-11(s0, s2, wceq(cv(s0), cv(s1)))\n}","pretty":"thm hbae-o(setvar s0, setvar s1, setvar s2) {\n  ⊢ (∀(s0, s0 = s1)→ ∀(s2, ∀(s0, s0 = s1)))\n} = {\n  syl(∀(s0, s0 = s1), ∀(s2, ∀(s0, s0 = s1)), ∀(s0, ∀(s2, s0 = s1)))\n  axc4i-o(s0, s0 = s1, ∀(s2, s0 = s1))\n  pm2.61ii((∀(s0, s0 = s1)→ ∀(s2, s0 = s1)), ∀(s2, s2 = s0), ∀(s2, s2 = s1))\n  syl7(¬ ∀(s2, s2 = s0), ¬ ∀(s2, s2 = s1), ∀(s0, s0 = s1), ∀(s2, s0 = s1), s0 = s1)\n  ax-c5(s0, s0 = s1)\n  ax-c9(s2, s0, s1)\n  aecoms-o(s2, s0, (∀(s0, s0 = s1)→ ∀(s2, s0 = s1)))\n  ax-c11(s0, s2, s0 = s1)\n  aecoms-o(s2, s1, (∀(s0, s0 = s1)→ ∀(s2, s0 = s1)))\n  syl5(∀(s1, s1 = s2), ∀(s0, s0 = s1), ∀(s2, s0 = s1), ∀(s1, s0 = s1))\n  pm2.43i(∀(s0, s0 = s1), ∀(s1, s0 = s1))\n  ax-c11(s0, s1, s0 = s1)\n  ax-c11(s1, s2, s0 = s1)\n  ax-11(s0, s2, s0 = s1)\n}","parent":["syl","axc4i-o","pm2.61ii","syl7","ax-c5","ax-c9","aecoms-o","ax-c11","syl5","pm2.43i","ax-11"],"children":["dral1-o","hbnae-o","dral2-o","aev-o"]},{"name":"dral1-o","content":"Formula-building lemma for use with the Distinctor Reduction Theorem. Part of Theorem 9.4 of [Megill] p. 448 (p. 16 of preprint). Version of ~ dral1 using ~ ax-c11 . (Contributed by NM, 24-Nov-1994.) (New usage is discouraged.)","origin":"thm dral1-o(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, wceq(cv(s0), cv(s1))), wb(wal(s0, w0), wal(s1, w1)))\n  -| wi(wal(s0, wceq(cv(s0), cv(s1))), wb(w0, w1))\n} = {\n  impbid(wal(s0, wceq(cv(s0), cv(s1))), wal(s0, w0), wal(s1, w1))\n  syld(wal(s0, wceq(cv(s0), cv(s1))), wal(s0, w0), wal(s1, w1), wal(s0, w1))\n  alimdh(s0, wal(s0, wceq(cv(s0), cv(s1))), w0, w1)\n  hbae-o(s0, s1, s0)\n  biimpd(wal(s0, wceq(cv(s0), cv(s1))), w0, w1)\n  ax-c11(s0, s1, w1)\n  syld(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, w1), wal(s0, w0), wal(s1, w0))\n  alimdh(s1, wal(s0, wceq(cv(s0), cv(s1))), w1, w0)\n  hbae-o(s0, s1, s1)\n  biimprd(wal(s0, wceq(cv(s0), cv(s1))), w1, w0)\n  aecoms-o(s0, s1, wi(wal(s1, w0), wal(s0, w0)))\n  ax-c11(s1, s0, w0)\n}","pretty":"thm dral1-o(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0, s0 = s1)→(∀(s0, w0)↔ ∀(s1, w1)))\n  ⊣ (∀(s0, s0 = s1)→(w0 ↔ w1))\n} = {\n  impbid(∀(s0, s0 = s1), ∀(s0, w0), ∀(s1, w1))\n  syld(∀(s0, s0 = s1), ∀(s0, w0), ∀(s1, w1), ∀(s0, w1))\n  alimdh(s0, ∀(s0, s0 = s1), w0, w1)\n  hbae-o(s0, s1, s0)\n  biimpd(∀(s0, s0 = s1), w0, w1)\n  ax-c11(s0, s1, w1)\n  syld(∀(s0, s0 = s1), ∀(s1, w1), ∀(s0, w0), ∀(s1, w0))\n  alimdh(s1, ∀(s0, s0 = s1), w1, w0)\n  hbae-o(s0, s1, s1)\n  biimprd(∀(s0, s0 = s1), w1, w0)\n  aecoms-o(s0, s1, (∀(s1, w0)→ ∀(s0, w0)))\n  ax-c11(s1, s0, w0)\n}","parent":["impbid","syld","alimdh","hbae-o","biimpd","ax-c11","biimprd","aecoms-o"],"children":["ax12fromc15","axc16g-o","ax12indalem","ax12inda2ALT"]},{"name":"ax12fromc15","content":"Rederivation of axiom ~ ax-12 from ~ ax-c15 , ~ ax-c11 (used through ~ dral1-o ), and other older axioms. See theorem ~ axc15 for the derivation of ~ ax-c15 from ~ ax-12 . An open problem is whether we can prove this using ~ ax-c11n instead of ~ ax-c11 . This proof uses newer axioms ~ ax-4 and ~ ax-6 , but since these are proved from the older axioms above, this is acceptable and lets us avoid having to reprove several earlier theorems to use ~ ax-c4 and ~ ax-c10 . (Contributed by NM, 22-Jan-2007.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ax12fromc15(setvar s0, setvar s1, wff w0) {\n  |- wi(wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n} = {\n  pm2.61i(wi(wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))), wal(s0, wceq(cv(s0), cv(s1))))\n  a1d(wal(s0, wceq(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n  syl6bir(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wal(s0, w0))\n  dral1-o(s0, s1, w0, w0)\n  biidd(wal(s0, wceq(cv(s0), cv(s1))), w0)\n  alimi(s0, w0, wi(wceq(cv(s0), cv(s1)), w0))\n  ax-1(w0, wceq(cv(s0), cv(s1)))\n  syl7(wn(wal(s0, wceq(cv(s0), cv(s1)))), wceq(cv(s0), cv(s1)), wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n  ax-c5(s1, w0)\n  ax-c15(s0, s1, w0)\n}","pretty":"thm ax12fromc15(setvar s0, setvar s1, wff w0) {\n  ⊢ (s0 = s1 →(∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))\n} = {\n  pm2.61i((s0 = s1 →(∀(s1, w0)→ ∀(s0,(s0 = s1 → w0)))), ∀(s0, s0 = s1))\n  a1d(∀(s0, s0 = s1), s0 = s1, (∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))\n  syl6bir(∀(s0, s0 = s1), ∀(s1, w0), ∀(s0,(s0 = s1 → w0)), ∀(s0, w0))\n  dral1-o(s0, s1, w0, w0)\n  biidd(∀(s0, s0 = s1), w0)\n  alimi(s0, w0, (s0 = s1 → w0))\n  ax-1(w0, s0 = s1)\n  syl7(¬ ∀(s0, s0 = s1), s0 = s1, ∀(s1, w0), ∀(s0,(s0 = s1 → w0)), w0)\n  ax-c5(s1, w0)\n  ax-c15(s0, s1, w0)\n}","parent":["pm2.61i","a1d","syl6bir","dral1-o","biidd","alimi","ax-1","syl7","ax-c5","ax-c15"],"children":[]},{"name":"ax13fromc9","content":"Derive ~ ax-13 from ~ ax-c9 and other older axioms. This proof uses newer axioms ~ ax-4 and ~ ax-6 , but since these are proved from the older axioms above, this is acceptable and lets us avoid having to reprove several earlier theorems to use ~ ax-c4 and ~ ax-c10 . (Contributed by NM, 21-Dec-2015.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ax13fromc9(setvar s0, setvar s1, setvar s2) {\n  |- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n} = {\n  mpbir(wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2))))), wi(wn(wceq(cv(s0), cv(s1))), wi(wn(wceq(cv(s0), cv(s2))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))))\n  syl2im(wn(wceq(cv(s0), cv(s1))), wn(wceq(cv(s0), cv(s2))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))), wn(wal(s0, wceq(cv(s0), cv(s1)))), wn(wal(s0, wceq(cv(s0), cv(s2)))))\n  con3i(wceq(cv(s0), cv(s1)), wal(s0, wceq(cv(s0), cv(s1))))\n  ax-c5(s0, wceq(cv(s0), cv(s1)))\n  con3i(wceq(cv(s0), cv(s2)), wal(s0, wceq(cv(s0), cv(s2))))\n  ax-c5(s0, wceq(cv(s0), cv(s2)))\n  ax-c9(s0, s1, s2)\n  ax13b(s0, s1, s2, wal(s0, wceq(cv(s1), cv(s2))))\n}","pretty":"thm ax13fromc9(setvar s0, setvar s1, setvar s2) {\n  ⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n} = {\n  mpbir((¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2))), (¬ s0 = s1 →(¬ s0 = s2 →(s1 = s2 → ∀(s0, s1 = s2)))))\n  syl2im(¬ s0 = s1, ¬ s0 = s2, (s1 = s2 → ∀(s0, s1 = s2)), ¬ ∀(s0, s0 = s1), ¬ ∀(s0, s0 = s2))\n  con3i(s0 = s1, ∀(s0, s0 = s1))\n  ax-c5(s0, s0 = s1)\n  con3i(s0 = s2, ∀(s0, s0 = s2))\n  ax-c5(s0, s0 = s2)\n  ax-c9(s0, s1, s2)\n  ax13b(s0, s1, s2, ∀(s0, s1 = s2))\n}","parent":["mpbir","syl2im","con3i","ax-c5","ax-c9","ax13b"],"children":[]}]}