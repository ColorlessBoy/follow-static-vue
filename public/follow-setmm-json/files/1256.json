{"index":1256,"title":"Real subtraction","content":"","blocks":[{"name":"cresub","content":"Real number subtraction.","origin":"const class cresub { -R }","pretty":"","parent":[],"children":[]},{"name":"diff.cresub.s","content":"","origin":"axiom diff.cresub.s(setvar s0) {\n  |- diffsc(s0, cresub)\n}","pretty":"axiom diff.cresub.s(setvar s0) {\n  ⊢ d(s0, -R)\n}","parent":[],"children":[]},{"name":"diff.cresub.c","content":"","origin":"axiom diff.cresub.c(class c0) {\n  |- diffcc(cresub, c0)\n}","pretty":"axiom diff.cresub.c(class c0) {\n  ⊢ d(-R, c0)\n}","parent":[],"children":[]},{"name":"diff.cresub.w","content":"","origin":"axiom diff.cresub.w(wff w0) {\n  |- diffcw(cresub, w0)\n}","pretty":"axiom diff.cresub.w(wff w0) {\n  ⊢ d(-R, w0)\n}","parent":[],"children":[]},{"name":"df-resub","content":"Define subtraction between real numbers. This operator saves a few axioms over ~ df-sub in certain situations. Theorem ~ resubval shows its value, ~ resubadd relates it to addition, and ~ rersubcl proves its closure. Based on ~ df-sub . (Contributed by Steven Nguyen, 7-Jan-2022.)","origin":"axiom df-resub(setvar s0, setvar s1, setvar s2) {\n  |- wceq(cresub, cmpo(s0, s1, cr, cr, crio(s2, cr, wceq(co(cv(s1), caddc, cv(s2)), cv(s0)))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n}","pretty":"axiom df-resub(setvar s0, setvar s1, setvar s2) {\n  ⊢ -R =(s0 ∈ ℝ, s1 ∈ ℝ ↦ iota(s2 ∈ ℝ,(s1[+]s2)= s0))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n}","parent":[],"children":["resubval","resubf"]},{"name":"resubval","content":"Value of real subtraction, which is the (unique) real ` x ` such that ` B + x = A ` . (Contributed by Steven Nguyen, 7-Jan-2022.)","origin":"thm resubval(setvar s0, class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wceq(co(c0, cresub, c1), crio(s0, cr, wceq(co(c1, caddc, cv(s0)), c0))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  ovmpt2(hs0, hs1, c0, cr, c1, cr, cresub, crio(s0, cr, wceq(co(c1, caddc, cv(s0)), c0)), crio(s0, cr, wceq(co(cv(hs1), caddc, cv(s0)), cv(hs0))), crio(s0, cr, wceq(co(cv(hs1), caddc, cv(s0)), c0)))\n  riotabidv(s0, cr, wceq(cv(hs0), c0), wceq(co(cv(hs1), caddc, cv(s0)), cv(hs0)), wceq(co(cv(hs1), caddc, cv(s0)), c0))\n  eqeq2(cv(hs0), c0, co(cv(hs1), caddc, cv(s0)))\n  riotabidv(s0, cr, wceq(cv(hs1), c1), wceq(co(cv(hs1), caddc, cv(s0)), c0), wceq(co(c1, caddc, cv(s0)), c0))\n  eqeq1d(co(cv(hs1), caddc, cv(s0)), c0, co(c1, caddc, cv(s0)), wceq(cv(hs1), c1))\n  oveq1(cv(hs1), c1, caddc, cv(s0))\n  df-resub(hs0, hs1, s0)\n  riotaex(s0, cr, wceq(co(c1, caddc, cv(s0)), c0))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(cr)\n  diff.hs0.c(c1)\n  diff.hs0.c(crio(s0, cr, wceq(co(c1, caddc, cv(s0)), c0)))\n  diff.hs1.c(c0)\n  diff.hs1.c(cr)\n  diff.hs1.c(c1)\n  diff.hs1.c(crio(s0, cr, wceq(co(c1, caddc, cv(s0)), c0)))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n}","pretty":"thm resubval(setvar s0, class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→(c0[-R]c1)= iota(s0 ∈ ℝ,(c1[+]s0)= c0))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  ovmpt2(hs0, hs1, c0, cr, c1, cr, cresub, iota(s0 ∈ ℝ,(c1[+]s0)= c0), iota(s0 ∈ ℝ,(hs1[+]s0)= hs0), iota(s0 ∈ ℝ,(hs1[+]s0)= c0))\n  riotabidv(s0, cr, hs0 = c0, (hs1[+]s0)= hs0, (hs1[+]s0)= c0)\n  eqeq2(hs0, c0, (hs1[+]s0))\n  riotabidv(s0, cr, hs1 = c1, (hs1[+]s0)= c0, (c1[+]s0)= c0)\n  eqeq1d((hs1[+]s0), c0, (c1[+]s0), hs1 = c1)\n  oveq1(hs1, c1, caddc, s0)\n  df-resub(hs0, hs1, s0)\n  riotaex(s0, cr, (c1[+]s0)= c0)\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(cr)\n  diff.hs0.c(c1)\n  diff.hs0.c(iota(s0 ∈ ℝ,(c1[+]s0)= c0))\n  diff.hs1.c(c0)\n  diff.hs1.c(cr)\n  diff.hs1.c(c1)\n  diff.hs1.c(iota(s0 ∈ ℝ,(c1[+]s0)= c0))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n}","parent":["ovmpt2","riotabidv","eqeq2","eqeq1d","oveq1","df-resub","riotaex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s"],"children":["rernegcl","renegadd","rersubcl","resubadd","resubf"]},{"name":"renegeulemv","content":"Lemma for ~ renegeu and similar. Derive existential uniqueness from existence. (Contributed by Steven Nguyen, 28-Jan-2023.)","origin":"thm renegeulemv(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  |- wi(w0, wreu(s0, cr, wceq(co(c0, caddc, cv(s0)), c1)))\n  -| wi(w0, wcel(c0, cr))\n  -| wi(w0, wrex(s1, cr, wceq(co(c0, caddc, cv(s1)), c1)))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s1, c0)\n  -| diffsc(s1, c1)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n} = {\n  rexlimddv(s1, cr, w0, wreu(s0, cr, wceq(co(c0, caddc, cv(s0)), c1)), wceq(co(c0, caddc, cv(s1)), c1))\n  syl2anc(wa(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))), wreu(s0, cr, wceq(co(c0, caddc, cv(s0)), c1)), wcel(cv(s1), cr), wral(s0, cr, wb(wceq(co(c0, caddc, cv(s0)), c1), wceq(cv(s0), cv(s1)))))\n  simprl(w0, wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))\n  ralrimiva(s0, cr, wa(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))), wb(wceq(co(c0, caddc, cv(s0)), c1), wceq(cv(s0), cv(s1))))\n  bitrd(wa(wa(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))), wcel(cv(s0), cr)), wceq(co(c0, caddc, cv(s0)), c1), wceq(cv(s0), cv(s1)), wceq(co(c0, caddc, cv(s0)), co(c0, caddc, cv(s1))))\n  eqeq2d(co(c0, caddc, cv(s0)), c1, co(c0, caddc, cv(s1)), wa(wa(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))), wcel(cv(s0), cr)))\n  eqcomd(c1, co(c0, caddc, cv(s1)), wa(wa(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))), wcel(cv(s0), cr)))\n  simplrr(w0, wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1), wcel(cv(s0), cr))\n  syl3anc(wa(wa(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))), wcel(cv(s0), cr)), wb(wceq(co(c0, caddc, cv(s0)), co(c0, caddc, cv(s1))), wceq(cv(s0), cv(s1))), wcel(cv(s0), cr), wcel(cv(s1), cr), wcel(c0, cr))\n  simpr(wa(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))), wcel(cv(s0), cr))\n  simplrl(w0, wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1), wcel(cv(s0), cr))\n  ad2antrr(w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1)), wcel(cv(s0), cr), wcel(c0, cr))\n  readdcan(cv(s0), cv(s1), c0)\n  reu6i(s0, cv(s1), cr, wceq(co(c0, caddc, cv(s0)), c1))\n  diff.wreu.s(s1, s0, cr, wceq(co(c0, caddc, cv(s0)), c1))\n  diff.cr.s(s1)\n  diff.wceq.s(s1, co(c0, caddc, cv(s0)), c1)\n  diff.co.s(s1, c0, caddc, cv(s0))\n  diff.caddc.s(s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.wa.s(s0, w0, wa(wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1)))\n  diff.wa.s(s0, wcel(cv(s1), cr), wceq(co(c0, caddc, cv(s1)), c1))\n  diff.wcel.s(s0, cv(s1), cr)\n  diff.wceq.s(s0, co(c0, caddc, cv(s1)), c1)\n  diff.co.s(s0, c0, caddc, cv(s1))\n  diff.caddc.s(s0)\n  diff.cv.s(s0, s1)\n  diff.cr.s(s0)\n}","pretty":"thm renegeulemv(setvar s0, setvar s1, class c0, class c1, wff w0) {\n  ⊢ (w0 → ∃!(s0 ∈ ℝ,(c0[+]s0)= c1))\n  ⊣ (w0 → c0 ∈ ℝ)\n  ⊣ (w0 → ∃(s1 ∈ ℝ,(c0[+]s1)= c1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s1, c0)\n  ⊣ d(s1, c1)\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n} = {\n  rexlimddv(s1, cr, w0, ∃!(s0 ∈ ℝ,(c0[+]s0)= c1), (c0[+]s1)= c1)\n  syl2anc((w0 ∧(s1 ∈ ℝ ∧(c0[+]s1)= c1)), ∃!(s0 ∈ ℝ,(c0[+]s0)= c1), s1 ∈ ℝ, ∀(s0 ∈ ℝ,((c0[+]s0)= c1 ↔ s0 = s1)))\n  simprl(w0, s1 ∈ ℝ, (c0[+]s1)= c1)\n  ralrimiva(s0, cr, (w0 ∧(s1 ∈ ℝ ∧(c0[+]s1)= c1)), ((c0[+]s0)= c1 ↔ s0 = s1))\n  bitrd(((w0 ∧(s1 ∈ ℝ ∧(c0[+]s1)= c1))∧ s0 ∈ ℝ), (c0[+]s0)= c1, s0 = s1, (c0[+]s0)=(c0[+]s1))\n  eqeq2d((c0[+]s0), c1, (c0[+]s1), ((w0 ∧(s1 ∈ ℝ ∧(c0[+]s1)= c1))∧ s0 ∈ ℝ))\n  eqcomd(c1, (c0[+]s1), ((w0 ∧(s1 ∈ ℝ ∧(c0[+]s1)= c1))∧ s0 ∈ ℝ))\n  simplrr(w0, s1 ∈ ℝ, (c0[+]s1)= c1, s0 ∈ ℝ)\n  syl3anc(((w0 ∧(s1 ∈ ℝ ∧(c0[+]s1)= c1))∧ s0 ∈ ℝ), ((c0[+]s0)=(c0[+]s1)↔ s0 = s1), s0 ∈ ℝ, s1 ∈ ℝ, c0 ∈ ℝ)\n  simpr((w0 ∧(s1 ∈ ℝ ∧(c0[+]s1)= c1)), s0 ∈ ℝ)\n  simplrl(w0, s1 ∈ ℝ, (c0[+]s1)= c1, s0 ∈ ℝ)\n  ad2antrr(w0, (s1 ∈ ℝ ∧(c0[+]s1)= c1), s0 ∈ ℝ, c0 ∈ ℝ)\n  readdcan(s0, s1, c0)\n  reu6i(s0, s1, cr, (c0[+]s0)= c1)\n  diff.wreu.s(s1, s0, cr, (c0[+]s0)= c1)\n  diff.cr.s(s1)\n  diff.wceq.s(s1, (c0[+]s0), c1)\n  diff.co.s(s1, c0, caddc, s0)\n  diff.caddc.s(s1)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.wa.s(s0, w0, (s1 ∈ ℝ ∧(c0[+]s1)= c1))\n  diff.wa.s(s0, s1 ∈ ℝ, (c0[+]s1)= c1)\n  diff.wcel.s(s0, s1, cr)\n  diff.wceq.s(s0, (c0[+]s1), c1)\n  diff.co.s(s0, c0, caddc, s1)\n  diff.caddc.s(s0)\n  diff.cv.s(s0, s1)\n  diff.cr.s(s0)\n}","parent":["rexlimddv","syl2anc","simprl","ralrimiva","bitrd","eqeq2d","eqcomd","simplrr","syl3anc","simpr","simplrl","ad2antrr","readdcan","reu6i","diff.wreu.s","diff.cr.s","diff.wceq.s","diff.co.s","diff.caddc.s","diff.cv.s","diffss.ex","diff.wa.s","diff.wcel.s"],"children":["renegeulem"]},{"name":"renegeulem","content":"Lemma for ~ renegeu and similar. Remove a change in bound variables from ~ renegeulemv . (Contributed by Steven Nguyen, 28-Jan-2023.)","origin":"thm renegeulem(setvar s0, class c0, class c1, wff w0) {\n  |- wi(w0, wreu(s0, cr, wceq(co(c0, caddc, cv(s0)), c1)))\n  -| wi(w0, wcel(c0, cr))\n  -| wi(w0, wrex(s0, cr, wceq(co(c0, caddc, cv(s0)), c1)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsw(s0, w0)\n} = {\n  renegeulemv(s0, hs0, c0, c1, w0)\n  syl(w0, wrex(hs0, cr, wceq(co(c0, caddc, cv(hs0)), c1)), wreu(hs0, cr, wceq(co(c0, caddc, cv(hs0)), c1)))\n  renegeulemv(hs0, s0, c0, c1, w0)\n  reurex(hs0, cr, wceq(co(c0, caddc, cv(hs0)), c1))\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.w(w0)\n  diff.hs0.s(s0)\n}","pretty":"thm renegeulem(setvar s0, class c0, class c1, wff w0) {\n  ⊢ (w0 → ∃!(s0 ∈ ℝ,(c0[+]s0)= c1))\n  ⊣ (w0 → c0 ∈ ℝ)\n  ⊣ (w0 → ∃(s0 ∈ ℝ,(c0[+]s0)= c1))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n  ⊣ d(s0, w0)\n} = {\n  renegeulemv(s0, hs0, c0, c1, w0)\n  syl(w0, ∃(hs0 ∈ ℝ,(c0[+]hs0)= c1), ∃!(hs0 ∈ ℝ,(c0[+]hs0)= c1))\n  renegeulemv(hs0, s0, c0, c1, w0)\n  reurex(hs0, cr, (c0[+]hs0)= c1)\n  diffss.ex(s0, hs0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.w(w0)\n  diff.hs0.s(s0)\n}","parent":["renegeulemv","syl","reurex","diffss.ex","diff.hs0.c","diff.hs0.w","diff.hs0.s"],"children":["renegeu","resubeu"]},{"name":"renegeu","content":"Existential uniqueness of real negatives. (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm renegeu(setvar s0, class c0) {\n  |- wi(wcel(c0, cr), wreu(s0, cr, wceq(co(c0, caddc, cv(s0)), nat0)))\n  -| diffsc(s0, c0)\n} = {\n  renegeulem(s0, c0, nat0, wcel(c0, cr))\n  id(wcel(c0, cr))\n  ax-rnegex(s0, c0)\n  diff.nat0.s(s0)\n  diff.wcel.s(s0, c0, cr)\n  diff.cr.s(s0)\n}","pretty":"thm renegeu(setvar s0, class c0) {\n  ⊢ (c0 ∈ ℝ → ∃!(s0 ∈ ℝ,(c0[+]s0)= 0))\n  ⊣ d(s0, c0)\n} = {\n  renegeulem(s0, c0, nat0, c0 ∈ ℝ)\n  id(c0 ∈ ℝ)\n  ax-rnegex(s0, c0)\n  diff.nat0.s(s0)\n  diff.wcel.s(s0, c0, cr)\n  diff.cr.s(s0)\n}","parent":["renegeulem","id","ax-rnegex","diff.nat0.s","diff.wcel.s","diff.cr.s"],"children":["rernegcl","renegadd"]},{"name":"rernegcl","content":"Closure law for negative reals. (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm rernegcl(class c0) {\n  |- wi(wcel(c0, cr), wcel(co(nat0, cresub, c0), cr))\n} = {\n  eqeltrd(co(nat0, cresub, c0), cr, crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)), wcel(c0, cr))\n  mpancom(wcel(c0, cr), wceq(co(nat0, cresub, c0), crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0))), wcel(nat0, cr))\n  elre0re(c0)\n  resubval(hs0, nat0, c0)\n  syl(wcel(c0, cr), wcel(crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)), cr), wreu(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)))\n  renegeu(hs0, c0)\n  riotacl(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0))\n  diff.hs0.c(nat0)\n  diff.hs0.c(c0)\n  diff.hs0.c(cr)\n}","pretty":"thm rernegcl(class c0) {\n  ⊢ (c0 ∈ ℝ →(0[-R]c0)∈ ℝ)\n} = {\n  eqeltrd((0[-R]c0), cr, iota(hs0 ∈ ℝ,(c0[+]hs0)= 0), c0 ∈ ℝ)\n  mpancom(c0 ∈ ℝ, (0[-R]c0)= iota(hs0 ∈ ℝ,(c0[+]hs0)= 0), 0 ∈ ℝ)\n  elre0re(c0)\n  resubval(hs0, nat0, c0)\n  syl(c0 ∈ ℝ, iota(hs0 ∈ ℝ,(c0[+]hs0)= 0)∈ ℝ, ∃!(hs0 ∈ ℝ,(c0[+]hs0)= 0))\n  renegeu(hs0, c0)\n  riotacl(hs0, cr, (c0[+]hs0)= 0)\n  diff.hs0.c(nat0)\n  diff.hs0.c(c0)\n  diff.hs0.c(cr)\n}","parent":["eqeltrd","mpancom","elre0re","resubval","syl","renegeu","riotacl","diff.hs0.c"],"children":["renegid","reneg0addid1","resubeulem1","resubeulem2","resubeu"]},{"name":"renegadd","content":"Relationship between real negation and addition. (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm renegadd(class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wb(wceq(co(nat0, cresub, c0), c1), wceq(co(c0, caddc, c1), nat0)))\n} = {\n  bitr4d(wa(wcel(c0, cr), wcel(c1, cr)), wceq(co(nat0, cresub, c0), c1), wceq(co(c0, caddc, c1), nat0), wceq(crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)), c1))\n  adantr(wcel(c0, cr), wcel(c1, cr), wb(wceq(co(nat0, cresub, c0), c1), wceq(crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)), c1)))\n  eqeq1d(co(nat0, cresub, c0), c1, crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)), wcel(c0, cr))\n  mpancom(wcel(c0, cr), wceq(co(nat0, cresub, c0), crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0))), wcel(nat0, cr))\n  elre0re(c0)\n  resubval(hs0, nat0, c0)\n  ancoms(wcel(c0, cr), wcel(c1, cr), wb(wceq(co(c0, caddc, c1), nat0), wceq(crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)), c1)))\n  sylan2(wcel(c1, cr), wcel(c0, cr), wb(wceq(co(c0, caddc, c1), nat0), wceq(crio(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)), c1)), wreu(hs0, cr, wceq(co(c0, caddc, cv(hs0)), nat0)))\n  renegeu(hs0, c0)\n  riota2(hs0, c1, cr, wceq(co(c0, caddc, cv(hs0)), nat0), wceq(co(c0, caddc, c1), nat0))\n  eqeq1d(co(c0, caddc, cv(hs0)), nat0, co(c0, caddc, c1), wceq(cv(hs0), c1))\n  oveq2(cv(hs0), c1, c0, caddc)\n  diff.hs0.c(nat0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(cr)\n  diff.hs0.w(wceq(co(c0, caddc, c1), nat0))\n}","pretty":"thm renegadd(class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→((0[-R]c0)= c1 ↔(c0[+]c1)= 0))\n} = {\n  bitr4d((c0 ∈ ℝ ∧ c1 ∈ ℝ), (0[-R]c0)= c1, (c0[+]c1)= 0, iota(hs0 ∈ ℝ,(c0[+]hs0)= 0)= c1)\n  adantr(c0 ∈ ℝ, c1 ∈ ℝ, ((0[-R]c0)= c1 ↔ iota(hs0 ∈ ℝ,(c0[+]hs0)= 0)= c1))\n  eqeq1d((0[-R]c0), c1, iota(hs0 ∈ ℝ,(c0[+]hs0)= 0), c0 ∈ ℝ)\n  mpancom(c0 ∈ ℝ, (0[-R]c0)= iota(hs0 ∈ ℝ,(c0[+]hs0)= 0), 0 ∈ ℝ)\n  elre0re(c0)\n  resubval(hs0, nat0, c0)\n  ancoms(c0 ∈ ℝ, c1 ∈ ℝ, ((c0[+]c1)= 0 ↔ iota(hs0 ∈ ℝ,(c0[+]hs0)= 0)= c1))\n  sylan2(c1 ∈ ℝ, c0 ∈ ℝ, ((c0[+]c1)= 0 ↔ iota(hs0 ∈ ℝ,(c0[+]hs0)= 0)= c1), ∃!(hs0 ∈ ℝ,(c0[+]hs0)= 0))\n  renegeu(hs0, c0)\n  riota2(hs0, c1, cr, (c0[+]hs0)= 0, (c0[+]c1)= 0)\n  eqeq1d((c0[+]hs0), nat0, (c0[+]c1), hs0 = c1)\n  oveq2(hs0, c1, c0, caddc)\n  diff.hs0.c(nat0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(cr)\n  diff.hs0.w((c0[+]c1)= 0)\n}","parent":["bitr4d","adantr","eqeq1d","mpancom","elre0re","resubval","ancoms","sylan2","renegeu","riota2","oveq2","diff.hs0.c","diff.hs0.w"],"children":["renegid","resubeulem1"]},{"name":"renegid","content":"Addition of a real number and its negative. (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm renegid(class c0) {\n  |- wi(wcel(c0, cr), wceq(co(c0, caddc, co(nat0, cresub, c0)), nat0))\n} = {\n  mpbii(wcel(c0, cr), wceq(co(c0, caddc, co(nat0, cresub, c0)), nat0), wceq(co(nat0, cresub, c0), co(nat0, cresub, c0)))\n  eqid(co(nat0, cresub, c0))\n  mpdan(wcel(c0, cr), wb(wceq(co(nat0, cresub, c0), co(nat0, cresub, c0)), wceq(co(c0, caddc, co(nat0, cresub, c0)), nat0)), wcel(co(nat0, cresub, c0), cr))\n  rernegcl(c0)\n  renegadd(c0, co(nat0, cresub, c0))\n}","pretty":"thm renegid(class c0) {\n  ⊢ (c0 ∈ ℝ →(c0[+](0[-R]c0))= 0)\n} = {\n  mpbii(c0 ∈ ℝ, (c0[+](0[-R]c0))= 0, (0[-R]c0)=(0[-R]c0))\n  eqid((0[-R]c0))\n  mpdan(c0 ∈ ℝ, ((0[-R]c0)=(0[-R]c0)↔(c0[+](0[-R]c0))= 0), (0[-R]c0)∈ ℝ)\n  rernegcl(c0)\n  renegadd(c0, (0[-R]c0))\n}","parent":["mpbii","eqid","mpdan","rernegcl","renegadd"],"children":["reneg0addid1","resubeulem1","resubeulem2"]},{"name":"readdid2addid1d","content":"Given some real number ` B ` where ` A ` acts like a right additive identity, derive that ` A ` is a left additive identity. Note that the hypothesis is weaker than proving that ` A ` is a right additive identity (for all numbers). Although, if there is a right additive identity, then by ~ readdcan , ` A ` is the right additive identity. (Contributed by Steven Nguyen, 14-Jan-2023.)","origin":"thm readdid2addid1d(class c0, class c1, class c2, wff w0) {\n  |- wi(wa(w0, wcel(c0, cr)), wceq(co(c1, caddc, c0), c0))\n  -| wi(w0, wcel(c1, cr))\n  -| wi(w0, wcel(c2, cr))\n  -| wi(w0, wceq(co(c2, caddc, c1), c2))\n} = {\n  mpbid(wa(w0, wcel(c0, cr)), wceq(co(c1, caddc, c0), c0), wceq(co(c2, caddc, co(c1, caddc, c0)), co(c2, caddc, c0)))\n  eqtr3d(co(c2, caddc, co(c1, caddc, c0)), co(c2, caddc, c0), co(co(c2, caddc, c1), caddc, c0), wa(w0, wcel(c0, cr)))\n  addassd(c2, c1, c0, wa(w0, wcel(c0, cr)))\n  recnd(c2, wa(w0, wcel(c0, cr)))\n  recnd(c1, wa(w0, wcel(c0, cr)))\n  recnd(c0, wa(w0, wcel(c0, cr)))\n  oveq1d(co(c2, caddc, c1), caddc, c0, c2, wa(w0, wcel(c0, cr)))\n  adantr(w0, wcel(c0, cr), wceq(co(c2, caddc, c1), c2))\n  syl3anc(wa(w0, wcel(c0, cr)), wb(wceq(co(c2, caddc, co(c1, caddc, c0)), co(c2, caddc, c0)), wceq(co(c1, caddc, c0), c0)), wcel(co(c1, caddc, c0), cr), wcel(c0, cr), wcel(c2, cr))\n  readdcld(c1, c0, wa(w0, wcel(c0, cr)))\n  adantr(w0, wcel(c0, cr), wcel(c1, cr))\n  simpr(w0, wcel(c0, cr))\n  adantr(w0, wcel(c0, cr), wcel(c2, cr))\n  readdcan(co(c1, caddc, c0), c0, c2)\n}","pretty":"thm readdid2addid1d(class c0, class c1, class c2, wff w0) {\n  ⊢ ((w0 ∧ c0 ∈ ℝ)→(c1[+]c0)= c0)\n  ⊣ (w0 → c1 ∈ ℝ)\n  ⊣ (w0 → c2 ∈ ℝ)\n  ⊣ (w0 →(c2[+]c1)= c2)\n} = {\n  mpbid((w0 ∧ c0 ∈ ℝ), (c1[+]c0)= c0, (c2[+](c1[+]c0))=(c2[+]c0))\n  eqtr3d((c2[+](c1[+]c0)), (c2[+]c0), ((c2[+]c1)[+]c0), (w0 ∧ c0 ∈ ℝ))\n  addassd(c2, c1, c0, (w0 ∧ c0 ∈ ℝ))\n  recnd(c2, (w0 ∧ c0 ∈ ℝ))\n  recnd(c1, (w0 ∧ c0 ∈ ℝ))\n  recnd(c0, (w0 ∧ c0 ∈ ℝ))\n  oveq1d((c2[+]c1), caddc, c0, c2, (w0 ∧ c0 ∈ ℝ))\n  adantr(w0, c0 ∈ ℝ, (c2[+]c1)= c2)\n  syl3anc((w0 ∧ c0 ∈ ℝ), ((c2[+](c1[+]c0))=(c2[+]c0)↔(c1[+]c0)= c0), (c1[+]c0)∈ ℝ, c0 ∈ ℝ, c2 ∈ ℝ)\n  readdcld(c1, c0, (w0 ∧ c0 ∈ ℝ))\n  adantr(w0, c0 ∈ ℝ, c1 ∈ ℝ)\n  simpr(w0, c0 ∈ ℝ)\n  adantr(w0, c0 ∈ ℝ, c2 ∈ ℝ)\n  readdcan((c1[+]c0), c0, c2)\n}","parent":["mpbid","eqtr3d","addassd","recnd","oveq1d","adantr","syl3anc","readdcld","simpr","readdcan"],"children":["reneg0addid1"]},{"name":"reneg0addid1","content":"Negative zero is a left additive identity. (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm reneg0addid1(class c0) {\n  |- wi(wcel(c0, cr), wceq(co(co(nat0, cresub, nat0), caddc, c0), c0))\n} = {\n  mpancom(wcel(c0, cr), wceq(co(co(nat0, cresub, nat0), caddc, c0), c0), wcel(nat0, cr))\n  elre0re(c0)\n  readdid2addid1d(c0, co(nat0, cresub, nat0), nat0, wcel(nat0, cr))\n  rernegcl(nat0)\n  elre0re(nat0)\n  renegid(nat0)\n}","pretty":"thm reneg0addid1(class c0) {\n  ⊢ (c0 ∈ ℝ →((0[-R]0)[+]c0)= c0)\n} = {\n  mpancom(c0 ∈ ℝ, ((0[-R]0)[+]c0)= c0, 0 ∈ ℝ)\n  elre0re(c0)\n  readdid2addid1d(c0, (0[-R]0), nat0, 0 ∈ ℝ)\n  rernegcl(nat0)\n  elre0re(nat0)\n  renegid(nat0)\n}","parent":["mpancom","elre0re","readdid2addid1d","rernegcl","renegid"],"children":["resubeulem2"]},{"name":"resubeulem1","content":"Lemma for ~ resubeu . A value which when added to zero, results in negative zero. (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm resubeulem1(class c0) {\n  |- wi(wcel(c0, cr), wceq(co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0))), co(nat0, cresub, nat0)))\n} = {\n  eqcomd(co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0))), co(nat0, cresub, nat0), wcel(c0, cr))\n  mpbird(wcel(c0, cr), wceq(co(nat0, cresub, nat0), co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0)))), wceq(co(nat0, caddc, co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0)))), nat0))\n  eqtr3d(co(nat0, caddc, co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0)))), nat0, co(co(nat0, caddc, nat0), caddc, co(nat0, cresub, co(nat0, caddc, nat0))), wcel(c0, cr))\n  addassd(nat0, nat0, co(nat0, cresub, co(nat0, caddc, nat0)), wcel(c0, cr))\n  recnd(nat0, wcel(c0, cr))\n  recnd(co(nat0, cresub, co(nat0, caddc, nat0)), wcel(c0, cr))\n  syl(wcel(c0, cr), wceq(co(co(nat0, caddc, nat0), caddc, co(nat0, cresub, co(nat0, caddc, nat0))), nat0), wcel(co(nat0, caddc, nat0), cr))\n  renegid(co(nat0, caddc, nat0))\n  syl2anc(wcel(c0, cr), wb(wceq(co(nat0, cresub, nat0), co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0)))), wceq(co(nat0, caddc, co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0)))), nat0)), wcel(nat0, cr), wcel(co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0))), cr))\n  readdcld(nat0, co(nat0, cresub, co(nat0, caddc, nat0)), wcel(c0, cr))\n  syl(wcel(c0, cr), wcel(co(nat0, cresub, co(nat0, caddc, nat0)), cr), wcel(co(nat0, caddc, nat0), cr))\n  readdcld(nat0, nat0, wcel(c0, cr))\n  elre0re(c0)\n  rernegcl(co(nat0, caddc, nat0))\n  renegadd(nat0, co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0))))\n}","pretty":"thm resubeulem1(class c0) {\n  ⊢ (c0 ∈ ℝ →(0[+](0[-R](0[+]0)))=(0[-R]0))\n} = {\n  eqcomd((0[+](0[-R](0[+]0))), (0[-R]0), c0 ∈ ℝ)\n  mpbird(c0 ∈ ℝ, (0[-R]0)=(0[+](0[-R](0[+]0))), (0[+](0[+](0[-R](0[+]0))))= 0)\n  eqtr3d((0[+](0[+](0[-R](0[+]0)))), nat0, ((0[+]0)[+](0[-R](0[+]0))), c0 ∈ ℝ)\n  addassd(nat0, nat0, (0[-R](0[+]0)), c0 ∈ ℝ)\n  recnd(nat0, c0 ∈ ℝ)\n  recnd((0[-R](0[+]0)), c0 ∈ ℝ)\n  syl(c0 ∈ ℝ, ((0[+]0)[+](0[-R](0[+]0)))= 0, (0[+]0)∈ ℝ)\n  renegid((0[+]0))\n  syl2anc(c0 ∈ ℝ, ((0[-R]0)=(0[+](0[-R](0[+]0)))↔(0[+](0[+](0[-R](0[+]0))))= 0), 0 ∈ ℝ, (0[+](0[-R](0[+]0)))∈ ℝ)\n  readdcld(nat0, (0[-R](0[+]0)), c0 ∈ ℝ)\n  syl(c0 ∈ ℝ, (0[-R](0[+]0))∈ ℝ, (0[+]0)∈ ℝ)\n  readdcld(nat0, nat0, c0 ∈ ℝ)\n  elre0re(c0)\n  rernegcl((0[+]0))\n  renegadd(nat0, (0[+](0[-R](0[+]0))))\n}","parent":["eqcomd","mpbird","eqtr3d","addassd","recnd","syl","renegid","syl2anc","readdcld","elre0re","rernegcl","renegadd"],"children":["resubeulem2"]},{"name":"resubeulem2","content":"Lemma for ~ resubeu . A value which when added to ` A ` , results in ` B ` . (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm resubeulem2(class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wceq(co(c0, caddc, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))), c1))\n} = {\n  3eqtr3d(co(c0, caddc, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))), c1, co(co(c0, caddc, co(nat0, cresub, c0)), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)), co(nat0, caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)), wa(wcel(c0, cr), wcel(c1, cr)))\n  oveq1d(co(c0, caddc, co(nat0, cresub, c0)), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1), nat0, wa(wcel(c0, cr), wcel(c1, cr)))\n  adantr(wcel(c0, cr), wcel(c1, cr), wceq(co(c0, caddc, co(nat0, cresub, c0)), nat0))\n  renegid(c0)\n  addassd(c0, co(nat0, cresub, c0), co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1), wa(wcel(c0, cr), wcel(c1, cr)))\n  recnd(c0, wa(wcel(c0, cr), wcel(c1, cr)))\n  simpl(wcel(c0, cr), wcel(c1, cr))\n  recnd(co(nat0, cresub, c0), wa(wcel(c0, cr), wcel(c1, cr)))\n  adantr(wcel(c0, cr), wcel(c1, cr), wcel(co(nat0, cresub, c0), cr))\n  rernegcl(c0)\n  recnd(co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1), wa(wcel(c0, cr), wcel(c1, cr)))\n  adantl(wcel(c0, cr), wcel(c1, cr), wcel(co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1), cr))\n  readdcld(co(nat0, cresub, co(nat0, caddc, nat0)), c1, wcel(c1, cr))\n  id(wcel(c1, cr))\n  adantl(wcel(c0, cr), wcel(c1, cr), wceq(co(nat0, caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)), c1))\n  3eqtr3d(co(nat0, caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)), c1, co(co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0))), caddc, c1), co(co(nat0, cresub, nat0), caddc, c1), wcel(c1, cr))\n  oveq1d(co(nat0, caddc, co(nat0, cresub, co(nat0, caddc, nat0))), caddc, c1, co(nat0, cresub, nat0), wcel(c1, cr))\n  resubeulem1(c1)\n  addassd(nat0, co(nat0, cresub, co(nat0, caddc, nat0)), c1, wcel(c1, cr))\n  recnd(nat0, wcel(c1, cr))\n  recnd(co(nat0, cresub, co(nat0, caddc, nat0)), wcel(c1, cr))\n  syl(wcel(c1, cr), wcel(co(nat0, cresub, co(nat0, caddc, nat0)), cr), wcel(co(nat0, caddc, nat0), cr))\n  readdcld(nat0, nat0, wcel(c1, cr))\n  elre0re(c1)\n  rernegcl(co(nat0, caddc, nat0))\n  recn(c1)\n  reneg0addid1(c1)\n}","pretty":"thm resubeulem2(class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→(c0[+]((0[-R]c0)[+]((0[-R](0[+]0))[+]c1)))= c1)\n} = {\n  3eqtr3d((c0[+]((0[-R]c0)[+]((0[-R](0[+]0))[+]c1))), c1, ((c0[+](0[-R]c0))[+]((0[-R](0[+]0))[+]c1)), (0[+]((0[-R](0[+]0))[+]c1)), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  oveq1d((c0[+](0[-R]c0)), caddc, ((0[-R](0[+]0))[+]c1), nat0, (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  adantr(c0 ∈ ℝ, c1 ∈ ℝ, (c0[+](0[-R]c0))= 0)\n  renegid(c0)\n  addassd(c0, (0[-R]c0), ((0[-R](0[+]0))[+]c1), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  recnd(c0, (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  simpl(c0 ∈ ℝ, c1 ∈ ℝ)\n  recnd((0[-R]c0), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  adantr(c0 ∈ ℝ, c1 ∈ ℝ, (0[-R]c0)∈ ℝ)\n  rernegcl(c0)\n  recnd(((0[-R](0[+]0))[+]c1), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  adantl(c0 ∈ ℝ, c1 ∈ ℝ, ((0[-R](0[+]0))[+]c1)∈ ℝ)\n  readdcld((0[-R](0[+]0)), c1, c1 ∈ ℝ)\n  id(c1 ∈ ℝ)\n  adantl(c0 ∈ ℝ, c1 ∈ ℝ, (0[+]((0[-R](0[+]0))[+]c1))= c1)\n  3eqtr3d((0[+]((0[-R](0[+]0))[+]c1)), c1, ((0[+](0[-R](0[+]0)))[+]c1), ((0[-R]0)[+]c1), c1 ∈ ℝ)\n  oveq1d((0[+](0[-R](0[+]0))), caddc, c1, (0[-R]0), c1 ∈ ℝ)\n  resubeulem1(c1)\n  addassd(nat0, (0[-R](0[+]0)), c1, c1 ∈ ℝ)\n  recnd(nat0, c1 ∈ ℝ)\n  recnd((0[-R](0[+]0)), c1 ∈ ℝ)\n  syl(c1 ∈ ℝ, (0[-R](0[+]0))∈ ℝ, (0[+]0)∈ ℝ)\n  readdcld(nat0, nat0, c1 ∈ ℝ)\n  elre0re(c1)\n  rernegcl((0[+]0))\n  recn(c1)\n  reneg0addid1(c1)\n}","parent":["3eqtr3d","oveq1d","adantr","renegid","addassd","recnd","simpl","rernegcl","adantl","readdcld","id","resubeulem1","syl","elre0re","recn","reneg0addid1"],"children":["resubeu"]},{"name":"resubeu","content":"Existential uniqueness of real differences. (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm resubeu(setvar s0, class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wreu(s0, cr, wceq(co(c0, caddc, cv(s0)), c1)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  renegeulem(s0, c0, c1, wa(wcel(c0, cr), wcel(c1, cr)))\n  simpl(wcel(c0, cr), wcel(c1, cr))\n  syl2anc(wa(wcel(c0, cr), wcel(c1, cr)), wrex(s0, cr, wceq(co(c0, caddc, cv(s0)), c1)), wcel(co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)), cr), wceq(co(c0, caddc, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))), c1))\n  readdcld(co(nat0, cresub, c0), co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1), wa(wcel(c0, cr), wcel(c1, cr)))\n  adantr(wcel(c0, cr), wcel(c1, cr), wcel(co(nat0, cresub, c0), cr))\n  rernegcl(c0)\n  readdcld(co(nat0, cresub, co(nat0, caddc, nat0)), c1, wa(wcel(c0, cr), wcel(c1, cr)))\n  adantr(wcel(c0, cr), wcel(c1, cr), wcel(co(nat0, cresub, co(nat0, caddc, nat0)), cr))\n  syl(wcel(c0, cr), wcel(co(nat0, cresub, co(nat0, caddc, nat0)), cr), wcel(co(nat0, caddc, nat0), cr))\n  readdcld(nat0, nat0, wcel(c0, cr))\n  elre0re(c0)\n  rernegcl(co(nat0, caddc, nat0))\n  simpr(wcel(c0, cr), wcel(c1, cr))\n  resubeulem2(c0, c1)\n  rspcev(s0, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)), cr, wceq(co(c0, caddc, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))), c1), wceq(co(c0, caddc, cv(s0)), c1))\n  eqeq1d(co(c0, caddc, cv(s0)), c1, co(c0, caddc, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))), wceq(cv(s0), co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))))\n  oveq2(cv(s0), co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)), c0, caddc)\n  diff.wa.s(s0, wcel(c0, cr), wcel(c1, cr))\n  diff.wcel.s(s0, c0, cr)\n  diff.wcel.s(s0, c1, cr)\n  diff.cr.s(s0)\n  diff.wceq.s(s0, co(c0, caddc, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))), c1)\n  diff.co.s(s0, c0, caddc, co(co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)))\n  diff.co.s(s0, co(nat0, cresub, c0), caddc, co(co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1))\n  diff.co.s(s0, nat0, cresub, c0)\n  diff.co.s(s0, co(nat0, cresub, co(nat0, caddc, nat0)), caddc, c1)\n  diff.co.s(s0, nat0, cresub, co(nat0, caddc, nat0))\n  diff.cresub.s(s0)\n  diff.co.s(s0, nat0, caddc, nat0)\n  diff.nat0.s(s0)\n  diff.caddc.s(s0)\n}","pretty":"thm resubeu(setvar s0, class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→ ∃!(s0 ∈ ℝ,(c0[+]s0)= c1))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  renegeulem(s0, c0, c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  simpl(c0 ∈ ℝ, c1 ∈ ℝ)\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ), ∃(s0 ∈ ℝ,(c0[+]s0)= c1), ((0[-R]c0)[+]((0[-R](0[+]0))[+]c1))∈ ℝ, (c0[+]((0[-R]c0)[+]((0[-R](0[+]0))[+]c1)))= c1)\n  readdcld((0[-R]c0), ((0[-R](0[+]0))[+]c1), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  adantr(c0 ∈ ℝ, c1 ∈ ℝ, (0[-R]c0)∈ ℝ)\n  rernegcl(c0)\n  readdcld((0[-R](0[+]0)), c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  adantr(c0 ∈ ℝ, c1 ∈ ℝ, (0[-R](0[+]0))∈ ℝ)\n  syl(c0 ∈ ℝ, (0[-R](0[+]0))∈ ℝ, (0[+]0)∈ ℝ)\n  readdcld(nat0, nat0, c0 ∈ ℝ)\n  elre0re(c0)\n  rernegcl((0[+]0))\n  simpr(c0 ∈ ℝ, c1 ∈ ℝ)\n  resubeulem2(c0, c1)\n  rspcev(s0, ((0[-R]c0)[+]((0[-R](0[+]0))[+]c1)), cr, (c0[+]((0[-R]c0)[+]((0[-R](0[+]0))[+]c1)))= c1, (c0[+]s0)= c1)\n  eqeq1d((c0[+]s0), c1, (c0[+]((0[-R]c0)[+]((0[-R](0[+]0))[+]c1))), s0 =((0[-R]c0)[+]((0[-R](0[+]0))[+]c1)))\n  oveq2(s0, ((0[-R]c0)[+]((0[-R](0[+]0))[+]c1)), c0, caddc)\n  diff.wa.s(s0, c0 ∈ ℝ, c1 ∈ ℝ)\n  diff.wcel.s(s0, c0, cr)\n  diff.wcel.s(s0, c1, cr)\n  diff.cr.s(s0)\n  diff.wceq.s(s0, (c0[+]((0[-R]c0)[+]((0[-R](0[+]0))[+]c1))), c1)\n  diff.co.s(s0, c0, caddc, ((0[-R]c0)[+]((0[-R](0[+]0))[+]c1)))\n  diff.co.s(s0, (0[-R]c0), caddc, ((0[-R](0[+]0))[+]c1))\n  diff.co.s(s0, nat0, cresub, c0)\n  diff.co.s(s0, (0[-R](0[+]0)), caddc, c1)\n  diff.co.s(s0, nat0, cresub, (0[+]0))\n  diff.cresub.s(s0)\n  diff.co.s(s0, nat0, caddc, nat0)\n  diff.nat0.s(s0)\n  diff.caddc.s(s0)\n}","parent":["renegeulem","simpl","syl2anc","readdcld","adantr","rernegcl","syl","elre0re","simpr","resubeulem2","rspcev","eqeq1d","oveq2","diff.wa.s","diff.wcel.s","diff.cr.s","diff.wceq.s","diff.co.s","diff.cresub.s","diff.nat0.s","diff.caddc.s"],"children":["rersubcl","resubadd"]},{"name":"rersubcl","content":"Closure for real subtraction. Based on ~ subcl . (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm rersubcl(class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wcel(co(c0, cresub, c1), cr))\n} = {\n  eqeltrd(co(c0, cresub, c1), cr, crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), wa(wcel(c0, cr), wcel(c1, cr)))\n  resubval(hs0, c0, c1)\n  syl(wa(wcel(c0, cr), wcel(c1, cr)), wcel(crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), cr), wreu(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)))\n  ancoms(wcel(c0, cr), wcel(c1, cr), wreu(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)))\n  resubeu(hs0, c1, c0)\n  riotacl(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(cr)\n}","pretty":"thm rersubcl(class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→(c0[-R]c1)∈ ℝ)\n} = {\n  eqeltrd((c0[-R]c1), cr, iota(hs0 ∈ ℝ,(c1[+]hs0)= c0), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  resubval(hs0, c0, c1)\n  syl((c0 ∈ ℝ ∧ c1 ∈ ℝ), iota(hs0 ∈ ℝ,(c1[+]hs0)= c0)∈ ℝ, ∃!(hs0 ∈ ℝ,(c1[+]hs0)= c0))\n  ancoms(c0 ∈ ℝ, c1 ∈ ℝ, ∃!(hs0 ∈ ℝ,(c1[+]hs0)= c0))\n  resubeu(hs0, c1, c0)\n  riotacl(hs0, cr, (c1[+]hs0)= c0)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(cr)\n}","parent":["eqeltrd","resubval","syl","ancoms","resubeu","riotacl","diff.hs0.c"],"children":["resubf","repncan3","readdsub","resubcan2","resubsub4","rennncan2","renpncan3","resubidaddid1lem","resubdi"]},{"name":"resubadd","content":"Relation between real subtraction and addition. Based on ~ subadd . (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm resubadd(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wb(wceq(co(c0, cresub, c1), c2), wceq(co(c1, caddc, c2), c0)))\n} = {\n  bitr4d(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c1), c2), wceq(co(c1, caddc, c2), c0), wceq(crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), c2))\n  3adant3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wb(wceq(co(c0, cresub, c1), c2), wceq(crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), c2)))\n  eqeq1d(co(c0, cresub, c1), c2, crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), wa(wcel(c0, cr), wcel(c1, cr)))\n  resubval(hs0, c0, c1)\n  3com13(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wb(wceq(co(c1, caddc, c2), c0), wceq(crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), c2)))\n  3impb(wcel(c2, cr), wcel(c1, cr), wcel(c0, cr), wb(wceq(co(c1, caddc, c2), c0), wceq(crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), c2)))\n  sylan2(wcel(c2, cr), wa(wcel(c1, cr), wcel(c0, cr)), wb(wceq(co(c1, caddc, c2), c0), wceq(crio(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)), c2)), wreu(hs0, cr, wceq(co(c1, caddc, cv(hs0)), c0)))\n  resubeu(hs0, c1, c0)\n  riota2(hs0, c2, cr, wceq(co(c1, caddc, cv(hs0)), c0), wceq(co(c1, caddc, c2), c0))\n  eqeq1d(co(c1, caddc, cv(hs0)), c0, co(c1, caddc, c2), wceq(cv(hs0), c2))\n  oveq2(cv(hs0), c2, c1, caddc)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(cr)\n  diff.hs0.w(wceq(co(c1, caddc, c2), c0))\n}","pretty":"thm resubadd(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→((c0[-R]c1)= c2 ↔(c1[+]c2)= c0))\n} = {\n  bitr4d((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c0[-R]c1)= c2, (c1[+]c2)= c0, iota(hs0 ∈ ℝ,(c1[+]hs0)= c0)= c2)\n  3adant3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, ((c0[-R]c1)= c2 ↔ iota(hs0 ∈ ℝ,(c1[+]hs0)= c0)= c2))\n  eqeq1d((c0[-R]c1), c2, iota(hs0 ∈ ℝ,(c1[+]hs0)= c0), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  resubval(hs0, c0, c1)\n  3com13(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, ((c1[+]c2)= c0 ↔ iota(hs0 ∈ ℝ,(c1[+]hs0)= c0)= c2))\n  3impb(c2 ∈ ℝ, c1 ∈ ℝ, c0 ∈ ℝ, ((c1[+]c2)= c0 ↔ iota(hs0 ∈ ℝ,(c1[+]hs0)= c0)= c2))\n  sylan2(c2 ∈ ℝ, (c1 ∈ ℝ ∧ c0 ∈ ℝ), ((c1[+]c2)= c0 ↔ iota(hs0 ∈ ℝ,(c1[+]hs0)= c0)= c2), ∃!(hs0 ∈ ℝ,(c1[+]hs0)= c0))\n  resubeu(hs0, c1, c0)\n  riota2(hs0, c2, cr, (c1[+]hs0)= c0, (c1[+]c2)= c0)\n  eqeq1d((c1[+]hs0), c0, (c1[+]c2), hs0 = c2)\n  oveq2(hs0, c2, c1, caddc)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(cr)\n  diff.hs0.w((c1[+]c2)= c0)\n}","parent":["bitr4d","3adant3","eqeq1d","resubval","3com13","3impb","sylan2","resubeu","riota2","oveq2","diff.hs0.c","diff.hs0.w"],"children":["resubaddd","repncan3","reladdrsub"]},{"name":"resubaddd","content":"Relationship between subtraction and addition. Based on ~ subaddd . (Contributed by Steven Nguyen, 8-Jan-2023.)","origin":"thm resubaddd(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wb(wceq(co(c0, cresub, c1), c2), wceq(co(c1, caddc, c2), c0)))\n  -| wi(w0, wcel(c0, cr))\n  -| wi(w0, wcel(c1, cr))\n  -| wi(w0, wcel(c2, cr))\n} = {\n  syl3anc(w0, wb(wceq(co(c0, cresub, c1), c2), wceq(co(c1, caddc, c2), c0)), wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  resubadd(c0, c1, c2)\n}","pretty":"thm resubaddd(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →((c0[-R]c1)= c2 ↔(c1[+]c2)= c0))\n  ⊣ (w0 → c0 ∈ ℝ)\n  ⊣ (w0 → c1 ∈ ℝ)\n  ⊣ (w0 → c2 ∈ ℝ)\n} = {\n  syl3anc(w0, ((c0[-R]c1)= c2 ↔(c1[+]c2)= c0), c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  resubadd(c0, c1, c2)\n}","parent":["syl3anc","resubadd"],"children":["repncan2","resubcan2","resubidaddid1lem"]},{"name":"resubf","content":"Real subtraction is an operation on the real numbers. Based on ~ subf . (Contributed by Steven Nguyen, 7-Jan-2023.)","origin":"thm resubf() {\n  |- wf(cresub, cxp(cr, cr), cr)\n} = {\n  mpbi(wf(cresub, cxp(cr, cr), cr), wral(hs2, cr, wral(hs0, cr, wcel(crio(hs1, cr, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs2))), cr))))\n  rgen2a(hs2, hs0, cr, wcel(crio(hs1, cr, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs2))), cr))\n  eqeltrrd(crio(hs1, cr, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs2))), cr, co(cv(hs2), cresub, cv(hs0)), wa(wcel(cv(hs2), cr), wcel(cv(hs0), cr)))\n  resubval(hs1, cv(hs2), cv(hs0))\n  rersubcl(cv(hs2), cv(hs0))\n  fmpt2(hs2, hs0, cr, cr, crio(hs1, cr, wceq(co(cv(hs0), caddc, cv(hs1)), cv(hs2))), cr, cresub)\n  df-resub(hs2, hs0, hs1)\n  diff.hs0.c(cr)\n  diff.hs1.c(cv(hs2))\n  diff.hs1.c(cv(hs0))\n  diff.hs2.s(hs0)\n  diff.hs2.c(cr)\n  diff.hs2.s(hs1)\n  diff.hs0.s(hs1)\n}","pretty":"thm resubf() {\n  ⊢ (-R :(ℝ × ℝ)→ ℝ)\n} = {\n  mpbi((-R :(ℝ × ℝ)→ ℝ), ∀(hs2 ∈ ℝ, ∀(hs0 ∈ ℝ, iota(hs1 ∈ ℝ,(hs0[+]hs1)= hs2)∈ ℝ)))\n  rgen2a(hs2, hs0, cr, iota(hs1 ∈ ℝ,(hs0[+]hs1)= hs2)∈ ℝ)\n  eqeltrrd(iota(hs1 ∈ ℝ,(hs0[+]hs1)= hs2), cr, (hs2[-R]hs0), (hs2 ∈ ℝ ∧ hs0 ∈ ℝ))\n  resubval(hs1, hs2, hs0)\n  rersubcl(hs2, hs0)\n  fmpt2(hs2, hs0, cr, cr, iota(hs1 ∈ ℝ,(hs0[+]hs1)= hs2), cr, cresub)\n  df-resub(hs2, hs0, hs1)\n  diff.hs0.c(cr)\n  diff.hs1.c(hs2)\n  diff.hs1.c(hs0)\n  diff.hs2.s(hs0)\n  diff.hs2.c(cr)\n  diff.hs2.s(hs1)\n  diff.hs0.s(hs1)\n}","parent":["mpbi","rgen2a","eqeltrrd","resubval","rersubcl","fmpt2","df-resub","diff.hs0.c","diff.hs1.c","diff.hs2.s","diff.hs2.c","diff.hs0.s"],"children":[]},{"name":"repncan2","content":"Addition and subtraction of equals. Compare ~ pncan2 . (Contributed by Steven Nguyen, 8-Jan-2023.)","origin":"thm repncan2(class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wceq(co(co(c0, caddc, c1), cresub, c0), c1))\n} = {\n  mpbiri(wa(wcel(c0, cr), wcel(c1, cr)), wceq(co(co(c0, caddc, c1), cresub, c0), c1), wceq(co(c0, caddc, c1), co(c0, caddc, c1)))\n  eqid(co(c0, caddc, c1))\n  resubaddd(co(c0, caddc, c1), c0, c1, wa(wcel(c0, cr), wcel(c1, cr)))\n  readdcl(c0, c1)\n  simpl(wcel(c0, cr), wcel(c1, cr))\n  simpr(wcel(c0, cr), wcel(c1, cr))\n}","pretty":"thm repncan2(class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→((c0[+]c1)[-R]c0)= c1)\n} = {\n  mpbiri((c0 ∈ ℝ ∧ c1 ∈ ℝ), ((c0[+]c1)[-R]c0)= c1, (c0[+]c1)=(c0[+]c1))\n  eqid((c0[+]c1))\n  resubaddd((c0[+]c1), c0, c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  readdcl(c0, c1)\n  simpl(c0 ∈ ℝ, c1 ∈ ℝ)\n  simpr(c0 ∈ ℝ, c1 ∈ ℝ)\n}","parent":["mpbiri","eqid","resubaddd","readdcl","simpl","simpr"],"children":["repnpcan","resubidaddid1"]},{"name":"repncan3","content":"Addition and subtraction of equals. Based on ~ pncan3 . (Contributed by Steven Nguyen, 8-Jan-2023.)","origin":"thm repncan3(class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wceq(co(c0, caddc, co(c1, cresub, c0)), c1))\n} = {\n  ancoms(wcel(c0, cr), wcel(c1, cr), wceq(co(c0, caddc, co(c1, cresub, c0)), c1))\n  mpd3an3(wcel(c1, cr), wcel(c0, cr), wceq(co(c0, caddc, co(c1, cresub, c0)), c1), wcel(co(c1, cresub, c0), cr))\n  rersubcl(c1, c0)\n  mpbii(w3a(wcel(c1, cr), wcel(c0, cr), wcel(co(c1, cresub, c0), cr)), wceq(co(c0, caddc, co(c1, cresub, c0)), c1), wceq(co(c1, cresub, c0), co(c1, cresub, c0)))\n  eqid(co(c1, cresub, c0))\n  resubadd(c1, c0, co(c1, cresub, c0))\n}","pretty":"thm repncan3(class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→(c0[+](c1[-R]c0))= c1)\n} = {\n  ancoms(c0 ∈ ℝ, c1 ∈ ℝ, (c0[+](c1[-R]c0))= c1)\n  mpd3an3(c1 ∈ ℝ, c0 ∈ ℝ, (c0[+](c1[-R]c0))= c1, (c1[-R]c0)∈ ℝ)\n  rersubcl(c1, c0)\n  mpbii((c1 ∈ ℝ ∧ c0 ∈ ℝ ∧(c1[-R]c0)∈ ℝ), (c0[+](c1[-R]c0))= c1, (c1[-R]c0)=(c1[-R]c0))\n  eqid((c1[-R]c0))\n  resubadd(c1, c0, (c1[-R]c0))\n}","parent":["ancoms","mpd3an3","rersubcl","mpbii","eqid","resubadd"],"children":["readdsub","resubcan2","resubsub4","rennncan2","renpncan3","resubdi"]},{"name":"readdsub","content":"Law for addition and subtraction. (Contributed by Steven Nguyen, 28-Jan-2023.)","origin":"thm readdsub(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, caddc, c1), cresub, c2), co(co(c0, cresub, c2), caddc, c1)))\n} = {\n  mpbid(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, caddc, c1), cresub, c2), co(co(c0, cresub, c2), caddc, c1)), wceq(co(c2, caddc, co(co(c0, caddc, c1), cresub, c2)), co(c2, caddc, co(co(c0, cresub, c2), caddc, c1))))\n  3eqtr2d(co(c2, caddc, co(co(c0, caddc, c1), cresub, c2)), co(c2, caddc, co(co(c0, cresub, c2), caddc, c1)), co(c0, caddc, c1), co(co(c2, caddc, co(c0, cresub, c2)), caddc, c1), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  syl2anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c2, caddc, co(co(c0, caddc, c1), cresub, c2)), co(c0, caddc, c1)), wcel(c2, cr), wcel(co(c0, caddc, c1), cr))\n  repncan3(c2, co(c0, caddc, c1))\n  oveq1d(co(c2, caddc, co(c0, cresub, c2)), caddc, c1, c0, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(c2, caddc, co(c0, cresub, c2)), c0))\n  ancoms(wcel(c0, cr), wcel(c2, cr), wceq(co(c2, caddc, co(c0, cresub, c2)), c0))\n  repncan3(c2, c0)\n  addassd(c2, co(c0, cresub, c2), c1, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  recnd(c2, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  recnd(co(c0, cresub, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  recnd(c1, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  syl3anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wb(wceq(co(c2, caddc, co(co(c0, caddc, c1), cresub, c2)), co(c2, caddc, co(co(c0, cresub, c2), caddc, c1))), wceq(co(co(c0, caddc, c1), cresub, c2), co(co(c0, cresub, c2), caddc, c1))), wcel(co(co(c0, caddc, c1), cresub, c2), cr), wcel(co(co(c0, cresub, c2), caddc, c1), cr), wcel(c2, cr))\n  syl2anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wcel(co(co(c0, caddc, c1), cresub, c2), cr), wcel(co(c0, caddc, c1), cr), wcel(c2, cr))\n  3adant3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wcel(co(c0, caddc, c1), cr))\n  readdcl(c0, c1)\n  rersubcl(co(c0, caddc, c1), c2)\n  readdcld(co(c0, cresub, c2), c1, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wcel(co(c0, cresub, c2), cr))\n  rersubcl(c0, c2)\n  simp2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  simp3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  readdcan(co(co(c0, caddc, c1), cresub, c2), co(co(c0, cresub, c2), caddc, c1), c2)\n}","pretty":"thm readdsub(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→((c0[+]c1)[-R]c2)=((c0[-R]c2)[+]c1))\n} = {\n  mpbid((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), ((c0[+]c1)[-R]c2)=((c0[-R]c2)[+]c1), (c2[+]((c0[+]c1)[-R]c2))=(c2[+]((c0[-R]c2)[+]c1)))\n  3eqtr2d((c2[+]((c0[+]c1)[-R]c2)), (c2[+]((c0[-R]c2)[+]c1)), (c0[+]c1), ((c2[+](c0[-R]c2))[+]c1), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c2[+]((c0[+]c1)[-R]c2))=(c0[+]c1), c2 ∈ ℝ, (c0[+]c1)∈ ℝ)\n  repncan3(c2, (c0[+]c1))\n  oveq1d((c2[+](c0[-R]c2)), caddc, c1, c0, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c2[+](c0[-R]c2))= c0)\n  ancoms(c0 ∈ ℝ, c2 ∈ ℝ, (c2[+](c0[-R]c2))= c0)\n  repncan3(c2, c0)\n  addassd(c2, (c0[-R]c2), c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  recnd(c2, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  recnd((c0[-R]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  recnd(c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  syl3anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), ((c2[+]((c0[+]c1)[-R]c2))=(c2[+]((c0[-R]c2)[+]c1))↔((c0[+]c1)[-R]c2)=((c0[-R]c2)[+]c1)), ((c0[+]c1)[-R]c2)∈ ℝ, ((c0[-R]c2)[+]c1)∈ ℝ, c2 ∈ ℝ)\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), ((c0[+]c1)[-R]c2)∈ ℝ, (c0[+]c1)∈ ℝ, c2 ∈ ℝ)\n  3adant3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[+]c1)∈ ℝ)\n  readdcl(c0, c1)\n  rersubcl((c0[+]c1), c2)\n  readdcld((c0[-R]c2), c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[-R]c2)∈ ℝ)\n  rersubcl(c0, c2)\n  simp2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  simp3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  readdcan(((c0[+]c1)[-R]c2), ((c0[-R]c2)[+]c1), c2)\n}","parent":["mpbid","3eqtr2d","syl2anc","repncan3","oveq1d","3adant2","ancoms","addassd","recnd","syl3anc","3adant3","readdcl","rersubcl","readdcld","simp2","simp3","readdcan"],"children":["renpncan3","resubidaddid1"]},{"name":"reladdrsub","content":"Move LHS of a sum into RHS of a (real) difference. Version of ~ mvlladdd with real subtraction. (Contributed by Steven Nguyen, 8-Jan-2023.)","origin":"thm reladdrsub(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(c0, co(c1, cresub, c2)))\n  -| wi(w0, wcel(c2, cr))\n  -| wi(w0, wcel(c0, cr))\n  -| wi(w0, wceq(co(c2, caddc, c0), c1))\n} = {\n  eqcomd(c0, co(c1, cresub, c2), w0)\n  mp3and(w0, wceq(co(c1, cresub, c2), c0), wcel(c1, cr), wcel(c2, cr), wcel(c0, cr))\n  eqeltrrd(c1, cr, co(c2, caddc, c0), w0)\n  readdcld(c2, c0, w0)\n  syl5ibrcom(w0, w3a(wcel(c1, cr), wcel(c2, cr), wcel(c0, cr)), wceq(co(c1, cresub, c2), c0), wceq(co(c2, caddc, c0), c1))\n  resubadd(c1, c2, c0)\n}","pretty":"thm reladdrsub(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 → c0 =(c1[-R]c2))\n  ⊣ (w0 → c2 ∈ ℝ)\n  ⊣ (w0 → c0 ∈ ℝ)\n  ⊣ (w0 →(c2[+]c0)= c1)\n} = {\n  eqcomd(c0, (c1[-R]c2), w0)\n  mp3and(w0, (c1[-R]c2)= c0, c1 ∈ ℝ, c2 ∈ ℝ, c0 ∈ ℝ)\n  eqeltrrd(c1, cr, (c2[+]c0), w0)\n  readdcld(c2, c0, w0)\n  syl5ibrcom(w0, (c1 ∈ ℝ ∧ c2 ∈ ℝ ∧ c0 ∈ ℝ), (c1[-R]c2)= c0, (c2[+]c0)= c1)\n  resubadd(c1, c2, c0)\n}","parent":["eqcomd","mp3and","eqeltrrd","readdcld","syl5ibrcom","resubadd"],"children":["resubsub4","resubidaddid1lem","resubdi"]},{"name":"resubcan2","content":"Cancellation law for real subtraction. Compare ~ subcan2 . (Contributed by Steven Nguyen, 8-Jan-2023.)","origin":"thm resubcan2(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wb(wceq(co(c0, cresub, c2), co(c1, cresub, c2)), wceq(c0, c1)))\n} = {\n  impbid1(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2)), wceq(c0, c1))\n  ex(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2)), wceq(c0, c1))\n  eqtr3d(c0, c1, co(c2, caddc, co(c1, cresub, c2)), wa(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2))))\n  mpbid(wa(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2))), wceq(co(c2, caddc, co(c1, cresub, c2)), c0), wceq(co(c0, cresub, c2), co(c1, cresub, c2)))\n  simpr(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2)))\n  resubaddd(c0, c2, co(c1, cresub, c2), wa(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2))))\n  simpl1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(c0, cresub, c2), co(c1, cresub, c2)))\n  syl2anc(wa(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2))), wcel(co(c1, cresub, c2), cr), wcel(c1, cr), wcel(c2, cr))\n  rersubcl(c1, c2)\n  syl2anc(wa(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cresub, c2), co(c1, cresub, c2))), wceq(co(c2, caddc, co(c1, cresub, c2)), c1), wcel(c2, cr), wcel(c1, cr))\n  simpl3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(c0, cresub, c2), co(c1, cresub, c2)))\n  simpl2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(c0, cresub, c2), co(c1, cresub, c2)))\n  repncan3(c2, c1)\n  oveq1(c0, c1, cresub, c2)\n}","pretty":"thm resubcan2(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→((c0[-R]c2)=(c1[-R]c2)↔ c0 = c1))\n} = {\n  impbid1((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c0[-R]c2)=(c1[-R]c2), c0 = c1)\n  ex((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c0[-R]c2)=(c1[-R]c2), c0 = c1)\n  eqtr3d(c0, c1, (c2[+](c1[-R]c2)), ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)∧(c0[-R]c2)=(c1[-R]c2)))\n  mpbid(((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)∧(c0[-R]c2)=(c1[-R]c2)), (c2[+](c1[-R]c2))= c0, (c0[-R]c2)=(c1[-R]c2))\n  simpr((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c0[-R]c2)=(c1[-R]c2))\n  resubaddd(c0, c2, (c1[-R]c2), ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)∧(c0[-R]c2)=(c1[-R]c2)))\n  simpl1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[-R]c2)=(c1[-R]c2))\n  syl2anc(((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)∧(c0[-R]c2)=(c1[-R]c2)), (c1[-R]c2)∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  rersubcl(c1, c2)\n  syl2anc(((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)∧(c0[-R]c2)=(c1[-R]c2)), (c2[+](c1[-R]c2))= c1, c2 ∈ ℝ, c1 ∈ ℝ)\n  simpl3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[-R]c2)=(c1[-R]c2))\n  simpl2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[-R]c2)=(c1[-R]c2))\n  repncan3(c2, c1)\n  oveq1(c0, c1, cresub, c2)\n}","parent":["impbid1","ex","eqtr3d","mpbid","simpr","resubaddd","simpl1","syl2anc","rersubcl","simpl3","simpl2","repncan3","oveq1"],"children":[]},{"name":"resubsub4","content":"Law for double subtraction. Compare ~ subsub4 . (Contributed by Steven Nguyen, 14-Jan-2023.)","origin":"thm resubsub4(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, cresub, c1), cresub, c2), co(c0, cresub, co(c1, caddc, c2))))\n} = {\n  reladdrsub(co(co(c0, cresub, c1), cresub, c2), c0, co(c1, caddc, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wcel(co(c1, caddc, c2), cr))\n  readdcl(c1, c2)\n  3eqtrd(co(co(c1, caddc, c2), caddc, co(co(c0, cresub, c1), cresub, c2)), c0, co(c1, caddc, co(c2, caddc, co(co(c0, cresub, c1), cresub, c2))), co(c1, caddc, co(c0, cresub, c1)), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  addassd(c1, c2, co(co(c0, cresub, c1), cresub, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  recnd(c1, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  recnd(c2, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  recnd(co(co(c0, cresub, c1), cresub, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  syl2anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wcel(co(co(c0, cresub, c1), cresub, c2), cr), wcel(co(c0, cresub, c1), cr), wcel(c2, cr))\n  rersubcl(co(c0, cresub, c1), c2)\n  oveq2d(c1, caddc, co(c2, caddc, co(co(c0, cresub, c1), cresub, c2)), co(c0, cresub, c1), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  syl2anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c2, caddc, co(co(c0, cresub, c1), cresub, c2)), co(c0, cresub, c1)), wcel(c2, cr), wcel(co(c0, cresub, c1), cr))\n  simp3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  3adant3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wcel(co(c0, cresub, c1), cr))\n  rersubcl(c0, c1)\n  repncan3(c2, co(c0, cresub, c1))\n  syl2anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c1, caddc, co(c0, cresub, c1)), c0), wcel(c1, cr), wcel(c0, cr))\n  simp2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  simp1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  repncan3(c1, c0)\n}","pretty":"thm resubsub4(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→((c0[-R]c1)[-R]c2)=(c0[-R](c1[+]c2)))\n} = {\n  reladdrsub(((c0[-R]c1)[-R]c2), c0, (c1[+]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c1[+]c2)∈ ℝ)\n  readdcl(c1, c2)\n  3eqtrd(((c1[+]c2)[+]((c0[-R]c1)[-R]c2)), c0, (c1[+](c2[+]((c0[-R]c1)[-R]c2))), (c1[+](c0[-R]c1)), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  addassd(c1, c2, ((c0[-R]c1)[-R]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  recnd(c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  recnd(c2, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  recnd(((c0[-R]c1)[-R]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), ((c0[-R]c1)[-R]c2)∈ ℝ, (c0[-R]c1)∈ ℝ, c2 ∈ ℝ)\n  rersubcl((c0[-R]c1), c2)\n  oveq2d(c1, caddc, (c2[+]((c0[-R]c1)[-R]c2)), (c0[-R]c1), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c2[+]((c0[-R]c1)[-R]c2))=(c0[-R]c1), c2 ∈ ℝ, (c0[-R]c1)∈ ℝ)\n  simp3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  3adant3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[-R]c1)∈ ℝ)\n  rersubcl(c0, c1)\n  repncan3(c2, (c0[-R]c1))\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c1[+](c0[-R]c1))= c0, c1 ∈ ℝ, c0 ∈ ℝ)\n  simp2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  simp1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  repncan3(c1, c0)\n}","parent":["reladdrsub","3adant1","readdcl","3eqtrd","addassd","recnd","syl2anc","rersubcl","oveq2d","simp3","3adant3","repncan3","simp2","simp1"],"children":["rennncan2","repnpcan"]},{"name":"rennncan2","content":"Cancellation law for real subtraction. Compare ~ nnncan2 . (Contributed by Steven Nguyen, 14-Jan-2023.)","origin":"thm rennncan2(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, cresub, c2), cresub, co(c1, cresub, c2)), co(c0, cresub, c1)))\n} = {\n  eqtrd(co(co(c0, cresub, c2), cresub, co(c1, cresub, c2)), co(c0, cresub, c1), co(c0, cresub, co(c2, caddc, co(c1, cresub, c2))), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  syl3anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, cresub, c2), cresub, co(c1, cresub, c2)), co(c0, cresub, co(c2, caddc, co(c1, cresub, c2)))), wcel(c0, cr), wcel(c2, cr), wcel(co(c1, cresub, c2), cr))\n  simp1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  syl2anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wcel(co(c1, cresub, c2), cr), wcel(c1, cr), wcel(c2, cr))\n  rersubcl(c1, c2)\n  resubsub4(c0, c2, co(c1, cresub, c2))\n  oveq2d(c0, cresub, co(c2, caddc, co(c1, cresub, c2)), c1, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  syl2anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c2, caddc, co(c1, cresub, c2)), c1), wcel(c2, cr), wcel(c1, cr))\n  simp3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  simp2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  repncan3(c2, c1)\n}","pretty":"thm rennncan2(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→((c0[-R]c2)[-R](c1[-R]c2))=(c0[-R]c1))\n} = {\n  eqtrd(((c0[-R]c2)[-R](c1[-R]c2)), (c0[-R]c1), (c0[-R](c2[+](c1[-R]c2))), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  syl3anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), ((c0[-R]c2)[-R](c1[-R]c2))=(c0[-R](c2[+](c1[-R]c2))), c0 ∈ ℝ, c2 ∈ ℝ, (c1[-R]c2)∈ ℝ)\n  simp1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c1[-R]c2)∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  rersubcl(c1, c2)\n  resubsub4(c0, c2, (c1[-R]c2))\n  oveq2d(c0, cresub, (c2[+](c1[-R]c2)), c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  syl2anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), (c2[+](c1[-R]c2))= c1, c2 ∈ ℝ, c1 ∈ ℝ)\n  simp3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  simp2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  repncan3(c2, c1)\n}","parent":["eqtrd","syl3anc","simp1","syl2anc","rersubcl","resubsub4","oveq2d","simp3","simp2","repncan3"],"children":[]},{"name":"renpncan3","content":"Cancellation law for real subtraction. Compare ~ npncan3 . (Contributed by Steven Nguyen, 28-Jan-2023.)","origin":"thm renpncan3(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, cresub, c1), caddc, co(c2, cresub, c0)), co(c2, cresub, c1)))\n} = {\n  eqtr3d(co(co(c0, cresub, c1), caddc, co(c2, cresub, c0)), co(c2, cresub, c1), co(co(c0, caddc, co(c2, cresub, c0)), cresub, c1), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  syl3anc(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, caddc, co(c2, cresub, c0)), cresub, c1), co(co(c0, cresub, c1), caddc, co(c2, cresub, c0))), wcel(c0, cr), wcel(co(c2, cresub, c0), cr), wcel(c1, cr))\n  simp1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  3adant2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wcel(co(c2, cresub, c0), cr))\n  ancoms(wcel(c0, cr), wcel(c2, cr), wcel(co(c2, cresub, c0), cr))\n  rersubcl(c2, c0)\n  simp2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  readdsub(c0, co(c2, cresub, c0), c1)\n  oveq1d(co(c0, caddc, co(c2, cresub, c0)), cresub, c1, c2, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(c0, caddc, co(c2, cresub, c0)), c2))\n  repncan3(c0, c2)\n}","pretty":"thm renpncan3(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→((c0[-R]c1)[+](c2[-R]c0))=(c2[-R]c1))\n} = {\n  eqtr3d(((c0[-R]c1)[+](c2[-R]c0)), (c2[-R]c1), ((c0[+](c2[-R]c0))[-R]c1), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  syl3anc((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ), ((c0[+](c2[-R]c0))[-R]c1)=((c0[-R]c1)[+](c2[-R]c0)), c0 ∈ ℝ, (c2[-R]c0)∈ ℝ, c1 ∈ ℝ)\n  simp1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  3adant2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c2[-R]c0)∈ ℝ)\n  ancoms(c0 ∈ ℝ, c2 ∈ ℝ, (c2[-R]c0)∈ ℝ)\n  rersubcl(c2, c0)\n  simp2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  readdsub(c0, (c2[-R]c0), c1)\n  oveq1d((c0[+](c2[-R]c0)), cresub, c1, c2, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[+](c2[-R]c0))= c2)\n  repncan3(c0, c2)\n}","parent":["eqtr3d","syl3anc","simp1","3adant2","ancoms","rersubcl","simp2","readdsub","oveq1d","repncan3"],"children":[]},{"name":"repnpcan","content":"Cancellation law for addition and real subtraction. Compare ~ pnpcan . (Contributed by Steven Nguyen, 19-May-2023.)","origin":"thm repnpcan(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(co(c0, caddc, c1), cresub, co(c0, caddc, c2)), co(c1, cresub, c2)))\n} = {\n  eqtr3d(co(co(c0, caddc, c1), cresub, co(c0, caddc, c2)), co(c1, cresub, c2), co(co(co(c0, caddc, c1), cresub, c0), cresub, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  stoic4a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(co(co(c0, caddc, c1), cresub, c0), cresub, c2), co(co(c0, caddc, c1), cresub, co(c0, caddc, c2))), wcel(co(c0, caddc, c1), cr))\n  readdcl(c0, c1)\n  resubsub4(co(c0, caddc, c1), c0, c2)\n  oveq1d(co(co(c0, caddc, c1), cresub, c0), cresub, c2, c1, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(co(c0, caddc, c1), cresub, c0), c1))\n  repncan2(c0, c1)\n}","pretty":"thm repnpcan(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→((c0[+]c1)[-R](c0[+]c2))=(c1[-R]c2))\n} = {\n  eqtr3d(((c0[+]c1)[-R](c0[+]c2)), (c1[-R]c2), (((c0[+]c1)[-R]c0)[-R]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  stoic4a(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (((c0[+]c1)[-R]c0)[-R]c2)=((c0[+]c1)[-R](c0[+]c2)), (c0[+]c1)∈ ℝ)\n  readdcl(c0, c1)\n  resubsub4((c0[+]c1), c0, c2)\n  oveq1d(((c0[+]c1)[-R]c0), cresub, c2, c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, ((c0[+]c1)[-R]c0)= c1)\n  repncan2(c0, c1)\n}","parent":["eqtr3d","stoic4a","readdcl","resubsub4","oveq1d","3adant3","repncan2"],"children":[]},{"name":"resubidaddid1lem","content":"Lemma for ~ resubidaddid1 . A special case of ~ npncan . (Contributed by Steven Nguyen, 8-Jan-2023.)","origin":"thm resubidaddid1lem(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(co(co(c0, cresub, c1), caddc, co(c1, cresub, c2)), co(c0, cresub, c2)))\n  -| wi(w0, wcel(c0, cr))\n  -| wi(w0, wcel(c1, cr))\n  -| wi(w0, wcel(c2, cr))\n  -| wi(w0, wceq(co(c0, cresub, c1), co(c1, cresub, c2)))\n} = {\n  reladdrsub(co(co(c0, cresub, c1), caddc, co(c1, cresub, c2)), c0, c2, w0)\n  readdcld(co(c0, cresub, c1), co(c1, cresub, c2), w0)\n  3eqtr3d(co(c2, caddc, co(co(c0, cresub, c1), caddc, co(c1, cresub, c2))), c0, co(co(c2, caddc, co(c0, cresub, c1)), caddc, co(c1, cresub, c2)), co(c1, caddc, co(c1, cresub, c2)), w0)\n  oveq1d(co(c2, caddc, co(c0, cresub, c1)), caddc, co(c1, cresub, c2), c1, w0)\n  mpbid(w0, wceq(co(c2, caddc, co(c0, cresub, c1)), c1), wceq(co(c1, cresub, c2), co(c0, cresub, c1)))\n  eqcomd(co(c1, cresub, c2), co(c0, cresub, c1), w0)\n  resubaddd(c1, c2, co(c0, cresub, c1), w0)\n  addassd(c2, co(c0, cresub, c1), co(c1, cresub, c2), w0)\n  recnd(c2, w0)\n  recnd(co(c0, cresub, c1), w0)\n  syl2anc(w0, wcel(co(c0, cresub, c1), cr), wcel(c0, cr), wcel(c1, cr))\n  rersubcl(c0, c1)\n  recnd(co(c1, cresub, c2), w0)\n  mpbid(w0, wceq(co(c1, caddc, co(c1, cresub, c2)), c0), wceq(co(c0, cresub, c1), co(c1, cresub, c2)))\n  resubaddd(c0, c1, co(c1, cresub, c2), w0)\n  syl2anc(w0, wcel(co(c1, cresub, c2), cr), wcel(c1, cr), wcel(c2, cr))\n  rersubcl(c1, c2)\n}","pretty":"thm resubidaddid1lem(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →((c0[-R]c1)[+](c1[-R]c2))=(c0[-R]c2))\n  ⊣ (w0 → c0 ∈ ℝ)\n  ⊣ (w0 → c1 ∈ ℝ)\n  ⊣ (w0 → c2 ∈ ℝ)\n  ⊣ (w0 →(c0[-R]c1)=(c1[-R]c2))\n} = {\n  reladdrsub(((c0[-R]c1)[+](c1[-R]c2)), c0, c2, w0)\n  readdcld((c0[-R]c1), (c1[-R]c2), w0)\n  3eqtr3d((c2[+]((c0[-R]c1)[+](c1[-R]c2))), c0, ((c2[+](c0[-R]c1))[+](c1[-R]c2)), (c1[+](c1[-R]c2)), w0)\n  oveq1d((c2[+](c0[-R]c1)), caddc, (c1[-R]c2), c1, w0)\n  mpbid(w0, (c2[+](c0[-R]c1))= c1, (c1[-R]c2)=(c0[-R]c1))\n  eqcomd((c1[-R]c2), (c0[-R]c1), w0)\n  resubaddd(c1, c2, (c0[-R]c1), w0)\n  addassd(c2, (c0[-R]c1), (c1[-R]c2), w0)\n  recnd(c2, w0)\n  recnd((c0[-R]c1), w0)\n  syl2anc(w0, (c0[-R]c1)∈ ℝ, c0 ∈ ℝ, c1 ∈ ℝ)\n  rersubcl(c0, c1)\n  recnd((c1[-R]c2), w0)\n  mpbid(w0, (c1[+](c1[-R]c2))= c0, (c0[-R]c1)=(c1[-R]c2))\n  resubaddd(c0, c1, (c1[-R]c2), w0)\n  syl2anc(w0, (c1[-R]c2)∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  rersubcl(c1, c2)\n}","parent":["reladdrsub","readdcld","3eqtr3d","oveq1d","mpbid","eqcomd","resubaddd","addassd","recnd","syl2anc","rersubcl"],"children":[]},{"name":"resubidaddid1","content":"Any real number subtracted from itself forms a left additive identity. (Contributed by Steven Nguyen, 8-Jan-2023.)","origin":"thm resubidaddid1(class c0, class c1) {\n  |- wi(wa(wcel(c0, cr), wcel(c1, cr)), wceq(co(co(c0, cresub, c0), caddc, c1), c1))\n} = {\n  eqtr3d(co(co(c0, cresub, c0), caddc, c1), c1, co(co(c0, caddc, c1), cresub, c0), wa(wcel(c0, cr), wcel(c1, cr)))\n  3anidm13(wcel(c0, cr), wcel(c1, cr), wceq(co(co(c0, caddc, c1), cresub, c0), co(co(c0, cresub, c0), caddc, c1)))\n  readdsub(c0, c1, c0)\n  repncan2(c0, c1)\n}","pretty":"thm resubidaddid1(class c0, class c1) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ)→((c0[-R]c0)[+]c1)= c1)\n} = {\n  eqtr3d(((c0[-R]c0)[+]c1), c1, ((c0[+]c1)[-R]c0), (c0 ∈ ℝ ∧ c1 ∈ ℝ))\n  3anidm13(c0 ∈ ℝ, c1 ∈ ℝ, ((c0[+]c1)[-R]c0)=((c0[-R]c0)[+]c1))\n  readdsub(c0, c1, c0)\n  repncan2(c0, c1)\n}","parent":["eqtr3d","3anidm13","readdsub","repncan2"],"children":[]},{"name":"resubdi","content":"Distribution of multiplication over real subtraction. (Contributed by Steven Nguyen, 3-Jun-2023.)","origin":"thm resubdi(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)), wceq(co(c0, cmul, co(c1, cresub, c2)), co(co(c0, cmul, c1), cresub, co(c0, cmul, c2))))\n} = {\n  reladdrsub(co(c0, cmul, co(c1, cresub, c2)), co(c0, cmul, c1), co(c0, cmul, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant2(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wcel(co(c0, cmul, c2), cr))\n  remulcl(c0, c2)\n  remulcld(c0, co(c1, cresub, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  eqtr3d(co(co(c0, cmul, c2), caddc, co(c0, cmul, co(c1, cresub, c2))), co(c0, cmul, c1), co(c0, cmul, co(c2, caddc, co(c1, cresub, c2))), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  adddid(c0, c2, co(c1, cresub, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  recnd(c0, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  simp1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  recnd(c2, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  simp3(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr))\n  recnd(co(c1, cresub, c2), w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wcel(co(c1, cresub, c2), cr))\n  rersubcl(c1, c2)\n  oveq2d(c0, cmul, co(c2, caddc, co(c1, cresub, c2)), c1, w3a(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr)))\n  3adant1(wcel(c0, cr), wcel(c1, cr), wcel(c2, cr), wceq(co(c2, caddc, co(c1, cresub, c2)), c1))\n  ancoms(wcel(c1, cr), wcel(c2, cr), wceq(co(c2, caddc, co(c1, cresub, c2)), c1))\n  repncan3(c2, c1)\n}","pretty":"thm resubdi(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ)→(c0[×](c1[-R]c2))=((c0[×]c1)[-R](c0[×]c2)))\n} = {\n  reladdrsub((c0[×](c1[-R]c2)), (c0[×]c1), (c0[×]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant2(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c0[×]c2)∈ ℝ)\n  remulcl(c0, c2)\n  remulcld(c0, (c1[-R]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  eqtr3d(((c0[×]c2)[+](c0[×](c1[-R]c2))), (c0[×]c1), (c0[×](c2[+](c1[-R]c2))), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  adddid(c0, c2, (c1[-R]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  recnd(c0, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  simp1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  recnd(c2, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  simp3(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ)\n  recnd((c1[-R]c2), (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c1[-R]c2)∈ ℝ)\n  rersubcl(c1, c2)\n  oveq2d(c0, cmul, (c2[+](c1[-R]c2)), c1, (c0 ∈ ℝ ∧ c1 ∈ ℝ ∧ c2 ∈ ℝ))\n  3adant1(c0 ∈ ℝ, c1 ∈ ℝ, c2 ∈ ℝ, (c2[+](c1[-R]c2))= c1)\n  ancoms(c1 ∈ ℝ, c2 ∈ ℝ, (c2[+](c1[-R]c2))= c1)\n  repncan3(c2, c1)\n}","parent":["reladdrsub","3adant2","remulcl","remulcld","eqtr3d","adddid","recnd","simp1","simp3","3adant1","rersubcl","oveq2d","ancoms","repncan3"],"children":[]}]}