{"index":809,"title":"Operator sum, difference, and scalar multiplication","content":"_Note on operators_. Unlike some authors, we use the term \"operator\" to mean any function from ` ~H ` to ` ~H ` . This is the definition of operator in [Hughes] p. 14, the definition of operator in [AkhiezerGlazman] p. 30, and the definition of operator in [Goldberg] p. 10. For Reed and Simon, an operator is linear (definition of operator in [ReedSimon] p. 2). For Halmos, an operator is bounded and linear (definition of operator in [Halmos] p. 35). For Kalmbach and Beran, an operator is continuous and linear (definition of operator in [Kalmbach] p. 353; definition of operator in [Beran] p. 99). Note that \"bounded and linear\" and \"continuous and linear\" are equivalent by ~ lncnbd .","blocks":[{"name":"df-hosum","content":"Define the sum of two Hilbert space operators. Definition of [Beran] p. 111. (Contributed by NM, 9-Nov-2000.) (New usage is discouraged.)","origin":"axiom df-hosum(setvar s0, setvar s1, setvar s2) {\n  |- wceq(chos, cmpo(s0, s1, co(chba, cmap, chba), co(chba, cmap, chba), cmpt(s2, chba, co(cfv(cv(s0), cv(s2)), cva, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n}","pretty":"axiom df-hosum(setvar s0, setvar s1, setvar s2) {\n  ⊢ +op =(s0 ∈(~H[↦]~H), s1 ∈(~H[↦]~H)↦(s2 ∈ ~H ↦((s0 ` s2)[+h](s1 ` s2))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n}","parent":[],"children":["hosmval"]},{"name":"df-homul","content":"Define the scalar product with a Hilbert space operator. Definition of [Beran] p. 111. (Contributed by NM, 20-Feb-2006.) (New usage is discouraged.)","origin":"axiom df-homul(setvar s0, setvar s1, setvar s2) {\n  |- wceq(chot, cmpo(s0, s1, cc, co(chba, cmap, chba), cmpt(s2, chba, co(cv(s0), csm, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n}","pretty":"axiom df-homul(setvar s0, setvar s1, setvar s2) {\n  ⊢ .op =(s0 ∈ ℂ, s1 ∈(~H[↦]~H)↦(s2 ∈ ~H ↦(s0[.h](s1 ` s2))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n}","parent":[],"children":["hommval"]},{"name":"df-hodif","content":"Define the difference of two Hilbert space operators. Definition of [Beran] p. 111. (Contributed by NM, 9-Nov-2000.) (New usage is discouraged.)","origin":"axiom df-hodif(setvar s0, setvar s1, setvar s2) {\n  |- wceq(chod, cmpo(s0, s1, co(chba, cmap, chba), co(chba, cmap, chba), cmpt(s2, chba, co(cfv(cv(s0), cv(s2)), cmv, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n}","pretty":"axiom df-hodif(setvar s0, setvar s1, setvar s2) {\n  ⊢ -op =(s0 ∈(~H[↦]~H), s1 ∈(~H[↦]~H)↦(s2 ∈ ~H ↦((s0 ` s2)[-h](s1 ` s2))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n}","parent":[],"children":["hodmval"]},{"name":"df-hfsum","content":"Define the sum of two Hilbert space functionals. Definition of [Beran] p. 111. Note that unlike some authors, we define a functional as any function from ` ~H ` to ` CC ` , not just linear (or bounded linear) ones. (Contributed by NM, 23-May-2006.) (New usage is discouraged.)","origin":"axiom df-hfsum(setvar s0, setvar s1, setvar s2) {\n  |- wceq(chfs, cmpo(s0, s1, co(cc, cmap, chba), co(cc, cmap, chba), cmpt(s2, chba, co(cfv(cv(s0), cv(s2)), caddc, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n}","pretty":"axiom df-hfsum(setvar s0, setvar s1, setvar s2) {\n  ⊢ +fn =(s0 ∈(ℂ[↦]~H), s1 ∈(ℂ[↦]~H)↦(s2 ∈ ~H ↦((s0 ` s2)[+](s1 ` s2))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n}","parent":[],"children":["hfsmval"]},{"name":"df-hfmul","content":"Define the scalar product with a Hilbert space functional. Definition of [Beran] p. 111. (Contributed by NM, 23-May-2006.) (New usage is discouraged.)","origin":"axiom df-hfmul(setvar s0, setvar s1, setvar s2) {\n  |- wceq(chft, cmpo(s0, s1, cc, co(cc, cmap, chba), cmpt(s2, chba, co(cv(s0), cmul, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n}","pretty":"axiom df-hfmul(setvar s0, setvar s1, setvar s2) {\n  ⊢ .fn =(s0 ∈ ℂ, s1 ∈(ℂ[↦]~H)↦(s2 ∈ ~H ↦(s0[×](s1 ` s2))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n}","parent":[],"children":["hfmmval"]},{"name":"hosmval","content":"Value of the sum of two Hilbert space operators. (Contributed by NM, 9-Nov-2000.) (Revised by Mario Carneiro, 23-Aug-2014.) (New usage is discouraged.)","origin":"thm hosmval(setvar s0, class c0, class c1) {\n  |- wi(wa(wf(c0, chba, chba), wf(c1, chba, chba)), wceq(co(c0, chos, c1), cmpt(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(c1, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  syl2anbr(wf(c0, chba, chba), wf(c1, chba, chba), wceq(co(c0, chos, c1), cmpt(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(c1, cv(s0))))), wcel(c0, co(chba, cmap, chba)), wcel(c1, co(chba, cmap, chba)))\n  elmap(c0, chba, chba)\n  elmap(c1, chba, chba)\n  ovmpt2(hs0, hs1, c0, co(chba, cmap, chba), c1, co(chba, cmap, chba), chos, cmpt(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(c1, cv(s0)))), cmpt(s0, chba, co(cfv(cv(hs0), cv(s0)), cva, cfv(cv(hs1), cv(s0)))), cmpt(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, chba, co(cfv(cv(hs0), cv(s0)), cva, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), cva, cfv(cv(hs1), cv(s0))), wceq(cv(hs0), c0))\n  oveq1d(cfv(cv(hs0), cv(s0)), cva, cfv(cv(hs1), cv(s0)), cfv(c0, cv(s0)), wceq(cv(hs0), c0))\n  fveq1(cv(hs0), c0, cv(s0))\n  mpteq2dv(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), cva, cfv(c1, cv(s0))), wceq(cv(hs1), c1))\n  oveq2d(cfv(c0, cv(s0)), cva, cfv(cv(hs1), cv(s0)), cfv(c1, cv(s0)), wceq(cv(hs1), c1))\n  fveq1(cv(hs1), c1, cv(s0))\n  df-hosum(hs0, hs1, s0)\n  mptex(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(c1, cv(s0))))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(co(chba, cmap, chba))\n  diff.hs0.c(c1)\n  diff.hs0.c(cmpt(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(c1, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(co(chba, cmap, chba))\n  diff.hs1.c(c1)\n  diff.hs1.c(cmpt(s0, chba, co(cfv(c0, cv(s0)), cva, cfv(c1, cv(s0)))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","pretty":"thm hosmval(setvar s0, class c0, class c1) {\n  ⊢ (((c0 : ~H → ~H)∧(c1 : ~H → ~H))→(c0[+op]c1)=(s0 ∈ ~H ↦((c0 ` s0)[+h](c1 ` s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  syl2anbr((c0 : ~H → ~H), (c1 : ~H → ~H), (c0[+op]c1)=(s0 ∈ ~H ↦((c0 ` s0)[+h](c1 ` s0))), c0 ∈(~H[↦]~H), c1 ∈(~H[↦]~H))\n  elmap(c0, chba, chba)\n  elmap(c1, chba, chba)\n  ovmpt2(hs0, hs1, c0, (~H[↦]~H), c1, (~H[↦]~H), chos, (s0 ∈ ~H ↦((c0 ` s0)[+h](c1 ` s0))), (s0 ∈ ~H ↦((hs0 ` s0)[+h](hs1 ` s0))), (s0 ∈ ~H ↦((c0 ` s0)[+h](hs1 ` s0))))\n  mpteq2dv(s0, chba, ((hs0 ` s0)[+h](hs1 ` s0)), ((c0 ` s0)[+h](hs1 ` s0)), hs0 = c0)\n  oveq1d((hs0 ` s0), cva, (hs1 ` s0), (c0 ` s0), hs0 = c0)\n  fveq1(hs0, c0, s0)\n  mpteq2dv(s0, chba, ((c0 ` s0)[+h](hs1 ` s0)), ((c0 ` s0)[+h](c1 ` s0)), hs1 = c1)\n  oveq2d((c0 ` s0), cva, (hs1 ` s0), (c1 ` s0), hs1 = c1)\n  fveq1(hs1, c1, s0)\n  df-hosum(hs0, hs1, s0)\n  mptex(s0, chba, ((c0 ` s0)[+h](c1 ` s0)))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c((~H[↦]~H))\n  diff.hs0.c(c1)\n  diff.hs0.c((s0 ∈ ~H ↦((c0 ` s0)[+h](c1 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c((~H[↦]~H))\n  diff.hs1.c(c1)\n  diff.hs1.c((s0 ∈ ~H ↦((c0 ` s0)[+h](c1 ` s0))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","parent":["syl2anbr","elmap","ovmpt2","mpteq2dv","oveq1d","fveq1","oveq2d","df-hosum","mptex","ax-hilex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.chba.s"],"children":["hosval","hoaddcl"]},{"name":"hommval","content":"Value of the scalar product with a Hilbert space operator. (Contributed by NM, 20-Feb-2006.) (Revised by Mario Carneiro, 23-Aug-2014.) (New usage is discouraged.)","origin":"thm hommval(setvar s0, class c0, class c1) {\n  |- wi(wa(wcel(c0, cc), wf(c1, chba, chba)), wceq(co(c0, chot, c1), cmpt(s0, chba, co(c0, csm, cfv(c1, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  sylan2br(wcel(c0, cc), wf(c1, chba, chba), wceq(co(c0, chot, c1), cmpt(s0, chba, co(c0, csm, cfv(c1, cv(s0))))), wcel(c1, co(chba, cmap, chba)))\n  elmap(c1, chba, chba)\n  ovmpt2(hs0, hs1, c0, cc, c1, co(chba, cmap, chba), chot, cmpt(s0, chba, co(c0, csm, cfv(c1, cv(s0)))), cmpt(s0, chba, co(cv(hs0), csm, cfv(cv(hs1), cv(s0)))), cmpt(s0, chba, co(c0, csm, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, chba, co(cv(hs0), csm, cfv(cv(hs1), cv(s0))), co(c0, csm, cfv(cv(hs1), cv(s0))), wceq(cv(hs0), c0))\n  oveq1(cv(hs0), c0, csm, cfv(cv(hs1), cv(s0)))\n  mpteq2dv(s0, chba, co(c0, csm, cfv(cv(hs1), cv(s0))), co(c0, csm, cfv(c1, cv(s0))), wceq(cv(hs1), c1))\n  oveq2d(c0, csm, cfv(cv(hs1), cv(s0)), cfv(c1, cv(s0)), wceq(cv(hs1), c1))\n  fveq1(cv(hs1), c1, cv(s0))\n  df-homul(hs0, hs1, s0)\n  mptex(s0, chba, co(c0, csm, cfv(c1, cv(s0))))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(cc)\n  diff.hs0.c(c1)\n  diff.hs0.c(co(chba, cmap, chba))\n  diff.hs0.c(cmpt(s0, chba, co(c0, csm, cfv(c1, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(cc)\n  diff.hs1.c(c1)\n  diff.hs1.c(co(chba, cmap, chba))\n  diff.hs1.c(cmpt(s0, chba, co(c0, csm, cfv(c1, cv(s0)))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","pretty":"thm hommval(setvar s0, class c0, class c1) {\n  ⊢ ((c0 ∈ ℂ ∧(c1 : ~H → ~H))→(c0[.op]c1)=(s0 ∈ ~H ↦(c0[.h](c1 ` s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  sylan2br(c0 ∈ ℂ, (c1 : ~H → ~H), (c0[.op]c1)=(s0 ∈ ~H ↦(c0[.h](c1 ` s0))), c1 ∈(~H[↦]~H))\n  elmap(c1, chba, chba)\n  ovmpt2(hs0, hs1, c0, cc, c1, (~H[↦]~H), chot, (s0 ∈ ~H ↦(c0[.h](c1 ` s0))), (s0 ∈ ~H ↦(hs0[.h](hs1 ` s0))), (s0 ∈ ~H ↦(c0[.h](hs1 ` s0))))\n  mpteq2dv(s0, chba, (hs0[.h](hs1 ` s0)), (c0[.h](hs1 ` s0)), hs0 = c0)\n  oveq1(hs0, c0, csm, (hs1 ` s0))\n  mpteq2dv(s0, chba, (c0[.h](hs1 ` s0)), (c0[.h](c1 ` s0)), hs1 = c1)\n  oveq2d(c0, csm, (hs1 ` s0), (c1 ` s0), hs1 = c1)\n  fveq1(hs1, c1, s0)\n  df-homul(hs0, hs1, s0)\n  mptex(s0, chba, (c0[.h](c1 ` s0)))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(cc)\n  diff.hs0.c(c1)\n  diff.hs0.c((~H[↦]~H))\n  diff.hs0.c((s0 ∈ ~H ↦(c0[.h](c1 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c(cc)\n  diff.hs1.c(c1)\n  diff.hs1.c((~H[↦]~H))\n  diff.hs1.c((s0 ∈ ~H ↦(c0[.h](c1 ` s0))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","parent":["sylan2br","elmap","ovmpt2","mpteq2dv","oveq1","oveq2d","fveq1","df-homul","mptex","ax-hilex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.chba.s"],"children":["homval","homulcl"]},{"name":"hodmval","content":"Value of the difference of two Hilbert space operators. (Contributed by NM, 9-Nov-2000.) (Revised by Mario Carneiro, 23-Aug-2014.) (New usage is discouraged.)","origin":"thm hodmval(setvar s0, class c0, class c1) {\n  |- wi(wa(wf(c0, chba, chba), wf(c1, chba, chba)), wceq(co(c0, chod, c1), cmpt(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(c1, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  syl2anbr(wf(c0, chba, chba), wf(c1, chba, chba), wceq(co(c0, chod, c1), cmpt(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(c1, cv(s0))))), wcel(c0, co(chba, cmap, chba)), wcel(c1, co(chba, cmap, chba)))\n  elmap(c0, chba, chba)\n  elmap(c1, chba, chba)\n  ovmpt2(hs0, hs1, c0, co(chba, cmap, chba), c1, co(chba, cmap, chba), chod, cmpt(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(c1, cv(s0)))), cmpt(s0, chba, co(cfv(cv(hs0), cv(s0)), cmv, cfv(cv(hs1), cv(s0)))), cmpt(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, chba, co(cfv(cv(hs0), cv(s0)), cmv, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), cmv, cfv(cv(hs1), cv(s0))), wceq(cv(hs0), c0))\n  oveq1d(cfv(cv(hs0), cv(s0)), cmv, cfv(cv(hs1), cv(s0)), cfv(c0, cv(s0)), wceq(cv(hs0), c0))\n  fveq1(cv(hs0), c0, cv(s0))\n  mpteq2dv(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), cmv, cfv(c1, cv(s0))), wceq(cv(hs1), c1))\n  oveq2d(cfv(c0, cv(s0)), cmv, cfv(cv(hs1), cv(s0)), cfv(c1, cv(s0)), wceq(cv(hs1), c1))\n  fveq1(cv(hs1), c1, cv(s0))\n  df-hodif(hs0, hs1, s0)\n  mptex(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(c1, cv(s0))))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(co(chba, cmap, chba))\n  diff.hs0.c(c1)\n  diff.hs0.c(cmpt(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(c1, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(co(chba, cmap, chba))\n  diff.hs1.c(c1)\n  diff.hs1.c(cmpt(s0, chba, co(cfv(c0, cv(s0)), cmv, cfv(c1, cv(s0)))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","pretty":"thm hodmval(setvar s0, class c0, class c1) {\n  ⊢ (((c0 : ~H → ~H)∧(c1 : ~H → ~H))→(c0[-op]c1)=(s0 ∈ ~H ↦((c0 ` s0)[-h](c1 ` s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  syl2anbr((c0 : ~H → ~H), (c1 : ~H → ~H), (c0[-op]c1)=(s0 ∈ ~H ↦((c0 ` s0)[-h](c1 ` s0))), c0 ∈(~H[↦]~H), c1 ∈(~H[↦]~H))\n  elmap(c0, chba, chba)\n  elmap(c1, chba, chba)\n  ovmpt2(hs0, hs1, c0, (~H[↦]~H), c1, (~H[↦]~H), chod, (s0 ∈ ~H ↦((c0 ` s0)[-h](c1 ` s0))), (s0 ∈ ~H ↦((hs0 ` s0)[-h](hs1 ` s0))), (s0 ∈ ~H ↦((c0 ` s0)[-h](hs1 ` s0))))\n  mpteq2dv(s0, chba, ((hs0 ` s0)[-h](hs1 ` s0)), ((c0 ` s0)[-h](hs1 ` s0)), hs0 = c0)\n  oveq1d((hs0 ` s0), cmv, (hs1 ` s0), (c0 ` s0), hs0 = c0)\n  fveq1(hs0, c0, s0)\n  mpteq2dv(s0, chba, ((c0 ` s0)[-h](hs1 ` s0)), ((c0 ` s0)[-h](c1 ` s0)), hs1 = c1)\n  oveq2d((c0 ` s0), cmv, (hs1 ` s0), (c1 ` s0), hs1 = c1)\n  fveq1(hs1, c1, s0)\n  df-hodif(hs0, hs1, s0)\n  mptex(s0, chba, ((c0 ` s0)[-h](c1 ` s0)))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c((~H[↦]~H))\n  diff.hs0.c(c1)\n  diff.hs0.c((s0 ∈ ~H ↦((c0 ` s0)[-h](c1 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c((~H[↦]~H))\n  diff.hs1.c(c1)\n  diff.hs1.c((s0 ∈ ~H ↦((c0 ` s0)[-h](c1 ` s0))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","parent":["syl2anbr","elmap","ovmpt2","mpteq2dv","oveq1d","fveq1","oveq2d","df-hodif","mptex","ax-hilex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.chba.s"],"children":["hodval","hosubcli"]},{"name":"hfsmval","content":"Value of the sum of two Hilbert space functionals. (Contributed by NM, 23-May-2006.) (Revised by Mario Carneiro, 23-Aug-2014.) (New usage is discouraged.)","origin":"thm hfsmval(setvar s0, class c0, class c1) {\n  |- wi(wa(wf(c0, chba, cc), wf(c1, chba, cc)), wceq(co(c0, chfs, c1), cmpt(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(c1, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  syl2anbr(wf(c0, chba, cc), wf(c1, chba, cc), wceq(co(c0, chfs, c1), cmpt(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(c1, cv(s0))))), wcel(c0, co(cc, cmap, chba)), wcel(c1, co(cc, cmap, chba)))\n  elmap(c0, cc, chba)\n  elmap(c1, cc, chba)\n  cnex()\n  ovmpt2(hs0, hs1, c0, co(cc, cmap, chba), c1, co(cc, cmap, chba), chfs, cmpt(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(c1, cv(s0)))), cmpt(s0, chba, co(cfv(cv(hs0), cv(s0)), caddc, cfv(cv(hs1), cv(s0)))), cmpt(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, chba, co(cfv(cv(hs0), cv(s0)), caddc, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), caddc, cfv(cv(hs1), cv(s0))), wceq(cv(hs0), c0))\n  oveq1d(cfv(cv(hs0), cv(s0)), caddc, cfv(cv(hs1), cv(s0)), cfv(c0, cv(s0)), wceq(cv(hs0), c0))\n  fveq1(cv(hs0), c0, cv(s0))\n  mpteq2dv(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), caddc, cfv(c1, cv(s0))), wceq(cv(hs1), c1))\n  oveq2d(cfv(c0, cv(s0)), caddc, cfv(cv(hs1), cv(s0)), cfv(c1, cv(s0)), wceq(cv(hs1), c1))\n  fveq1(cv(hs1), c1, cv(s0))\n  df-hfsum(hs0, hs1, s0)\n  mptex(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(c1, cv(s0))))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(co(cc, cmap, chba))\n  diff.hs0.c(c1)\n  diff.hs0.c(cmpt(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(c1, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(co(cc, cmap, chba))\n  diff.hs1.c(c1)\n  diff.hs1.c(cmpt(s0, chba, co(cfv(c0, cv(s0)), caddc, cfv(c1, cv(s0)))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","pretty":"thm hfsmval(setvar s0, class c0, class c1) {\n  ⊢ (((c0 : ~H → ℂ)∧(c1 : ~H → ℂ))→(c0[+fn]c1)=(s0 ∈ ~H ↦((c0 ` s0)[+](c1 ` s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  syl2anbr((c0 : ~H → ℂ), (c1 : ~H → ℂ), (c0[+fn]c1)=(s0 ∈ ~H ↦((c0 ` s0)[+](c1 ` s0))), c0 ∈(ℂ[↦]~H), c1 ∈(ℂ[↦]~H))\n  elmap(c0, cc, chba)\n  elmap(c1, cc, chba)\n  cnex()\n  ovmpt2(hs0, hs1, c0, (ℂ[↦]~H), c1, (ℂ[↦]~H), chfs, (s0 ∈ ~H ↦((c0 ` s0)[+](c1 ` s0))), (s0 ∈ ~H ↦((hs0 ` s0)[+](hs1 ` s0))), (s0 ∈ ~H ↦((c0 ` s0)[+](hs1 ` s0))))\n  mpteq2dv(s0, chba, ((hs0 ` s0)[+](hs1 ` s0)), ((c0 ` s0)[+](hs1 ` s0)), hs0 = c0)\n  oveq1d((hs0 ` s0), caddc, (hs1 ` s0), (c0 ` s0), hs0 = c0)\n  fveq1(hs0, c0, s0)\n  mpteq2dv(s0, chba, ((c0 ` s0)[+](hs1 ` s0)), ((c0 ` s0)[+](c1 ` s0)), hs1 = c1)\n  oveq2d((c0 ` s0), caddc, (hs1 ` s0), (c1 ` s0), hs1 = c1)\n  fveq1(hs1, c1, s0)\n  df-hfsum(hs0, hs1, s0)\n  mptex(s0, chba, ((c0 ` s0)[+](c1 ` s0)))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c((ℂ[↦]~H))\n  diff.hs0.c(c1)\n  diff.hs0.c((s0 ∈ ~H ↦((c0 ` s0)[+](c1 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c((ℂ[↦]~H))\n  diff.hs1.c(c1)\n  diff.hs1.c((s0 ∈ ~H ↦((c0 ` s0)[+](c1 ` s0))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","parent":["syl2anbr","elmap","cnex","ovmpt2","mpteq2dv","oveq1d","fveq1","oveq2d","df-hfsum","mptex","ax-hilex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.chba.s"],"children":["hfsval"]},{"name":"hfmmval","content":"Value of the scalar product with a Hilbert space functional. (Contributed by NM, 23-May-2006.) (Revised by Mario Carneiro, 23-Aug-2014.) (New usage is discouraged.)","origin":"thm hfmmval(setvar s0, class c0, class c1) {\n  |- wi(wa(wcel(c0, cc), wf(c1, chba, cc)), wceq(co(c0, chft, c1), cmpt(s0, chba, co(c0, cmul, cfv(c1, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n} = {\n  sylan2br(wcel(c0, cc), wf(c1, chba, cc), wceq(co(c0, chft, c1), cmpt(s0, chba, co(c0, cmul, cfv(c1, cv(s0))))), wcel(c1, co(cc, cmap, chba)))\n  elmap(c1, cc, chba)\n  cnex()\n  ovmpt2(hs0, hs1, c0, cc, c1, co(cc, cmap, chba), chft, cmpt(s0, chba, co(c0, cmul, cfv(c1, cv(s0)))), cmpt(s0, chba, co(cv(hs0), cmul, cfv(cv(hs1), cv(s0)))), cmpt(s0, chba, co(c0, cmul, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, chba, co(cv(hs0), cmul, cfv(cv(hs1), cv(s0))), co(c0, cmul, cfv(cv(hs1), cv(s0))), wceq(cv(hs0), c0))\n  oveq1(cv(hs0), c0, cmul, cfv(cv(hs1), cv(s0)))\n  mpteq2dv(s0, chba, co(c0, cmul, cfv(cv(hs1), cv(s0))), co(c0, cmul, cfv(c1, cv(s0))), wceq(cv(hs1), c1))\n  oveq2d(c0, cmul, cfv(cv(hs1), cv(s0)), cfv(c1, cv(s0)), wceq(cv(hs1), c1))\n  fveq1(cv(hs1), c1, cv(s0))\n  df-hfmul(hs0, hs1, s0)\n  mptex(s0, chba, co(c0, cmul, cfv(c1, cv(s0))))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(cc)\n  diff.hs0.c(c1)\n  diff.hs0.c(co(cc, cmap, chba))\n  diff.hs0.c(cmpt(s0, chba, co(c0, cmul, cfv(c1, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(cc)\n  diff.hs1.c(c1)\n  diff.hs1.c(co(cc, cmap, chba))\n  diff.hs1.c(cmpt(s0, chba, co(c0, cmul, cfv(c1, cv(s0)))))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","pretty":"thm hfmmval(setvar s0, class c0, class c1) {\n  ⊢ ((c0 ∈ ℂ ∧(c1 : ~H → ℂ))→(c0[.fn]c1)=(s0 ∈ ~H ↦(c0[×](c1 ` s0))))\n  ⊣ d(s0, c0)\n  ⊣ d(s0, c1)\n} = {\n  sylan2br(c0 ∈ ℂ, (c1 : ~H → ℂ), (c0[.fn]c1)=(s0 ∈ ~H ↦(c0[×](c1 ` s0))), c1 ∈(ℂ[↦]~H))\n  elmap(c1, cc, chba)\n  cnex()\n  ovmpt2(hs0, hs1, c0, cc, c1, (ℂ[↦]~H), chft, (s0 ∈ ~H ↦(c0[×](c1 ` s0))), (s0 ∈ ~H ↦(hs0[×](hs1 ` s0))), (s0 ∈ ~H ↦(c0[×](hs1 ` s0))))\n  mpteq2dv(s0, chba, (hs0[×](hs1 ` s0)), (c0[×](hs1 ` s0)), hs0 = c0)\n  oveq1(hs0, c0, cmul, (hs1 ` s0))\n  mpteq2dv(s0, chba, (c0[×](hs1 ` s0)), (c0[×](c1 ` s0)), hs1 = c1)\n  oveq2d(c0, cmul, (hs1 ` s0), (c1 ` s0), hs1 = c1)\n  fveq1(hs1, c1, s0)\n  df-hfmul(hs0, hs1, s0)\n  mptex(s0, chba, (c0[×](c1 ` s0)))\n  ax-hilex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(cc)\n  diff.hs0.c(c1)\n  diff.hs0.c((ℂ[↦]~H))\n  diff.hs0.c((s0 ∈ ~H ↦(c0[×](c1 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c(cc)\n  diff.hs1.c(c1)\n  diff.hs1.c((ℂ[↦]~H))\n  diff.hs1.c((s0 ∈ ~H ↦(c0[×](c1 ` s0))))\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c1)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.chba.s(s0)\n}","parent":["sylan2br","elmap","cnex","ovmpt2","mpteq2dv","oveq1","oveq2d","fveq1","df-hfmul","mptex","ax-hilex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.chba.s"],"children":["hfmval","brafnmul","kbass2"]},{"name":"hosval","content":"Value of the sum of two Hilbert space operators. (Contributed by NM, 10-Nov-2000.) (Revised by Mario Carneiro, 16-Nov-2013.) (New usage is discouraged.)","origin":"thm hosval(class c0, class c1, class c2) {\n  |- wi(w3a(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba)), wceq(cfv(co(c0, chos, c1), c2), co(cfv(c0, c2), cva, cfv(c1, c2))))\n} = {\n  3impa(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba), wceq(cfv(co(c0, chos, c1), c2), co(cfv(c0, c2), cva, cfv(c1, c2))))\n  sylan9eq(cfv(co(c0, chos, c1), c2), co(cfv(c0, c2), cva, cfv(c1, c2)), cfv(cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cva, cfv(c1, cv(hs0)))), c2), wa(wf(c0, chba, chba), wf(c1, chba, chba)), wcel(c2, chba))\n  fveq1d(co(c0, chos, c1), c2, cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cva, cfv(c1, cv(hs0)))), wa(wf(c0, chba, chba), wf(c1, chba, chba)))\n  hosmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cva, cfv(c1, cv(hs0)))), co(cfv(c0, c2), cva, cfv(c1, c2)), co(cfv(c0, cv(hs0)), cva, cfv(c1, cv(hs0))))\n  oveq12d(cfv(c0, cv(hs0)), cva, cfv(c1, cv(hs0)), cfv(c0, c2), cfv(c1, c2), wceq(cv(hs0), c2))\n  fveq2(cv(hs0), c2, c0)\n  fveq2(cv(hs0), c2, c1)\n  eqid(cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cva, cfv(c1, cv(hs0)))))\n  ovex(cfv(c0, c2), cva, cfv(c1, c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(co(cfv(c0, c2), cva, cfv(c1, c2)))\n}","pretty":"thm hosval(class c0, class c1, class c2) {\n  ⊢ (((c0 : ~H → ~H)∧(c1 : ~H → ~H)∧ c2 ∈ ~H)→((c0[+op]c1)` c2)=((c0 ` c2)[+h](c1 ` c2)))\n} = {\n  3impa((c0 : ~H → ~H), (c1 : ~H → ~H), c2 ∈ ~H, ((c0[+op]c1)` c2)=((c0 ` c2)[+h](c1 ` c2)))\n  sylan9eq(((c0[+op]c1)` c2), ((c0 ` c2)[+h](c1 ` c2)), ((hs0 ∈ ~H ↦((c0 ` hs0)[+h](c1 ` hs0)))` c2), ((c0 : ~H → ~H)∧(c1 : ~H → ~H)), c2 ∈ ~H)\n  fveq1d((c0[+op]c1), c2, (hs0 ∈ ~H ↦((c0 ` hs0)[+h](c1 ` hs0))), ((c0 : ~H → ~H)∧(c1 : ~H → ~H)))\n  hosmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, (hs0 ∈ ~H ↦((c0 ` hs0)[+h](c1 ` hs0))), ((c0 ` c2)[+h](c1 ` c2)), ((c0 ` hs0)[+h](c1 ` hs0)))\n  oveq12d((c0 ` hs0), cva, (c1 ` hs0), (c0 ` c2), (c1 ` c2), hs0 = c2)\n  fveq2(hs0, c2, c0)\n  fveq2(hs0, c2, c1)\n  eqid((hs0 ∈ ~H ↦((c0 ` hs0)[+h](c1 ` hs0))))\n  ovex((c0 ` c2), cva, (c1 ` c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(((c0 ` c2)[+h](c1 ` c2)))\n}","parent":["3impa","sylan9eq","fveq1d","hosmval","fvmpt","oveq12d","fveq2","eqid","ovex","diff.hs0.c"],"children":["hoscl","hoaddcomi","hodsi","hoaddassi","hocadddiri","hoaddid1i","honegsubi","hoadddi","hoadddir","lnophsi","hmops","adjadd","nmoptrii","leopadd","pjsdii","pjscji","pjtoi"]},{"name":"homval","content":"Value of the scalar product with a Hilbert space operator. (Contributed by NM, 20-Feb-2006.) (Revised by Mario Carneiro, 16-Nov-2013.) (New usage is discouraged.)","origin":"thm homval(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cc), wf(c1, chba, chba), wcel(c2, chba)), wceq(cfv(co(c0, chot, c1), c2), co(c0, csm, cfv(c1, c2))))\n} = {\n  3impa(wcel(c0, cc), wf(c1, chba, chba), wcel(c2, chba), wceq(cfv(co(c0, chot, c1), c2), co(c0, csm, cfv(c1, c2))))\n  sylan9eq(cfv(co(c0, chot, c1), c2), co(c0, csm, cfv(c1, c2)), cfv(cmpt(hs0, chba, co(c0, csm, cfv(c1, cv(hs0)))), c2), wa(wcel(c0, cc), wf(c1, chba, chba)), wcel(c2, chba))\n  fveq1d(co(c0, chot, c1), c2, cmpt(hs0, chba, co(c0, csm, cfv(c1, cv(hs0)))), wa(wcel(c0, cc), wf(c1, chba, chba)))\n  hommval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, cmpt(hs0, chba, co(c0, csm, cfv(c1, cv(hs0)))), co(c0, csm, cfv(c1, c2)), co(c0, csm, cfv(c1, cv(hs0))))\n  oveq2d(c0, csm, cfv(c1, cv(hs0)), cfv(c1, c2), wceq(cv(hs0), c2))\n  fveq2(cv(hs0), c2, c1)\n  eqid(cmpt(hs0, chba, co(c0, csm, cfv(c1, cv(hs0)))))\n  ovex(c0, csm, cfv(c1, c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(co(c0, csm, cfv(c1, c2)))\n}","pretty":"thm homval(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℂ ∧(c1 : ~H → ~H)∧ c2 ∈ ~H)→((c0[.op]c1)` c2)=(c0[.h](c1 ` c2)))\n} = {\n  3impa(c0 ∈ ℂ, (c1 : ~H → ~H), c2 ∈ ~H, ((c0[.op]c1)` c2)=(c0[.h](c1 ` c2)))\n  sylan9eq(((c0[.op]c1)` c2), (c0[.h](c1 ` c2)), ((hs0 ∈ ~H ↦(c0[.h](c1 ` hs0)))` c2), (c0 ∈ ℂ ∧(c1 : ~H → ~H)), c2 ∈ ~H)\n  fveq1d((c0[.op]c1), c2, (hs0 ∈ ~H ↦(c0[.h](c1 ` hs0))), (c0 ∈ ℂ ∧(c1 : ~H → ~H)))\n  hommval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, (hs0 ∈ ~H ↦(c0[.h](c1 ` hs0))), (c0[.h](c1 ` c2)), (c0[.h](c1 ` hs0)))\n  oveq2d(c0, csm, (c1 ` hs0), (c1 ` c2), hs0 = c2)\n  fveq2(hs0, c2, c1)\n  eqid((hs0 ∈ ~H ↦(c0[.h](c1 ` hs0))))\n  ovex(c0, csm, (c1 ` c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c((c0[.h](c1 ` c2)))\n}","parent":["3impa","sylan9eq","fveq1d","hommval","fvmpt","oveq2d","fveq2","eqid","ovex","diff.hs0.c"],"children":["homcl","honegsubi","homulid2","homco1","homulass","hoadddi","hoadddir","nmopnegi","homco2","lnopmi","hmopm","nmophmi","adjmul","leopmuli","leopnmid"]},{"name":"hodval","content":"Value of the difference of two Hilbert space operators. (Contributed by NM, 10-Nov-2000.) (Revised by Mario Carneiro, 16-Nov-2013.) (New usage is discouraged.)","origin":"thm hodval(class c0, class c1, class c2) {\n  |- wi(w3a(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba)), wceq(cfv(co(c0, chod, c1), c2), co(cfv(c0, c2), cmv, cfv(c1, c2))))\n} = {\n  3impa(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba), wceq(cfv(co(c0, chod, c1), c2), co(cfv(c0, c2), cmv, cfv(c1, c2))))\n  sylan9eq(cfv(co(c0, chod, c1), c2), co(cfv(c0, c2), cmv, cfv(c1, c2)), cfv(cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cmv, cfv(c1, cv(hs0)))), c2), wa(wf(c0, chba, chba), wf(c1, chba, chba)), wcel(c2, chba))\n  fveq1d(co(c0, chod, c1), c2, cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cmv, cfv(c1, cv(hs0)))), wa(wf(c0, chba, chba), wf(c1, chba, chba)))\n  hodmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cmv, cfv(c1, cv(hs0)))), co(cfv(c0, c2), cmv, cfv(c1, c2)), co(cfv(c0, cv(hs0)), cmv, cfv(c1, cv(hs0))))\n  oveq12d(cfv(c0, cv(hs0)), cmv, cfv(c1, cv(hs0)), cfv(c0, c2), cfv(c1, c2), wceq(cv(hs0), c2))\n  fveq2(cv(hs0), c2, c0)\n  fveq2(cv(hs0), c2, c1)\n  eqid(cmpt(hs0, chba, co(cfv(c0, cv(hs0)), cmv, cfv(c1, cv(hs0)))))\n  ovex(cfv(c0, c2), cmv, cfv(c1, c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(co(cfv(c0, c2), cmv, cfv(c1, c2)))\n}","pretty":"thm hodval(class c0, class c1, class c2) {\n  ⊢ (((c0 : ~H → ~H)∧(c1 : ~H → ~H)∧ c2 ∈ ~H)→((c0[-op]c1)` c2)=((c0 ` c2)[-h](c1 ` c2)))\n} = {\n  3impa((c0 : ~H → ~H), (c1 : ~H → ~H), c2 ∈ ~H, ((c0[-op]c1)` c2)=((c0 ` c2)[-h](c1 ` c2)))\n  sylan9eq(((c0[-op]c1)` c2), ((c0 ` c2)[-h](c1 ` c2)), ((hs0 ∈ ~H ↦((c0 ` hs0)[-h](c1 ` hs0)))` c2), ((c0 : ~H → ~H)∧(c1 : ~H → ~H)), c2 ∈ ~H)\n  fveq1d((c0[-op]c1), c2, (hs0 ∈ ~H ↦((c0 ` hs0)[-h](c1 ` hs0))), ((c0 : ~H → ~H)∧(c1 : ~H → ~H)))\n  hodmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, (hs0 ∈ ~H ↦((c0 ` hs0)[-h](c1 ` hs0))), ((c0 ` c2)[-h](c1 ` c2)), ((c0 ` hs0)[-h](c1 ` hs0)))\n  oveq12d((c0 ` hs0), cmv, (c1 ` hs0), (c0 ` c2), (c1 ` c2), hs0 = c2)\n  fveq2(hs0, c2, c0)\n  fveq2(hs0, c2, c1)\n  eqid((hs0 ∈ ~H ↦((c0 ` hs0)[-h](c1 ` hs0))))\n  ovex((c0 ` c2), cmv, (c1 ` c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(((c0 ` c2)[-h](c1 ` c2)))\n}","parent":["3impa","sylan9eq","fveq1d","hodmval","fvmpt","oveq12d","fveq2","eqid","ovex","diff.hs0.c"],"children":["hodcl","hodsi","hocsubdiri","honegsubi","hoddii","lnopeqi","leop2","pjddii","pjssposi","pjssdif2i"]},{"name":"hfsval","content":"Value of the sum of two Hilbert space functionals. (Contributed by NM, 23-May-2006.) (Revised by Mario Carneiro, 16-Nov-2013.) (New usage is discouraged.)","origin":"thm hfsval(class c0, class c1, class c2) {\n  |- wi(w3a(wf(c0, chba, cc), wf(c1, chba, cc), wcel(c2, chba)), wceq(cfv(co(c0, chfs, c1), c2), co(cfv(c0, c2), caddc, cfv(c1, c2))))\n} = {\n  3impa(wf(c0, chba, cc), wf(c1, chba, cc), wcel(c2, chba), wceq(cfv(co(c0, chfs, c1), c2), co(cfv(c0, c2), caddc, cfv(c1, c2))))\n  sylan9eq(cfv(co(c0, chfs, c1), c2), co(cfv(c0, c2), caddc, cfv(c1, c2)), cfv(cmpt(hs0, chba, co(cfv(c0, cv(hs0)), caddc, cfv(c1, cv(hs0)))), c2), wa(wf(c0, chba, cc), wf(c1, chba, cc)), wcel(c2, chba))\n  fveq1d(co(c0, chfs, c1), c2, cmpt(hs0, chba, co(cfv(c0, cv(hs0)), caddc, cfv(c1, cv(hs0)))), wa(wf(c0, chba, cc), wf(c1, chba, cc)))\n  hfsmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, cmpt(hs0, chba, co(cfv(c0, cv(hs0)), caddc, cfv(c1, cv(hs0)))), co(cfv(c0, c2), caddc, cfv(c1, c2)), co(cfv(c0, cv(hs0)), caddc, cfv(c1, cv(hs0))))\n  oveq12d(cfv(c0, cv(hs0)), caddc, cfv(c1, cv(hs0)), cfv(c0, c2), cfv(c1, c2), wceq(cv(hs0), c2))\n  fveq2(cv(hs0), c2, c0)\n  fveq2(cv(hs0), c2, c1)\n  eqid(cmpt(hs0, chba, co(cfv(c0, cv(hs0)), caddc, cfv(c1, cv(hs0)))))\n  ovex(cfv(c0, c2), caddc, cfv(c1, c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(co(cfv(c0, c2), caddc, cfv(c1, c2)))\n}","pretty":"thm hfsval(class c0, class c1, class c2) {\n  ⊢ (((c0 : ~H → ℂ)∧(c1 : ~H → ℂ)∧ c2 ∈ ~H)→((c0[+fn]c1)` c2)=((c0 ` c2)[+](c1 ` c2)))\n} = {\n  3impa((c0 : ~H → ℂ), (c1 : ~H → ℂ), c2 ∈ ~H, ((c0[+fn]c1)` c2)=((c0 ` c2)[+](c1 ` c2)))\n  sylan9eq(((c0[+fn]c1)` c2), ((c0 ` c2)[+](c1 ` c2)), ((hs0 ∈ ~H ↦((c0 ` hs0)[+](c1 ` hs0)))` c2), ((c0 : ~H → ℂ)∧(c1 : ~H → ℂ)), c2 ∈ ~H)\n  fveq1d((c0[+fn]c1), c2, (hs0 ∈ ~H ↦((c0 ` hs0)[+](c1 ` hs0))), ((c0 : ~H → ℂ)∧(c1 : ~H → ℂ)))\n  hfsmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, (hs0 ∈ ~H ↦((c0 ` hs0)[+](c1 ` hs0))), ((c0 ` c2)[+](c1 ` c2)), ((c0 ` hs0)[+](c1 ` hs0)))\n  oveq12d((c0 ` hs0), caddc, (c1 ` hs0), (c0 ` c2), (c1 ` c2), hs0 = c2)\n  fveq2(hs0, c2, c0)\n  fveq2(hs0, c2, c1)\n  eqid((hs0 ∈ ~H ↦((c0 ` hs0)[+](c1 ` hs0))))\n  ovex((c0 ` c2), caddc, (c1 ` c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(((c0 ` c2)[+](c1 ` c2)))\n}","parent":["3impa","sylan9eq","fveq1d","hfsmval","fvmpt","oveq12d","fveq2","eqid","ovex","diff.hs0.c"],"children":[]},{"name":"hfmval","content":"Value of the scalar product with a Hilbert space functional. (Contributed by NM, 23-May-2006.) (Revised by Mario Carneiro, 16-Nov-2013.) (New usage is discouraged.)","origin":"thm hfmval(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cc), wf(c1, chba, cc), wcel(c2, chba)), wceq(cfv(co(c0, chft, c1), c2), co(c0, cmul, cfv(c1, c2))))\n} = {\n  3impa(wcel(c0, cc), wf(c1, chba, cc), wcel(c2, chba), wceq(cfv(co(c0, chft, c1), c2), co(c0, cmul, cfv(c1, c2))))\n  sylan9eq(cfv(co(c0, chft, c1), c2), co(c0, cmul, cfv(c1, c2)), cfv(cmpt(hs0, chba, co(c0, cmul, cfv(c1, cv(hs0)))), c2), wa(wcel(c0, cc), wf(c1, chba, cc)), wcel(c2, chba))\n  fveq1d(co(c0, chft, c1), c2, cmpt(hs0, chba, co(c0, cmul, cfv(c1, cv(hs0)))), wa(wcel(c0, cc), wf(c1, chba, cc)))\n  hfmmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, cmpt(hs0, chba, co(c0, cmul, cfv(c1, cv(hs0)))), co(c0, cmul, cfv(c1, c2)), co(c0, cmul, cfv(c1, cv(hs0))))\n  oveq2d(c0, cmul, cfv(c1, cv(hs0)), cfv(c1, c2), wceq(cv(hs0), c2))\n  fveq2(cv(hs0), c2, c1)\n  eqid(cmpt(hs0, chba, co(c0, cmul, cfv(c1, cv(hs0)))))\n  ovex(c0, cmul, cfv(c1, c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c(co(c0, cmul, cfv(c1, c2)))\n}","pretty":"thm hfmval(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℂ ∧(c1 : ~H → ℂ)∧ c2 ∈ ~H)→((c0[.fn]c1)` c2)=(c0[×](c1 ` c2)))\n} = {\n  3impa(c0 ∈ ℂ, (c1 : ~H → ℂ), c2 ∈ ~H, ((c0[.fn]c1)` c2)=(c0[×](c1 ` c2)))\n  sylan9eq(((c0[.fn]c1)` c2), (c0[×](c1 ` c2)), ((hs0 ∈ ~H ↦(c0[×](c1 ` hs0)))` c2), (c0 ∈ ℂ ∧(c1 : ~H → ℂ)), c2 ∈ ~H)\n  fveq1d((c0[.fn]c1), c2, (hs0 ∈ ~H ↦(c0[×](c1 ` hs0))), (c0 ∈ ℂ ∧(c1 : ~H → ℂ)))\n  hfmmval(hs0, c0, c1)\n  fvmpt(hs0, c2, chba, (hs0 ∈ ~H ↦(c0[×](c1 ` hs0))), (c0[×](c1 ` c2)), (c0[×](c1 ` hs0)))\n  oveq2d(c0, cmul, (c1 ` hs0), (c1 ` c2), hs0 = c2)\n  fveq2(hs0, c2, c1)\n  eqid((hs0 ∈ ~H ↦(c0[×](c1 ` hs0))))\n  ovex(c0, cmul, (c1 ` c2))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.hs0.c(chba)\n  diff.hs0.c((c0[×](c1 ` c2)))\n}","parent":["3impa","sylan9eq","fveq1d","hfmmval","fvmpt","oveq2d","fveq2","eqid","ovex","diff.hs0.c"],"children":["kbass2","kbass3"]},{"name":"hoscl","content":"Closure of the sum of two Hilbert space operators. (Contributed by NM, 12-Nov-2000.) (New usage is discouraged.)","origin":"thm hoscl(class c0, class c1, class c2) {\n  |- wi(wa(wa(wf(c0, chba, chba), wf(c1, chba, chba)), wcel(c2, chba)), wcel(cfv(co(c0, chos, c1), c2), chba))\n} = {\n  eqeltrd(cfv(co(c0, chos, c1), c2), chba, co(cfv(c0, c2), cva, cfv(c1, c2)), wa(wa(wf(c0, chba, chba), wf(c1, chba, chba)), wcel(c2, chba)))\n  3expa(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba), wceq(cfv(co(c0, chos, c1), c2), co(cfv(c0, c2), cva, cfv(c1, c2))))\n  hosval(c0, c1, c2)\n  syl(wa(wa(wf(c0, chba, chba), wf(c1, chba, chba)), wcel(c2, chba)), wcel(co(cfv(c0, c2), cva, cfv(c1, c2)), chba), wa(wcel(cfv(c0, c2), chba), wcel(cfv(c1, c2), chba)))\n  anandirs(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba), wa(wcel(cfv(c0, c2), chba), wcel(cfv(c1, c2), chba)))\n  anim12i(wa(wf(c0, chba, chba), wcel(c2, chba)), wa(wf(c1, chba, chba), wcel(c2, chba)), wcel(cfv(c0, c2), chba), wcel(cfv(c1, c2), chba))\n  ffvelrn(c0, chba, chba, c2)\n  ffvelrn(c1, chba, chba, c2)\n  hvaddcl(cfv(c0, c2), cfv(c1, c2))\n}","pretty":"thm hoscl(class c0, class c1, class c2) {\n  ⊢ ((((c0 : ~H → ~H)∧(c1 : ~H → ~H))∧ c2 ∈ ~H)→((c0[+op]c1)` c2)∈ ~H)\n} = {\n  eqeltrd(((c0[+op]c1)` c2), chba, ((c0 ` c2)[+h](c1 ` c2)), (((c0 : ~H → ~H)∧(c1 : ~H → ~H))∧ c2 ∈ ~H))\n  3expa((c0 : ~H → ~H), (c1 : ~H → ~H), c2 ∈ ~H, ((c0[+op]c1)` c2)=((c0 ` c2)[+h](c1 ` c2)))\n  hosval(c0, c1, c2)\n  syl((((c0 : ~H → ~H)∧(c1 : ~H → ~H))∧ c2 ∈ ~H), ((c0 ` c2)[+h](c1 ` c2))∈ ~H, ((c0 ` c2)∈ ~H ∧(c1 ` c2)∈ ~H))\n  anandirs((c0 : ~H → ~H), (c1 : ~H → ~H), c2 ∈ ~H, ((c0 ` c2)∈ ~H ∧(c1 ` c2)∈ ~H))\n  anim12i(((c0 : ~H → ~H)∧ c2 ∈ ~H), ((c1 : ~H → ~H)∧ c2 ∈ ~H), (c0 ` c2)∈ ~H, (c1 ` c2)∈ ~H)\n  ffvelrn(c0, chba, chba, c2)\n  ffvelrn(c1, chba, chba, c2)\n  hvaddcl((c0 ` c2), (c1 ` c2))\n}","parent":["eqeltrd","3expa","hosval","syl","anandirs","anim12i","ffvelrn","hvaddcl"],"children":["hoscli"]},{"name":"homcl","content":"Closure of the scalar product of a Hilbert space operator. (Contributed by NM, 20-Feb-2006.) (New usage is discouraged.)","origin":"thm homcl(class c0, class c1, class c2) {\n  |- wi(w3a(wcel(c0, cc), wf(c1, chba, chba), wcel(c2, chba)), wcel(cfv(co(c0, chot, c1), c2), chba))\n} = {\n  eqeltrd(cfv(co(c0, chot, c1), c2), chba, co(c0, csm, cfv(c1, c2)), w3a(wcel(c0, cc), wf(c1, chba, chba), wcel(c2, chba)))\n  homval(c0, c1, c2)\n  syl(w3a(wcel(c0, cc), wf(c1, chba, chba), wcel(c2, chba)), wcel(co(c0, csm, cfv(c1, c2)), chba), wa(wcel(c0, cc), wcel(cfv(c1, c2), chba)))\n  3impb(wcel(c0, cc), wf(c1, chba, chba), wcel(c2, chba), wa(wcel(c0, cc), wcel(cfv(c1, c2), chba)))\n  anim2i(wcel(c0, cc), wa(wf(c1, chba, chba), wcel(c2, chba)), wcel(cfv(c1, c2), chba))\n  ffvelrn(c1, chba, chba, c2)\n  hvmulcl(c0, cfv(c1, c2))\n}","pretty":"thm homcl(class c0, class c1, class c2) {\n  ⊢ ((c0 ∈ ℂ ∧(c1 : ~H → ~H)∧ c2 ∈ ~H)→((c0[.op]c1)` c2)∈ ~H)\n} = {\n  eqeltrd(((c0[.op]c1)` c2), chba, (c0[.h](c1 ` c2)), (c0 ∈ ℂ ∧(c1 : ~H → ~H)∧ c2 ∈ ~H))\n  homval(c0, c1, c2)\n  syl((c0 ∈ ℂ ∧(c1 : ~H → ~H)∧ c2 ∈ ~H), (c0[.h](c1 ` c2))∈ ~H, (c0 ∈ ℂ ∧(c1 ` c2)∈ ~H))\n  3impb(c0 ∈ ℂ, (c1 : ~H → ~H), c2 ∈ ~H, (c0 ∈ ℂ ∧(c1 ` c2)∈ ~H))\n  anim2i(c0 ∈ ℂ, ((c1 : ~H → ~H)∧ c2 ∈ ~H), (c1 ` c2)∈ ~H)\n  ffvelrn(c1, chba, chba, c2)\n  hvmulcl(c0, (c1 ` c2))\n}","parent":["eqeltrd","homval","syl","3impb","anim2i","ffvelrn","hvmulcl"],"children":[]},{"name":"hodcl","content":"Closure of the difference of two Hilbert space operators. (Contributed by NM, 15-Nov-2002.) (New usage is discouraged.)","origin":"thm hodcl(class c0, class c1, class c2) {\n  |- wi(wa(wa(wf(c0, chba, chba), wf(c1, chba, chba)), wcel(c2, chba)), wcel(cfv(co(c0, chod, c1), c2), chba))\n} = {\n  3expa(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba), wcel(cfv(co(c0, chod, c1), c2), chba))\n  eqeltrd(cfv(co(c0, chod, c1), c2), chba, co(cfv(c0, c2), cmv, cfv(c1, c2)), w3a(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba)))\n  hodval(c0, c1, c2)\n  syl2anc(w3a(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba)), wcel(co(cfv(c0, c2), cmv, cfv(c1, c2)), chba), wcel(cfv(c0, c2), chba), wcel(cfv(c1, c2), chba))\n  3adant2(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba), wcel(cfv(c0, c2), chba))\n  ffvelrn(c0, chba, chba, c2)\n  3adant1(wf(c0, chba, chba), wf(c1, chba, chba), wcel(c2, chba), wcel(cfv(c1, c2), chba))\n  ffvelrn(c1, chba, chba, c2)\n  hvsubcl(cfv(c0, c2), cfv(c1, c2))\n}","pretty":"thm hodcl(class c0, class c1, class c2) {\n  ⊢ ((((c0 : ~H → ~H)∧(c1 : ~H → ~H))∧ c2 ∈ ~H)→((c0[-op]c1)` c2)∈ ~H)\n} = {\n  3expa((c0 : ~H → ~H), (c1 : ~H → ~H), c2 ∈ ~H, ((c0[-op]c1)` c2)∈ ~H)\n  eqeltrd(((c0[-op]c1)` c2), chba, ((c0 ` c2)[-h](c1 ` c2)), ((c0 : ~H → ~H)∧(c1 : ~H → ~H)∧ c2 ∈ ~H))\n  hodval(c0, c1, c2)\n  syl2anc(((c0 : ~H → ~H)∧(c1 : ~H → ~H)∧ c2 ∈ ~H), ((c0 ` c2)[-h](c1 ` c2))∈ ~H, (c0 ` c2)∈ ~H, (c1 ` c2)∈ ~H)\n  3adant2((c0 : ~H → ~H), (c1 : ~H → ~H), c2 ∈ ~H, (c0 ` c2)∈ ~H)\n  ffvelrn(c0, chba, chba, c2)\n  3adant1((c0 : ~H → ~H), (c1 : ~H → ~H), c2 ∈ ~H, (c1 ` c2)∈ ~H)\n  ffvelrn(c1, chba, chba, c2)\n  hvsubcl((c0 ` c2), (c1 ` c2))\n}","parent":["3expa","eqeltrd","hodval","syl2anc","3adant2","ffvelrn","3adant1","hvsubcl"],"children":["hodcli"]}]}