{"index":1150,"title":"Nonfreeness","content":"","blocks":[{"name":"wnnf","content":"Syntax for the nonfreeness quantifier.","origin":"prop wff wnnf(setvar s0, wff w0) { F/(s0, w0) }","pretty":"","parent":[],"children":[]},{"name":"diff.wnnf.s","content":"","origin":"axiom diff.wnnf.s(setvar sBase, setvar s0, wff w0) {\n  |- diffsw(sBase, wnnf(s0, w0))\n  -| diffss(sBase, s0)\n  -| diffsw(sBase, w0)\n}","pretty":"axiom diff.wnnf.s(setvar sBase, setvar s0, wff w0) {\n  ⊢ d(sBase, F/(s0, w0))\n  ⊣ d(sBase, s0)\n  ⊣ d(sBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wnnf.c","content":"","origin":"axiom diff.wnnf.c(class cBase, setvar s0, wff w0) {\n  |- diffcw(cBase, wnnf(s0, w0))\n  -| diffsc(s0, cBase)\n  -| diffcw(cBase, w0)\n}","pretty":"axiom diff.wnnf.c(class cBase, setvar s0, wff w0) {\n  ⊢ d(cBase, F/(s0, w0))\n  ⊣ d(s0, cBase)\n  ⊣ d(cBase, w0)\n}","parent":[],"children":[]},{"name":"diff.wnnf.w","content":"","origin":"axiom diff.wnnf.w(wff wBase, setvar s0, wff w0) {\n  |- diffww(wBase, wnnf(s0, w0))\n  -| diffsw(s0, wBase)\n  -| diffww(wBase, w0)\n}","pretty":"axiom diff.wnnf.w(wff wBase, setvar s0, wff w0) {\n  ⊢ d(wBase, F/(s0, w0))\n  ⊣ d(s0, wBase)\n  ⊣ d(wBase, w0)\n}","parent":[],"children":[]},{"name":"df-bj-nnf","content":"Definition of the nonfreeness quantifier. Compared with ~ df-nf , the present definition is stricter on minimal propositional calculus ( ~ bj-nnfnfTEMP ) and equivalent on FOL ( ~ bj-nfnnfTEMP ). While being stricter, it still holds for non-occurring variables ( ~ bj-nnfv ), which is the basic requirement for this quantifier. In particular, it translates more closely the associated disjointness condition. Since the nonfreeness quantifier is a means to translate a disjointness condition from the metalogic to the logic, it seems preferable. Also, since nonfreeness is mainly used as a hypothesis, this definition would allow more theorems, notably the 19.xx theorems, to be proved from the core axioms, without needing a 19.xxv variant. One can devise infinitely many definitions increasingly close to the non-occurring condition, like ` ( ( E. x ph -> ph ) /\\ ( ph -> A. x ph ) ) /\\ ` ` A. x ( ( E. x ph -> ph ) /\\ ( ph -> A. x ph ) ) /\\ A. x A. x ` ... and each stronger definition would permit more theorems to be proved from the core axioms. A reasonable rule seems to be to stop before nested quantifiers appear (since they typically require ~ ax-10 to work with). (On the other hand, going one more step would allow to prove virtually all the theorems we currently have...). (Contributed by BJ, 28-Jul-2023.)","origin":"axiom df-bj-nnf(setvar s0, wff w0) {\n  |- wb(wnnf(s0, w0), wa(wi(wex(s0, w0), w0), wi(w0, wal(s0, w0))))\n}","pretty":"axiom df-bj-nnf(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)↔((∃(s0, w0)→ w0)∧(w0 → ∀(s0, w0))))\n}","parent":[],"children":["bj-nnf1","bj-nnf2","bj-nnftht","bj-nnfnt","bj-nnfv","bj-dfnnf2","bj-nnfa1","bj-nnfe1","bj-nnfalt","bj-nnfext"]},{"name":"bj-nnf1","content":"A consequence of nonfreeness. (Contributed by BJ, 28-Jul-2023.)","origin":"thm bj-nnf1(setvar s0, wff w0) {\n  |- wi(wnnf(s0, w0), wi(w0, wal(s0, w0)))\n} = {\n  simprbi(wnnf(s0, w0), wi(w0, wal(s0, w0)), wi(wex(s0, w0), w0))\n  df-bj-nnf(s0, w0)\n}","pretty":"thm bj-nnf1(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)→(w0 → ∀(s0, w0)))\n} = {\n  simprbi(F/(s0, w0), (w0 → ∀(s0, w0)), (∃(s0, w0)→ w0))\n  df-bj-nnf(s0, w0)\n}","parent":["simprbi","df-bj-nnf"],"children":["bj-nnf3"]},{"name":"bj-nnf2","content":"A consequence of nonfreeness. (Contributed by BJ, 28-Jul-2023.)","origin":"thm bj-nnf2(setvar s0, wff w0) {\n  |- wi(wnnf(s0, w0), wi(wex(s0, w0), w0))\n} = {\n  simplbi(wnnf(s0, w0), wi(wex(s0, w0), w0), wi(w0, wal(s0, w0)))\n  df-bj-nnf(s0, w0)\n}","pretty":"thm bj-nnf2(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)→(∃(s0, w0)→ w0))\n} = {\n  simplbi(F/(s0, w0), (∃(s0, w0)→ w0), (w0 → ∀(s0, w0)))\n  df-bj-nnf(s0, w0)\n}","parent":["simplbi","df-bj-nnf"],"children":["bj-nnf3"]},{"name":"bj-nnf3","content":"A consequence of nonfreeness. (Contributed by BJ, 28-Jul-2023.)","origin":"thm bj-nnf3(setvar s0, wff w0) {\n  |- wi(wnnf(s0, w0), wi(wex(s0, w0), wal(s0, w0)))\n} = {\n  syld(wnnf(s0, w0), wex(s0, w0), wal(s0, w0), w0)\n  bj-nnf2(s0, w0)\n  bj-nnf1(s0, w0)\n}","pretty":"thm bj-nnf3(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)→(∃(s0, w0)→ ∀(s0, w0)))\n} = {\n  syld(F/(s0, w0), ∃(s0, w0), ∀(s0, w0), w0)\n  bj-nnf2(s0, w0)\n  bj-nnf1(s0, w0)\n}","parent":["syld","bj-nnf2","bj-nnf1"],"children":["bj-nnfnfTEMP","bj-dfnnf2"]},{"name":"bj-nnfnfTEMP","content":"New nonfreeness implies old nonfreeness on implicational calculus (the proof indicates it uses ~ ax-3 because of set.mm's definition of the biconditional). (Contributed by BJ, 28-Jul-2023.) The proof should not rely on ~ df-nf except via ~ df-nf directly. (Proof modification is discouraged.)","origin":"thm bj-nnfnfTEMP(setvar s0, wff w0) {\n  |- wi(wnnf(s0, w0), wnf(s0, w0))\n} = {\n  sylibr(wnnf(s0, w0), wnf(s0, w0), wi(wex(s0, w0), wal(s0, w0)))\n  bj-nnf3(s0, w0)\n  df-nf(s0, w0)\n}","pretty":"thm bj-nnfnfTEMP(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)→ F/(s0, w0))\n} = {\n  sylibr(F/(s0, w0), F/(s0, w0), (∃(s0, w0)→ ∀(s0, w0)))\n  bj-nnf3(s0, w0)\n  df-nf(s0, w0)\n}","parent":["sylibr","bj-nnf3","df-nf"],"children":[]},{"name":"bj-nnftht","content":"A variable is nonfree in a theorem. Note that the antecedent is in the form of what is called \"strong necessity\" in modal logic. (Contributed by BJ, 28-Jul-2023.)","origin":"thm bj-nnftht(setvar s0, wff w0) {\n  |- wi(wa(w0, wal(s0, w0)), wnnf(s0, w0))\n} = {\n  sylibr(wa(w0, wal(s0, w0)), wnnf(s0, w0), wa(wi(wex(s0, w0), w0), wi(w0, wal(s0, w0))))\n  anim12i(w0, wal(s0, w0), wi(wex(s0, w0), w0), wi(w0, wal(s0, w0)))\n  ax-1(w0, wex(s0, w0))\n  ax-1(wal(s0, w0), w0)\n  df-bj-nnf(s0, w0)\n}","pretty":"thm bj-nnftht(setvar s0, wff w0) {\n  ⊢ ((w0 ∧ ∀(s0, w0))→ F/(s0, w0))\n} = {\n  sylibr((w0 ∧ ∀(s0, w0)), F/(s0, w0), ((∃(s0, w0)→ w0)∧(w0 → ∀(s0, w0))))\n  anim12i(w0, ∀(s0, w0), (∃(s0, w0)→ w0), (w0 → ∀(s0, w0)))\n  ax-1(w0, ∃(s0, w0))\n  ax-1(∀(s0, w0), w0)\n  df-bj-nnf(s0, w0)\n}","parent":["sylibr","anim12i","ax-1","df-bj-nnf"],"children":["bj-nnfth"]},{"name":"bj-nnfth","content":"A variable is nonfree in a theorem, inference form. (Contributed by BJ, 28-Jul-2023.)","origin":"thm bj-nnfth(setvar s0, wff w0) {\n  |- wnnf(s0, w0)\n  -| w0\n} = {\n  mp2an(wnnf(s0, w0), w0, wal(s0, w0))\n  ax-gen(s0, w0)\n  bj-nnftht(s0, w0)\n}","pretty":"thm bj-nnfth(setvar s0, wff w0) {\n  ⊢ F/(s0, w0)\n  ⊣ w0\n} = {\n  mp2an(F/(s0, w0), w0, ∀(s0, w0))\n  ax-gen(s0, w0)\n  bj-nnftht(s0, w0)\n}","parent":["mp2an","ax-gen","bj-nnftht"],"children":[]},{"name":"bj-nnfnt","content":"A variable is nonfree in a formula if and only if it is nonfree in its negation. Intuitionistically, the forward implication is true, and ` F// x -. -. ph -> F// x -. ph ` , so a good definition of nonfreeness would be the conjunction ` F// x ph /\\ F// x -. ph ` . Maybe adopt it also here for uniformity? See ~ nfnt . (Contributed by BJ, 28-Jul-2023.)","origin":"thm bj-nnfnt(setvar s0, wff w0) {\n  |- wb(wnnf(s0, w0), wnnf(s0, wn(w0)))\n} = {\n  3bitr4i(wnnf(s0, w0), wnnf(s0, wn(w0)), wa(wi(wex(s0, w0), w0), wi(w0, wal(s0, w0))), wa(wi(wex(s0, wn(w0)), wn(w0)), wi(wn(w0), wal(s0, wn(w0)))))\n  anbi12ci(wi(wex(s0, w0), w0), wi(w0, wal(s0, w0)), wi(wex(s0, wn(w0)), wn(w0)), wi(wn(w0), wal(s0, wn(w0))))\n  eximal(s0, w0, w0)\n  alimex(s0, w0, w0)\n  df-bj-nnf(s0, w0)\n  df-bj-nnf(s0, wn(w0))\n}","pretty":"thm bj-nnfnt(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)↔ F/(s0, ¬ w0))\n} = {\n  3bitr4i(F/(s0, w0), F/(s0, ¬ w0), ((∃(s0, w0)→ w0)∧(w0 → ∀(s0, w0))), ((∃(s0, ¬ w0)→ ¬ w0)∧(¬ w0 → ∀(s0, ¬ w0))))\n  anbi12ci((∃(s0, w0)→ w0), (w0 → ∀(s0, w0)), (∃(s0, ¬ w0)→ ¬ w0), (¬ w0 → ∀(s0, ¬ w0)))\n  eximal(s0, w0, w0)\n  alimex(s0, w0, w0)\n  df-bj-nnf(s0, w0)\n  df-bj-nnf(s0, ¬ w0)\n}","parent":["3bitr4i","anbi12ci","eximal","alimex","df-bj-nnf"],"children":[]},{"name":"bj-nnfv","content":"A non-occurring variable is not free in a formula. (Contributed by BJ, 28-Jul-2023.)","origin":"thm bj-nnfv(setvar s0, wff w0) {\n  |- wnnf(s0, w0)\n  -| diffsw(s0, w0)\n} = {\n  mpbir2an(wnnf(s0, w0), wi(wex(s0, w0), w0), wi(w0, wal(s0, w0)))\n  ax5e(s0, w0)\n  ax-5(s0, w0)\n  df-bj-nnf(s0, w0)\n}","pretty":"thm bj-nnfv(setvar s0, wff w0) {\n  ⊢ F/(s0, w0)\n  ⊣ d(s0, w0)\n} = {\n  mpbir2an(F/(s0, w0), (∃(s0, w0)→ w0), (w0 → ∀(s0, w0)))\n  ax5e(s0, w0)\n  ax-5(s0, w0)\n  df-bj-nnf(s0, w0)\n}","parent":["mpbir2an","ax5e","ax-5","df-bj-nnf"],"children":[]},{"name":"bj-dfnnf2","content":"Alternate definition of nonfreeness when ~ sp is available. (Contributed by BJ, 28-Jul-2023.) The proof should not rely on ~ df-nf . (Proof modification is discouraged.)","origin":"thm bj-dfnnf2(setvar s0, wff w0) {\n  |- wb(wnnf(s0, w0), wi(wex(s0, w0), wal(s0, w0)))\n} = {\n  impbii(wnnf(s0, w0), wi(wex(s0, w0), wal(s0, w0)))\n  bj-nnf3(s0, w0)\n  sylanbrc(wi(wex(s0, w0), wal(s0, w0)), wnnf(s0, w0), wi(wex(s0, w0), w0), wi(w0, wal(s0, w0)))\n  bj-19.21bit(s0, wex(s0, w0), w0)\n  bj-19.23bit(s0, w0, wal(s0, w0))\n  df-bj-nnf(s0, w0)\n}","pretty":"thm bj-dfnnf2(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)↔(∃(s0, w0)→ ∀(s0, w0)))\n} = {\n  impbii(F/(s0, w0), (∃(s0, w0)→ ∀(s0, w0)))\n  bj-nnf3(s0, w0)\n  sylanbrc((∃(s0, w0)→ ∀(s0, w0)), F/(s0, w0), (∃(s0, w0)→ w0), (w0 → ∀(s0, w0)))\n  bj-19.21bit(s0, ∃(s0, w0), w0)\n  bj-19.23bit(s0, w0, ∀(s0, w0))\n  df-bj-nnf(s0, w0)\n}","parent":["impbii","bj-nnf3","sylanbrc","bj-19.21bit","bj-19.23bit","df-bj-nnf"],"children":["bj-nfnnfTEMP"]},{"name":"bj-nfnnfTEMP","content":"New nonfreeness is equivalent to old nonfreeness on core FOL axioms plus ~ sp . (Contributed by BJ, 28-Jul-2023.) The proof should not rely on ~ df-nf except via ~ df-nf directly. (Proof modification is discouraged.)","origin":"thm bj-nfnnfTEMP(setvar s0, wff w0) {\n  |- wb(wnnf(s0, w0), wnf(s0, w0))\n} = {\n  bitr4i(wnnf(s0, w0), wnf(s0, w0), wi(wex(s0, w0), wal(s0, w0)))\n  bj-dfnnf2(s0, w0)\n  df-nf(s0, w0)\n}","pretty":"thm bj-nfnnfTEMP(setvar s0, wff w0) {\n  ⊢ (F/(s0, w0)↔ F/(s0, w0))\n} = {\n  bitr4i(F/(s0, w0), F/(s0, w0), (∃(s0, w0)→ ∀(s0, w0)))\n  bj-dfnnf2(s0, w0)\n  df-nf(s0, w0)\n}","parent":["bitr4i","bj-dfnnf2","df-nf"],"children":[]},{"name":"bj-hba1","content":"See ~ hba1 . This is the standard proof in modal logic of B5 => 4. (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-hba1(setvar s0, wff w0) {\n  |- wi(wal(s0, w0), wal(s0, wal(s0, w0)))\n} = {\n  sylg(s0, wal(s0, w0), wal(s0, w0), wex(s0, wal(s0, w0)))\n  bj-modalbe(s0, wal(s0, w0))\n  hbe1a(s0, w0)\n}","pretty":"thm bj-hba1(setvar s0, wff w0) {\n  ⊢ (∀(s0, w0)→ ∀(s0, ∀(s0, w0)))\n} = {\n  sylg(s0, ∀(s0, w0), ∀(s0, w0), ∃(s0, ∀(s0, w0)))\n  bj-modalbe(s0, ∀(s0, w0))\n  hbe1a(s0, w0)\n}","parent":["sylg","bj-modalbe","hbe1a"],"children":["bj-nnfa1"]},{"name":"bj-nnfa1","content":"See ~ nfa1 . (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnfa1(setvar s0, wff w0) {\n  |- wnnf(s0, wal(s0, w0))\n} = {\n  mpbir2an(wnnf(s0, wal(s0, w0)), wi(wex(s0, wal(s0, w0)), wal(s0, w0)), wi(wal(s0, w0), wal(s0, wal(s0, w0))))\n  hbe1a(s0, w0)\n  bj-hba1(s0, w0)\n  df-bj-nnf(s0, wal(s0, w0))\n}","pretty":"thm bj-nnfa1(setvar s0, wff w0) {\n  ⊢ F/(s0, ∀(s0, w0))\n} = {\n  mpbir2an(F/(s0, ∀(s0, w0)), (∃(s0, ∀(s0, w0))→ ∀(s0, w0)), (∀(s0, w0)→ ∀(s0, ∀(s0, w0))))\n  hbe1a(s0, w0)\n  bj-hba1(s0, w0)\n  df-bj-nnf(s0, ∀(s0, w0))\n}","parent":["mpbir2an","hbe1a","bj-hba1","df-bj-nnf"],"children":[]},{"name":"bj-nnfe1","content":"See ~ nfe1 . (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnfe1(setvar s0, wff w0) {\n  |- wnnf(s0, wex(s0, w0))\n} = {\n  mpbir2an(wnnf(s0, wex(s0, w0)), wi(wex(s0, wex(s0, w0)), wex(s0, w0)), wi(wex(s0, w0), wal(s0, wex(s0, w0))))\n  bj-modal4e(s0, w0)\n  hbe1(s0, w0)\n  df-bj-nnf(s0, wex(s0, w0))\n}","pretty":"thm bj-nnfe1(setvar s0, wff w0) {\n  ⊢ F/(s0, ∃(s0, w0))\n} = {\n  mpbir2an(F/(s0, ∃(s0, w0)), (∃(s0, ∃(s0, w0))→ ∃(s0, w0)), (∃(s0, w0)→ ∀(s0, ∃(s0, w0))))\n  bj-modal4e(s0, w0)\n  hbe1(s0, w0)\n  df-bj-nnf(s0, ∃(s0, w0))\n}","parent":["mpbir2an","bj-modal4e","hbe1","df-bj-nnf"],"children":[]},{"name":"bj-19.12","content":"See ~ 19.12 . Could be labeled \"exalimalex\" for \"'there exists for all' implies 'for all there exists'\". (Contributed by BJ, 12-Aug-2023.) The proof should not rely on ~ df-nf or ~ df-bj-nnf , directly or indirectly. (Proof modification is discouraged.)","origin":"thm bj-19.12(setvar s0, setvar s1, wff w0) {\n  |- wi(wex(s0, wal(s1, w0)), wal(s1, wex(s0, w0)))\n} = {\n  sylg(s1, wex(s0, wal(s1, w0)), wex(s0, w0), wex(s1, wex(s0, wal(s1, w0))))\n  bj-modalbe(s1, wex(s0, wal(s1, w0)))\n  sylbi(wex(s1, wex(s0, wal(s1, w0))), wex(s0, w0), wex(s0, wex(s1, wal(s1, w0))))\n  excom(s1, s0, wal(s1, w0))\n  eximi(s0, wex(s1, wal(s1, w0)), w0)\n  axc7e(s1, w0)\n}","pretty":"thm bj-19.12(setvar s0, setvar s1, wff w0) {\n  ⊢ (∃(s0, ∀(s1, w0))→ ∀(s1, ∃(s0, w0)))\n} = {\n  sylg(s1, ∃(s0, ∀(s1, w0)), ∃(s0, w0), ∃(s1, ∃(s0, ∀(s1, w0))))\n  bj-modalbe(s1, ∃(s0, ∀(s1, w0)))\n  sylbi(∃(s1, ∃(s0, ∀(s1, w0))), ∃(s0, w0), ∃(s0, ∃(s1, ∀(s1, w0))))\n  excom(s1, s0, ∀(s1, w0))\n  eximi(s0, ∃(s1, ∀(s1, w0)), w0)\n  axc7e(s1, w0)\n}","parent":["sylg","bj-modalbe","sylbi","excom","eximi","axc7e"],"children":["bj-nnflemae","bj-nnflemea"]},{"name":"bj-nnflemaa","content":"One of four lemmas for nonfreeness: antecedent and consequent both expressed using universal quantifier. Note: this is ~ bj-hbalt . (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnflemaa(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wi(w0, wal(s1, w0))), wi(wal(s0, w0), wal(s1, wal(s0, w0))))\n} = {\n  syl6(wal(s0, wi(w0, wal(s1, w0))), wal(s0, w0), wal(s1, wal(s0, w0)), wal(s0, wal(s1, w0)))\n  alim(s0, w0, wal(s1, w0))\n  ax-11(s0, s1, w0)\n}","pretty":"thm bj-nnflemaa(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0,(w0 → ∀(s1, w0)))→(∀(s0, w0)→ ∀(s1, ∀(s0, w0))))\n} = {\n  syl6(∀(s0,(w0 → ∀(s1, w0))), ∀(s0, w0), ∀(s1, ∀(s0, w0)), ∀(s0, ∀(s1, w0)))\n  alim(s0, w0, ∀(s1, w0))\n  ax-11(s0, s1, w0)\n}","parent":["syl6","alim","ax-11"],"children":["bj-nnfalt"]},{"name":"bj-nnflemee","content":"One of four lemmas for nonfreeness: antecedent and consequent both expressed using existential quantifier. (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnflemee(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wi(wex(s1, w0), w0)), wi(wex(s1, wex(s0, w0)), wex(s0, w0)))\n} = {\n  syl5bi(wal(s0, wi(wex(s1, w0), w0)), wex(s1, wex(s0, w0)), wex(s0, w0), wex(s0, wex(s1, w0)))\n  excom(s1, s0, w0)\n  exim(s0, wex(s1, w0), w0)\n}","pretty":"thm bj-nnflemee(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0,(∃(s1, w0)→ w0))→(∃(s1, ∃(s0, w0))→ ∃(s0, w0)))\n} = {\n  syl5bi(∀(s0,(∃(s1, w0)→ w0)), ∃(s1, ∃(s0, w0)), ∃(s0, w0), ∃(s0, ∃(s1, w0)))\n  excom(s1, s0, w0)\n  exim(s0, ∃(s1, w0), w0)\n}","parent":["syl5bi","excom","exim"],"children":["bj-nnfext"]},{"name":"bj-nnflemae","content":"One of four lemmas for nonfreeness: antecedent expressed with universal quantifier and consequent expressed with existential quantifier. (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnflemae(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wi(w0, wal(s1, w0))), wi(wex(s0, w0), wal(s1, wex(s0, w0))))\n} = {\n  syl6(wal(s0, wi(w0, wal(s1, w0))), wex(s0, w0), wal(s1, wex(s0, w0)), wex(s0, wal(s1, w0)))\n  exim(s0, w0, wal(s1, w0))\n  bj-19.12(s0, s1, w0)\n}","pretty":"thm bj-nnflemae(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0,(w0 → ∀(s1, w0)))→(∃(s0, w0)→ ∀(s1, ∃(s0, w0))))\n} = {\n  syl6(∀(s0,(w0 → ∀(s1, w0))), ∃(s0, w0), ∀(s1, ∃(s0, w0)), ∃(s0, ∀(s1, w0)))\n  exim(s0, w0, ∀(s1, w0))\n  bj-19.12(s0, s1, w0)\n}","parent":["syl6","exim","bj-19.12"],"children":["bj-nnfext"]},{"name":"bj-nnflemea","content":"One of four lemmas for nonfreeness: antecedent expressed with existential quantifier and consequent expressed with universal quantifier. (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnflemea(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wi(wex(s1, w0), w0)), wi(wex(s1, wal(s0, w0)), wal(s0, w0)))\n} = {\n  syl5(wal(s0, wi(wex(s1, w0), w0)), wex(s1, wal(s0, w0)), wal(s0, w0), wal(s0, wex(s1, w0)))\n  bj-19.12(s1, s0, w0)\n  alim(s0, wex(s1, w0), w0)\n}","pretty":"thm bj-nnflemea(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0,(∃(s1, w0)→ w0))→(∃(s1, ∀(s0, w0))→ ∀(s0, w0)))\n} = {\n  syl5(∀(s0,(∃(s1, w0)→ w0)), ∃(s1, ∀(s0, w0)), ∀(s0, w0), ∀(s0, ∃(s1, w0)))\n  bj-19.12(s1, s0, w0)\n  alim(s0, ∃(s1, w0), w0)\n}","parent":["syl5","bj-19.12","alim"],"children":["bj-nnfalt"]},{"name":"bj-nnfalt","content":"See ~ nfal and ~ bj-nfalt . (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnfalt(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wnnf(s1, w0)), wnnf(s1, wal(s0, w0)))\n} = {\n  sylanbrc(wal(s0, wnnf(s1, w0)), wnnf(s1, wal(s0, w0)), wi(wex(s1, wal(s0, w0)), wal(s0, w0)), wi(wal(s0, w0), wal(s1, wal(s0, w0))))\n  sylbi(wal(s0, wnnf(s1, w0)), wi(wex(s1, wal(s0, w0)), wal(s0, w0)), wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))))\n  syl(wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))), wi(wex(s1, wal(s0, w0)), wal(s0, w0)), wal(s0, wi(wex(s1, w0), w0)))\n  alimi(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0))), wi(wex(s1, w0), w0))\n  simpl(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))\n  bj-nnflemea(s0, s1, w0)\n  sylbi(wal(s0, wnnf(s1, w0)), wi(wal(s0, w0), wal(s1, wal(s0, w0))), wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))))\n  albii(s0, wnnf(s1, w0), wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0))))\n  df-bj-nnf(s1, w0)\n  syl(wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))), wi(wal(s0, w0), wal(s1, wal(s0, w0))), wal(s0, wi(w0, wal(s1, w0))))\n  alimi(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0))), wi(w0, wal(s1, w0)))\n  simpr(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))\n  bj-nnflemaa(s0, s1, w0)\n  df-bj-nnf(s1, wal(s0, w0))\n}","pretty":"thm bj-nnfalt(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, F/(s1, w0))→ F/(s1, ∀(s0, w0)))\n} = {\n  sylanbrc(∀(s0, F/(s1, w0)), F/(s1, ∀(s0, w0)), (∃(s1, ∀(s0, w0))→ ∀(s0, w0)), (∀(s0, w0)→ ∀(s1, ∀(s0, w0))))\n  sylbi(∀(s0, F/(s1, w0)), (∃(s1, ∀(s0, w0))→ ∀(s0, w0)), ∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))))\n  syl(∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))), (∃(s1, ∀(s0, w0))→ ∀(s0, w0)), ∀(s0,(∃(s1, w0)→ w0)))\n  alimi(s0, ((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0))), (∃(s1, w0)→ w0))\n  simpl((∃(s1, w0)→ w0), (w0 → ∀(s1, w0)))\n  bj-nnflemea(s0, s1, w0)\n  sylbi(∀(s0, F/(s1, w0)), (∀(s0, w0)→ ∀(s1, ∀(s0, w0))), ∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))))\n  albii(s0, F/(s1, w0), ((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0))))\n  df-bj-nnf(s1, w0)\n  syl(∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))), (∀(s0, w0)→ ∀(s1, ∀(s0, w0))), ∀(s0,(w0 → ∀(s1, w0))))\n  alimi(s0, ((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0))), (w0 → ∀(s1, w0)))\n  simpr((∃(s1, w0)→ w0), (w0 → ∀(s1, w0)))\n  bj-nnflemaa(s0, s1, w0)\n  df-bj-nnf(s1, ∀(s0, w0))\n}","parent":["sylanbrc","sylbi","syl","alimi","simpl","bj-nnflemea","albii","df-bj-nnf","simpr","bj-nnflemaa"],"children":[]},{"name":"bj-nnfext","content":"See ~ nfex and ~ bj-nfext . (Contributed by BJ, 12-Aug-2023.) (Proof modification is discouraged.)","origin":"thm bj-nnfext(setvar s0, setvar s1, wff w0) {\n  |- wi(wal(s0, wnnf(s1, w0)), wnnf(s1, wex(s0, w0)))\n} = {\n  sylanbrc(wal(s0, wnnf(s1, w0)), wnnf(s1, wex(s0, w0)), wi(wex(s1, wex(s0, w0)), wex(s0, w0)), wi(wex(s0, w0), wal(s1, wex(s0, w0))))\n  sylbi(wal(s0, wnnf(s1, w0)), wi(wex(s1, wex(s0, w0)), wex(s0, w0)), wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))))\n  syl(wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))), wi(wex(s1, wex(s0, w0)), wex(s0, w0)), wal(s0, wi(wex(s1, w0), w0)))\n  alimi(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0))), wi(wex(s1, w0), w0))\n  simpl(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))\n  bj-nnflemee(s0, s1, w0)\n  sylbi(wal(s0, wnnf(s1, w0)), wi(wex(s0, w0), wal(s1, wex(s0, w0))), wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))))\n  albii(s0, wnnf(s1, w0), wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0))))\n  df-bj-nnf(s1, w0)\n  syl(wal(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))), wi(wex(s0, w0), wal(s1, wex(s0, w0))), wal(s0, wi(w0, wal(s1, w0))))\n  alimi(s0, wa(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0))), wi(w0, wal(s1, w0)))\n  simpr(wi(wex(s1, w0), w0), wi(w0, wal(s1, w0)))\n  bj-nnflemae(s0, s1, w0)\n  df-bj-nnf(s1, wex(s0, w0))\n}","pretty":"thm bj-nnfext(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0, F/(s1, w0))→ F/(s1, ∃(s0, w0)))\n} = {\n  sylanbrc(∀(s0, F/(s1, w0)), F/(s1, ∃(s0, w0)), (∃(s1, ∃(s0, w0))→ ∃(s0, w0)), (∃(s0, w0)→ ∀(s1, ∃(s0, w0))))\n  sylbi(∀(s0, F/(s1, w0)), (∃(s1, ∃(s0, w0))→ ∃(s0, w0)), ∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))))\n  syl(∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))), (∃(s1, ∃(s0, w0))→ ∃(s0, w0)), ∀(s0,(∃(s1, w0)→ w0)))\n  alimi(s0, ((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0))), (∃(s1, w0)→ w0))\n  simpl((∃(s1, w0)→ w0), (w0 → ∀(s1, w0)))\n  bj-nnflemee(s0, s1, w0)\n  sylbi(∀(s0, F/(s1, w0)), (∃(s0, w0)→ ∀(s1, ∃(s0, w0))), ∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))))\n  albii(s0, F/(s1, w0), ((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0))))\n  df-bj-nnf(s1, w0)\n  syl(∀(s0,((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0)))), (∃(s0, w0)→ ∀(s1, ∃(s0, w0))), ∀(s0,(w0 → ∀(s1, w0))))\n  alimi(s0, ((∃(s1, w0)→ w0)∧(w0 → ∀(s1, w0))), (w0 → ∀(s1, w0)))\n  simpr((∃(s1, w0)→ w0), (w0 → ∀(s1, w0)))\n  bj-nnflemae(s0, s1, w0)\n  df-bj-nnf(s1, ∃(s0, w0))\n}","parent":["sylanbrc","sylbi","syl","alimi","simpl","bj-nnflemee","albii","df-bj-nnf","simpr","bj-nnflemae"],"children":[]}]}