{"index":1536,"title":"Associative algebras (extension)","content":"","blocks":[{"name":"ascl0","content":"The scalar 0 embedded into a left module corresponds to the 0 of the left module if the left module is also a ring. (Contributed by AV, 31-Jul-2019.)","origin":"thm ascl0(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(cfv(c0, cfv(c0g, c1)), cfv(c0g, c2)))\n  -| wceq(c0, cfv(cascl, c2))\n  -| wceq(c1, cfv(csca, c2))\n  -| wi(w0, wcel(c2, clmod))\n  -| wi(w0, wcel(c2, crg))\n} = {\n  eqtrd(cfv(c0, cfv(c0g, c1)), cfv(c0g, c2), co(cfv(c0g, c1), cfv(cvsca, c2), cfv(cur, c2)), w0)\n  syl(w0, wceq(cfv(c0, cfv(c0g, c1)), co(cfv(c0g, c1), cfv(cvsca, c2), cfv(cur, c2))), wcel(cfv(c0g, c1), cfv(cbs, c1)))\n  syl(w0, wcel(cfv(c0g, c1), cfv(cbs, c1)), wcel(c1, cgrp))\n  syl(w0, wcel(c1, cgrp), wcel(c2, clmod))\n  lmodfgrp(c2, c1)\n  grpidcl(c1, cfv(c0g, c1), cfv(cbs, c1))\n  asclval(cfv(c0g, c1), cfv(cbs, c1), c0, cfv(cvsca, c2), cfv(cur, c2), c2, c1)\n  eqid(cfv(cbs, c1))\n  syl2anc(w0, wceq(co(cfv(c0g, c1), cfv(cvsca, c2), cfv(cur, c2)), cfv(c0g, c2)), wcel(c2, clmod), wcel(cfv(cur, c2), cfv(cbs, c2)))\n  syl(w0, wcel(cfv(cur, c2), cfv(cbs, c2)), wcel(c2, crg))\n  ringidcl(c2, cfv(cur, c2), cfv(cbs, c2))\n  eqid(cfv(cur, c2))\n  lmod0vs(c2, cfv(cur, c2), cfv(cbs, c2), cfv(c0g, c1), cfv(cvsca, c2), cfv(c0g, c2), c1)\n  eqid(cfv(cbs, c2))\n  eqid(cfv(cvsca, c2))\n  eqid(cfv(c0g, c1))\n  eqid(cfv(c0g, c2))\n}","pretty":"thm ascl0(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 `(0 ` c1))=(0 ` c2))\n  ⊣ c0 =(algSc ` c2)\n  ⊣ c1 =(Scalar ` c2)\n  ⊣ (w0 → c2 ∈ LMod)\n  ⊣ (w0 → c2 ∈ Ring)\n} = {\n  eqtrd((c0 `(0 ` c1)), (0 ` c2), ((0 ` c1)[(× ` c2)](1r ` c2)), w0)\n  syl(w0, (c0 `(0 ` c1))=((0 ` c1)[(× ` c2)](1r ` c2)), (0 ` c1)∈(Base ` c1))\n  syl(w0, (0 ` c1)∈(Base ` c1), c1 ∈ Grp)\n  syl(w0, c1 ∈ Grp, c2 ∈ LMod)\n  lmodfgrp(c2, c1)\n  grpidcl(c1, (0 ` c1), (Base ` c1))\n  asclval((0 ` c1), (Base ` c1), c0, (× ` c2), (1r ` c2), c2, c1)\n  eqid((Base ` c1))\n  syl2anc(w0, ((0 ` c1)[(× ` c2)](1r ` c2))=(0 ` c2), c2 ∈ LMod, (1r ` c2)∈(Base ` c2))\n  syl(w0, (1r ` c2)∈(Base ` c2), c2 ∈ Ring)\n  ringidcl(c2, (1r ` c2), (Base ` c2))\n  eqid((1r ` c2))\n  lmod0vs(c2, (1r ` c2), (Base ` c2), (0 ` c1), (× ` c2), (0 ` c2), c1)\n  eqid((Base ` c2))\n  eqid((× ` c2))\n  eqid((0 ` c1))\n  eqid((0 ` c2))\n}","parent":["eqtrd","syl","lmodfgrp","grpidcl","asclval","eqid","syl2anc","ringidcl","lmod0vs"],"children":["assaascl0"]},{"name":"ascl1","content":"The scalar 1 embedded into a left module corresponds to the 1 of the left module if the left module is also a ring. (Contributed by AV, 31-Jul-2019.)","origin":"thm ascl1(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(cfv(c0, cfv(cur, c1)), cfv(cur, c2)))\n  -| wceq(c0, cfv(cascl, c2))\n  -| wceq(c1, cfv(csca, c2))\n  -| wi(w0, wcel(c2, clmod))\n  -| wi(w0, wcel(c2, crg))\n} = {\n  eqtrd(cfv(c0, cfv(cur, c1)), cfv(cur, c2), co(cfv(cur, c1), cfv(cvsca, c2), cfv(cur, c2)), w0)\n  syl(w0, wceq(cfv(c0, cfv(cur, c1)), co(cfv(cur, c1), cfv(cvsca, c2), cfv(cur, c2))), wcel(cfv(cur, c1), cfv(cbs, c1)))\n  syl(w0, wcel(cfv(cur, c1), cfv(cbs, c1)), wcel(c1, crg))\n  syl(w0, wcel(c1, crg), wcel(c2, clmod))\n  lmodring(c2, c1)\n  ringidcl(c1, cfv(cur, c1), cfv(cbs, c1))\n  asclval(cfv(cur, c1), cfv(cbs, c1), c0, cfv(cvsca, c2), cfv(cur, c2), c2, c1)\n  eqid(cfv(cbs, c1))\n  syl2anc(w0, wceq(co(cfv(cur, c1), cfv(cvsca, c2), cfv(cur, c2)), cfv(cur, c2)), wcel(c2, clmod), wcel(cfv(cur, c2), cfv(cbs, c2)))\n  syl(w0, wcel(cfv(cur, c2), cfv(cbs, c2)), wcel(c2, crg))\n  ringidcl(c2, cfv(cur, c2), cfv(cbs, c2))\n  eqid(cfv(cur, c2))\n  lmodvs1(c2, cfv(cur, c2), cfv(cbs, c2), cfv(cur, c1), cfv(cvsca, c2), c1)\n  eqid(cfv(cbs, c2))\n  eqid(cfv(cvsca, c2))\n  eqid(cfv(cur, c1))\n}","pretty":"thm ascl1(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 `(1r ` c1))=(1r ` c2))\n  ⊣ c0 =(algSc ` c2)\n  ⊣ c1 =(Scalar ` c2)\n  ⊣ (w0 → c2 ∈ LMod)\n  ⊣ (w0 → c2 ∈ Ring)\n} = {\n  eqtrd((c0 `(1r ` c1)), (1r ` c2), ((1r ` c1)[(× ` c2)](1r ` c2)), w0)\n  syl(w0, (c0 `(1r ` c1))=((1r ` c1)[(× ` c2)](1r ` c2)), (1r ` c1)∈(Base ` c1))\n  syl(w0, (1r ` c1)∈(Base ` c1), c1 ∈ Ring)\n  syl(w0, c1 ∈ Ring, c2 ∈ LMod)\n  lmodring(c2, c1)\n  ringidcl(c1, (1r ` c1), (Base ` c1))\n  asclval((1r ` c1), (Base ` c1), c0, (× ` c2), (1r ` c2), c2, c1)\n  eqid((Base ` c1))\n  syl2anc(w0, ((1r ` c1)[(× ` c2)](1r ` c2))=(1r ` c2), c2 ∈ LMod, (1r ` c2)∈(Base ` c2))\n  syl(w0, (1r ` c2)∈(Base ` c2), c2 ∈ Ring)\n  ringidcl(c2, (1r ` c2), (Base ` c2))\n  eqid((1r ` c2))\n  lmodvs1(c2, (1r ` c2), (Base ` c2), (1r ` c1), (× ` c2), c1)\n  eqid((Base ` c2))\n  eqid((× ` c2))\n  eqid((1r ` c1))\n}","parent":["eqtrd","syl","lmodring","ringidcl","asclval","eqid","syl2anc","lmodvs1"],"children":["assaascl1"]},{"name":"assaascl0","content":"The scalar 0 embedded into an associative algebra corresponds to the 0 of the associative algebra. (Contributed by AV, 31-Jul-2019.)","origin":"thm assaascl0(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(cfv(c0, cfv(c0g, c1)), cfv(c0g, c2)))\n  -| wceq(c0, cfv(cascl, c2))\n  -| wceq(c1, cfv(csca, c2))\n  -| wi(w0, wcel(c2, casa))\n} = {\n  ascl0(c0, c1, c2, w0)\n  syl(w0, wcel(c2, clmod), wcel(c2, casa))\n  assalmod(c2)\n  syl(w0, wcel(c2, crg), wcel(c2, casa))\n  assaring(c2)\n}","pretty":"thm assaascl0(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 `(0 ` c1))=(0 ` c2))\n  ⊣ c0 =(algSc ` c2)\n  ⊣ c1 =(Scalar ` c2)\n  ⊣ (w0 → c2 ∈ AssAlg)\n} = {\n  ascl0(c0, c1, c2, w0)\n  syl(w0, c2 ∈ LMod, c2 ∈ AssAlg)\n  assalmod(c2)\n  syl(w0, c2 ∈ Ring, c2 ∈ AssAlg)\n  assaring(c2)\n}","parent":["ascl0","syl","assalmod","assaring"],"children":[]},{"name":"assaascl1","content":"The scalar 1 embedded into an associative algebra corresponds to the 1 of the an associative algebra. (Contributed by AV, 31-Jul-2019.)","origin":"thm assaascl1(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wceq(cfv(c0, cfv(cur, c1)), cfv(cur, c2)))\n  -| wceq(c0, cfv(cascl, c2))\n  -| wceq(c1, cfv(csca, c2))\n  -| wi(w0, wcel(c2, casa))\n} = {\n  ascl1(c0, c1, c2, w0)\n  syl(w0, wcel(c2, clmod), wcel(c2, casa))\n  assalmod(c2)\n  syl(w0, wcel(c2, crg), wcel(c2, casa))\n  assaring(c2)\n}","pretty":"thm assaascl1(class c0, class c1, class c2, wff w0) {\n  ⊢ (w0 →(c0 `(1r ` c1))=(1r ` c2))\n  ⊣ c0 =(algSc ` c2)\n  ⊣ c1 =(Scalar ` c2)\n  ⊣ (w0 → c2 ∈ AssAlg)\n} = {\n  ascl1(c0, c1, c2, w0)\n  syl(w0, c2 ∈ LMod, c2 ∈ AssAlg)\n  assalmod(c2)\n  syl(w0, c2 ∈ Ring, c2 ∈ AssAlg)\n  assaring(c2)\n}","parent":["ascl1","syl","assalmod","assaring"],"children":[]}]}