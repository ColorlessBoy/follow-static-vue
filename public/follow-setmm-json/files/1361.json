{"index":1361,"title":"N-Digit Addition Proof Generator","content":"This section formalizes theorems used in an n-digit addition proof generator. Other theorems required: ~ deccl ~ addcomli ~ 00id ~ addid1i ~ addid2i ~ eqid ~ dec0h ~ decadd ~ decaddc .","blocks":[{"name":"unitadd","content":"Theorem used in conjunction with ~ decaddc to absorb carry when generating n-digit addition synthetic proofs. (Contributed by Stanislas Polu, 7-Apr-2020.)","origin":"thm unitadd(class c0, class c1, class c2, class c3) {\n  |- wceq(co(co(c0, caddc, c1), caddc, nat1), c2)\n  -| wceq(co(c0, caddc, c3), c2)\n  -| wceq(co(c1, caddc, nat1), c3)\n  -| wcel(c0, cn0)\n  -| wcel(c1, cn0)\n} = {\n  eqtri(co(co(c0, caddc, c1), caddc, nat1), c2, co(c0, caddc, co(c1, caddc, nat1)))\n  addassi(c0, c1, nat1)\n  nn0cni(c0)\n  nn0cni(c1)\n  ax-1cn()\n  eqtr3i(co(c0, caddc, co(c1, caddc, nat1)), c2, co(c0, caddc, c3))\n  oveq2i(c0, caddc, c3, co(c1, caddc, nat1))\n  eqcomi(c3, co(c1, caddc, nat1))\n}","pretty":"thm unitadd(class c0, class c1, class c2, class c3) {\n  ⊢ ((c0[+]c1)[+]1)= c2\n  ⊣ (c0[+]c3)= c2\n  ⊣ (c1[+]1)= c3\n  ⊣ c0 ∈ ℕ0\n  ⊣ c1 ∈ ℕ0\n} = {\n  eqtri(((c0[+]c1)[+]1), c2, (c0[+](c1[+]1)))\n  addassi(c0, c1, nat1)\n  nn0cni(c0)\n  nn0cni(c1)\n  ax-1cn()\n  eqtr3i((c0[+](c1[+]1)), c2, (c0[+]c3))\n  oveq2i(c0, caddc, c3, (c1[+]1))\n  eqcomi(c3, (c1[+]1))\n}","parent":["eqtri","addassi","nn0cni","ax-1cn","eqtr3i","oveq2i","eqcomi"],"children":[]}]}