{"index":1383,"title":"Geometry","content":"","blocks":[{"name":"cplusr","content":"Introduce the operation of vector addition.","origin":"const class cplusr { +r }","pretty":"","parent":[],"children":[]},{"name":"diff.cplusr.s","content":"","origin":"axiom diff.cplusr.s(setvar s0) {\n  |- diffsc(s0, cplusr)\n}","pretty":"axiom diff.cplusr.s(setvar s0) {\n  ‚ä¢ d(s0, +r)\n}","parent":[],"children":[]},{"name":"diff.cplusr.c","content":"","origin":"axiom diff.cplusr.c(class c0) {\n  |- diffcc(cplusr, c0)\n}","pretty":"axiom diff.cplusr.c(class c0) {\n  ‚ä¢ d(+r, c0)\n}","parent":[],"children":[]},{"name":"diff.cplusr.w","content":"","origin":"axiom diff.cplusr.w(wff w0) {\n  |- diffcw(cplusr, w0)\n}","pretty":"axiom diff.cplusr.w(wff w0) {\n  ‚ä¢ d(+r, w0)\n}","parent":[],"children":[]},{"name":"cminusr","content":"Introduce the operation of vector subtraction.","origin":"const class cminusr { -r }","pretty":"","parent":[],"children":[]},{"name":"diff.cminusr.s","content":"","origin":"axiom diff.cminusr.s(setvar s0) {\n  |- diffsc(s0, cminusr)\n}","pretty":"axiom diff.cminusr.s(setvar s0) {\n  ‚ä¢ d(s0, -r)\n}","parent":[],"children":[]},{"name":"diff.cminusr.c","content":"","origin":"axiom diff.cminusr.c(class c0) {\n  |- diffcc(cminusr, c0)\n}","pretty":"axiom diff.cminusr.c(class c0) {\n  ‚ä¢ d(-r, c0)\n}","parent":[],"children":[]},{"name":"diff.cminusr.w","content":"","origin":"axiom diff.cminusr.w(wff w0) {\n  |- diffcw(cminusr, w0)\n}","pretty":"axiom diff.cminusr.w(wff w0) {\n  ‚ä¢ d(-r, w0)\n}","parent":[],"children":[]},{"name":"ctimesr","content":"Introduce the operation of scalar multiplication.","origin":"const class ctimesr { .v }","pretty":"","parent":[],"children":[]},{"name":"diff.ctimesr.s","content":"","origin":"axiom diff.ctimesr.s(setvar s0) {\n  |- diffsc(s0, ctimesr)\n}","pretty":"axiom diff.ctimesr.s(setvar s0) {\n  ‚ä¢ d(s0, .v)\n}","parent":[],"children":[]},{"name":"diff.ctimesr.c","content":"","origin":"axiom diff.ctimesr.c(class c0) {\n  |- diffcc(ctimesr, c0)\n}","pretty":"axiom diff.ctimesr.c(class c0) {\n  ‚ä¢ d(.v, c0)\n}","parent":[],"children":[]},{"name":"diff.ctimesr.w","content":"","origin":"axiom diff.ctimesr.w(wff w0) {\n  |- diffcw(ctimesr, w0)\n}","pretty":"axiom diff.ctimesr.w(wff w0) {\n  ‚ä¢ d(.v, w0)\n}","parent":[],"children":[]},{"name":"cptdfc","content":"` PtDf ` is a predicate that is crucial for the definition of lines as well as proving a number of important theorems.","origin":"prop class cptdfc(class c0, class c1) { PtDf(c0, c1) }","pretty":"","parent":[],"children":[]},{"name":"diff.cptdfc.s","content":"","origin":"axiom diff.cptdfc.s(setvar sBase, class c0, class c1) {\n  |- diffsc(sBase, cptdfc(c0, c1))\n  -| diffsc(sBase, c0)\n  -| diffsc(sBase, c1)\n}","pretty":"axiom diff.cptdfc.s(setvar sBase, class c0, class c1) {\n  ‚ä¢ d(sBase, PtDf(c0, c1))\n  ‚ä£ d(sBase, c0)\n  ‚ä£ d(sBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cptdfc.c","content":"","origin":"axiom diff.cptdfc.c(class cBase, class c0, class c1) {\n  |- diffcc(cBase, cptdfc(c0, c1))\n  -| diffcc(cBase, c0)\n  -| diffcc(cBase, c1)\n}","pretty":"axiom diff.cptdfc.c(class cBase, class c0, class c1) {\n  ‚ä¢ d(cBase, PtDf(c0, c1))\n  ‚ä£ d(cBase, c0)\n  ‚ä£ d(cBase, c1)\n}","parent":[],"children":[]},{"name":"diff.cptdfc.w","content":"","origin":"axiom diff.cptdfc.w(wff wBase, class c0, class c1) {\n  |- diffcw(cptdfc(c0, c1), wBase)\n  -| diffcw(c0, wBase)\n  -| diffcw(c1, wBase)\n}","pretty":"axiom diff.cptdfc.w(wff wBase, class c0, class c1) {\n  ‚ä¢ d(PtDf(c0, c1), wBase)\n  ‚ä£ d(c0, wBase)\n  ‚ä£ d(c1, wBase)\n}","parent":[],"children":[]},{"name":"crr3c","content":"` RR3 ` is a class.","origin":"const class crr3c { RR3 }","pretty":"","parent":[],"children":[]},{"name":"diff.crr3c.s","content":"","origin":"axiom diff.crr3c.s(setvar s0) {\n  |- diffsc(s0, crr3c)\n}","pretty":"axiom diff.crr3c.s(setvar s0) {\n  ‚ä¢ d(s0, RR3)\n}","parent":[],"children":[]},{"name":"diff.crr3c.c","content":"","origin":"axiom diff.crr3c.c(class c0) {\n  |- diffcc(crr3c, c0)\n}","pretty":"axiom diff.crr3c.c(class c0) {\n  ‚ä¢ d(RR3, c0)\n}","parent":[],"children":[]},{"name":"diff.crr3c.w","content":"","origin":"axiom diff.crr3c.w(wff w0) {\n  |- diffcw(crr3c, w0)\n}","pretty":"axiom diff.crr3c.w(wff w0) {\n  ‚ä¢ d(RR3, w0)\n}","parent":[],"children":[]},{"name":"cline3","content":"` line3 ` is a class.","origin":"const class cline3 { line3 }","pretty":"","parent":[],"children":[]},{"name":"diff.cline3.s","content":"","origin":"axiom diff.cline3.s(setvar s0) {\n  |- diffsc(s0, cline3)\n}","pretty":"axiom diff.cline3.s(setvar s0) {\n  ‚ä¢ d(s0, line3)\n}","parent":[],"children":[]},{"name":"diff.cline3.c","content":"","origin":"axiom diff.cline3.c(class c0) {\n  |- diffcc(cline3, c0)\n}","pretty":"axiom diff.cline3.c(class c0) {\n  ‚ä¢ d(line3, c0)\n}","parent":[],"children":[]},{"name":"diff.cline3.w","content":"","origin":"axiom diff.cline3.w(wff w0) {\n  |- diffcw(cline3, w0)\n}","pretty":"axiom diff.cline3.w(wff w0) {\n  ‚ä¢ d(line3, w0)\n}","parent":[],"children":[]},{"name":"df-addr","content":"Define the operation of vector addition. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"axiom df-addr(setvar s0, setvar s1, setvar s2) {\n  |- wceq(cplusr, cmpo(s0, s1, universe, universe, cmpt(s2, cr, co(cfv(cv(s0), cv(s2)), caddc, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffss(s0, s1)\n}","pretty":"axiom df-addr(setvar s0, setvar s1, setvar s2) {\n  ‚ä¢ +r =(s0 ‚àà ùïå, s1 ‚àà ùïå ‚Ü¶(s2 ‚àà ‚Ñù ‚Ü¶((s0 ` s2)[+](s1 ` s2))))\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, s1)\n}","parent":[],"children":["addrval"]},{"name":"df-subr","content":"Define the operation of vector subtraction. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"axiom df-subr(setvar s0, setvar s1, setvar s2) {\n  |- wceq(cminusr, cmpo(s0, s1, universe, universe, cmpt(s2, cr, co(cfv(cv(s0), cv(s2)), cmin, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffss(s0, s1)\n}","pretty":"axiom df-subr(setvar s0, setvar s1, setvar s2) {\n  ‚ä¢ -r =(s0 ‚àà ùïå, s1 ‚àà ùïå ‚Ü¶(s2 ‚àà ‚Ñù ‚Ü¶((s0 ` s2)[-](s1 ` s2))))\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, s1)\n}","parent":[],"children":["subrval"]},{"name":"df-mulv","content":"Define the operation of scalar multiplication. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"axiom df-mulv(setvar s0, setvar s1, setvar s2) {\n  |- wceq(ctimesr, cmpo(s0, s1, universe, universe, cmpt(s2, cr, co(cv(s0), cmul, cfv(cv(s1), cv(s2))))))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffss(s0, s1)\n}","pretty":"axiom df-mulv(setvar s0, setvar s1, setvar s2) {\n  ‚ä¢ .v =(s0 ‚àà ùïå, s1 ‚àà ùïå ‚Ü¶(s2 ‚àà ‚Ñù ‚Ü¶(s0[√ó](s1 ` s2))))\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, s1)\n}","parent":[],"children":["mulvval"]},{"name":"addrval","content":"Value of the operation of vector addition. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm addrval(setvar s0, class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wceq(co(c0, cplusr, c2), cmpt(s0, cr, co(cfv(c0, cv(s0)), caddc, cfv(c2, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n} = {\n  syl2an(wcel(c0, c1), wcel(c2, c3), wceq(co(c0, cplusr, c2), cmpt(s0, cr, co(cfv(c0, cv(s0)), caddc, cfv(c2, cv(s0))))), wcel(c0, universe), wcel(c2, universe))\n  elex(c0, c1)\n  elex(c2, c3)\n  ovmpt2a(hs0, hs1, c0, universe, c2, universe, cplusr, cmpt(s0, cr, co(cfv(c0, cv(s0)), caddc, cfv(c2, cv(s0)))), cmpt(s0, cr, co(cfv(cv(hs0), cv(s0)), caddc, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, cr, co(cfv(cv(hs0), cv(s0)), caddc, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), caddc, cfv(c2, cv(s0))), wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)))\n  oveqan12d(cfv(cv(hs0), cv(s0)), caddc, cfv(cv(hs1), cv(s0)), cfv(c0, cv(s0)), cfv(c2, cv(s0)), wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  fveq1(cv(hs0), c0, cv(s0))\n  fveq1(cv(hs1), c2, cv(s0))\n  df-addr(hs0, hs1, s0)\n  mptex(s0, cr, co(cfv(c0, cv(s0)), caddc, cfv(c2, cv(s0))))\n  reex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c2)\n  diff.hs0.c(cmpt(s0, cr, co(cfv(c0, cv(s0)), caddc, cfv(c2, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(universe)\n  diff.hs1.c(c2)\n  diff.hs1.c(cmpt(s0, cr, co(cfv(c0, cv(s0)), caddc, cfv(c2, cv(s0)))))\n  diff.wa.s(s0, wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.cr.s(s0)\n}","pretty":"thm addrval(setvar s0, class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[+r]c2)=(s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[+](c2 ` s0))))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c2)\n} = {\n  syl2an(c0 ‚àà c1, c2 ‚àà c3, (c0[+r]c2)=(s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[+](c2 ` s0))), c0 ‚àà ùïå, c2 ‚àà ùïå)\n  elex(c0, c1)\n  elex(c2, c3)\n  ovmpt2a(hs0, hs1, c0, universe, c2, universe, cplusr, (s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[+](c2 ` s0))), (s0 ‚àà ‚Ñù ‚Ü¶((hs0 ` s0)[+](hs1 ` s0))))\n  mpteq2dv(s0, cr, ((hs0 ` s0)[+](hs1 ` s0)), ((c0 ` s0)[+](c2 ` s0)), (hs0 = c0 ‚àß hs1 = c2))\n  oveqan12d((hs0 ` s0), caddc, (hs1 ` s0), (c0 ` s0), (c2 ` s0), hs0 = c0, hs1 = c2)\n  fveq1(hs0, c0, s0)\n  fveq1(hs1, c2, s0)\n  df-addr(hs0, hs1, s0)\n  mptex(s0, cr, ((c0 ` s0)[+](c2 ` s0)))\n  reex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c2)\n  diff.hs0.c((s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[+](c2 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c(universe)\n  diff.hs1.c(c2)\n  diff.hs1.c((s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[+](c2 ` s0))))\n  diff.wa.s(s0, hs0 = c0, hs1 = c2)\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.cr.s(s0)\n}","parent":["syl2an","elex","ovmpt2a","mpteq2dv","oveqan12d","fveq1","df-addr","mptex","reex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wa.s","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.cr.s"],"children":["addrfv","addrfn"]},{"name":"subrval","content":"Value of the operation of vector subtraction. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm subrval(setvar s0, class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wceq(co(c0, cminusr, c2), cmpt(s0, cr, co(cfv(c0, cv(s0)), cmin, cfv(c2, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n} = {\n  syl2an(wcel(c0, c1), wcel(c2, c3), wceq(co(c0, cminusr, c2), cmpt(s0, cr, co(cfv(c0, cv(s0)), cmin, cfv(c2, cv(s0))))), wcel(c0, universe), wcel(c2, universe))\n  elex(c0, c1)\n  elex(c2, c3)\n  ovmpt2a(hs0, hs1, c0, universe, c2, universe, cminusr, cmpt(s0, cr, co(cfv(c0, cv(s0)), cmin, cfv(c2, cv(s0)))), cmpt(s0, cr, co(cfv(cv(hs0), cv(s0)), cmin, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, cr, co(cfv(cv(hs0), cv(s0)), cmin, cfv(cv(hs1), cv(s0))), co(cfv(c0, cv(s0)), cmin, cfv(c2, cv(s0))), wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)))\n  oveqan12d(cfv(cv(hs0), cv(s0)), cmin, cfv(cv(hs1), cv(s0)), cfv(c0, cv(s0)), cfv(c2, cv(s0)), wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  fveq1(cv(hs0), c0, cv(s0))\n  fveq1(cv(hs1), c2, cv(s0))\n  df-subr(hs0, hs1, s0)\n  mptex(s0, cr, co(cfv(c0, cv(s0)), cmin, cfv(c2, cv(s0))))\n  reex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c2)\n  diff.hs0.c(cmpt(s0, cr, co(cfv(c0, cv(s0)), cmin, cfv(c2, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(universe)\n  diff.hs1.c(c2)\n  diff.hs1.c(cmpt(s0, cr, co(cfv(c0, cv(s0)), cmin, cfv(c2, cv(s0)))))\n  diff.wa.s(s0, wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.cr.s(s0)\n}","pretty":"thm subrval(setvar s0, class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[-r]c2)=(s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[-](c2 ` s0))))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c2)\n} = {\n  syl2an(c0 ‚àà c1, c2 ‚àà c3, (c0[-r]c2)=(s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[-](c2 ` s0))), c0 ‚àà ùïå, c2 ‚àà ùïå)\n  elex(c0, c1)\n  elex(c2, c3)\n  ovmpt2a(hs0, hs1, c0, universe, c2, universe, cminusr, (s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[-](c2 ` s0))), (s0 ‚àà ‚Ñù ‚Ü¶((hs0 ` s0)[-](hs1 ` s0))))\n  mpteq2dv(s0, cr, ((hs0 ` s0)[-](hs1 ` s0)), ((c0 ` s0)[-](c2 ` s0)), (hs0 = c0 ‚àß hs1 = c2))\n  oveqan12d((hs0 ` s0), cmin, (hs1 ` s0), (c0 ` s0), (c2 ` s0), hs0 = c0, hs1 = c2)\n  fveq1(hs0, c0, s0)\n  fveq1(hs1, c2, s0)\n  df-subr(hs0, hs1, s0)\n  mptex(s0, cr, ((c0 ` s0)[-](c2 ` s0)))\n  reex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c2)\n  diff.hs0.c((s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[-](c2 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c(universe)\n  diff.hs1.c(c2)\n  diff.hs1.c((s0 ‚àà ‚Ñù ‚Ü¶((c0 ` s0)[-](c2 ` s0))))\n  diff.wa.s(s0, hs0 = c0, hs1 = c2)\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.cr.s(s0)\n}","parent":["syl2an","elex","ovmpt2a","mpteq2dv","oveqan12d","fveq1","df-subr","mptex","reex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wa.s","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.cr.s"],"children":["subrfv","subrfn"]},{"name":"mulvval","content":"Value of the operation of scalar multiplication. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm mulvval(setvar s0, class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wceq(co(c0, ctimesr, c2), cmpt(s0, cr, co(c0, cmul, cfv(c2, cv(s0))))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c2)\n} = {\n  syl2an(wcel(c0, c1), wcel(c2, c3), wceq(co(c0, ctimesr, c2), cmpt(s0, cr, co(c0, cmul, cfv(c2, cv(s0))))), wcel(c0, universe), wcel(c2, universe))\n  elex(c0, c1)\n  elex(c2, c3)\n  ovmpt2a(hs0, hs1, c0, universe, c2, universe, ctimesr, cmpt(s0, cr, co(c0, cmul, cfv(c2, cv(s0)))), cmpt(s0, cr, co(cv(hs0), cmul, cfv(cv(hs1), cv(s0)))))\n  mpteq2dv(s0, cr, co(cv(hs0), cmul, cfv(cv(hs1), cv(s0))), co(c0, cmul, cfv(c2, cv(s0))), wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)))\n  sylan2(wceq(cv(hs0), c0), wceq(cv(hs1), c2), wceq(co(cv(hs0), cmul, cfv(cv(hs1), cv(s0))), co(c0, cmul, cfv(c2, cv(s0)))), wceq(cfv(cv(hs1), cv(s0)), cfv(c2, cv(s0))))\n  fveq1(cv(hs1), c2, cv(s0))\n  oveq12(cv(hs0), c0, cfv(cv(hs1), cv(s0)), cfv(c2, cv(s0)), cmul)\n  df-mulv(hs0, hs1, s0)\n  mptex(s0, cr, co(c0, cmul, cfv(c2, cv(s0))))\n  reex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c2)\n  diff.hs0.c(cmpt(s0, cr, co(c0, cmul, cfv(c2, cv(s0)))))\n  diff.hs1.c(c0)\n  diff.hs1.c(universe)\n  diff.hs1.c(c2)\n  diff.hs1.c(cmpt(s0, cr, co(c0, cmul, cfv(c2, cv(s0)))))\n  diff.wa.s(s0, wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, cv(hs1), c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.cr.s(s0)\n}","pretty":"thm mulvval(setvar s0, class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[.v]c2)=(s0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` s0))))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c2)\n} = {\n  syl2an(c0 ‚àà c1, c2 ‚àà c3, (c0[.v]c2)=(s0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` s0))), c0 ‚àà ùïå, c2 ‚àà ùïå)\n  elex(c0, c1)\n  elex(c2, c3)\n  ovmpt2a(hs0, hs1, c0, universe, c2, universe, ctimesr, (s0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` s0))), (s0 ‚àà ‚Ñù ‚Ü¶(hs0[√ó](hs1 ` s0))))\n  mpteq2dv(s0, cr, (hs0[√ó](hs1 ` s0)), (c0[√ó](c2 ` s0)), (hs0 = c0 ‚àß hs1 = c2))\n  sylan2(hs0 = c0, hs1 = c2, (hs0[√ó](hs1 ` s0))=(c0[√ó](c2 ` s0)), (hs1 ` s0)=(c2 ` s0))\n  fveq1(hs1, c2, s0)\n  oveq12(hs0, c0, (hs1 ` s0), (c2 ` s0), cmul)\n  df-mulv(hs0, hs1, s0)\n  mptex(s0, cr, (c0[√ó](c2 ` s0)))\n  reex()\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c2)\n  diff.hs0.c((s0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` s0))))\n  diff.hs1.c(c0)\n  diff.hs1.c(universe)\n  diff.hs1.c(c2)\n  diff.hs1.c((s0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` s0))))\n  diff.wa.s(s0, hs0 = c0, hs1 = c2)\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.wceq.s(s0, hs1, c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs0.s(s0)\n  diff.hs1.s(s0)\n  diff.cr.s(s0)\n}","parent":["syl2an","elex","ovmpt2a","mpteq2dv","sylan2","fveq1","oveq12","df-mulv","mptex","reex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.wa.s","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s","diff.cr.s"],"children":["mulvfv","mulvfn"]},{"name":"addrfv","content":"Vector addition at a value. The operation takes each vector ` A ` and ` B ` and forms a new vector whose values are the sum of each of the values of ` A ` and ` B ` . (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm addrfv(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(w3a(wcel(c0, c1), wcel(c2, c3), wcel(c4, cr)), wceq(cfv(co(c0, cplusr, c2), c4), co(cfv(c0, c4), caddc, cfv(c2, c4))))\n} = {\n  3impa(wcel(c0, c1), wcel(c2, c3), wcel(c4, cr), wceq(cfv(co(c0, cplusr, c2), c4), co(cfv(c0, c4), caddc, cfv(c2, c4))))\n  sylan9eq(cfv(co(c0, cplusr, c2), c4), co(cfv(c0, c4), caddc, cfv(c2, c4)), cfv(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))), c4), wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, cr))\n  fveq1d(co(c0, cplusr, c2), c4, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))), wa(wcel(c0, c1), wcel(c2, c3)))\n  addrval(hs0, c0, c1, c2, c3)\n  fvmpt(hs0, c4, cr, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))), co(cfv(c0, c4), caddc, cfv(c2, c4)), co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0))))\n  oveq12d(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)), cfv(c0, c4), cfv(c2, c4), wceq(cv(hs0), c4))\n  fveq2(cv(hs0), c4, c0)\n  fveq2(cv(hs0), c4, c2)\n  eqid(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))))\n  ovex(cfv(c0, c4), caddc, cfv(c2, c4))\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(c4)\n  diff.hs0.c(cr)\n  diff.hs0.c(co(cfv(c0, c4), caddc, cfv(c2, c4)))\n}","pretty":"thm addrfv(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3 ‚àß c4 ‚àà ‚Ñù)‚Üí((c0[+r]c2)` c4)=((c0 ` c4)[+](c2 ` c4)))\n} = {\n  3impa(c0 ‚àà c1, c2 ‚àà c3, c4 ‚àà ‚Ñù, ((c0[+r]c2)` c4)=((c0 ` c4)[+](c2 ` c4)))\n  sylan9eq(((c0[+r]c2)` c4), ((c0 ` c4)[+](c2 ` c4)), ((hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0)))` c4), (c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà ‚Ñù)\n  fveq1d((c0[+r]c2), c4, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0))), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  addrval(hs0, c0, c1, c2, c3)\n  fvmpt(hs0, c4, cr, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0))), ((c0 ` c4)[+](c2 ` c4)), ((c0 ` hs0)[+](c2 ` hs0)))\n  oveq12d((c0 ` hs0), caddc, (c2 ` hs0), (c0 ` c4), (c2 ` c4), hs0 = c4)\n  fveq2(hs0, c4, c0)\n  fveq2(hs0, c4, c2)\n  eqid((hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0))))\n  ovex((c0 ` c4), caddc, (c2 ` c4))\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(c4)\n  diff.hs0.c(cr)\n  diff.hs0.c(((c0 ` c4)[+](c2 ` c4)))\n}","parent":["3impa","sylan9eq","fveq1d","addrval","fvmpt","oveq12d","fveq2","eqid","ovex","diff.hs0.c"],"children":["addrcom"]},{"name":"subrfv","content":"Vector subtraction at a value. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm subrfv(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(w3a(wcel(c0, c1), wcel(c2, c3), wcel(c4, cr)), wceq(cfv(co(c0, cminusr, c2), c4), co(cfv(c0, c4), cmin, cfv(c2, c4))))\n} = {\n  3impa(wcel(c0, c1), wcel(c2, c3), wcel(c4, cr), wceq(cfv(co(c0, cminusr, c2), c4), co(cfv(c0, c4), cmin, cfv(c2, c4))))\n  sylan9eq(cfv(co(c0, cminusr, c2), c4), co(cfv(c0, c4), cmin, cfv(c2, c4)), cfv(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))), c4), wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, cr))\n  fveq1d(co(c0, cminusr, c2), c4, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))), wa(wcel(c0, c1), wcel(c2, c3)))\n  subrval(hs0, c0, c1, c2, c3)\n  fvmpt(hs0, c4, cr, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))), co(cfv(c0, c4), cmin, cfv(c2, c4)), co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0))))\n  oveq12d(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)), cfv(c0, c4), cfv(c2, c4), wceq(cv(hs0), c4))\n  fveq2(cv(hs0), c4, c0)\n  fveq2(cv(hs0), c4, c2)\n  eqid(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))))\n  ovex(cfv(c0, c4), cmin, cfv(c2, c4))\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(c4)\n  diff.hs0.c(cr)\n  diff.hs0.c(co(cfv(c0, c4), cmin, cfv(c2, c4)))\n}","pretty":"thm subrfv(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3 ‚àß c4 ‚àà ‚Ñù)‚Üí((c0[-r]c2)` c4)=((c0 ` c4)[-](c2 ` c4)))\n} = {\n  3impa(c0 ‚àà c1, c2 ‚àà c3, c4 ‚àà ‚Ñù, ((c0[-r]c2)` c4)=((c0 ` c4)[-](c2 ` c4)))\n  sylan9eq(((c0[-r]c2)` c4), ((c0 ` c4)[-](c2 ` c4)), ((hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0)))` c4), (c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà ‚Ñù)\n  fveq1d((c0[-r]c2), c4, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0))), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  subrval(hs0, c0, c1, c2, c3)\n  fvmpt(hs0, c4, cr, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0))), ((c0 ` c4)[-](c2 ` c4)), ((c0 ` hs0)[-](c2 ` hs0)))\n  oveq12d((c0 ` hs0), cmin, (c2 ` hs0), (c0 ` c4), (c2 ` c4), hs0 = c4)\n  fveq2(hs0, c4, c0)\n  fveq2(hs0, c4, c2)\n  eqid((hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0))))\n  ovex((c0 ` c4), cmin, (c2 ` c4))\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(c4)\n  diff.hs0.c(cr)\n  diff.hs0.c(((c0 ` c4)[-](c2 ` c4)))\n}","parent":["3impa","sylan9eq","fveq1d","subrval","fvmpt","oveq12d","fveq2","eqid","ovex","diff.hs0.c"],"children":[]},{"name":"mulvfv","content":"Scalar multiplication at a value. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm mulvfv(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(w3a(wcel(c0, c1), wcel(c2, c3), wcel(c4, cr)), wceq(cfv(co(c0, ctimesr, c2), c4), co(c0, cmul, cfv(c2, c4))))\n} = {\n  3impa(wcel(c0, c1), wcel(c2, c3), wcel(c4, cr), wceq(cfv(co(c0, ctimesr, c2), c4), co(c0, cmul, cfv(c2, c4))))\n  sylan9eq(cfv(co(c0, ctimesr, c2), c4), co(c0, cmul, cfv(c2, c4)), cfv(cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))), c4), wa(wcel(c0, c1), wcel(c2, c3)), wcel(c4, cr))\n  fveq1d(co(c0, ctimesr, c2), c4, cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))), wa(wcel(c0, c1), wcel(c2, c3)))\n  mulvval(hs0, c0, c1, c2, c3)\n  fvmpt(hs0, c4, cr, cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))), co(c0, cmul, cfv(c2, c4)), co(c0, cmul, cfv(c2, cv(hs0))))\n  oveq2d(c0, cmul, cfv(c2, cv(hs0)), cfv(c2, c4), wceq(cv(hs0), c4))\n  fveq2(cv(hs0), c4, c2)\n  eqid(cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))))\n  ovex(c0, cmul, cfv(c2, c4))\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(c4)\n  diff.hs0.c(cr)\n  diff.hs0.c(co(c0, cmul, cfv(c2, c4)))\n}","pretty":"thm mulvfv(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3 ‚àß c4 ‚àà ‚Ñù)‚Üí((c0[.v]c2)` c4)=(c0[√ó](c2 ` c4)))\n} = {\n  3impa(c0 ‚àà c1, c2 ‚àà c3, c4 ‚àà ‚Ñù, ((c0[.v]c2)` c4)=(c0[√ó](c2 ` c4)))\n  sylan9eq(((c0[.v]c2)` c4), (c0[√ó](c2 ` c4)), ((hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0)))` c4), (c0 ‚àà c1 ‚àß c2 ‚àà c3), c4 ‚àà ‚Ñù)\n  fveq1d((c0[.v]c2), c4, (hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0))), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  mulvval(hs0, c0, c1, c2, c3)\n  fvmpt(hs0, c4, cr, (hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0))), (c0[√ó](c2 ` c4)), (c0[√ó](c2 ` hs0)))\n  oveq2d(c0, cmul, (c2 ` hs0), (c2 ` c4), hs0 = c4)\n  fveq2(hs0, c4, c2)\n  eqid((hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0))))\n  ovex(c0, cmul, (c2 ` c4))\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(c4)\n  diff.hs0.c(cr)\n  diff.hs0.c((c0[√ó](c2 ` c4)))\n}","parent":["3impa","sylan9eq","fveq1d","mulvval","fvmpt","oveq2d","fveq2","eqid","ovex","diff.hs0.c"],"children":[]},{"name":"addrfn","content":"Vector addition produces a function. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm addrfn(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wfn(co(c0, cplusr, c2), cr))\n} = {\n  mpbiri(wa(wcel(c0, c1), wcel(c2, c3)), wfn(co(c0, cplusr, c2), cr), wfn(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))), cr))\n  fnmpti(hs0, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))), cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0))))\n  ovex(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))\n  eqid(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))))\n  fneq1d(co(c0, cplusr, c2), cr, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0)))), wa(wcel(c0, c1), wcel(c2, c3)))\n  addrval(hs0, c0, c1, c2, c3)\n  diff.hs0.c(cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","pretty":"thm addrfn(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[+r]c2)[Fn]‚Ñù)\n} = {\n  mpbiri((c0 ‚àà c1 ‚àß c2 ‚àà c3), (c0[+r]c2)[Fn]‚Ñù, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0)))[Fn]‚Ñù)\n  fnmpti(hs0, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0))), cr, ((c0 ` hs0)[+](c2 ` hs0)))\n  ovex((c0 ` hs0), caddc, (c2 ` hs0))\n  eqid((hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0))))\n  fneq1d((c0[+r]c2), cr, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[+](c2 ` hs0))), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  addrval(hs0, c0, c1, c2, c3)\n  diff.hs0.c(cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","parent":["mpbiri","fnmpti","ovex","eqid","fneq1d","addrval","diff.hs0.c"],"children":["addrcom"]},{"name":"subrfn","content":"Vector subtraction produces a function. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm subrfn(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wfn(co(c0, cminusr, c2), cr))\n} = {\n  mpbiri(wa(wcel(c0, c1), wcel(c2, c3)), wfn(co(c0, cminusr, c2), cr), wfn(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))), cr))\n  fnmpti(hs0, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))), cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0))))\n  ovex(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))\n  eqid(cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))))\n  fneq1d(co(c0, cminusr, c2), cr, cmpt(hs0, cr, co(cfv(c0, cv(hs0)), cmin, cfv(c2, cv(hs0)))), wa(wcel(c0, c1), wcel(c2, c3)))\n  subrval(hs0, c0, c1, c2, c3)\n  diff.hs0.c(cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","pretty":"thm subrfn(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[-r]c2)[Fn]‚Ñù)\n} = {\n  mpbiri((c0 ‚àà c1 ‚àß c2 ‚àà c3), (c0[-r]c2)[Fn]‚Ñù, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0)))[Fn]‚Ñù)\n  fnmpti(hs0, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0))), cr, ((c0 ` hs0)[-](c2 ` hs0)))\n  ovex((c0 ` hs0), cmin, (c2 ` hs0))\n  eqid((hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0))))\n  fneq1d((c0[-r]c2), cr, (hs0 ‚àà ‚Ñù ‚Ü¶((c0 ` hs0)[-](c2 ` hs0))), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  subrval(hs0, c0, c1, c2, c3)\n  diff.hs0.c(cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","parent":["mpbiri","fnmpti","ovex","eqid","fneq1d","subrval","diff.hs0.c"],"children":[]},{"name":"mulvfn","content":"Scalar multiplication producees a function. (Contributed by Andrew Salmon, 27-Jan-2012.)","origin":"thm mulvfn(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wfn(co(c0, ctimesr, c2), cr))\n} = {\n  mpbiri(wa(wcel(c0, c1), wcel(c2, c3)), wfn(co(c0, ctimesr, c2), cr), wfn(cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))), cr))\n  fnmpti(hs0, cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))), cr, co(c0, cmul, cfv(c2, cv(hs0))))\n  ovex(c0, cmul, cfv(c2, cv(hs0)))\n  eqid(cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))))\n  fneq1d(co(c0, ctimesr, c2), cr, cmpt(hs0, cr, co(c0, cmul, cfv(c2, cv(hs0)))), wa(wcel(c0, c1), wcel(c2, c3)))\n  mulvval(hs0, c0, c1, c2, c3)\n  diff.hs0.c(cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","pretty":"thm mulvfn(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[.v]c2)[Fn]‚Ñù)\n} = {\n  mpbiri((c0 ‚àà c1 ‚àß c2 ‚àà c3), (c0[.v]c2)[Fn]‚Ñù, (hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0)))[Fn]‚Ñù)\n  fnmpti(hs0, (hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0))), cr, (c0[√ó](c2 ` hs0)))\n  ovex(c0, cmul, (c2 ` hs0))\n  eqid((hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0))))\n  fneq1d((c0[.v]c2), cr, (hs0 ‚àà ‚Ñù ‚Ü¶(c0[√ó](c2 ` hs0))), (c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  mulvval(hs0, c0, c1, c2, c3)\n  diff.hs0.c(cr)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n}","parent":["mpbiri","fnmpti","ovex","eqid","fneq1d","mulvval","diff.hs0.c"],"children":[]},{"name":"addrcom","content":"Vector addition is commutative. (Contributed by Andrew Salmon, 28-Jan-2012.)","origin":"thm addrcom(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c3)), wceq(co(c0, cplusr, c2), co(c2, cplusr, c0)))\n} = {\n  mp2and(wa(wcel(c0, c1), wcel(c2, c3)), wceq(co(c0, cplusr, c2), co(c2, cplusr, c0)), wfn(co(c0, cplusr, c2), cr), wfn(co(c2, cplusr, c0), cr))\n  addrfn(c0, c1, c2, c3)\n  ancoms(wcel(c0, c1), wcel(c2, c3), wfn(co(c2, cplusr, c0), cr))\n  addrfn(c2, c3, c0, c1)\n  syl5ibrcom(wa(wcel(c0, c1), wcel(c2, c3)), wa(wfn(co(c0, cplusr, c2), cr), wfn(co(c2, cplusr, c0), cr)), wceq(co(c0, cplusr, c2), co(c2, cplusr, c0)), wral(hs0, cr, wceq(cfv(co(c0, cplusr, c2), cv(hs0)), cfv(co(c2, cplusr, c0), cv(hs0)))))\n  ralrimiv(hs0, cr, wa(wcel(c0, c1), wcel(c2, c3)), wceq(cfv(co(c0, cplusr, c2), cv(hs0)), cfv(co(c2, cplusr, c0), cv(hs0))))\n  3expia(wcel(c0, c1), wcel(c2, c3), wcel(cv(hs0), cr), wceq(cfv(co(c0, cplusr, c2), cv(hs0)), cfv(co(c2, cplusr, c0), cv(hs0))))\n  3eqtr4a(cfv(co(c0, cplusr, c2), cv(hs0)), cfv(co(c2, cplusr, c0), cv(hs0)), co(cfv(c0, cv(hs0)), caddc, cfv(c2, cv(hs0))), co(cfv(c2, cv(hs0)), caddc, cfv(c0, cv(hs0))), w3a(wcel(c0, c1), wcel(c2, c3), wcel(cv(hs0), cr)))\n  addcomgi(cfv(c0, cv(hs0)), cfv(c2, cv(hs0)))\n  addrfv(c0, c1, c2, c3, cv(hs0))\n  3com12(wcel(c0, c1), wcel(c2, c3), wcel(cv(hs0), cr), wceq(cfv(co(c2, cplusr, c0), cv(hs0)), co(cfv(c2, cv(hs0)), caddc, cfv(c0, cv(hs0)))))\n  addrfv(c2, c3, c0, c1, cv(hs0))\n  eqfnfv(hs0, co(c0, cplusr, c2), cr, co(c2, cplusr, c0))\n  diff.hs0.w(wa(wcel(c0, c1), wcel(c2, c3)))\n  diff.hs0.c(co(c0, cplusr, c2))\n  diff.hs0.c(cr)\n  diff.hs0.c(co(c2, cplusr, c0))\n}","pretty":"thm addrcom(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c3)‚Üí(c0[+r]c2)=(c2[+r]c0))\n} = {\n  mp2and((c0 ‚àà c1 ‚àß c2 ‚àà c3), (c0[+r]c2)=(c2[+r]c0), (c0[+r]c2)[Fn]‚Ñù, (c2[+r]c0)[Fn]‚Ñù)\n  addrfn(c0, c1, c2, c3)\n  ancoms(c0 ‚àà c1, c2 ‚àà c3, (c2[+r]c0)[Fn]‚Ñù)\n  addrfn(c2, c3, c0, c1)\n  syl5ibrcom((c0 ‚àà c1 ‚àß c2 ‚àà c3), ((c0[+r]c2)[Fn]‚Ñù ‚àß(c2[+r]c0)[Fn]‚Ñù), (c0[+r]c2)=(c2[+r]c0), ‚àÄ(hs0 ‚àà ‚Ñù,((c0[+r]c2)` hs0)=((c2[+r]c0)` hs0)))\n  ralrimiv(hs0, cr, (c0 ‚àà c1 ‚àß c2 ‚àà c3), ((c0[+r]c2)` hs0)=((c2[+r]c0)` hs0))\n  3expia(c0 ‚àà c1, c2 ‚àà c3, hs0 ‚àà ‚Ñù, ((c0[+r]c2)` hs0)=((c2[+r]c0)` hs0))\n  3eqtr4a(((c0[+r]c2)` hs0), ((c2[+r]c0)` hs0), ((c0 ` hs0)[+](c2 ` hs0)), ((c2 ` hs0)[+](c0 ` hs0)), (c0 ‚àà c1 ‚àß c2 ‚àà c3 ‚àß hs0 ‚àà ‚Ñù))\n  addcomgi((c0 ` hs0), (c2 ` hs0))\n  addrfv(c0, c1, c2, c3, hs0)\n  3com12(c0 ‚àà c1, c2 ‚àà c3, hs0 ‚àà ‚Ñù, ((c2[+r]c0)` hs0)=((c2 ` hs0)[+](c0 ` hs0)))\n  addrfv(c2, c3, c0, c1, hs0)\n  eqfnfv(hs0, (c0[+r]c2), cr, (c2[+r]c0))\n  diff.hs0.w((c0 ‚àà c1 ‚àß c2 ‚àà c3))\n  diff.hs0.c((c0[+r]c2))\n  diff.hs0.c(cr)\n  diff.hs0.c((c2[+r]c0))\n}","parent":["mp2and","addrfn","ancoms","syl5ibrcom","ralrimiv","3expia","3eqtr4a","addcomgi","addrfv","3com12","eqfnfv","diff.hs0.w","diff.hs0.c"],"children":[]},{"name":"df-ptdf","content":"Define the predicate ` PtDf ` , which is a utility definition used to shorten definitions and simplify proofs. (Contributed by Andrew Salmon, 15-Jul-2012.)","origin":"axiom df-ptdf(setvar s0, class c0, class c1) {\n  |- wceq(cptdfc(c0, c1), cmpt(s0, cr, cima(co(co(cv(s0), ctimesr, co(c1, cminusr, c0)), cpv, c0), ctp(nat1, nat2, nat3))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n}","pretty":"axiom df-ptdf(setvar s0, class c0, class c1) {\n  ‚ä¢ PtDf(c0, c1)=(s0 ‚àà ‚Ñù ‚Ü¶(((s0[.v](c1[-r]c0))[+v]c0)\" { 1, 2, 3 }))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n}","parent":[],"children":[""]},{"name":"df-rr3","content":"Define the set of all points ` RR3 ` . We define each point ` A ` as a function to allow the use of vector addition and subtraction as well as scalar multiplication in our proofs. (Contributed by Andrew Salmon, 15-Jul-2012.)","origin":"axiom df-rr3() {\n  |- wceq(crr3c, co(cr, cmap, ctp(nat1, nat2, nat3)))\n}","pretty":"axiom df-rr3() {\n  ‚ä¢ RR3 =(‚Ñù[‚Ü¶]{ 1, 2, 3 })\n}","parent":[],"children":[""]},{"name":"df-line3","content":"Define the set of all lines. A line is an infinite subset of ` RR3 ` that satisfies a ` PtDf ` property. (Contributed by Andrew Salmon, 15-Jul-2012.)","origin":"axiom df-line3(setvar s0, setvar s1, setvar s2) {\n  |- wceq(cline3, crab(s0, cpw(crr3c), wa(wbr(c2o, cdom, cv(s0)), wral(s1, cv(s0), wral(s2, cv(s0), wi(wne(cv(s2), cv(s1)), wceq(crn(cptdfc(cv(s1), cv(s2))), cv(s0))))))))\n  -| diffss(s0, s1)\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n}","pretty":"axiom df-line3(setvar s0, setvar s1, setvar s2) {\n  ‚ä¢ line3 = { s0 ‚àà P(RR3)|(2o[‚âº]s0 ‚àß ‚àÄ(s1 ‚àà s0, ‚àÄ(s2 ‚àà s0,(s2 ‚â† s1 ‚Üí ran(PtDf(s1, s2))= s0))))}\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, s2)\n}","parent":[],"children":[""]}]}