{"index":683,"title":"Definitions and basic properties","content":"","blocks":[{"name":"cvtx","content":"Extend class notation with the vertices of \"graphs\".","origin":"const class cvtx { Vtx }","pretty":"","parent":[],"children":[]},{"name":"diff.cvtx.s","content":"","origin":"axiom diff.cvtx.s(setvar s0) {\n  |- diffsc(s0, cvtx)\n}","pretty":"axiom diff.cvtx.s(setvar s0) {\n  ⊢ d(s0, Vtx)\n}","parent":[],"children":[]},{"name":"diff.cvtx.c","content":"","origin":"axiom diff.cvtx.c(class c0) {\n  |- diffcc(cvtx, c0)\n}","pretty":"axiom diff.cvtx.c(class c0) {\n  ⊢ d(Vtx, c0)\n}","parent":[],"children":[]},{"name":"diff.cvtx.w","content":"","origin":"axiom diff.cvtx.w(wff w0) {\n  |- diffcw(cvtx, w0)\n}","pretty":"axiom diff.cvtx.w(wff w0) {\n  ⊢ d(Vtx, w0)\n}","parent":[],"children":[]},{"name":"ciedg","content":"Extend class notation with the indexed edges of \"graphs\".","origin":"const class ciedg { iEdg }","pretty":"","parent":[],"children":[]},{"name":"diff.ciedg.s","content":"","origin":"axiom diff.ciedg.s(setvar s0) {\n  |- diffsc(s0, ciedg)\n}","pretty":"axiom diff.ciedg.s(setvar s0) {\n  ⊢ d(s0, iEdg)\n}","parent":[],"children":[]},{"name":"diff.ciedg.c","content":"","origin":"axiom diff.ciedg.c(class c0) {\n  |- diffcc(ciedg, c0)\n}","pretty":"axiom diff.ciedg.c(class c0) {\n  ⊢ d(iEdg, c0)\n}","parent":[],"children":[]},{"name":"diff.ciedg.w","content":"","origin":"axiom diff.ciedg.w(wff w0) {\n  |- diffcw(ciedg, w0)\n}","pretty":"axiom diff.ciedg.w(wff w0) {\n  ⊢ d(iEdg, w0)\n}","parent":[],"children":[]},{"name":"df-vtx","content":"Define the function mapping a graph to the set of its vertices. This definition is very general: It defines the set of vertices for any ordered pair as its first component, and for any other class as its \"base set\". It is meaningful, however, only if the ordered pair represents a graph resp. the class is an extensible structure representing a graph. (Contributed by AV, 9-Jan-2020.) (Revised by AV, 20-Sep-2020.)","origin":"axiom df-vtx(setvar s0) {\n  |- wceq(cvtx, cmpt(s0, universe, cif(cfv(c1st, cv(s0)), cfv(cbs, cv(s0)), wcel(cv(s0), cxp(universe, universe)))))\n}","pretty":"axiom df-vtx(setvar s0) {\n  ⊢ Vtx =(s0 ∈ 𝕌 ↦ if(s0 ∈(𝕌 × 𝕌),(1st ` s0),(Base ` s0)))\n}","parent":[],"children":["vtxval"]},{"name":"df-iedg","content":"Define the function mapping a graph to its indexed edges. This definition is very general: It defines the indexed edges for any ordered pair as its second component, and for any other class as its \"edge function\". It is meaningful, however, only if the ordered pair represents a graph resp. the class is an extensible structure (containing a slot for \"edge functions\") representing a graph. (Contributed by AV, 20-Sep-2020.)","origin":"axiom df-iedg(setvar s0) {\n  |- wceq(ciedg, cmpt(s0, universe, cif(cfv(c2nd, cv(s0)), cfv(cedgf, cv(s0)), wcel(cv(s0), cxp(universe, universe)))))\n}","pretty":"axiom df-iedg(setvar s0) {\n  ⊢ iEdg =(s0 ∈ 𝕌 ↦ if(s0 ∈(𝕌 × 𝕌),(2nd ` s0),(.ef ` s0)))\n}","parent":[],"children":["iedgval"]},{"name":"vtxval","content":"The set of vertices of a graph. (Contributed by AV, 9-Jan-2020.) (Revised by AV, 21-Sep-2020.)","origin":"thm vtxval(class c0) {\n  |- wceq(cfv(cvtx, c0), cif(cfv(c1st, c0), cfv(cbs, c0), wcel(c0, cxp(universe, universe))))\n} = {\n  pm2.61i(wceq(cfv(cvtx, c0), cif(cfv(c1st, c0), cfv(cbs, c0), wcel(c0, cxp(universe, universe)))), wcel(c0, universe))\n  fvmpt(hs0, c0, universe, cvtx, cif(cfv(c1st, c0), cfv(cbs, c0), wcel(c0, cxp(universe, universe))), cif(cfv(c1st, cv(hs0)), cfv(cbs, cv(hs0)), wcel(cv(hs0), cxp(universe, universe))))\n  ifbieq12d(cfv(c1st, cv(hs0)), cfv(cbs, cv(hs0)), cfv(c1st, c0), cfv(cbs, c0), wceq(cv(hs0), c0), wcel(cv(hs0), cxp(universe, universe)), wcel(c0, cxp(universe, universe)))\n  eleq1(cv(hs0), c0, cxp(universe, universe))\n  fveq2(cv(hs0), c0, c1st)\n  fveq2(cv(hs0), c0, cbs)\n  df-vtx(hs0)\n  ifex(cfv(c1st, c0), cfv(cbs, c0), wcel(c0, cxp(universe, universe)))\n  fvex(c1st, c0)\n  fvex(cbs, c0)\n  3eqtr4rd(cfv(cvtx, c0), cif(cfv(c1st, c0), cfv(cbs, c0), wcel(c0, cxp(universe, universe))), cfv(cbs, c0), emptycls, wn(wcel(c0, universe)))\n  fvprc(c0, cbs)\n  iffalsed(cfv(c1st, c0), cfv(cbs, c0), wn(wcel(c0, universe)), wcel(c0, cxp(universe, universe)))\n  prcnel(c0, cxp(universe, universe))\n  fvprc(c0, cvtx)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(cif(cfv(c1st, c0), cfv(cbs, c0), wcel(c0, cxp(universe, universe))))\n}","pretty":"thm vtxval(class c0) {\n  ⊢ (Vtx ` c0)= if(c0 ∈(𝕌 × 𝕌),(1st ` c0),(Base ` c0))\n} = {\n  pm2.61i((Vtx ` c0)= if(c0 ∈(𝕌 × 𝕌),(1st ` c0),(Base ` c0)), c0 ∈ 𝕌)\n  fvmpt(hs0, c0, universe, cvtx, if(c0 ∈(𝕌 × 𝕌),(1st ` c0),(Base ` c0)), if(hs0 ∈(𝕌 × 𝕌),(1st ` hs0),(Base ` hs0)))\n  ifbieq12d((1st ` hs0), (Base ` hs0), (1st ` c0), (Base ` c0), hs0 = c0, hs0 ∈(𝕌 × 𝕌), c0 ∈(𝕌 × 𝕌))\n  eleq1(hs0, c0, (𝕌 × 𝕌))\n  fveq2(hs0, c0, c1st)\n  fveq2(hs0, c0, cbs)\n  df-vtx(hs0)\n  ifex((1st ` c0), (Base ` c0), c0 ∈(𝕌 × 𝕌))\n  fvex(c1st, c0)\n  fvex(cbs, c0)\n  3eqtr4rd((Vtx ` c0), if(c0 ∈(𝕌 × 𝕌),(1st ` c0),(Base ` c0)), (Base ` c0), emptycls, ¬ c0 ∈ 𝕌)\n  fvprc(c0, cbs)\n  iffalsed((1st ` c0), (Base ` c0), ¬ c0 ∈ 𝕌, c0 ∈(𝕌 × 𝕌))\n  prcnel(c0, (𝕌 × 𝕌))\n  fvprc(c0, cvtx)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(if(c0 ∈(𝕌 × 𝕌),(1st ` c0),(Base ` c0)))\n}","parent":["pm2.61i","fvmpt","ifbieq12d","eleq1","fveq2","df-vtx","ifex","fvex","3eqtr4rd","fvprc","iffalsed","prcnel","diff.hs0.c"],"children":["opvtxval","funvtxdmge2val","funvtxdm2val","snstrvtxval","vtxval0"]},{"name":"iedgval","content":"The set of indexed edges of a graph. (Contributed by AV, 21-Sep-2020.)","origin":"thm iedgval(class c0) {\n  |- wceq(cfv(ciedg, c0), cif(cfv(c2nd, c0), cfv(cedgf, c0), wcel(c0, cxp(universe, universe))))\n} = {\n  pm2.61i(wceq(cfv(ciedg, c0), cif(cfv(c2nd, c0), cfv(cedgf, c0), wcel(c0, cxp(universe, universe)))), wcel(c0, universe))\n  fvmpt(hs0, c0, universe, ciedg, cif(cfv(c2nd, c0), cfv(cedgf, c0), wcel(c0, cxp(universe, universe))), cif(cfv(c2nd, cv(hs0)), cfv(cedgf, cv(hs0)), wcel(cv(hs0), cxp(universe, universe))))\n  ifbieq12d(cfv(c2nd, cv(hs0)), cfv(cedgf, cv(hs0)), cfv(c2nd, c0), cfv(cedgf, c0), wceq(cv(hs0), c0), wcel(cv(hs0), cxp(universe, universe)), wcel(c0, cxp(universe, universe)))\n  eleq1(cv(hs0), c0, cxp(universe, universe))\n  fveq2(cv(hs0), c0, c2nd)\n  fveq2(cv(hs0), c0, cedgf)\n  df-iedg(hs0)\n  ifex(cfv(c2nd, c0), cfv(cedgf, c0), wcel(c0, cxp(universe, universe)))\n  fvex(c2nd, c0)\n  fvex(cedgf, c0)\n  3eqtr4rd(cfv(ciedg, c0), cif(cfv(c2nd, c0), cfv(cedgf, c0), wcel(c0, cxp(universe, universe))), cfv(cedgf, c0), emptycls, wn(wcel(c0, universe)))\n  fvprc(c0, cedgf)\n  iffalsed(cfv(c2nd, c0), cfv(cedgf, c0), wn(wcel(c0, universe)), wcel(c0, cxp(universe, universe)))\n  prcnel(c0, cxp(universe, universe))\n  fvprc(c0, ciedg)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(cif(cfv(c2nd, c0), cfv(cedgf, c0), wcel(c0, cxp(universe, universe))))\n}","pretty":"thm iedgval(class c0) {\n  ⊢ (iEdg ` c0)= if(c0 ∈(𝕌 × 𝕌),(2nd ` c0),(.ef ` c0))\n} = {\n  pm2.61i((iEdg ` c0)= if(c0 ∈(𝕌 × 𝕌),(2nd ` c0),(.ef ` c0)), c0 ∈ 𝕌)\n  fvmpt(hs0, c0, universe, ciedg, if(c0 ∈(𝕌 × 𝕌),(2nd ` c0),(.ef ` c0)), if(hs0 ∈(𝕌 × 𝕌),(2nd ` hs0),(.ef ` hs0)))\n  ifbieq12d((2nd ` hs0), (.ef ` hs0), (2nd ` c0), (.ef ` c0), hs0 = c0, hs0 ∈(𝕌 × 𝕌), c0 ∈(𝕌 × 𝕌))\n  eleq1(hs0, c0, (𝕌 × 𝕌))\n  fveq2(hs0, c0, c2nd)\n  fveq2(hs0, c0, cedgf)\n  df-iedg(hs0)\n  ifex((2nd ` c0), (.ef ` c0), c0 ∈(𝕌 × 𝕌))\n  fvex(c2nd, c0)\n  fvex(cedgf, c0)\n  3eqtr4rd((iEdg ` c0), if(c0 ∈(𝕌 × 𝕌),(2nd ` c0),(.ef ` c0)), (.ef ` c0), emptycls, ¬ c0 ∈ 𝕌)\n  fvprc(c0, cedgf)\n  iffalsed((2nd ` c0), (.ef ` c0), ¬ c0 ∈ 𝕌, c0 ∈(𝕌 × 𝕌))\n  prcnel(c0, (𝕌 × 𝕌))\n  fvprc(c0, ciedg)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(if(c0 ∈(𝕌 × 𝕌),(2nd ` c0),(.ef ` c0)))\n}","parent":["pm2.61i","fvmpt","ifbieq12d","eleq1","fveq2","df-iedg","ifex","fvex","3eqtr4rd","fvprc","iffalsed","prcnel","diff.hs0.c"],"children":["opiedgval","funiedgdmge2val","funiedgdm2val","snstriedgval","iedgval0"]},{"name":"1vgrex","content":"A graph with at least one vertex is a set. (Contributed by AV, 2-Mar-2021.)","origin":"thm 1vgrex(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wcel(c2, universe))\n  -| wceq(c1, cfv(cvtx, c2))\n} = {\n  eleq2s(c0, c1, cfv(cvtx, c2), wcel(c2, universe))\n  elfvex(c0, cvtx, c2)\n}","pretty":"thm 1vgrex(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 → c2 ∈ 𝕌)\n  ⊣ c1 =(Vtx ` c2)\n} = {\n  eleq2s(c0, c1, (Vtx ` c2), c2 ∈ 𝕌)\n  elfvex(c0, cvtx, c2)\n}","parent":["eleq2s","elfvex"],"children":["upgr1e","uspgr1e","nbgrval","cplgr1vlem","vtxdgval","vtxdgelxnn0","wlkson","trlsonfval","pthsonfval","spthson","2wlkd","is0wlk","0wlkon","is0trl","0trlon","0pthon","0clwlkv","1wlkd","3wlkd","wlkl0"]}]}