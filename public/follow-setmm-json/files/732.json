{"index":732,"title":"Natural deduction examples","content":"These are examples of how natural deduction rules can be applied in Metamath (both as line-for-line translations of ND rules, and as a way to apply deduction forms without being limited to applying ND rules). For more information, see ~ natded and ~ mmnatded.html . Since these examples should not be used within proofs of other theorems, especially in mathboxes, they are marked with \"(New usage is discouraged.)\".","blocks":[{"name":"ex-natded5.2","content":"Theorem 5.2 of [Clemente] p. 15, translated line by line using the interpretation of natural deduction in Metamath. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows: <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>5</TD><TD NOWRAP> ` ( ( ps /\\ ch ) -> th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ( ps /\\ ch ) -> th ) ) ` </TD> <TD>Given</TD> <TD>$e. </TD></TR> <TR><TD>2</TD><TD>2</TD><TD NOWRAP> ` ( ch -> ps ) ` </TD> <TD NOWRAP> ` ( ph -> ( ch -> ps ) ) ` </TD> <TD>Given</TD> <TD>$e. </TD></TR> <TR><TD>3</TD><TD>1</TD><TD> ` ch ` </TD> <TD> ` ( ph -> ch ) ` </TD> <TD>Given</TD> <TD>$e. </TD></TR> <TR><TD>4</TD><TD>3</TD><TD> ` ps ` </TD> <TD> ` ( ph -> ps ) ` </TD> <TD> ` -> `E 2,3</TD> <TD> ~ mpd , the MPE equivalent of ` -> `E, 1,2</TD></TR> <TR><TD>5</TD><TD>4</TD><TD> ` ( ps /\\ ch ) ` </TD> <TD> ` ( ph -> ( ps /\\ ch ) ) ` </TD> <TD> ` /\\ `I 4,3</TD> <TD> ~ jca , the MPE equivalent of ` /\\ `I, 3,1</TD></TR> </TR> <TR><TD>6</TD><TD>6</TD><TD> ` th ` </TD> <TD> ` ( ph -> th ) ` </TD> <TD> ` -> `E 1,5</TD> <TD> ~ mpd , the MPE equivalent of ` -> `E, 4,5</TD></TR> </TABLE> </HTML> The original used Latin letters for predicates; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. Below is the final Metamath proof (which reorders some steps). A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.2-2 . A proof without context is shown in ~ ex-natded5.2i . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.2(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, w1)\n  -| wi(w0, wi(wa(w2, w3), w1))\n  -| wi(w0, wi(w3, w2))\n  -| wi(w0, w3)\n} = {\n  mpd(w0, w1, wa(w2, w3))\n  jca(w0, w2, w3)\n  mpd(w0, w2, w3)\n}","pretty":"thm ex-natded5.2(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 →((w2 ∧ w3)→ w1))\n  ⊣ (w0 →(w3 → w2))\n  ⊣ (w0 → w3)\n} = {\n  mpd(w0, w1, (w2 ∧ w3))\n  jca(w0, w2, w3)\n  mpd(w0, w2, w3)\n}","parent":["mpd","jca"],"children":[]},{"name":"ex-natded5.2-2","content":"A more efficient proof of Theorem 5.2 of [Clemente] p. 15. Compare with ~ ex-natded5.2 and ~ ex-natded5.2i . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.2-2(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, w1)\n  -| wi(w0, wi(wa(w2, w3), w1))\n  -| wi(w0, wi(w3, w2))\n  -| wi(w0, w3)\n} = {\n  mp2and(w0, w1, w2, w3)\n  mpd(w0, w2, w3)\n}","pretty":"thm ex-natded5.2-2(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 → w1)\n  ⊣ (w0 →((w2 ∧ w3)→ w1))\n  ⊣ (w0 →(w3 → w2))\n  ⊣ (w0 → w3)\n} = {\n  mp2and(w0, w1, w2, w3)\n  mpd(w0, w2, w3)\n}","parent":["mp2and","mpd"],"children":[]},{"name":"ex-natded5.2i","content":"The same as ~ ex-natded5.2 and ~ ex-natded5.2-2 but with no context. (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.2i(wff w0, wff w1, wff w2) {\n  |- w0\n  -| wi(wa(w1, w2), w0)\n  -| wi(w2, w1)\n  -| w2\n} = {\n  ax-mp(w0, wa(w1, w2))\n  pm3.2i(w1, w2)\n  ax-mp(w1, w2)\n}","pretty":"thm ex-natded5.2i(wff w0, wff w1, wff w2) {\n  ⊢ w0\n  ⊣ ((w1 ∧ w2)→ w0)\n  ⊣ (w2 → w1)\n  ⊣ w2\n} = {\n  ax-mp(w0, (w1 ∧ w2))\n  pm3.2i(w1, w2)\n  ax-mp(w1, w2)\n}","parent":["ax-mp","pm3.2i"],"children":[]},{"name":"ex-natded5.3","content":"Theorem 5.3 of [Clemente] p. 16, translated line by line using an interpretation of natural deduction in Metamath. A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.3-2 . A proof without context is shown in ~ ex-natded5.3i . For information about ND and Metamath, see the <HTML> <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A></HTML>. The original proof, which uses Fitch style, was written as follows: <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>2;3</TD><TD NOWRAP> ` ( ps -> ch ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps -> ch ) ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>2</TD><TD>5;6</TD><TD NOWRAP> ` ( ch -> th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ch -> th ) ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>3</TD><TD>1</TD><TD> ...| ` ps ` </TD> <TD> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr , to access the new assumption </TD></TR> <TR><TD>4</TD><TD>4</TD><TD> ... ` ch ` </TD> <TD> ` ( ( ph /\\ ps ) -> ch ) ` </TD> <TD> ` -> `E 1,3</TD> <TD> ~ mpd , the MPE equivalent of ` -> `E, 1.3. ~ adantr was used to transform its dependency (we could also use ~ imp to get this directly from 1) </TD></TR> <TR><TD>5</TD><TD>7</TD><TD> ... ` th ` </TD> <TD> ` ( ( ph /\\ ps ) -> th ) ` </TD> <TD> ` -> `E 2,4</TD> <TD> ~ mpd , the MPE equivalent of ` -> `E, 4,6. ~ adantr was used to transform its dependency</TD></TR> <TR><TD>6</TD><TD>8</TD><TD> ... ` ( ch /\\ th ) ` </TD> <TD> ` ( ( ph /\\ ps ) -> ( ch /\\ th ) ) ` </TD> <TD> ` /\\ `I 4,5</TD> <TD> ~ jca , the MPE equivalent of ` /\\ `I, 4,7</TD></TR> <TR><TD>7</TD><TD>9</TD><TD NOWRAP> ` ( ps -> ( ch /\\ th ) ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps -> ( ch /\\ th ) ) ) ` </TD> <TD> ` -> `I 3,6</TD> <TD> ~ ex , the MPE equivalent of ` -> `I, 8</TD></TR> </TABLE> </HTML> The original used Latin letters for predicates; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.3(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wi(w1, wa(w2, w3)))\n  -| wi(w0, wi(w1, w2))\n  -| wi(w0, wi(w2, w3))\n} = {\n  ex(w0, w1, wa(w2, w3))\n  jca(wa(w0, w1), w2, w3)\n  mpd(wa(w0, w1), w3, w2)\n  mpd(wa(w0, w1), w2, w1)\n  simpr(w0, w1)\n  adantr(w0, w1, wi(w1, w2))\n  adantr(w0, w1, wi(w2, w3))\n}","pretty":"thm ex-natded5.3(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 →(w2 ∧ w3)))\n  ⊣ (w0 →(w1 → w2))\n  ⊣ (w0 →(w2 → w3))\n} = {\n  ex(w0, w1, (w2 ∧ w3))\n  jca((w0 ∧ w1), w2, w3)\n  mpd((w0 ∧ w1), w3, w2)\n  mpd((w0 ∧ w1), w2, w1)\n  simpr(w0, w1)\n  adantr(w0, w1, (w1 → w2))\n  adantr(w0, w1, (w2 → w3))\n}","parent":["ex","jca","mpd","simpr","adantr"],"children":[]},{"name":"ex-natded5.3-2","content":"A more efficient proof of Theorem 5.3 of [Clemente] p. 16. Compare with ~ ex-natded5.3 and ~ ex-natded5.3i . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.3-2(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wi(w1, wa(w2, w3)))\n  -| wi(w0, wi(w1, w2))\n  -| wi(w0, wi(w2, w3))\n} = {\n  jcad(w0, w1, w2, w3)\n  syld(w0, w1, w3, w2)\n}","pretty":"thm ex-natded5.3-2(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 →(w2 ∧ w3)))\n  ⊣ (w0 →(w1 → w2))\n  ⊣ (w0 →(w2 → w3))\n} = {\n  jcad(w0, w1, w2, w3)\n  syld(w0, w1, w3, w2)\n}","parent":["jcad","syld"],"children":[]},{"name":"ex-natded5.3i","content":"The same as ~ ex-natded5.3 and ~ ex-natded5.3-2 but with no context. Identical to ~ jccir , which should be used instead. (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.3i(wff w0, wff w1, wff w2) {\n  |- wi(w0, wa(w1, w2))\n  -| wi(w0, w1)\n  -| wi(w1, w2)\n} = {\n  jca(w0, w1, w2)\n  syl(w0, w2, w1)\n}","pretty":"thm ex-natded5.3i(wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(w1 ∧ w2))\n  ⊣ (w0 → w1)\n  ⊣ (w1 → w2)\n} = {\n  jca(w0, w1, w2)\n  syl(w0, w2, w1)\n}","parent":["jca","syl"],"children":[]},{"name":"ex-natded5.5","content":"Theorem 5.5 of [Clemente] p. 18, translated line by line using the usual translation of natural deduction (ND) in the Metamath Proof Explorer (MPE) notation. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>2;3</TD> <TD NOWRAP> ` ( ps -> ch ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps -> ch ) ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>2</TD><TD>5</TD><TD NOWRAP> ` -. ch ` </TD> <TD NOWRAP> ` ( ph -> -. ch ) ` </TD><TD>Given</TD> <TD>$e; we'll use ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>3</TD><TD>1</TD> <TD> ...| ` ps ` </TD><TD> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>4</TD><TD>4</TD><TD> ... ` ch ` </TD> <TD> ` ( ( ph /\\ ps ) -> ch ) ` </TD> <TD> ` -> `E 1,3</TD> <TD> ~ mpd 1,3</TD></TR> <TR><TD>5</TD><TD>6</TD><TD> ... ` -. ch ` </TD> <TD> ` ( ( ph /\\ ps ) -> -. ch ) ` </TD> <TD>IT 2</TD> <TD> ~ adantr 5</TD></TR> <TR><TD>6</TD><TD>7</TD><TD> ` -. ps ` </TD> <TD> ` ( ph -> -. ps ) ` </TD> <TD> ` /\\ `I 3,4,5</TD> <TD> ~ pm2.65da 4,6</TD></TR> </TABLE> </HTML> The original used Latin letters; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. To add an assumption, the antecedent is modified to include it (typically by using ~ adantr ; ~ simpr is useful when you want to depend directly on the new assumption). Below is the final Metamath proof (which reorders some steps). A much more efficient proof is ~ mtod ; a proof without context is shown in ~ mto . (Contributed by David A. Wheeler, 19-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.5(wff w0, wff w1, wff w2) {\n  |- wi(w0, wn(w1))\n  -| wi(w0, wi(w1, w2))\n  -| wi(w0, wn(w2))\n} = {\n  pm2.65da(w0, w1, w2)\n  mpd(wa(w0, w1), w2, w1)\n  simpr(w0, w1)\n  adantr(w0, w1, wi(w1, w2))\n  adantr(w0, w1, wn(w2))\n}","pretty":"thm ex-natded5.5(wff w0, wff w1, wff w2) {\n  ⊢ (w0 → ¬ w1)\n  ⊣ (w0 →(w1 → w2))\n  ⊣ (w0 → ¬ w2)\n} = {\n  pm2.65da(w0, w1, w2)\n  mpd((w0 ∧ w1), w2, w1)\n  simpr(w0, w1)\n  adantr(w0, w1, (w1 → w2))\n  adantr(w0, w1, ¬ w2)\n}","parent":["pm2.65da","mpd","simpr","adantr"],"children":[]},{"name":"ex-natded5.7","content":"Theorem 5.7 of [Clemente] p. 19, translated line by line using the interpretation of natural deduction in Metamath. A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.7-2 . For information about ND and Metamath, see the <HTML> <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A></HTML>. The original proof, which uses Fitch style, was written as follows: <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>6</TD> <TD NOWRAP> ` ( ps \\/ ( ch /\\ th ) ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps \\/ ( ch /\\ th ) ) ) ` </TD> <TD>Given</TD> <TD>$e. No need for ~ adantr because we do not move this into an ND hypothesis</TD></TR> <TR><TD>2</TD><TD>1</TD><TD NOWRAP> ...| ` ps ` </TD> <TD NOWRAP> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND hypothesis assumption (new scope)</TD> <TD> ~ simpr </TD></TR> <TR><TD>3</TD><TD>2</TD><TD> ... ` ( ps \\/ ch ) ` </TD> <TD> ` ( ( ph /\\ ps ) -> ( ps \\/ ch ) ) ` </TD> <TD> ` \\/ `I<SUB>L</SUB> 2</TD> <TD> ~ orcd , the MPE equivalent of ` \\/ `I<SUB>L</SUB>, 1</TD></TR> <TR><TD>4</TD><TD>3</TD><TD> ...| ` ( ch /\\ th ) ` </TD> <TD> ` ( ( ph /\\ ( ch /\\ th ) ) -> ( ch /\\ th ) ) ` </TD> <TD>ND hypothesis assumption (new scope)</TD> <TD> ~ simpr </TD></TR> <TR><TD>5</TD><TD>4</TD><TD> ... ` ch ` </TD> <TD> ` ( ( ph /\\ ( ch /\\ th ) ) -> ch ) ` </TD> <TD> ` /\\ `E<SUB>L</SUB> 4</TD> <TD> ~ simpld , the MPE equivalent of ` /\\ `E<SUB>L</SUB>, 3</TD></TR> <TR><TD>6</TD><TD>6</TD><TD> ... ` ( ps \\/ ch ) ` </TD> <TD> ` ( ( ph /\\ ( ch /\\ th ) ) -> ( ps \\/ ch ) ) ` </TD> <TD> ` \\/ `I<SUB>R</SUB> 5</TD> <TD> ~ olcd , the MPE equivalent of ` \\/ `I<SUB>R</SUB>, 4</TD></TR> <TR><TD>7</TD><TD>7</TD><TD NOWRAP> ` ( ps \\/ ch ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps \\/ ch ) ) ` </TD> <TD> ` \\/ `E 1,3,6</TD> <TD> ~ mpjaodan , the MPE equivalent of ` \\/ `E, 2,5,6 </TD></TR> </TABLE> </HTML> The original used Latin letters for predicates; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.7(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wo(w1, w2))\n  -| wi(w0, wo(w1, wa(w2, w3)))\n} = {\n  mpjaodan(w0, wo(w1, w2), w1, wa(w2, w3))\n  orcd(wa(w0, w1), w1, w2)\n  simpr(w0, w1)\n  olcd(wa(w0, wa(w2, w3)), w1, w2)\n  simpld(wa(w0, wa(w2, w3)), w2, w3)\n  simpr(w0, wa(w2, w3))\n}","pretty":"thm ex-natded5.7(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 ∨ w2))\n  ⊣ (w0 →(w1 ∨(w2 ∧ w3)))\n} = {\n  mpjaodan(w0, (w1 ∨ w2), w1, (w2 ∧ w3))\n  orcd((w0 ∧ w1), w1, w2)\n  simpr(w0, w1)\n  olcd((w0 ∧(w2 ∧ w3)), w1, w2)\n  simpld((w0 ∧(w2 ∧ w3)), w2, w3)\n  simpr(w0, (w2 ∧ w3))\n}","parent":["mpjaodan","orcd","simpr","olcd","simpld"],"children":[]},{"name":"ex-natded5.7-2","content":"A more efficient proof of Theorem 5.7 of [Clemente] p. 19. Compare with ~ ex-natded5.7 . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.7-2(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wo(w1, w2))\n  -| wi(w0, wo(w1, wa(w2, w3)))\n} = {\n  syl(w0, wo(w1, w2), wo(w1, wa(w2, w3)))\n  orim2i(w1, wa(w2, w3), w2)\n  simpl(w2, w3)\n}","pretty":"thm ex-natded5.7-2(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →(w1 ∨ w2))\n  ⊣ (w0 →(w1 ∨(w2 ∧ w3)))\n} = {\n  syl(w0, (w1 ∨ w2), (w1 ∨(w2 ∧ w3)))\n  orim2i(w1, (w2 ∧ w3), w2)\n  simpl(w2, w3)\n}","parent":["syl","orim2i","simpl"],"children":[]},{"name":"ex-natded5.8","content":"Theorem 5.8 of [Clemente] p. 20, translated line by line using the usual translation of natural deduction (ND) in the Metamath Proof Explorer (MPE) notation. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>10;11</TD> <TD NOWRAP> ` ( ( ps /\\ ch ) -> -. th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ( ps /\\ ch ) -> -. th ) ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>2</TD><TD>3;4</TD><TD NOWRAP> ` ( ta -> th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ta -> th ) ) ` </TD><TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>3</TD><TD>7;8</TD> <TD> ` ch ` </TD><TD> ` ( ph -> ch ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>4</TD><TD>1;2</TD><TD> ` ta ` </TD><TD> ` ( ph -> ta ) ` </TD> <TD>Given</TD> <TD>$e. ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>5</TD><TD>6</TD><TD> ...| ` ps ` </TD> <TD> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND Hypothesis/Assumption</TD> <TD> ~ simpr . New ND hypothesis scope, each reference outside the scope must change antecedent ` ph ` to ` ( ph /\\ ps ) `.</TD></TR> <TR><TD>6</TD><TD>9</TD><TD> ... ` ( ps /\\ ch ) ` </TD> <TD> ` ( ( ph /\\ ps ) -> ( ps /\\ ch ) ) ` </TD> <TD> ` /\\ `I 5,3</TD> <TD> ~ jca ( ` /\\ `I), 6,8 ( ~ adantr to bring in scope)</TD></TR> <TR><TD>7</TD><TD>5</TD><TD> ... ` -. th ` </TD> <TD> ` ( ( ph /\\ ps ) -> -. th ) ` </TD> <TD> ` -> `E 1,6</TD> <TD> ~ mpd ( ` -> `E), 2,4</TD></TR> <TR><TD>8</TD><TD>12</TD><TD> ... ` th ` </TD> <TD> ` ( ( ph /\\ ps ) -> th ) ` </TD> <TD> ` -> `E 2,4</TD> <TD> ~ mpd ( ` -> `E), 9,11; note the contradiction with ND line 7 (MPE line 5)</TD></TR> <TR><TD>9</TD><TD>13</TD><TD> ` -. ps ` </TD> <TD> ` ( ph -> -. ps ) ` </TD> <TD> ` -. `I 5,7,8</TD> <TD> ~ pm2.65da ( ` -. `I), 5,12; proof by contradiction. MPE step 6 (ND#5) does not need a reference here, because the assumption is embedded in the antecedents</TD></TR> </TABLE> </HTML> The original used Latin letters; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. To add an assumption, the antecedent is modified to include it (typically by using ~ adantr ; ~ simpr is useful when you want to depend directly on the new assumption). Below is the final Metamath proof (which reorders some steps). A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.8-2 . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.8(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wi(w0, wn(w1))\n  -| wi(w0, wi(wa(w1, w2), wn(w3)))\n  -| wi(w0, wi(w4, w3))\n  -| wi(w0, w2)\n  -| wi(w0, w4)\n} = {\n  pm2.65da(w0, w1, w3)\n  mpd(wa(w0, w1), w3, w4)\n  adantr(w0, w1, w4)\n  adantr(w0, w1, wi(w4, w3))\n  mpd(wa(w0, w1), wn(w3), wa(w1, w2))\n  jca(wa(w0, w1), w1, w2)\n  simpr(w0, w1)\n  adantr(w0, w1, w2)\n  adantr(w0, w1, wi(wa(w1, w2), wn(w3)))\n}","pretty":"thm ex-natded5.8(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ (w0 → ¬ w1)\n  ⊣ (w0 →((w1 ∧ w2)→ ¬ w3))\n  ⊣ (w0 →(w4 → w3))\n  ⊣ (w0 → w2)\n  ⊣ (w0 → w4)\n} = {\n  pm2.65da(w0, w1, w3)\n  mpd((w0 ∧ w1), w3, w4)\n  adantr(w0, w1, w4)\n  adantr(w0, w1, (w4 → w3))\n  mpd((w0 ∧ w1), ¬ w3, (w1 ∧ w2))\n  jca((w0 ∧ w1), w1, w2)\n  simpr(w0, w1)\n  adantr(w0, w1, w2)\n  adantr(w0, w1, ((w1 ∧ w2)→ ¬ w3))\n}","parent":["pm2.65da","mpd","adantr","jca","simpr"],"children":[]},{"name":"ex-natded5.8-2","content":"A more efficient proof of Theorem 5.8 of [Clemente] p. 20. For a longer line-by-line translation, see ~ ex-natded5.8 . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.8-2(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wi(w0, wn(w1))\n  -| wi(w0, wi(wa(w1, w2), wn(w3)))\n  -| wi(w0, wi(w4, w3))\n  -| wi(w0, w2)\n  -| wi(w0, w4)\n} = {\n  mt2d(w0, w1, w3)\n  mpd(w0, w3, w4)\n  mpan2d(w0, w1, wn(w3), w2)\n}","pretty":"thm ex-natded5.8-2(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ (w0 → ¬ w1)\n  ⊣ (w0 →((w1 ∧ w2)→ ¬ w3))\n  ⊣ (w0 →(w4 → w3))\n  ⊣ (w0 → w2)\n  ⊣ (w0 → w4)\n} = {\n  mt2d(w0, w1, w3)\n  mpd(w0, w3, w4)\n  mpan2d(w0, w1, ¬ w3, w2)\n}","parent":["mt2d","mpd","mpan2d"],"children":[]},{"name":"ex-natded5.13","content":"Theorem 5.13 of [Clemente] p. 20, translated line by line using the interpretation of natural deduction in Metamath. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.13-2 . The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>15</TD><TD NOWRAP> ` ( ps \\/ ch ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps \\/ ch ) ) ` </TD> <TD>Given</TD> <TD>$e. </TD></TR> <TR><TD>2;3</TD><TD>2</TD><TD NOWRAP> ` ( ps -> th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps -> th ) ) ` </TD><TD>Given</TD> <TD>$e. ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>3</TD><TD>9</TD><TD> ` ( -. ta -> -. ch ) ` </TD> <TD> ` ( ph -> ( -. ta -> -. ch ) ) ` </TD> <TD>Given</TD> <TD>$e. ~ ad2antrr to move it into the ND sub-hypothesis</TD></TR> <TR><TD>4</TD><TD>1</TD><TD> ...| ` ps ` </TD> <TD> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>5</TD><TD>4</TD><TD> ... ` th ` </TD> <TD> ` ( ( ph /\\ ps ) -> th ) ` </TD> <TD> ` -> `E 2,4</TD> <TD> ~ mpd 1,3</TD></TR> <TR><TD>6</TD><TD>5</TD><TD> ... ` ( th \\/ ta ) ` </TD> <TD> ` ( ( ph /\\ ps ) -> ( th \\/ ta ) ) ` </TD> <TD> ` \\/ `I 5</TD> <TD> ~ orcd 4</TD></TR> <TR><TD>7</TD><TD>6</TD><TD> ...| ` ch ` </TD> <TD> ` ( ( ph /\\ ch ) -> ch ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>8</TD><TD>8</TD><TD> ... ...| ` -. ta ` </TD> <TD> ` ( ( ( ph /\\ ch ) /\\ -. ta ) -> -. ta ) ` </TD> <TD>(sub) ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>9</TD><TD>11</TD><TD> ... ... ` -. ch ` </TD> <TD> ` ( ( ( ph /\\ ch ) /\\ -. ta ) -> -. ch ) ` </TD> <TD> ` -> `E 3,8</TD> <TD> ~ mpd 8,10</TD></TR> <TR><TD>10</TD><TD>7</TD><TD> ... ... ` ch ` </TD> <TD> ` ( ( ( ph /\\ ch ) /\\ -. ta ) -> ch ) ` </TD> <TD> IT 7</TD> <TD> ~ adantr 6</TD></TR> <TR><TD>11</TD><TD>12</TD><TD> ... ` -. -. ta ` </TD> <TD> ` ( ( ph /\\ ch ) -> -. -. ta ) ` </TD> <TD> ` -. `I 8,9,10</TD> <TD> ~ pm2.65da 7,11</TD></TR> <TR><TD>12</TD><TD>13</TD><TD> ... ` ta ` </TD> <TD> ` ( ( ph /\\ ch ) -> ta ) ` </TD> <TD> ` -. `E 11</TD> <TD> ~ notnotrd 12</TD></TR> <TR><TD>13</TD><TD>14</TD><TD> ... ` ( th \\/ ta ) ` </TD> <TD> ` ( ( ph /\\ ch ) -> ( th \\/ ta ) ) ` </TD> <TD> ` \\/ `I 12</TD> <TD> ~ olcd 13</TD></TR> <TR><TD>14</TD><TD>16</TD><TD> ` ( th \\/ ta ) ` </TD> <TD> ` ( ph -> ( th \\/ ta ) ) ` </TD> <TD> ` \\/ `E 1,6,13</TD> <TD> ~ mpjaodan 5,14,15</TD></TR> </TABLE> </HTML> The original used Latin letters; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. To add an assumption, the antecedent is modified to include it (typically by using ~ adantr ; ~ simpr is useful when you want to depend directly on the new assumption). (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.13(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wi(w0, wo(w1, w2))\n  -| wi(w0, wo(w3, w4))\n  -| wi(w0, wi(w3, w1))\n  -| wi(w0, wi(wn(w2), wn(w4)))\n} = {\n  mpjaodan(w0, wo(w1, w2), w3, w4)\n  orcd(wa(w0, w3), w1, w2)\n  mpd(wa(w0, w3), w1, w3)\n  simpr(w0, w3)\n  adantr(w0, w3, wi(w3, w1))\n  olcd(wa(w0, w4), w1, w2)\n  notnotrd(wa(w0, w4), w2)\n  pm2.65da(wa(w0, w4), wn(w2), w4)\n  adantr(wa(w0, w4), wn(w2), w4)\n  simpr(w0, w4)\n  mpd(wa(wa(w0, w4), wn(w2)), wn(w4), wn(w2))\n  simpr(wa(w0, w4), wn(w2))\n  ad2antrr(w0, w4, wn(w2), wi(wn(w2), wn(w4)))\n}","pretty":"thm ex-natded5.13(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ (w0 →(w1 ∨ w2))\n  ⊣ (w0 →(w3 ∨ w4))\n  ⊣ (w0 →(w3 → w1))\n  ⊣ (w0 →(¬ w2 → ¬ w4))\n} = {\n  mpjaodan(w0, (w1 ∨ w2), w3, w4)\n  orcd((w0 ∧ w3), w1, w2)\n  mpd((w0 ∧ w3), w1, w3)\n  simpr(w0, w3)\n  adantr(w0, w3, (w3 → w1))\n  olcd((w0 ∧ w4), w1, w2)\n  notnotrd((w0 ∧ w4), w2)\n  pm2.65da((w0 ∧ w4), ¬ w2, w4)\n  adantr((w0 ∧ w4), ¬ w2, w4)\n  simpr(w0, w4)\n  mpd(((w0 ∧ w4)∧ ¬ w2), ¬ w4, ¬ w2)\n  simpr((w0 ∧ w4), ¬ w2)\n  ad2antrr(w0, w4, ¬ w2, (¬ w2 → ¬ w4))\n}","parent":["mpjaodan","orcd","mpd","simpr","adantr","olcd","notnotrd","pm2.65da","ad2antrr"],"children":[]},{"name":"ex-natded5.13-2","content":"A more efficient proof of Theorem 5.13 of [Clemente] p. 20. Compare with ~ ex-natded5.13 . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded5.13-2(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  |- wi(w0, wo(w1, w2))\n  -| wi(w0, wo(w3, w4))\n  -| wi(w0, wi(w3, w1))\n  -| wi(w0, wi(wn(w2), wn(w4)))\n} = {\n  mpd(w0, wo(w1, w2), wo(w3, w4))\n  orim12d(w0, w3, w4, w1, w2)\n  con4d(w0, w4, w2)\n}","pretty":"thm ex-natded5.13-2(wff w0, wff w1, wff w2, wff w3, wff w4) {\n  ⊢ (w0 →(w1 ∨ w2))\n  ⊣ (w0 →(w3 ∨ w4))\n  ⊣ (w0 →(w3 → w1))\n  ⊣ (w0 →(¬ w2 → ¬ w4))\n} = {\n  mpd(w0, (w1 ∨ w2), (w3 ∨ w4))\n  orim12d(w0, w3, w4, w1, w2)\n  con4d(w0, w4, w2)\n}","parent":["mpd","orim12d","con4d"],"children":[]},{"name":"ex-natded9.20","content":"Theorem 9.20 of [Clemente] p. 43, translated line by line using the usual translation of natural deduction (ND) in the Metamath Proof Explorer (MPE) notation. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>1</TD> <TD NOWRAP> ` ( ps /\\ ( ch \\/ th ) ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps /\\ ( ch \\/ th ) ) ) ` </TD> <TD>Given</TD> <TD>$e</TD></TR> <TR><TD>2</TD><TD>2</TD><TD NOWRAP> ` ps ` </TD> <TD NOWRAP> ` ( ph -> ps ) ` </TD> <TD>` /\\ `E<SUB>L</SUB> 1</TD> <TD> ~ simpld 1</TD></TR> <TR><TD>3</TD><TD>11</TD> <TD> ` ( ch \\/ th ) ` </TD> <TD> ` ( ph -> ( ch \\/ th ) ) ` </TD> <TD> ` /\\ `E<SUB>R</SUB> 1</TD> <TD> ~ simprd 1</TD></TR> <TR><TD>4</TD><TD>4</TD> <TD> ...| ` ch ` </TD> <TD> ` ( ( ph /\\ ch ) -> ch ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>5</TD><TD>5</TD> <TD> ... ` ( ps /\\ ch ) ` </TD> <TD> ` ( ( ph /\\ ch ) -> ( ps /\\ ch ) ) ` </TD> <TD> ` /\\ `I 2,4</TD> <TD> ~ jca 3,4</TD></TR> <TR><TD>6</TD><TD>6</TD> <TD> ... ` ( ( ps /\\ ch ) \\/ ( ps /\\ th ) ) ` </TD> <TD> ` ( ( ph /\\ ch ) -> ( ( ps /\\ ch ) \\/ ( ps /\\ th ) ) ) ` </TD> <TD> ` \\/ `I<SUB>R</SUB> 5</TD> <TD> ~ orcd 5</TD></TR> <TR><TD>7</TD><TD>8</TD> <TD> ...| ` th ` </TD> <TD> ` ( ( ph /\\ th ) -> th ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>8</TD><TD>9</TD> <TD> ... ` ( ps /\\ th ) ` </TD> <TD> ` ( ( ph /\\ th ) -> ( ps /\\ th ) ) ` </TD> <TD> ` /\\ `I 2,7</TD> <TD> ~ jca 7,8</TD></TR> <TR><TD>9</TD><TD>10</TD> <TD> ... ` ( ( ps /\\ ch ) \\/ ( ps /\\ th ) ) ` </TD> <TD> ` ( ( ph /\\ th ) -> ( ( ps /\\ ch ) \\/ ( ps /\\ th ) ) ) ` </TD> <TD> ` \\/ `I<SUB>L</SUB> 8</TD> <TD> ~ olcd 9</TD></TR> <TR><TD>10</TD><TD>12</TD> <TD> ` ( ( ps /\\ ch ) \\/ ( ps /\\ th ) ) ` </TD> <TD> ` ( ph -> ( ( ps /\\ ch ) \\/ ( ps /\\ th ) ) ) ` </TD> <TD> ` \\/ `E 3,6,9</TD> <TD> ~ mpjaodan 6,10,11</TD></TR> </TABLE> </HTML> The original used Latin letters; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. To add an assumption, the antecedent is modified to include it (typically by using ~ adantr ; ~ simpr is useful when you want to depend directly on the new assumption). Below is the final Metamath proof (which reorders some steps). A much more efficient proof is ~ ex-natded9.20-2 . (Contributed by David A. Wheeler, 19-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded9.20(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wo(wa(w1, w2), wa(w1, w3)))\n  -| wi(w0, wa(w1, wo(w2, w3)))\n} = {\n  mpjaodan(w0, wo(wa(w1, w2), wa(w1, w3)), w2, w3)\n  orcd(wa(w0, w2), wa(w1, w2), wa(w1, w3))\n  jca(wa(w0, w2), w1, w2)\n  adantr(w0, w2, w1)\n  simpr(w0, w2)\n  olcd(wa(w0, w3), wa(w1, w2), wa(w1, w3))\n  jca(wa(w0, w3), w1, w3)\n  adantr(w0, w3, w1)\n  simpld(w0, w1, wo(w2, w3))\n  simpr(w0, w3)\n  simprd(w0, wo(w2, w3), w1)\n}","pretty":"thm ex-natded9.20(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →((w1 ∧ w2)∨(w1 ∧ w3)))\n  ⊣ (w0 →(w1 ∧(w2 ∨ w3)))\n} = {\n  mpjaodan(w0, ((w1 ∧ w2)∨(w1 ∧ w3)), w2, w3)\n  orcd((w0 ∧ w2), (w1 ∧ w2), (w1 ∧ w3))\n  jca((w0 ∧ w2), w1, w2)\n  adantr(w0, w2, w1)\n  simpr(w0, w2)\n  olcd((w0 ∧ w3), (w1 ∧ w2), (w1 ∧ w3))\n  jca((w0 ∧ w3), w1, w3)\n  adantr(w0, w3, w1)\n  simpld(w0, w1, (w2 ∨ w3))\n  simpr(w0, w3)\n  simprd(w0, (w2 ∨ w3), w1)\n}","parent":["mpjaodan","orcd","jca","adantr","simpr","olcd","simpld","simprd"],"children":[]},{"name":"ex-natded9.20-2","content":"A more efficient proof of Theorem 9.20 of [Clemente] p. 45. Compare with ~ ex-natded9.20 . (Contributed by David A. Wheeler, 19-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded9.20-2(wff w0, wff w1, wff w2, wff w3) {\n  |- wi(w0, wo(wa(w1, w2), wa(w1, w3)))\n  -| wi(w0, wa(w1, wo(w2, w3)))\n} = {\n  mpjaodan(w0, wo(wa(w1, w2), wa(w1, w3)), w2, w3)\n  orcd(wa(w0, w2), wa(w1, w2), wa(w1, w3))\n  anim1i(w0, w2, w1)\n  olcd(wa(w0, w3), wa(w1, w2), wa(w1, w3))\n  anim1i(w0, w3, w1)\n  simpld(w0, w1, wo(w2, w3))\n  simprd(w0, wo(w2, w3), w1)\n}","pretty":"thm ex-natded9.20-2(wff w0, wff w1, wff w2, wff w3) {\n  ⊢ (w0 →((w1 ∧ w2)∨(w1 ∧ w3)))\n  ⊣ (w0 →(w1 ∧(w2 ∨ w3)))\n} = {\n  mpjaodan(w0, ((w1 ∧ w2)∨(w1 ∧ w3)), w2, w3)\n  orcd((w0 ∧ w2), (w1 ∧ w2), (w1 ∧ w3))\n  anim1i(w0, w2, w1)\n  olcd((w0 ∧ w3), (w1 ∧ w2), (w1 ∧ w3))\n  anim1i(w0, w3, w1)\n  simpld(w0, w1, (w2 ∨ w3))\n  simprd(w0, (w2 ∨ w3), w1)\n}","parent":["mpjaodan","orcd","anim1i","olcd","simpld","simprd"],"children":[]},{"name":"ex-natded9.26","content":"Theorem 9.26 of [Clemente] p. 45, translated line by line using an interpretation of natural deduction in Metamath. This proof has some additional complications due to the fact that Metamath's existential elimination rule does not change bound variables, so we need to verify that ` x ` is bound in the conclusion. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>3</TD><TD NOWRAP> ` E. x A. y ps ( x , y ) ` </TD> <TD NOWRAP> ` ( ph -> E. x A. y ps ) ` </TD> <TD>Given</TD> <TD>$e. </TD></TR> <TR><TD>2</TD><TD>6</TD><TD NOWRAP> ...| ` A. y ps ( x , y ) ` </TD> <TD NOWRAP> ` ( ( ph /\\ A. y ps ) -> A. y ps ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr . Later statements will have this scope.</TD></TR> <TR><TD>3</TD><TD>7;5,4</TD><TD> ... ` ps ( x , y ) ` </TD> <TD> ` ( ( ph /\\ A. y ps ) -> ps ) ` </TD> <TD> ` A. `E 2,y </TD> <TD> ~ spsbcd (` A. `E), 5,6. To use it we need ~ a1i and ~ vex . This could be immediately done with ~ 19.21bi , but we want to show the general approach for substitution. </TD></TR> <TR><TD>4</TD><TD>12;8,9,10,11</TD><TD> ... ` E. x ps ( x , y ) ` </TD> <TD> ` ( ( ph /\\ A. y ps ) -> E. x ps ) ` </TD> <TD> ` E. `I 3,a</TD> <TD> ~ spesbcd (` E. `I), 11. To use it we need ~ sylibr , which in turn requires ~ sylib and two uses of ~ sbcid . This could be more immediately done using ~ 19.8a , but we want to show the general approach for substitution. </TD></TR> <TR><TD>5</TD><TD>13;1,2</TD><TD> ` E. x ps ( x , y ) ` </TD> <TD> ` ( ph -> E. x ps ) ` </TD><TD> ` E. `E 1,2,4,a</TD> <TD> ~ exlimdd (` E. `E), 1,2,3,12. We'll need supporting assertions that the variable is free (not bound), as provided in ~ nfv and ~ nfe1 (MPE# 1,2)</TD></TR> </TR> <TR><TD>6</TD><TD>14</TD><TD> ` A. y E. x ps ( x , y ) ` </TD> <TD> ` ( ph -> A. y E. x ps ) ` </TD> <TD> ` A. `I 5</TD> <TD> ~ alrimiv (` A. `I), 13</TD></TR> </TABLE> </HTML> The original used Latin letters for predicates; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. Below is the final Metamath proof (which reorders some steps). Note that in the original proof, ` ps ( x , y ) ` has explicit parameters. In Metamath, these parameters are always implicit, and the parameters upon which a wff variable can depend are recorded in the \"allowed substitution hints\" below. A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded9.26-2 . (Contributed by Mario Carneiro, 9-Feb-2017.) (Revised by David A. Wheeler, 18-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded9.26(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wal(s0, wex(s1, w1)))\n  -| wi(w0, wex(s1, wal(s0, w1)))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n} = {\n  a1ii(wi(w0, wal(s0, wex(s1, w1))), diffss(s0, s1))\n  alrimiv(s0, w0, wex(s1, w1))\n  exlimdd(s1, w0, wex(s1, w1), wal(s0, w1))\n  nfv(s1, w0)\n  nfe1(s1, w1)\n  spesbcd(s1, cv(s1), wa(w0, wal(s0, w1)), w1)\n  sylibr(wa(w0, wal(s0, w1)), wsbc(s1, cv(s1), w1), w1)\n  sylib(wa(w0, wal(s0, w1)), w1, wsbc(s0, cv(s0), w1))\n  spsbcd(s0, cv(s0), universe, wa(w0, wal(s0, w1)), w1)\n  a1i(wa(w0, wal(s0, w1)), wcel(cv(s0), universe))\n  vex(s0)\n  simpr(w0, wal(s0, w1))\n  sbcid(s0, w1)\n  sbcid(s1, w1)\n}","pretty":"thm ex-natded9.26(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → ∀(s0, ∃(s1, w1)))\n  ⊣ (w0 → ∃(s1, ∀(s0, w1)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n} = {\n  a1ii((w0 → ∀(s0, ∃(s1, w1))), d(s0, s1))\n  alrimiv(s0, w0, ∃(s1, w1))\n  exlimdd(s1, w0, ∃(s1, w1), ∀(s0, w1))\n  nfv(s1, w0)\n  nfe1(s1, w1)\n  spesbcd(s1, s1, (w0 ∧ ∀(s0, w1)), w1)\n  sylibr((w0 ∧ ∀(s0, w1)), [s1 / s1]w1, w1)\n  sylib((w0 ∧ ∀(s0, w1)), w1, [s0 / s0]w1)\n  spsbcd(s0, s0, universe, (w0 ∧ ∀(s0, w1)), w1)\n  a1i((w0 ∧ ∀(s0, w1)), s0 ∈ 𝕌)\n  vex(s0)\n  simpr(w0, ∀(s0, w1))\n  sbcid(s0, w1)\n  sbcid(s1, w1)\n}","parent":["a1ii","alrimiv","exlimdd","nfv","nfe1","spesbcd","sylibr","sylib","spsbcd","a1i","vex","simpr","sbcid"],"children":[]},{"name":"ex-natded9.26-2","content":"A more efficient proof of Theorem 9.26 of [Clemente] p. 45. Compare with ~ ex-natded9.26 . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm ex-natded9.26-2(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wal(s0, wex(s1, w1)))\n  -| wi(w0, wex(s1, wal(s0, w1)))\n  -| diffss(s0, s1)\n  -| diffsw(s0, w0)\n  -| diffsw(s1, w0)\n} = {\n  a1ii(wi(w0, wal(s0, wex(s1, w1))), diffss(s0, s1))\n  a1ii(wi(w0, wal(s0, wex(s1, w1))), diffsw(s1, w0))\n  alrimiv(s0, w0, wex(s1, w1))\n  syl(w0, wex(s1, w1), wex(s1, wal(s0, w1)))\n  eximi(s1, wal(s0, w1), w1)\n  sp(s0, w1)\n}","pretty":"thm ex-natded9.26-2(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → ∀(s0, ∃(s1, w1)))\n  ⊣ (w0 → ∃(s1, ∀(s0, w1)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, w0)\n  ⊣ d(s1, w0)\n} = {\n  a1ii((w0 → ∀(s0, ∃(s1, w1))), d(s0, s1))\n  a1ii((w0 → ∀(s0, ∃(s1, w1))), d(s1, w0))\n  alrimiv(s0, w0, ∃(s1, w1))\n  syl(w0, ∃(s1, w1), ∃(s1, ∀(s0, w1)))\n  eximi(s1, ∀(s0, w1), w1)\n  sp(s0, w1)\n}","parent":["a1ii","alrimiv","syl","eximi","sp"],"children":[]}]}