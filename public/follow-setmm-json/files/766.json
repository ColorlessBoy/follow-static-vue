{"index":766,"title":"Standard axioms for a complex Hilbert space","content":"","blocks":[{"name":"hlex","content":"The base set of a Hilbert space is a set. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hlex(class c0, class c1) {\n  |- wcel(c0, universe)\n  -| wceq(c0, cfv(cba, c1))\n} = {\n  fvexi(c0, cba, c1)\n}","pretty":"thm hlex(class c0, class c1) {\n  ‚ä¢ c0 ‚àà ùïå\n  ‚ä£ c0 =(BaseSet ` c1)\n} = {\n  fvexi(c0, cba, c1)\n}","parent":["fvexi"],"children":["h2hcau","h2hlm","axhilex-zf"]},{"name":"hladdf","content":"Mapping for Hilbert space vector addition. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hladdf(class c0, class c1, class c2) {\n  |- wi(wcel(c0, chlo), wf(c1, cxp(c2, c2), c2))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c1, cfv(cpv, c0))\n} = {\n  syl(wcel(c0, chlo), wf(c1, cxp(c2, c2), c2), wcel(c0, cnv))\n  hlnv(c0)\n  nvgf(c0, c1, c2)\n}","pretty":"thm hladdf(class c0, class c1, class c2) {\n  ‚ä¢ (c0 ‚àà CHilOLD ‚Üí(c1 :(c2 √ó c2)‚Üí c2))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c1 =(+v ` c0)\n} = {\n  syl(c0 ‚àà CHilOLD, (c1 :(c2 √ó c2)‚Üí c2), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvgf(c0, c1, c2)\n}","parent":["syl","hlnv","nvgf"],"children":["axhfvadd-zf"]},{"name":"hlcom","content":"Hilbert space vector addition is commutative. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hlcom(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(w3a(wcel(c0, chlo), wcel(c1, c2), wcel(c3, c2)), wceq(co(c1, c4, c3), co(c3, c4, c1)))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c4, cfv(cpv, c0))\n} = {\n  syl3an1(wcel(c0, chlo), wcel(c1, c2), wcel(c3, c2), wceq(co(c1, c4, c3), co(c3, c4, c1)), wcel(c0, cnv))\n  hlnv(c0)\n  nvcom(c0, c1, c2, c3, c4)\n}","pretty":"thm hlcom(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß c1 ‚àà c2 ‚àß c3 ‚àà c2)‚Üí(c1[c4]c3)=(c3[c4]c1))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c4 =(+v ` c0)\n} = {\n  syl3an1(c0 ‚àà CHilOLD, c1 ‚àà c2, c3 ‚àà c2, (c1[c4]c3)=(c3[c4]c1), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvcom(c0, c1, c2, c3, c4)\n}","parent":["syl3an1","hlnv","nvcom"],"children":["axhvcom-zf"]},{"name":"hlass","content":"Hilbert space vector addition is associative. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hlass(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wa(wcel(c0, chlo), w3a(wcel(c1, c2), wcel(c3, c2), wcel(c4, c2))), wceq(co(co(c1, c5, c3), c5, c4), co(c1, c5, co(c3, c5, c4))))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c5, cfv(cpv, c0))\n} = {\n  sylan(wcel(c0, chlo), w3a(wcel(c1, c2), wcel(c3, c2), wcel(c4, c2)), wceq(co(co(c1, c5, c3), c5, c4), co(c1, c5, co(c3, c5, c4))), wcel(c0, cnv))\n  hlnv(c0)\n  nvass(c0, c1, c2, c3, c4, c5)\n}","pretty":"thm hlass(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß(c1 ‚àà c2 ‚àß c3 ‚àà c2 ‚àß c4 ‚àà c2))‚Üí((c1[c5]c3)[c5]c4)=(c1[c5](c3[c5]c4)))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c5 =(+v ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, (c1 ‚àà c2 ‚àß c3 ‚àà c2 ‚àß c4 ‚àà c2), ((c1[c5]c3)[c5]c4)=(c1[c5](c3[c5]c4)), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvass(c0, c1, c2, c3, c4, c5)\n}","parent":["sylan","hlnv","nvass"],"children":["axhvass-zf"]},{"name":"hl0cl","content":"The Hilbert space zero vector. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hl0cl(class c0, class c1, class c2) {\n  |- wi(wcel(c0, chlo), wcel(c1, c2))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c1, cfv(cn0v, c0))\n} = {\n  syl(wcel(c0, chlo), wcel(c1, c2), wcel(c0, cnv))\n  hlnv(c0)\n  nvzcl(c0, c1, c2)\n}","pretty":"thm hl0cl(class c0, class c1, class c2) {\n  ‚ä¢ (c0 ‚àà CHilOLD ‚Üí c1 ‚àà c2)\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c1 =(0vec ` c0)\n} = {\n  syl(c0 ‚àà CHilOLD, c1 ‚àà c2, c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvzcl(c0, c1, c2)\n}","parent":["syl","hlnv","nvzcl"],"children":["axhv0cl-zf"]},{"name":"hladdid","content":"Hilbert space addition with the zero vector. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hladdid(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, chlo), wcel(c1, c2)), wceq(co(c1, c3, c4), c1))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c3, cfv(cpv, c0))\n  -| wceq(c4, cfv(cn0v, c0))\n} = {\n  sylan(wcel(c0, chlo), wcel(c1, c2), wceq(co(c1, c3, c4), c1), wcel(c0, cnv))\n  hlnv(c0)\n  nv0rid(c0, c1, c2, c3, c4)\n}","pretty":"thm hladdid(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß c1 ‚àà c2)‚Üí(c1[c3]c4)= c1)\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c3 =(+v ` c0)\n  ‚ä£ c4 =(0vec ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, c1 ‚àà c2, (c1[c3]c4)= c1, c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nv0rid(c0, c1, c2, c3, c4)\n}","parent":["sylan","hlnv","nv0rid"],"children":["axhvaddid-zf"]},{"name":"hlmulf","content":"Mapping for Hilbert space scalar multiplication. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hlmulf(class c0, class c1, class c2) {\n  |- wi(wcel(c0, chlo), wf(c1, cxp(cc, c2), c2))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c1, cfv(cns, c0))\n} = {\n  syl(wcel(c0, chlo), wf(c1, cxp(cc, c2), c2), wcel(c0, cnv))\n  hlnv(c0)\n  nvsf(c0, c1, c2)\n}","pretty":"thm hlmulf(class c0, class c1, class c2) {\n  ‚ä¢ (c0 ‚àà CHilOLD ‚Üí(c1 :(‚ÑÇ √ó c2)‚Üí c2))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c1 =(.sOLD ` c0)\n} = {\n  syl(c0 ‚àà CHilOLD, (c1 :(‚ÑÇ √ó c2)‚Üí c2), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvsf(c0, c1, c2)\n}","parent":["syl","hlnv","nvsf"],"children":["axhfvmul-zf"]},{"name":"hlmulid","content":"Hilbert space scalar multiplication by one. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hlmulid(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, chlo), wcel(c1, c2)), wceq(co(nat1, c3, c1), c1))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c3, cfv(cns, c0))\n} = {\n  sylan(wcel(c0, chlo), wcel(c1, c2), wceq(co(nat1, c3, c1), c1), wcel(c0, cnv))\n  hlnv(c0)\n  nvsid(c0, c1, c2, c3)\n}","pretty":"thm hlmulid(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß c1 ‚àà c2)‚Üí(1[c3]c1)= c1)\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c3 =(.sOLD ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, c1 ‚àà c2, (1[c3]c1)= c1, c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvsid(c0, c1, c2, c3)\n}","parent":["sylan","hlnv","nvsid"],"children":["axhvmulid-zf"]},{"name":"hlmulass","content":"Hilbert space scalar multiplication associative law. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hlmulass(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wa(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, cc), wcel(c3, c4))), wceq(co(co(c1, cmul, c2), c5, c3), co(c1, c5, co(c2, c5, c3))))\n  -| wceq(c4, cfv(cba, c0))\n  -| wceq(c5, cfv(cns, c0))\n} = {\n  sylan(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, cc), wcel(c3, c4)), wceq(co(co(c1, cmul, c2), c5, c3), co(c1, c5, co(c2, c5, c3))), wcel(c0, cnv))\n  hlnv(c0)\n  nvsass(c0, c1, c2, c3, c4, c5)\n}","pretty":"thm hlmulass(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß(c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà ‚ÑÇ ‚àß c3 ‚àà c4))‚Üí((c1[√ó]c2)[c5]c3)=(c1[c5](c2[c5]c3)))\n  ‚ä£ c4 =(BaseSet ` c0)\n  ‚ä£ c5 =(.sOLD ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, (c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà ‚ÑÇ ‚àß c3 ‚àà c4), ((c1[√ó]c2)[c5]c3)=(c1[c5](c2[c5]c3)), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvsass(c0, c1, c2, c3, c4, c5)\n}","parent":["sylan","hlnv","nvsass"],"children":["axhvmulass-zf"]},{"name":"hldi","content":"Hilbert space scalar multiplication distributive law. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hldi(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, c3), wcel(c4, c3))), wceq(co(c1, c5, co(c2, c6, c4)), co(co(c1, c5, c2), c6, co(c1, c5, c4))))\n  -| wceq(c3, cfv(cba, c0))\n  -| wceq(c6, cfv(cpv, c0))\n  -| wceq(c5, cfv(cns, c0))\n} = {\n  sylan(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, c3), wcel(c4, c3)), wceq(co(c1, c5, co(c2, c6, c4)), co(co(c1, c5, c2), c6, co(c1, c5, c4))), wcel(c0, cnv))\n  hlnv(c0)\n  nvdi(c0, c1, c2, c3, c4, c5, c6)\n}","pretty":"thm hldi(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß(c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà c3 ‚àß c4 ‚àà c3))‚Üí(c1[c5](c2[c6]c4))=((c1[c5]c2)[c6](c1[c5]c4)))\n  ‚ä£ c3 =(BaseSet ` c0)\n  ‚ä£ c6 =(+v ` c0)\n  ‚ä£ c5 =(.sOLD ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, (c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà c3 ‚àß c4 ‚àà c3), (c1[c5](c2[c6]c4))=((c1[c5]c2)[c6](c1[c5]c4)), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvdi(c0, c1, c2, c3, c4, c5, c6)\n}","parent":["sylan","hlnv","nvdi"],"children":["axhvdistr1-zf"]},{"name":"hldir","content":"Hilbert space scalar multiplication distributive law. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hldir(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, cc), wcel(c3, c4))), wceq(co(co(c1, caddc, c2), c5, c3), co(co(c1, c5, c3), c6, co(c2, c5, c3))))\n  -| wceq(c4, cfv(cba, c0))\n  -| wceq(c6, cfv(cpv, c0))\n  -| wceq(c5, cfv(cns, c0))\n} = {\n  sylan(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, cc), wcel(c3, c4)), wceq(co(co(c1, caddc, c2), c5, c3), co(co(c1, c5, c3), c6, co(c2, c5, c3))), wcel(c0, cnv))\n  hlnv(c0)\n  nvdir(c0, c1, c2, c3, c4, c5, c6)\n}","pretty":"thm hldir(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß(c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà ‚ÑÇ ‚àß c3 ‚àà c4))‚Üí((c1[+]c2)[c5]c3)=((c1[c5]c3)[c6](c2[c5]c3)))\n  ‚ä£ c4 =(BaseSet ` c0)\n  ‚ä£ c6 =(+v ` c0)\n  ‚ä£ c5 =(.sOLD ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, (c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà ‚ÑÇ ‚àß c3 ‚àà c4), ((c1[+]c2)[c5]c3)=((c1[c5]c3)[c6](c2[c5]c3)), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nvdir(c0, c1, c2, c3, c4, c5, c6)\n}","parent":["sylan","hlnv","nvdir"],"children":["axhvdistr2-zf"]},{"name":"hlmul0","content":"Hilbert space scalar multiplication by zero. (Contributed by NM, 7-Sep-2007.) (New usage is discouraged.)","origin":"thm hlmul0(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wa(wcel(c0, chlo), wcel(c1, c2)), wceq(co(nat0, c3, c1), c4))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c3, cfv(cns, c0))\n  -| wceq(c4, cfv(cn0v, c0))\n} = {\n  sylan(wcel(c0, chlo), wcel(c1, c2), wceq(co(nat0, c3, c1), c4), wcel(c0, cnv))\n  hlnv(c0)\n  nv0(c0, c1, c2, c3, c4)\n}","pretty":"thm hlmul0(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß c1 ‚àà c2)‚Üí(0[c3]c1)= c4)\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c3 =(.sOLD ` c0)\n  ‚ä£ c4 =(0vec ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, c1 ‚àà c2, (0[c3]c1)= c4, c0 ‚àà NrmCVec)\n  hlnv(c0)\n  nv0(c0, c1, c2, c3, c4)\n}","parent":["sylan","hlnv","nv0"],"children":["axhvmul0-zf"]},{"name":"hlipf","content":"Mapping for Hilbert space inner product. (Contributed by NM, 19-Nov-2007.) (New usage is discouraged.)","origin":"thm hlipf(class c0, class c1, class c2) {\n  |- wi(wcel(c0, chlo), wf(c1, cxp(c2, c2), cc))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c1, cfv(cdip, c0))\n} = {\n  syl(wcel(c0, chlo), wf(c1, cxp(c2, c2), cc), wcel(c0, cnv))\n  hlnv(c0)\n  ipf(c0, c1, c2)\n}","pretty":"thm hlipf(class c0, class c1, class c2) {\n  ‚ä¢ (c0 ‚àà CHilOLD ‚Üí(c1 :(c2 √ó c2)‚Üí ‚ÑÇ))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c1 =(.iOLD ` c0)\n} = {\n  syl(c0 ‚àà CHilOLD, (c1 :(c2 √ó c2)‚Üí ‚ÑÇ), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  ipf(c0, c1, c2)\n}","parent":["syl","hlnv","ipf"],"children":["axhfi-zf"]},{"name":"hlipcj","content":"Conjugate law for Hilbert space inner product. (Contributed by NM, 8-Sep-2007.) (New usage is discouraged.)","origin":"thm hlipcj(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(w3a(wcel(c0, chlo), wcel(c1, c2), wcel(c3, c2)), wceq(co(c1, c4, c3), cfv(ccj, co(c3, c4, c1))))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c4, cfv(cdip, c0))\n} = {\n  eqcomd(co(c1, c4, c3), cfv(ccj, co(c3, c4, c1)), w3a(wcel(c0, chlo), wcel(c1, c2), wcel(c3, c2)))\n  3com23(wcel(c0, chlo), wcel(c1, c2), wcel(c3, c2), wceq(cfv(ccj, co(c3, c4, c1)), co(c1, c4, c3)))\n  syl3an1(wcel(c0, chlo), wcel(c3, c2), wcel(c1, c2), wceq(cfv(ccj, co(c3, c4, c1)), co(c1, c4, c3)), wcel(c0, cnv))\n  hlnv(c0)\n  dipcj(c0, c3, c2, c1, c4)\n}","pretty":"thm hlipcj(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß c1 ‚àà c2 ‚àß c3 ‚àà c2)‚Üí(c1[c4]c3)=(* `(c3[c4]c1)))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c4 =(.iOLD ` c0)\n} = {\n  eqcomd((c1[c4]c3), (* `(c3[c4]c1)), (c0 ‚àà CHilOLD ‚àß c1 ‚àà c2 ‚àß c3 ‚àà c2))\n  3com23(c0 ‚àà CHilOLD, c1 ‚àà c2, c3 ‚àà c2, (* `(c3[c4]c1))=(c1[c4]c3))\n  syl3an1(c0 ‚àà CHilOLD, c3 ‚àà c2, c1 ‚àà c2, (* `(c3[c4]c1))=(c1[c4]c3), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  dipcj(c0, c3, c2, c1, c4)\n}","parent":["eqcomd","3com23","syl3an1","hlnv","dipcj"],"children":["axhis1-zf"]},{"name":"hlipdir","content":"Distributive law for Hilbert space inner product. (Contributed by NM, 8-Sep-2007.) (New usage is discouraged.)","origin":"thm hlipdir(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wcel(c0, chlo), w3a(wcel(c1, c2), wcel(c3, c2), wcel(c4, c2))), wceq(co(co(c1, c5, c3), c6, c4), co(co(c1, c6, c4), caddc, co(c3, c6, c4))))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c5, cfv(cpv, c0))\n  -| wceq(c6, cfv(cdip, c0))\n} = {\n  sylan(wcel(c0, chlo), w3a(wcel(c1, c2), wcel(c3, c2), wcel(c4, c2)), wceq(co(co(c1, c5, c3), c6, c4), co(co(c1, c6, c4), caddc, co(c3, c6, c4))), wcel(c0, ccphlo))\n  hlph(c0)\n  dipdir(c0, c1, c2, c3, c4, c5, c6)\n}","pretty":"thm hlipdir(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß(c1 ‚àà c2 ‚àß c3 ‚àà c2 ‚àß c4 ‚àà c2))‚Üí((c1[c5]c3)[c6]c4)=((c1[c6]c4)[+](c3[c6]c4)))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c5 =(+v ` c0)\n  ‚ä£ c6 =(.iOLD ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, (c1 ‚àà c2 ‚àß c3 ‚àà c2 ‚àß c4 ‚àà c2), ((c1[c5]c3)[c6]c4)=((c1[c6]c4)[+](c3[c6]c4)), c0 ‚àà CPreHilOLD)\n  hlph(c0)\n  dipdir(c0, c1, c2, c3, c4, c5, c6)\n}","parent":["sylan","hlph","dipdir"],"children":["axhis2-zf"]},{"name":"hlipass","content":"Associative law for Hilbert space inner product. (Contributed by NM, 8-Sep-2007.) (New usage is discouraged.)","origin":"thm hlipass(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wa(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, c3), wcel(c4, c3))), wceq(co(co(c1, c5, c2), c6, c4), co(c1, cmul, co(c2, c6, c4))))\n  -| wceq(c3, cfv(cba, c0))\n  -| wceq(c5, cfv(cns, c0))\n  -| wceq(c6, cfv(cdip, c0))\n} = {\n  sylan(wcel(c0, chlo), w3a(wcel(c1, cc), wcel(c2, c3), wcel(c4, c3)), wceq(co(co(c1, c5, c2), c6, c4), co(c1, cmul, co(c2, c6, c4))), wcel(c0, ccphlo))\n  hlph(c0)\n  dipass(c0, c1, c2, c3, c4, c5, c6)\n}","pretty":"thm hlipass(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß(c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà c3 ‚àß c4 ‚àà c3))‚Üí((c1[c5]c2)[c6]c4)=(c1[√ó](c2[c6]c4)))\n  ‚ä£ c3 =(BaseSet ` c0)\n  ‚ä£ c5 =(.sOLD ` c0)\n  ‚ä£ c6 =(.iOLD ` c0)\n} = {\n  sylan(c0 ‚àà CHilOLD, (c1 ‚àà ‚ÑÇ ‚àß c2 ‚àà c3 ‚àß c4 ‚àà c3), ((c1[c5]c2)[c6]c4)=(c1[√ó](c2[c6]c4)), c0 ‚àà CPreHilOLD)\n  hlph(c0)\n  dipass(c0, c1, c2, c3, c4, c5, c6)\n}","parent":["sylan","hlph","dipass"],"children":["axhis3-zf"]},{"name":"hlipgt0","content":"The inner product of a Hilbert space vector by itself is positive. (Contributed by NM, 8-Sep-2007.) (New usage is discouraged.)","origin":"thm hlipgt0(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(w3a(wcel(c0, chlo), wcel(c1, c2), wne(c1, c3)), wbr(nat0, clt, co(c1, c4, c1)))\n  -| wceq(c2, cfv(cba, c0))\n  -| wceq(c3, cfv(cn0v, c0))\n  -| wceq(c4, cfv(cdip, c0))\n} = {\n  syl3an1(wcel(c0, chlo), wcel(c1, c2), wne(c1, c3), wbr(nat0, clt, co(c1, c4, c1)), wcel(c0, cnv))\n  hlnv(c0)\n  breqtrrd(nat0, clt, co(c1, c4, c1), co(cfv(cfv(cnmcv, c0), c1), cexp, nat2), w3a(wcel(c0, cnv), wcel(c1, c2), wne(c1, c3)))\n  sqgt0d(cfv(cfv(cnmcv, c0), c1), w3a(wcel(c0, cnv), wcel(c1, c2), wne(c1, c3)))\n  3adant3(wcel(c0, cnv), wcel(c1, c2), wne(c1, c3), wcel(cfv(cfv(cnmcv, c0), c1), cr))\n  nvcl(c0, c1, c2, cfv(cnmcv, c0))\n  3impia(wcel(c0, cnv), wcel(c1, c2), wne(c1, c3), wne(cfv(cfv(cnmcv, c0), c1), nat0))\n  necon3d(c1, c3, cfv(cfv(cnmcv, c0), c1), nat0, wa(wcel(c0, cnv), wcel(c1, c2)))\n  biimpd(wa(wcel(c0, cnv), wcel(c1, c2)), wceq(cfv(cfv(cnmcv, c0), c1), nat0), wceq(c1, c3))\n  nvz(c0, c1, c2, cfv(cnmcv, c0), c3)\n  3adant3(wcel(c0, cnv), wcel(c1, c2), wne(c1, c3), wceq(co(c1, c4, c1), co(cfv(cfv(cnmcv, c0), c1), cexp, nat2)))\n  ipidsq(c0, c1, c2, c4, cfv(cnmcv, c0))\n  eqid(cfv(cnmcv, c0))\n}","pretty":"thm hlipgt0(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß c1 ‚àà c2 ‚àß c1 ‚â† c3)‚Üí 0[<](c1[c4]c1))\n  ‚ä£ c2 =(BaseSet ` c0)\n  ‚ä£ c3 =(0vec ` c0)\n  ‚ä£ c4 =(.iOLD ` c0)\n} = {\n  syl3an1(c0 ‚àà CHilOLD, c1 ‚àà c2, c1 ‚â† c3, 0[<](c1[c4]c1), c0 ‚àà NrmCVec)\n  hlnv(c0)\n  breqtrrd(nat0, clt, (c1[c4]c1), (((normCV ` c0)` c1)[^]2), (c0 ‚àà NrmCVec ‚àß c1 ‚àà c2 ‚àß c1 ‚â† c3))\n  sqgt0d(((normCV ` c0)` c1), (c0 ‚àà NrmCVec ‚àß c1 ‚àà c2 ‚àß c1 ‚â† c3))\n  3adant3(c0 ‚àà NrmCVec, c1 ‚àà c2, c1 ‚â† c3, ((normCV ` c0)` c1)‚àà ‚Ñù)\n  nvcl(c0, c1, c2, (normCV ` c0))\n  3impia(c0 ‚àà NrmCVec, c1 ‚àà c2, c1 ‚â† c3, ((normCV ` c0)` c1)‚â† 0)\n  necon3d(c1, c3, ((normCV ` c0)` c1), nat0, (c0 ‚àà NrmCVec ‚àß c1 ‚àà c2))\n  biimpd((c0 ‚àà NrmCVec ‚àß c1 ‚àà c2), ((normCV ` c0)` c1)= 0, c1 = c3)\n  nvz(c0, c1, c2, (normCV ` c0), c3)\n  3adant3(c0 ‚àà NrmCVec, c1 ‚àà c2, c1 ‚â† c3, (c1[c4]c1)=(((normCV ` c0)` c1)[^]2))\n  ipidsq(c0, c1, c2, c4, (normCV ` c0))\n  eqid((normCV ` c0))\n}","parent":["syl3an1","hlnv","breqtrrd","sqgt0d","3adant3","nvcl","3impia","necon3d","biimpd","nvz","ipidsq","eqid"],"children":["axhis4-zf"]},{"name":"hlcompl","content":"Completeness of a Hilbert space. (Contributed by NM, 8-Sep-2007.) (Revised by Mario Carneiro, 9-May-2014.) (New usage is discouraged.)","origin":"thm hlcompl(class c0, class c1, class c2, class c3) {\n  |- wi(wa(wcel(c0, chlo), wcel(c1, cfv(ccau, c2))), wcel(c1, cdm(cfv(clm, c3))))\n  -| wceq(c2, cfv(cims, c0))\n  -| wceq(c3, cfv(cmopn, c2))\n} = {\n  sylan(wcel(c0, chlo), wcel(c1, cfv(ccau, c2)), wcel(c1, cdm(cfv(clm, c3))), wcel(c2, cfv(ccmet, cfv(cba, c0))))\n  hlcmet(c0, c2, cfv(cba, c0))\n  eqid(cfv(cba, c0))\n  cmetcau(c2, cfv(cba, c0), c1, c3)\n}","pretty":"thm hlcompl(class c0, class c1, class c2, class c3) {\n  ‚ä¢ ((c0 ‚àà CHilOLD ‚àß c1 ‚àà(Cau ` c2))‚Üí c1 ‚àà dom((~~>t ` c3)))\n  ‚ä£ c2 =(IndMet ` c0)\n  ‚ä£ c3 =(MetOpen ` c2)\n} = {\n  sylan(c0 ‚àà CHilOLD, c1 ‚àà(Cau ` c2), c1 ‚àà dom((~~>t ` c3)), c2 ‚àà(CMet `(BaseSet ` c0)))\n  hlcmet(c0, c2, (BaseSet ` c0))\n  eqid((BaseSet ` c0))\n  cmetcau(c2, (BaseSet ` c0), c1, c3)\n}","parent":["sylan","hlcmet","eqid","cmetcau"],"children":["axhcompl-zf"]}]}