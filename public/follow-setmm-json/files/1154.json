{"index":1154,"title":"Evaluation","content":"","blocks":[{"name":"bj-evaleq","content":"Equality theorem for the ` Slot ` construction. This is currently a duplicate of ~ sloteq but may diverge from it if/when a token Eval is introduced for evaluation in order to separate it from Slot and any of its possible modifications. (Contributed by BJ, 27-Dec-2021.) (Proof modification is discouraged.)","origin":"thm bj-evaleq(class c0, class c1) {\n  |- wi(wceq(c0, c1), wceq(cslot(c0), cslot(c1)))\n} = {\n  3eqtr4g(cslot(c0), cslot(c1), cmpt(hs0, universe, cfv(cv(hs0), c0)), cmpt(hs0, universe, cfv(cv(hs0), c1)), wceq(c0, c1))\n  mpteq2dv(hs0, universe, cfv(cv(hs0), c0), cfv(cv(hs0), c1), wceq(c0, c1))\n  fveq2(c0, c1, cv(hs0))\n  df-slot(hs0, c0)\n  df-slot(hs0, c1)\n  diff.hs0.w(wceq(c0, c1))\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","pretty":"thm bj-evaleq(class c0, class c1) {\n  ‚ä¢ (c0 = c1 ‚Üí Slot(c0)= Slot(c1))\n} = {\n  3eqtr4g(Slot(c0), Slot(c1), (hs0 ‚àà ùïå ‚Ü¶(hs0 ` c0)), (hs0 ‚àà ùïå ‚Ü¶(hs0 ` c1)), c0 = c1)\n  mpteq2dv(hs0, universe, (hs0 ` c0), (hs0 ` c1), c0 = c1)\n  fveq2(c0, c1, hs0)\n  df-slot(hs0, c0)\n  df-slot(hs0, c1)\n  diff.hs0.w(c0 = c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n}","parent":["3eqtr4g","mpteq2dv","fveq2","df-slot","diff.hs0.w","diff.hs0.c"],"children":["bj-ndxid"]},{"name":"bj-evalfun","content":"The evaluation at a class is a function. (Contributed by BJ, 27-Dec-2021.)","origin":"thm bj-evalfun(class c0) {\n  |- wfun(cslot(c0))\n} = {\n  funmpt2(hs0, cslot(c0), universe, cfv(cv(hs0), c0))\n  df-slot(hs0, c0)\n  diff.hs0.c(c0)\n}","pretty":"thm bj-evalfun(class c0) {\n  ‚ä¢ Fun(Slot(c0))\n} = {\n  funmpt2(hs0, Slot(c0), universe, (hs0 ` c0))\n  df-slot(hs0, c0)\n  diff.hs0.c(c0)\n}","parent":["funmpt2","df-slot","diff.hs0.c"],"children":[]},{"name":"bj-evalfn","content":"The evaluation at a class is a function on the universal class. (General form of ~ slotfn ). (Contributed by Mario Carneiro, 22-Sep-2015.) (Revised by BJ, 27-Dec-2021.)","origin":"thm bj-evalfn(class c0) {\n  |- wfn(cslot(c0), universe)\n} = {\n  fnmpti(hs0, cslot(c0), universe, cfv(cv(hs0), c0))\n  fvex(cv(hs0), c0)\n  df-slot(hs0, c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c0)\n}","pretty":"thm bj-evalfn(class c0) {\n  ‚ä¢ Slot(c0)[Fn]ùïå\n} = {\n  fnmpti(hs0, Slot(c0), universe, (hs0 ` c0))\n  fvex(hs0, c0)\n  df-slot(hs0, c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(c0)\n}","parent":["fnmpti","fvex","df-slot","diff.hs0.c"],"children":[]},{"name":"bj-evalval","content":"Value of the evaluation at a class. (Closed form of ~ strfvnd and ~ strfvn ). (Contributed by NM, 9-Sep-2011.) (Revised by Mario Carneiro, 15-Nov-2014.) (Revised by BJ, 27-Dec-2021.)","origin":"thm bj-evalval(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wceq(cfv(cslot(c2), c0), cfv(c0, c2)))\n} = {\n  syl(wcel(c0, c1), wceq(cfv(cslot(c2), c0), cfv(c0, c2)), wcel(c0, universe))\n  elex(c0, c1)\n  fvmpt(hs0, c0, universe, cslot(c2), cfv(c0, c2), cfv(cv(hs0), c2))\n  fveq1(cv(hs0), c0, c2)\n  df-slot(hs0, c2)\n  fvex(c0, c2)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c(cfv(c0, c2))\n  diff.hs0.c(c2)\n}","pretty":"thm bj-evalval(class c0, class c1, class c2) {\n  ‚ä¢ (c0 ‚àà c1 ‚Üí(Slot(c2)` c0)=(c0 ` c2))\n} = {\n  syl(c0 ‚àà c1, (Slot(c2)` c0)=(c0 ` c2), c0 ‚àà ùïå)\n  elex(c0, c1)\n  fvmpt(hs0, c0, universe, Slot(c2), (c0 ` c2), (hs0 ` c2))\n  fveq1(hs0, c0, c2)\n  df-slot(hs0, c2)\n  fvex(c0, c2)\n  diff.hs0.c(c0)\n  diff.hs0.c(universe)\n  diff.hs0.c((c0 ` c2))\n  diff.hs0.c(c2)\n}","parent":["syl","elex","fvmpt","fveq1","df-slot","fvex","diff.hs0.c"],"children":["bj-evalid","bj-evalidval"]},{"name":"bj-evalid","content":"The evaluation at a set of the identity function is that set. (General form of ~ ndxarg .) The restriction to a set ` V ` is necessary since the argument of the function ` Slot A ` (like that of any function) has to be a set for the evaluation to be meaningful. (Contributed by BJ, 27-Dec-2021.)","origin":"thm bj-evalid(class c0, class c1, class c2) {\n  |- wi(wa(wcel(c0, c1), wcel(c2, c0)), wceq(cfv(cslot(c2), cres(cid, c0)), c2))\n} = {\n  sylan9eq(cfv(cslot(c2), cres(cid, c0)), c2, cfv(cres(cid, c0), c2), wcel(c0, c1), wcel(c2, c0))\n  syl(wcel(c0, c1), wceq(cfv(cslot(c2), cres(cid, c0)), cfv(cres(cid, c0), c2)), wcel(cres(cid, c0), universe))\n  resiexg(c0, c1)\n  bj-evalval(cres(cid, c0), universe, c2)\n  fvresi(c2, c0)\n}","pretty":"thm bj-evalid(class c0, class c1, class c2) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c0)‚Üí(Slot(c2)`(= |` c0))= c2)\n} = {\n  sylan9eq((Slot(c2)`(= |` c0)), c2, ((= |` c0)` c2), c0 ‚àà c1, c2 ‚àà c0)\n  syl(c0 ‚àà c1, (Slot(c2)`(= |` c0))=((= |` c0)` c2), (= |` c0)‚àà ùïå)\n  resiexg(c0, c1)\n  bj-evalval((= |` c0), universe, c2)\n  fvresi(c2, c0)\n}","parent":["sylan9eq","syl","resiexg","bj-evalval","fvresi"],"children":["bj-ndxarg","bj-evalidval"]},{"name":"bj-ndxarg","content":"Proof of ~ ndxarg from ~ bj-evalid . (Contributed by BJ, 27-Dec-2021.) (Proof modification is discouraged.)","origin":"thm bj-ndxarg(class c0, class c1) {\n  |- wceq(cfv(c0, cnx), c1)\n  -| wceq(c0, cslot(c1))\n  -| wcel(c1, cn)\n} = {\n  mp2an(wceq(cfv(c0, cnx), c1), wcel(cn, universe), wcel(c1, cn))\n  nnex()\n  syl5eq(cfv(c0, cnx), c1, cfv(cslot(c1), cres(cid, cn)), wa(wcel(cn, universe), wcel(c1, cn)))\n  fveq12i(c0, cnx, cslot(c1), cres(cid, cn))\n  df-ndx()\n  bj-evalid(cn, universe, c1)\n}","pretty":"thm bj-ndxarg(class c0, class c1) {\n  ‚ä¢ (c0 ` ndx)= c1\n  ‚ä£ c0 = Slot(c1)\n  ‚ä£ c1 ‚àà ‚Ñï\n} = {\n  mp2an((c0 ` ndx)= c1, ‚Ñï ‚àà ùïå, c1 ‚àà ‚Ñï)\n  nnex()\n  syl5eq((c0 ` ndx), c1, (Slot(c1)`(= |` ‚Ñï)), (‚Ñï ‚àà ùïå ‚àß c1 ‚àà ‚Ñï))\n  fveq12i(c0, cnx, Slot(c1), (= |` ‚Ñï))\n  df-ndx()\n  bj-evalid(cn, universe, c1)\n}","parent":["mp2an","nnex","syl5eq","fveq12i","df-ndx","bj-evalid"],"children":["bj-ndxid"]},{"name":"bj-ndxid","content":"Proof of ~ ndxid from ~ ndxarg . (Contributed by BJ, 27-Dec-2021.) (Proof modification is discouraged.)","origin":"thm bj-ndxid(class c0, class c1) {\n  |- wceq(c0, cslot(cfv(c0, cnx)))\n  -| wceq(c0, cslot(c1))\n  -| wcel(c1, cn)\n} = {\n  ax-mp(wceq(c0, cslot(cfv(c0, cnx))), wceq(c1, cfv(c0, cnx)))\n  eqcomi(c1, cfv(c0, cnx))\n  bj-ndxarg(c0, c1)\n  syl5eq(c0, cslot(cfv(c0, cnx)), cslot(c1), wceq(c1, cfv(c0, cnx)))\n  bj-evaleq(c1, cfv(c0, cnx))\n}","pretty":"thm bj-ndxid(class c0, class c1) {\n  ‚ä¢ c0 = Slot((c0 ` ndx))\n  ‚ä£ c0 = Slot(c1)\n  ‚ä£ c1 ‚àà ‚Ñï\n} = {\n  ax-mp(c0 = Slot((c0 ` ndx)), c1 =(c0 ` ndx))\n  eqcomi(c1, (c0 ` ndx))\n  bj-ndxarg(c0, c1)\n  syl5eq(c0, Slot((c0 ` ndx)), Slot(c1), c1 =(c0 ` ndx))\n  bj-evaleq(c1, (c0 ` ndx))\n}","parent":["ax-mp","eqcomi","bj-ndxarg","syl5eq","bj-evaleq"],"children":[]},{"name":"bj-evalidval","content":"Closed general form of ~ strndxid . Both sides are equal to ` ( F `` A ) ` by ~ bj-evalid and ~ bj-evalval respectively, but ~ bj-evalidval adds something to ~ bj-evalid and ~ bj-evalval in that ` Slot A ` appears on both sides. (Contributed by BJ, 27-Dec-2021.)","origin":"thm bj-evalidval(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(w3a(wcel(c0, c1), wcel(c2, c0), wcel(c3, c4)), wceq(cfv(c3, cfv(cslot(c2), cres(cid, c0))), cfv(cslot(c2), c3)))\n} = {\n  eqtrd(cfv(c3, cfv(cslot(c2), cres(cid, c0))), cfv(cslot(c2), c3), cfv(c3, c2), w3a(wcel(c0, c1), wcel(c2, c0), wcel(c3, c4)))\n  3adant3(wcel(c0, c1), wcel(c2, c0), wcel(c3, c4), wceq(cfv(c3, cfv(cslot(c2), cres(cid, c0))), cfv(c3, c2)))\n  fveq2d(c3, cfv(cslot(c2), cres(cid, c0)), c2, wa(wcel(c0, c1), wcel(c2, c0)))\n  bj-evalid(c0, c1, c2)\n  3ad2ant3(wcel(c0, c1), wcel(c2, c0), wcel(c3, c4), wceq(cfv(c3, c2), cfv(cslot(c2), c3)))\n  eqcomd(cfv(c3, c2), cfv(cslot(c2), c3), wcel(c3, c4))\n  bj-evalval(c3, c4, c2)\n}","pretty":"thm bj-evalidval(class c0, class c1, class c2, class c3, class c4) {\n  ‚ä¢ ((c0 ‚àà c1 ‚àß c2 ‚àà c0 ‚àß c3 ‚àà c4)‚Üí(c3 `(Slot(c2)`(= |` c0)))=(Slot(c2)` c3))\n} = {\n  eqtrd((c3 `(Slot(c2)`(= |` c0))), (Slot(c2)` c3), (c3 ` c2), (c0 ‚àà c1 ‚àß c2 ‚àà c0 ‚àß c3 ‚àà c4))\n  3adant3(c0 ‚àà c1, c2 ‚àà c0, c3 ‚àà c4, (c3 `(Slot(c2)`(= |` c0)))=(c3 ` c2))\n  fveq2d(c3, (Slot(c2)`(= |` c0)), c2, (c0 ‚àà c1 ‚àß c2 ‚àà c0))\n  bj-evalid(c0, c1, c2)\n  3ad2ant3(c0 ‚àà c1, c2 ‚àà c0, c3 ‚àà c4, (c3 ` c2)=(Slot(c2)` c3))\n  eqcomd((c3 ` c2), (Slot(c2)` c3), c3 ‚àà c4)\n  bj-evalval(c3, c4, c2)\n}","parent":["eqtrd","3adant3","fveq2d","bj-evalid","3ad2ant3","eqcomd","bj-evalval"],"children":[]}]}