{"index":1037,"title":"Untangled classes","content":"","blocks":[{"name":"untelirr","content":"We call a class \"untanged\" if all its members are not members of themselves. The term originates from Isbell (see citation in ~ dfon2 ). Using this concept, we can avoid a lot of the uses of the Axiom of Regularity. Here, we prove a series of properties of untanged classes. First, we prove that an untangled class is not a member of itself. (Contributed by Scott Fenton, 28-Feb-2011.)","origin":"thm untelirr(setvar s0, class c0) {\n  |- wi(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wn(wcel(c0, c0)))\n  -| diffsc(s0, c0)\n} = {\n  pm2.01d(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wcel(c0, c0))\n  rspccv(s0, c0, c0, wn(wcel(cv(s0), cv(s0))), wn(wcel(c0, c0)))\n  notbid(wceq(cv(s0), c0), wcel(cv(s0), cv(s0)), wcel(c0, c0))\n  bitrd(wceq(cv(s0), c0), wcel(cv(s0), cv(s0)), wcel(c0, c0), wcel(c0, cv(s0)))\n  eleq1(cv(s0), c0, cv(s0))\n  eleq2(cv(s0), c0, c0)\n  diff.wn.s(s0, wcel(c0, c0))\n  diff.wcel.s(s0, c0, c0)\n}","pretty":"thm untelirr(setvar s0, class c0) {\n  ⊢ (∀(s0 ∈ c0, ¬ s0 ∈ s0)→ ¬ c0 ∈ c0)\n  ⊣ d(s0, c0)\n} = {\n  pm2.01d(∀(s0 ∈ c0, ¬ s0 ∈ s0), c0 ∈ c0)\n  rspccv(s0, c0, c0, ¬ s0 ∈ s0, ¬ c0 ∈ c0)\n  notbid(s0 = c0, s0 ∈ s0, c0 ∈ c0)\n  bitrd(s0 = c0, s0 ∈ s0, c0 ∈ c0, c0 ∈ s0)\n  eleq1(s0, c0, s0)\n  eleq2(s0, c0, c0)\n  diff.wn.s(s0, c0 ∈ c0)\n  diff.wcel.s(s0, c0, c0)\n}","parent":["pm2.01d","rspccv","notbid","bitrd","eleq1","eleq2","diff.wn.s","diff.wcel.s"],"children":["untsucf","untangtr","dfon2lem3","dfon2lem7","dfon2lem8","dfon2lem9"]},{"name":"untuni","content":"The union of a class is untangled iff all its members are untangled. (Contributed by Scott Fenton, 28-Feb-2011.)","origin":"thm untuni(setvar s0, setvar s1, class c0) {\n  |- wb(wral(s0, cuni(c0), wn(wcel(cv(s0), cv(s0)))), wral(s1, c0, wral(s0, cv(s1), wn(wcel(cv(s0), cv(s0))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  3bitr4i(wral(s0, cuni(c0), wn(wcel(cv(s0), cv(s0)))), wral(s1, c0, wral(s0, cv(s1), wn(wcel(cv(s0), cv(s0))))), wal(s0, wi(wcel(cv(s0), cuni(c0)), wn(wcel(cv(s0), cv(s0))))), wral(s1, c0, wal(s0, wi(wcel(cv(s0), cv(s1)), wn(wcel(cv(s0), cv(s0)))))))\n  3bitr4ri(wal(s0, wi(wcel(cv(s0), cuni(c0)), wn(wcel(cv(s0), cv(s0))))), wral(s1, c0, wal(s0, wi(wcel(cv(s0), cv(s1)), wn(wcel(cv(s0), cv(s0)))))), wal(s0, wral(s1, c0, wi(wcel(cv(s0), cv(s1)), wn(wcel(cv(s0), cv(s0)))))), wal(s0, wi(wrex(s1, c0, wcel(cv(s0), cv(s1))), wn(wcel(cv(s0), cv(s0))))))\n  albii(s0, wral(s1, c0, wi(wcel(cv(s0), cv(s1)), wn(wcel(cv(s0), cv(s0))))), wi(wrex(s1, c0, wcel(cv(s0), cv(s1))), wn(wcel(cv(s0), cv(s0)))))\n  r19.23v(s1, c0, wcel(cv(s0), cv(s1)), wn(wcel(cv(s0), cv(s0))))\n  ralcom4(s1, s0, c0, wi(wcel(cv(s0), cv(s1)), wn(wcel(cv(s0), cv(s0)))))\n  albii(s0, wi(wcel(cv(s0), cuni(c0)), wn(wcel(cv(s0), cv(s0)))), wi(wrex(s1, c0, wcel(cv(s0), cv(s1))), wn(wcel(cv(s0), cv(s0)))))\n  imbi1i(wcel(cv(s0), cuni(c0)), wn(wcel(cv(s0), cv(s0))), wrex(s1, c0, wcel(cv(s0), cv(s1))))\n  eluni2(s1, cv(s0), c0)\n  df-ral(s0, cuni(c0), wn(wcel(cv(s0), cv(s0))))\n  ralbii(s1, c0, wral(s0, cv(s1), wn(wcel(cv(s0), cv(s0)))), wal(s0, wi(wcel(cv(s0), cv(s1)), wn(wcel(cv(s0), cv(s0))))))\n  df-ral(s0, cv(s1), wn(wcel(cv(s0), cv(s0))))\n  diff.wn.s(s1, wcel(cv(s0), cv(s0)))\n  diff.wcel.s(s1, cv(s0), cv(s0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm untuni(setvar s0, setvar s1, class c0) {\n  ⊢ (∀(s0 ∈ ⋃ c0, ¬ s0 ∈ s0)↔ ∀(s1 ∈ c0, ∀(s0 ∈ s1, ¬ s0 ∈ s0)))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  3bitr4i(∀(s0 ∈ ⋃ c0, ¬ s0 ∈ s0), ∀(s1 ∈ c0, ∀(s0 ∈ s1, ¬ s0 ∈ s0)), ∀(s0,(s0 ∈ ⋃ c0 → ¬ s0 ∈ s0)), ∀(s1 ∈ c0, ∀(s0,(s0 ∈ s1 → ¬ s0 ∈ s0))))\n  3bitr4ri(∀(s0,(s0 ∈ ⋃ c0 → ¬ s0 ∈ s0)), ∀(s1 ∈ c0, ∀(s0,(s0 ∈ s1 → ¬ s0 ∈ s0))), ∀(s0, ∀(s1 ∈ c0,(s0 ∈ s1 → ¬ s0 ∈ s0))), ∀(s0,(∃(s1 ∈ c0, s0 ∈ s1)→ ¬ s0 ∈ s0)))\n  albii(s0, ∀(s1 ∈ c0,(s0 ∈ s1 → ¬ s0 ∈ s0)), (∃(s1 ∈ c0, s0 ∈ s1)→ ¬ s0 ∈ s0))\n  r19.23v(s1, c0, s0 ∈ s1, ¬ s0 ∈ s0)\n  ralcom4(s1, s0, c0, (s0 ∈ s1 → ¬ s0 ∈ s0))\n  albii(s0, (s0 ∈ ⋃ c0 → ¬ s0 ∈ s0), (∃(s1 ∈ c0, s0 ∈ s1)→ ¬ s0 ∈ s0))\n  imbi1i(s0 ∈ ⋃ c0, ¬ s0 ∈ s0, ∃(s1 ∈ c0, s0 ∈ s1))\n  eluni2(s1, s0, c0)\n  df-ral(s0, ⋃ c0, ¬ s0 ∈ s0)\n  ralbii(s1, c0, ∀(s0 ∈ s1, ¬ s0 ∈ s0), ∀(s0,(s0 ∈ s1 → ¬ s0 ∈ s0)))\n  df-ral(s0, s1, ¬ s0 ∈ s0)\n  diff.wn.s(s1, s0 ∈ s0)\n  diff.wcel.s(s1, s0, s0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["3bitr4i","3bitr4ri","albii","r19.23v","ralcom4","imbi1i","eluni2","df-ral","ralbii","diff.wn.s","diff.wcel.s","diff.cv.s","diffss.ex"],"children":["untangtr","dfon2lem3","dfon2lem7"]},{"name":"untsucf","content":"If a class is untangled, then so is its successor. (Contributed by Scott Fenton, 28-Feb-2011.) (Revised by Mario Carneiro, 11-Dec-2016.)","origin":"thm untsucf(setvar s0, setvar s1, class c0) {\n  |- wi(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wral(s1, csuc(c0), wn(wcel(cv(s1), cv(s1)))))\n  -| wnfc(s1, c0)\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n} = {\n  ralrimi(s1, csuc(c0), wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wn(wcel(cv(s1), cv(s1))))\n  nfral(s1, s0, c0, wn(wcel(cv(s0), cv(s0))))\n  nfv(s1, wn(wcel(cv(s0), cv(s0))))\n  syl5bi(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wcel(cv(s1), csuc(c0)), wn(wcel(cv(s1), cv(s1))), wo(wcel(cv(s1), c0), wceq(cv(s1), c0)))\n  elsuc(cv(s1), c0)\n  vex(s1)\n  jaod(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wcel(cv(s1), c0), wceq(cv(s1), c0), wn(wcel(cv(s1), cv(s1))))\n  rspccv(s0, c0, cv(s1), wn(wcel(cv(s0), cv(s0))), wn(wcel(cv(s1), cv(s1))))\n  notbid(wceq(cv(s0), cv(s1)), wcel(cv(s0), cv(s0)), wcel(cv(s1), cv(s1)))\n  bitrd(wceq(cv(s0), cv(s1)), wcel(cv(s0), cv(s0)), wcel(cv(s1), cv(s1)), wcel(cv(s1), cv(s0)))\n  elequ1(s0, s1, s0)\n  elequ2(s0, s1, s1)\n  syl5ibrcom(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wceq(cv(s1), c0), wn(wcel(cv(s1), cv(s1))), wn(wcel(c0, c0)))\n  untelirr(s0, c0)\n  notbid(wceq(cv(s1), c0), wcel(cv(s1), cv(s1)), wcel(c0, c0))\n  bitrd(wceq(cv(s1), c0), wcel(cv(s1), cv(s1)), wcel(c0, c0), wcel(c0, cv(s1)))\n  eleq1(cv(s1), c0, cv(s1))\n  eleq2(cv(s1), c0, c0)\n  diff.wn.s(s1, wcel(cv(s0), cv(s0)))\n  diff.wcel.s(s1, cv(s0), cv(s0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.wn.s(s0, wcel(cv(s1), cv(s1)))\n  diff.wcel.s(s0, cv(s1), cv(s1))\n  diff.cv.s(s0, s1)\n}","pretty":"thm untsucf(setvar s0, setvar s1, class c0) {\n  ⊢ (∀(s0 ∈ c0, ¬ s0 ∈ s0)→ ∀(s1 ∈ suc(c0), ¬ s1 ∈ s1))\n  ⊣ F/(s1, c0)\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n} = {\n  ralrimi(s1, suc(c0), ∀(s0 ∈ c0, ¬ s0 ∈ s0), ¬ s1 ∈ s1)\n  nfral(s1, s0, c0, ¬ s0 ∈ s0)\n  nfv(s1, ¬ s0 ∈ s0)\n  syl5bi(∀(s0 ∈ c0, ¬ s0 ∈ s0), s1 ∈ suc(c0), ¬ s1 ∈ s1, (s1 ∈ c0 ∨ s1 = c0))\n  elsuc(s1, c0)\n  vex(s1)\n  jaod(∀(s0 ∈ c0, ¬ s0 ∈ s0), s1 ∈ c0, s1 = c0, ¬ s1 ∈ s1)\n  rspccv(s0, c0, s1, ¬ s0 ∈ s0, ¬ s1 ∈ s1)\n  notbid(s0 = s1, s0 ∈ s0, s1 ∈ s1)\n  bitrd(s0 = s1, s0 ∈ s0, s1 ∈ s1, s1 ∈ s0)\n  elequ1(s0, s1, s0)\n  elequ2(s0, s1, s1)\n  syl5ibrcom(∀(s0 ∈ c0, ¬ s0 ∈ s0), s1 = c0, ¬ s1 ∈ s1, ¬ c0 ∈ c0)\n  untelirr(s0, c0)\n  notbid(s1 = c0, s1 ∈ s1, c0 ∈ c0)\n  bitrd(s1 = c0, s1 ∈ s1, c0 ∈ c0, c0 ∈ s1)\n  eleq1(s1, c0, s1)\n  eleq2(s1, c0, c0)\n  diff.wn.s(s1, s0 ∈ s0)\n  diff.wcel.s(s1, s0, s0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n  diff.wn.s(s0, s1 ∈ s1)\n  diff.wcel.s(s0, s1, s1)\n  diff.cv.s(s0, s1)\n}","parent":["ralrimi","nfral","nfv","syl5bi","elsuc","vex","jaod","rspccv","notbid","bitrd","elequ1","elequ2","syl5ibrcom","untelirr","eleq1","eleq2","diff.wn.s","diff.wcel.s","diff.cv.s","diffss.ex"],"children":["dfon2lem3"]},{"name":"unt0","content":"The null set is untangled. (Contributed by Scott Fenton, 10-Mar-2011.) (Proof shortened by Andrew Salmon, 27-Aug-2011.)","origin":"thm unt0(setvar s0) {\n  |- wral(s0, emptycls, wn(wcel(cv(s0), cv(s0))))\n} = {\n  ral0(s0, wn(wcel(cv(s0), cv(s0))))\n}","pretty":"thm unt0(setvar s0) {\n  ⊢ ∀(s0 ∈ ∅, ¬ s0 ∈ s0)\n} = {\n  ral0(s0, ¬ s0 ∈ s0)\n}","parent":["ral0"],"children":[]},{"name":"untint","content":"If there is an untangled element of a class, then the intersection of the class is untangled. (Contributed by Scott Fenton, 1-Mar-2011.)","origin":"thm untint(setvar s0, setvar s1, class c0) {\n  |- wi(wrex(s0, c0, wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1))))), wral(s1, cint(c0), wn(wcel(cv(s1), cv(s1)))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  rexlimiv(s0, c0, wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1)))), wral(s1, cint(c0), wn(wcel(cv(s1), cv(s1)))))\n  syl(wcel(cv(s0), c0), wi(wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1)))), wral(s1, cint(c0), wn(wcel(cv(s1), cv(s1))))), wss(cint(c0), cv(s0)))\n  intss1(cv(s0), c0)\n  ssralv(s1, cint(c0), cv(s0), wn(wcel(cv(s1), cv(s1))))\n  diff.wral.s(s0, s1, cint(c0), wn(wcel(cv(s1), cv(s1))))\n  diff.cint.s(s0, c0)\n  diff.wn.s(s0, wcel(cv(s1), cv(s1)))\n  diff.wcel.s(s0, cv(s1), cv(s1))\n  diff.cv.s(s0, s1)\n  diff.cint.s(s1, c0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm untint(setvar s0, setvar s1, class c0) {\n  ⊢ (∃(s0 ∈ c0, ∀(s1 ∈ s0, ¬ s1 ∈ s1))→ ∀(s1 ∈ ⋂ c0, ¬ s1 ∈ s1))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  rexlimiv(s0, c0, ∀(s1 ∈ s0, ¬ s1 ∈ s1), ∀(s1 ∈ ⋂ c0, ¬ s1 ∈ s1))\n  syl(s0 ∈ c0, (∀(s1 ∈ s0, ¬ s1 ∈ s1)→ ∀(s1 ∈ ⋂ c0, ¬ s1 ∈ s1)), ⋂ c0 ⊆ s0)\n  intss1(s0, c0)\n  ssralv(s1, ⋂ c0, s0, ¬ s1 ∈ s1)\n  diff.wral.s(s0, s1, ⋂ c0, ¬ s1 ∈ s1)\n  diff.cint.s(s0, c0)\n  diff.wn.s(s0, s1 ∈ s1)\n  diff.wcel.s(s0, s1, s1)\n  diff.cv.s(s0, s1)\n  diff.cint.s(s1, c0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["rexlimiv","syl","intss1","ssralv","diff.wral.s","diff.cint.s","diff.wn.s","diff.wcel.s","diff.cv.s","diffss.ex"],"children":[]},{"name":"efrunt","content":"If ` A ` is well-founded by ` _E ` , then it is untangled. (Contributed by Scott Fenton, 1-Mar-2011.)","origin":"thm efrunt(setvar s0, class c0) {\n  |- wi(wfr(cep, c0), wral(s0, c0, wn(wcel(cv(s0), cv(s0)))))\n  -| diffsc(s0, c0)\n} = {\n  ralrimiva(s0, c0, wfr(cep, c0), wn(wcel(cv(s0), cv(s0))))\n  sylnib(wa(wfr(cep, c0), wcel(cv(s0), c0)), wcel(cv(s0), cv(s0)), wbr(cv(s0), cep, cv(s0)))\n  frirr(cep, c0, cv(s0))\n  epel(s0, cv(s0))\n  diff.wfr.s(s0, cep, c0)\n  diff.cep.s(s0)\n}","pretty":"thm efrunt(setvar s0, class c0) {\n  ⊢ (∈[Fr]c0 → ∀(s0 ∈ c0, ¬ s0 ∈ s0))\n  ⊣ d(s0, c0)\n} = {\n  ralrimiva(s0, c0, ∈[Fr]c0, ¬ s0 ∈ s0)\n  sylnib((∈[Fr]c0 ∧ s0 ∈ c0), s0 ∈ s0, s0[∈]s0)\n  frirr(cep, c0, s0)\n  epel(s0, s0)\n  diff.wfr.s(s0, cep, c0)\n  diff.cep.s(s0)\n}","parent":["ralrimiva","sylnib","frirr","epel","diff.wfr.s","diff.cep.s"],"children":[]},{"name":"untangtr","content":"A transitive class is untangled iff its elements are. (Contributed by Scott Fenton, 7-Mar-2011.)","origin":"thm untangtr(setvar s0, setvar s1, class c0) {\n  |- wi(wtr(c0), wb(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wral(s0, c0, wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1)))))))\n  -| diffss(s0, s1)\n  -| diffsc(s0, c0)\n  -| diffsc(s1, c0)\n} = {\n  impbid1(wtr(c0), wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wral(s0, c0, wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1))))))\n  syl6ib(wtr(c0), wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wral(s0, c0, wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1))))), wral(s0, cuni(c0), wn(wcel(cv(s0), cv(s0)))))\n  sylbi(wtr(c0), wi(wral(s0, c0, wn(wcel(cv(s0), cv(s0)))), wral(s0, cuni(c0), wn(wcel(cv(s0), cv(s0))))), wss(cuni(c0), c0))\n  df-tr(c0)\n  ssralv(s0, cuni(c0), c0, wn(wcel(cv(s0), cv(s0))))\n  bitri(wral(s0, cuni(c0), wn(wcel(cv(s0), cv(s0)))), wral(s0, c0, wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1))))), wral(s1, cuni(c0), wn(wcel(cv(s1), cv(s1)))))\n  cbvralv(s0, s1, cuni(c0), wn(wcel(cv(s0), cv(s0))), wn(wcel(cv(s1), cv(s1))))\n  notbid(wceq(cv(s0), cv(s1)), wcel(cv(s0), cv(s0)), wcel(cv(s1), cv(s1)))\n  bitrd(wceq(cv(s0), cv(s1)), wcel(cv(s0), cv(s0)), wcel(cv(s1), cv(s1)), wcel(cv(s1), cv(s0)))\n  elequ1(s0, s1, s0)\n  elequ2(s0, s1, s1)\n  untuni(s1, s0, c0)\n  ralimi(s0, c0, wral(s1, cv(s0), wn(wcel(cv(s1), cv(s1)))), wn(wcel(cv(s0), cv(s0))))\n  untelirr(s1, cv(s0))\n  diff.cuni.s(s0, c0)\n  diff.cuni.s(s1, c0)\n  diff.wn.s(s0, wcel(cv(s1), cv(s1)))\n  diff.wcel.s(s0, cv(s1), cv(s1))\n  diff.cv.s(s0, s1)\n  diff.wn.s(s1, wcel(cv(s0), cv(s0)))\n  diff.wcel.s(s1, cv(s0), cv(s0))\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm untangtr(setvar s0, setvar s1, class c0) {\n  ⊢ (Tr(c0)→(∀(s0 ∈ c0, ¬ s0 ∈ s0)↔ ∀(s0 ∈ c0, ∀(s1 ∈ s0, ¬ s1 ∈ s1))))\n  ⊣ d(s0, s1)\n  ⊣ d(s0, c0)\n  ⊣ d(s1, c0)\n} = {\n  impbid1(Tr(c0), ∀(s0 ∈ c0, ¬ s0 ∈ s0), ∀(s0 ∈ c0, ∀(s1 ∈ s0, ¬ s1 ∈ s1)))\n  syl6ib(Tr(c0), ∀(s0 ∈ c0, ¬ s0 ∈ s0), ∀(s0 ∈ c0, ∀(s1 ∈ s0, ¬ s1 ∈ s1)), ∀(s0 ∈ ⋃ c0, ¬ s0 ∈ s0))\n  sylbi(Tr(c0), (∀(s0 ∈ c0, ¬ s0 ∈ s0)→ ∀(s0 ∈ ⋃ c0, ¬ s0 ∈ s0)), ⋃ c0 ⊆ c0)\n  df-tr(c0)\n  ssralv(s0, ⋃ c0, c0, ¬ s0 ∈ s0)\n  bitri(∀(s0 ∈ ⋃ c0, ¬ s0 ∈ s0), ∀(s0 ∈ c0, ∀(s1 ∈ s0, ¬ s1 ∈ s1)), ∀(s1 ∈ ⋃ c0, ¬ s1 ∈ s1))\n  cbvralv(s0, s1, ⋃ c0, ¬ s0 ∈ s0, ¬ s1 ∈ s1)\n  notbid(s0 = s1, s0 ∈ s0, s1 ∈ s1)\n  bitrd(s0 = s1, s0 ∈ s0, s1 ∈ s1, s1 ∈ s0)\n  elequ1(s0, s1, s0)\n  elequ2(s0, s1, s1)\n  untuni(s1, s0, c0)\n  ralimi(s0, c0, ∀(s1 ∈ s0, ¬ s1 ∈ s1), ¬ s0 ∈ s0)\n  untelirr(s1, s0)\n  diff.cuni.s(s0, c0)\n  diff.cuni.s(s1, c0)\n  diff.wn.s(s0, s1 ∈ s1)\n  diff.wcel.s(s0, s1, s1)\n  diff.cv.s(s0, s1)\n  diff.wn.s(s1, s0 ∈ s0)\n  diff.wcel.s(s1, s0, s0)\n  diff.cv.s(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["impbid1","syl6ib","sylbi","df-tr","ssralv","bitri","cbvralv","notbid","bitrd","elequ1","elequ2","untuni","ralimi","untelirr","diff.cuni.s","diff.wn.s","diff.wcel.s","diff.cv.s","diffss.ex"],"children":[]}]}