{"index":370,"title":"Slot definitions","content":"","blocks":[{"name":"cplusg","content":"Extend class notation with group (addition) operation.","origin":"const class cplusg { + }","pretty":"","parent":[],"children":[]},{"name":"diff.cplusg.s","content":"","origin":"axiom diff.cplusg.s(setvar s0) {\n  |- diffsc(s0, cplusg)\n}","pretty":"axiom diff.cplusg.s(setvar s0) {\n  ⊢ d(s0, +)\n}","parent":[],"children":[]},{"name":"diff.cplusg.c","content":"","origin":"axiom diff.cplusg.c(class c0) {\n  |- diffcc(cplusg, c0)\n}","pretty":"axiom diff.cplusg.c(class c0) {\n  ⊢ d(+, c0)\n}","parent":[],"children":[]},{"name":"diff.cplusg.w","content":"","origin":"axiom diff.cplusg.w(wff w0) {\n  |- diffcw(cplusg, w0)\n}","pretty":"axiom diff.cplusg.w(wff w0) {\n  ⊢ d(+, w0)\n}","parent":[],"children":[]},{"name":"cmulr","content":"Extend class notation with ring multiplication.","origin":"const class cmulr { × }","pretty":"","parent":[],"children":[]},{"name":"diff.cmulr.s","content":"","origin":"axiom diff.cmulr.s(setvar s0) {\n  |- diffsc(s0, cmulr)\n}","pretty":"axiom diff.cmulr.s(setvar s0) {\n  ⊢ d(s0, ×)\n}","parent":[],"children":[]},{"name":"diff.cmulr.c","content":"","origin":"axiom diff.cmulr.c(class c0) {\n  |- diffcc(cmulr, c0)\n}","pretty":"axiom diff.cmulr.c(class c0) {\n  ⊢ d(×, c0)\n}","parent":[],"children":[]},{"name":"diff.cmulr.w","content":"","origin":"axiom diff.cmulr.w(wff w0) {\n  |- diffcw(cmulr, w0)\n}","pretty":"axiom diff.cmulr.w(wff w0) {\n  ⊢ d(×, w0)\n}","parent":[],"children":[]},{"name":"cstv","content":"Extend class notation with involution.","origin":"const class cstv { *r }","pretty":"","parent":[],"children":[]},{"name":"diff.cstv.s","content":"","origin":"axiom diff.cstv.s(setvar s0) {\n  |- diffsc(s0, cstv)\n}","pretty":"axiom diff.cstv.s(setvar s0) {\n  ⊢ d(s0, *r)\n}","parent":[],"children":[]},{"name":"diff.cstv.c","content":"","origin":"axiom diff.cstv.c(class c0) {\n  |- diffcc(cstv, c0)\n}","pretty":"axiom diff.cstv.c(class c0) {\n  ⊢ d(*r, c0)\n}","parent":[],"children":[]},{"name":"diff.cstv.w","content":"","origin":"axiom diff.cstv.w(wff w0) {\n  |- diffcw(cstv, w0)\n}","pretty":"axiom diff.cstv.w(wff w0) {\n  ⊢ d(*r, w0)\n}","parent":[],"children":[]},{"name":"csca","content":"Extend class notation with scalar field.","origin":"const class csca { Scalar }","pretty":"","parent":[],"children":[]},{"name":"diff.csca.s","content":"","origin":"axiom diff.csca.s(setvar s0) {\n  |- diffsc(s0, csca)\n}","pretty":"axiom diff.csca.s(setvar s0) {\n  ⊢ d(s0, Scalar)\n}","parent":[],"children":[]},{"name":"diff.csca.c","content":"","origin":"axiom diff.csca.c(class c0) {\n  |- diffcc(csca, c0)\n}","pretty":"axiom diff.csca.c(class c0) {\n  ⊢ d(Scalar, c0)\n}","parent":[],"children":[]},{"name":"diff.csca.w","content":"","origin":"axiom diff.csca.w(wff w0) {\n  |- diffcw(csca, w0)\n}","pretty":"axiom diff.csca.w(wff w0) {\n  ⊢ d(Scalar, w0)\n}","parent":[],"children":[]},{"name":"cvsca","content":"Extend class notation with scalar product.","origin":"const class cvsca { × }","pretty":"","parent":[],"children":[]},{"name":"diff.cvsca.s","content":"","origin":"axiom diff.cvsca.s(setvar s0) {\n  |- diffsc(s0, cvsca)\n}","pretty":"axiom diff.cvsca.s(setvar s0) {\n  ⊢ d(s0, ×)\n}","parent":[],"children":[]},{"name":"diff.cvsca.c","content":"","origin":"axiom diff.cvsca.c(class c0) {\n  |- diffcc(cvsca, c0)\n}","pretty":"axiom diff.cvsca.c(class c0) {\n  ⊢ d(×, c0)\n}","parent":[],"children":[]},{"name":"diff.cvsca.w","content":"","origin":"axiom diff.cvsca.w(wff w0) {\n  |- diffcw(cvsca, w0)\n}","pretty":"axiom diff.cvsca.w(wff w0) {\n  ⊢ d(×, w0)\n}","parent":[],"children":[]},{"name":"cip","content":"Extend class notation with Hermitian form (inner product).","origin":"const class cip { · }","pretty":"","parent":[],"children":[]},{"name":"diff.cip.s","content":"","origin":"axiom diff.cip.s(setvar s0) {\n  |- diffsc(s0, cip)\n}","pretty":"axiom diff.cip.s(setvar s0) {\n  ⊢ d(s0, ·)\n}","parent":[],"children":[]},{"name":"diff.cip.c","content":"","origin":"axiom diff.cip.c(class c0) {\n  |- diffcc(cip, c0)\n}","pretty":"axiom diff.cip.c(class c0) {\n  ⊢ d(·, c0)\n}","parent":[],"children":[]},{"name":"diff.cip.w","content":"","origin":"axiom diff.cip.w(wff w0) {\n  |- diffcw(cip, w0)\n}","pretty":"axiom diff.cip.w(wff w0) {\n  ⊢ d(·, w0)\n}","parent":[],"children":[]},{"name":"cts","content":"Extend class notation with the topology component of a topological space.","origin":"const class cts { TopSet }","pretty":"","parent":[],"children":[]},{"name":"diff.cts.s","content":"","origin":"axiom diff.cts.s(setvar s0) {\n  |- diffsc(s0, cts)\n}","pretty":"axiom diff.cts.s(setvar s0) {\n  ⊢ d(s0, TopSet)\n}","parent":[],"children":[]},{"name":"diff.cts.c","content":"","origin":"axiom diff.cts.c(class c0) {\n  |- diffcc(cts, c0)\n}","pretty":"axiom diff.cts.c(class c0) {\n  ⊢ d(TopSet, c0)\n}","parent":[],"children":[]},{"name":"diff.cts.w","content":"","origin":"axiom diff.cts.w(wff w0) {\n  |- diffcw(cts, w0)\n}","pretty":"axiom diff.cts.w(wff w0) {\n  ⊢ d(TopSet, w0)\n}","parent":[],"children":[]},{"name":"cple","content":"Extend class notation with \"less than or equal to\" for posets.","origin":"const class cple { le }","pretty":"","parent":[],"children":[]},{"name":"diff.cple.s","content":"","origin":"axiom diff.cple.s(setvar s0) {\n  |- diffsc(s0, cple)\n}","pretty":"axiom diff.cple.s(setvar s0) {\n  ⊢ d(s0, le)\n}","parent":[],"children":[]},{"name":"diff.cple.c","content":"","origin":"axiom diff.cple.c(class c0) {\n  |- diffcc(cple, c0)\n}","pretty":"axiom diff.cple.c(class c0) {\n  ⊢ d(le, c0)\n}","parent":[],"children":[]},{"name":"diff.cple.w","content":"","origin":"axiom diff.cple.w(wff w0) {\n  |- diffcw(cple, w0)\n}","pretty":"axiom diff.cple.w(wff w0) {\n  ⊢ d(le, w0)\n}","parent":[],"children":[]},{"name":"coc","content":"Extend class notation with the class of orthocomplementation extractors.","origin":"const class coc { oc }","pretty":"","parent":[],"children":[]},{"name":"diff.coc.s","content":"","origin":"axiom diff.coc.s(setvar s0) {\n  |- diffsc(s0, coc)\n}","pretty":"axiom diff.coc.s(setvar s0) {\n  ⊢ d(s0, oc)\n}","parent":[],"children":[]},{"name":"diff.coc.c","content":"","origin":"axiom diff.coc.c(class c0) {\n  |- diffcc(coc, c0)\n}","pretty":"axiom diff.coc.c(class c0) {\n  ⊢ d(oc, c0)\n}","parent":[],"children":[]},{"name":"diff.coc.w","content":"","origin":"axiom diff.coc.w(wff w0) {\n  |- diffcw(coc, w0)\n}","pretty":"axiom diff.coc.w(wff w0) {\n  ⊢ d(oc, w0)\n}","parent":[],"children":[]},{"name":"cds","content":"Extend class notation with the metric space distance function.","origin":"const class cds { dist }","pretty":"","parent":[],"children":[]},{"name":"diff.cds.s","content":"","origin":"axiom diff.cds.s(setvar s0) {\n  |- diffsc(s0, cds)\n}","pretty":"axiom diff.cds.s(setvar s0) {\n  ⊢ d(s0, dist)\n}","parent":[],"children":[]},{"name":"diff.cds.c","content":"","origin":"axiom diff.cds.c(class c0) {\n  |- diffcc(cds, c0)\n}","pretty":"axiom diff.cds.c(class c0) {\n  ⊢ d(dist, c0)\n}","parent":[],"children":[]},{"name":"diff.cds.w","content":"","origin":"axiom diff.cds.w(wff w0) {\n  |- diffcw(cds, w0)\n}","pretty":"axiom diff.cds.w(wff w0) {\n  ⊢ d(dist, w0)\n}","parent":[],"children":[]},{"name":"cunif","content":"Extend class notation with the uniform structure.","origin":"const class cunif { UnifSet }","pretty":"","parent":[],"children":[]},{"name":"diff.cunif.s","content":"","origin":"axiom diff.cunif.s(setvar s0) {\n  |- diffsc(s0, cunif)\n}","pretty":"axiom diff.cunif.s(setvar s0) {\n  ⊢ d(s0, UnifSet)\n}","parent":[],"children":[]},{"name":"diff.cunif.c","content":"","origin":"axiom diff.cunif.c(class c0) {\n  |- diffcc(cunif, c0)\n}","pretty":"axiom diff.cunif.c(class c0) {\n  ⊢ d(UnifSet, c0)\n}","parent":[],"children":[]},{"name":"diff.cunif.w","content":"","origin":"axiom diff.cunif.w(wff w0) {\n  |- diffcw(cunif, w0)\n}","pretty":"axiom diff.cunif.w(wff w0) {\n  ⊢ d(UnifSet, w0)\n}","parent":[],"children":[]},{"name":"chom","content":"Extend class notation with the hom-set structure.","origin":"const class chom { Hom }","pretty":"","parent":[],"children":[]},{"name":"diff.chom.s","content":"","origin":"axiom diff.chom.s(setvar s0) {\n  |- diffsc(s0, chom)\n}","pretty":"axiom diff.chom.s(setvar s0) {\n  ⊢ d(s0, Hom)\n}","parent":[],"children":[]},{"name":"diff.chom.c","content":"","origin":"axiom diff.chom.c(class c0) {\n  |- diffcc(chom, c0)\n}","pretty":"axiom diff.chom.c(class c0) {\n  ⊢ d(Hom, c0)\n}","parent":[],"children":[]},{"name":"diff.chom.w","content":"","origin":"axiom diff.chom.w(wff w0) {\n  |- diffcw(chom, w0)\n}","pretty":"axiom diff.chom.w(wff w0) {\n  ⊢ d(Hom, w0)\n}","parent":[],"children":[]},{"name":"cco","content":"Extend class notation with the composition operation.","origin":"const class cco { comp }","pretty":"","parent":[],"children":[]},{"name":"diff.cco.s","content":"","origin":"axiom diff.cco.s(setvar s0) {\n  |- diffsc(s0, cco)\n}","pretty":"axiom diff.cco.s(setvar s0) {\n  ⊢ d(s0, comp)\n}","parent":[],"children":[]},{"name":"diff.cco.c","content":"","origin":"axiom diff.cco.c(class c0) {\n  |- diffcc(cco, c0)\n}","pretty":"axiom diff.cco.c(class c0) {\n  ⊢ d(comp, c0)\n}","parent":[],"children":[]},{"name":"diff.cco.w","content":"","origin":"axiom diff.cco.w(wff w0) {\n  |- diffcw(cco, w0)\n}","pretty":"axiom diff.cco.w(wff w0) {\n  ⊢ d(comp, w0)\n}","parent":[],"children":[]},{"name":"df-plusg","content":"Define group operation. (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-plusg() {\n  |- wceq(cplusg, cslot(nat2))\n}","pretty":"axiom df-plusg() {\n  ⊢ + = Slot(2)\n}","parent":[],"children":["plusgndx","plusgid","grpstr","grpbase","grpplusg","ressplusg","frmdplusg","oppradd","sraaddg","opsrplusg","ply1plusgfvi","zlmplusg","znadd","tngplusg","ttgplusg","resvplusg","hlhilsplus","mendplusgfval"]},{"name":"df-mulr","content":"Define ring multiplication. (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-mulr() {\n  |- wceq(cmulr, cslot(nat3))\n}","pretty":"axiom df-mulr() {\n  ⊢ × = Slot(3)\n}","parent":[],"children":["mulrndx","mulrid","ressmulr","sramulr","opsrmulr","zlmmulr","znmul","tngmulr","resvmulr","hlhilsmul","mendmulrfval"]},{"name":"df-starv","content":"Define the involution function of a *-ring. (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-starv() {\n  |- wceq(cstv, cslot(nat4))\n}","pretty":"axiom df-starv() {\n  ⊢ *r = Slot(4)\n}","parent":[],"children":["starvndx","starvid","ressstarv"]},{"name":"df-sca","content":"Define scalar field component of a vector space ` v ` . (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-sca() {\n  |- wceq(csca, cslot(nat5))\n}","pretty":"axiom df-sca() {\n  ⊢ Scalar = Slot(5)\n}","parent":[],"children":["scandx","scaid","resssca","mgpsca","opsrsca","psr1sca2","ply1sca2","tngsca","mendsca"]},{"name":"df-vsca","content":"Define scalar product. (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-vsca() {\n  |- wceq(cvsca, cslot(nat6))\n}","pretty":"axiom df-vsca() {\n  ⊢ × = Slot(6)\n}","parent":[],"children":["vscandx","vscaid","ressvsca","psrvscafval","opsrvsca","tngvsca","ttgvsca","resvvsca","mendvscafval"]},{"name":"df-ip","content":"Define Hermitian form (inner product). (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-ip() {\n  |- wceq(cip, cslot(nat8))\n}","pretty":"axiom df-ip() {\n  ⊢ · = Slot(8)\n}","parent":[],"children":["ipndx","ipid","ressip","tngip"]},{"name":"df-tset","content":"Define the topology component of a topological space (structure). (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-tset() {\n  |- wceq(cts, cslot(nat9))\n}","pretty":"axiom df-tset() {\n  ⊢ TopSet = Slot(9)\n}","parent":[],"children":["tsetndx","tsetid","resstset","oppgtset","mgptset","sratset","eltpsg","indistpsALT","resstopn","nrgtrg"]},{"name":"df-ple","content":"Define \"less than or equal to\" ordering extractor for posets and related structures. We use ` ; 1 0 ` for the index to avoid conflict with ` 1 ` through ` 9 ` used for other purposes. (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.) (Revised by AV, 9-Sep-2021.)","origin":"axiom df-ple() {\n  |- wceq(cple, cslot(cdc(nat1, nat0)))\n}","pretty":"axiom df-ple() {\n  ⊢ le = Slot(cdc(1, 0))\n}","parent":[],"children":["plendx","pleid","ressle","0pos","isposix","oppgle"]},{"name":"df-ocomp","content":"Define the orthocomplementation extractor for posets and related structures. (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-ocomp() {\n  |- wceq(coc, cslot(cdc(nat1, nat1)))\n}","pretty":"axiom df-ocomp() {\n  ⊢ oc = Slot(cdc(1, 1))\n}","parent":[],"children":["ocndx","ocid"]},{"name":"df-ds","content":"Define the distance function component of a metric space (structure). (Contributed by NM, 4-Sep-2011.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-ds() {\n  |- wceq(cds, cslot(cdc(nat1, nat2)))\n}","pretty":"axiom df-ds() {\n  ⊢ dist = Slot(cdc(1, 2))\n}","parent":[],"children":["dsndx","dsid","ressds","mgpds","srads","tmslem","tngds","ttgds"]},{"name":"df-unif","content":"Define the uniform structure component of a uniform space. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"axiom df-unif() {\n  |- wceq(cunif, cslot(cdc(nat1, nat3)))\n}","pretty":"axiom df-unif() {\n  ⊢ UnifSet = Slot(cdc(1, 3))\n}","parent":[],"children":["unifndx","unifid","ressunif","tuslem"]},{"name":"df-hom","content":"Define the hom-set component of a category. (Contributed by Mario Carneiro, 2-Jan-2017.)","origin":"axiom df-hom() {\n  |- wceq(chom, cslot(cdc(nat1, nat4)))\n}","pretty":"axiom df-hom() {\n  ⊢ Hom = Slot(cdc(1, 4))\n}","parent":[],"children":["homndx","homid","resshom","prdsval","oppchomfval","wunfunc","wunnat","fuchom","catcoppccl","catcfuccl","catcxpccl"]},{"name":"df-cco","content":"Define the composition operation of a category. (Contributed by Mario Carneiro, 2-Jan-2017.)","origin":"axiom df-cco() {\n  |- wceq(cco, cslot(cdc(nat1, nat5)))\n}","pretty":"axiom df-cco() {\n  ⊢ comp = Slot(cdc(1, 5))\n}","parent":[],"children":["ccondx","ccoid","ressco","catcoppccl","catcfuccl","catcxpccl"]},{"name":"strleun","content":"Combine two structures into one. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm strleun(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wbr(cun(c0, c1), cstr, cop(c2, c3))\n  -| wbr(c0, cstr, cop(c2, c4))\n  -| wbr(c1, cstr, cop(c5, c3))\n  -| wbr(c4, clt, c5)\n} = {\n  mpbir3an(wbr(cun(c0, c1), cstr, cop(c2, c3)), w3a(wcel(c2, cn), wcel(c3, cn), wbr(c2, cle, c3)), wfun(cdif(cun(c0, c1), csn(emptycls))), wss(cdm(cun(c0, c1)), co(c2, cfz, c3)))\n  3pm3.2i(wcel(c2, cn), wcel(c3, cn), wbr(c2, cle, c3))\n  mp2an(wbr(c2, cle, c3), wbr(c2, cle, c5), wbr(c5, cle, c3))\n  letri(c2, c5, c3)\n  mpbir(wfun(cdif(cun(c0, c1), csn(emptycls))), wfun(cun(cdif(c0, csn(emptycls)), cdif(c1, csn(emptycls)))))\n  mp2an(wfun(cun(cdif(c0, csn(emptycls)), cdif(c1, csn(emptycls)))), wa(wfun(cdif(c0, csn(emptycls))), wfun(cdif(c1, csn(emptycls)))), wceq(cin(cdm(cdif(c0, csn(emptycls))), cdm(cdif(c1, csn(emptycls)))), emptycls))\n  pm3.2i(wfun(cdif(c0, csn(emptycls))), wfun(cdif(c1, csn(emptycls))))\n  simp2i(wfun(cdif(c0, csn(emptycls))), w3a(wcel(c2, cn), wcel(c4, cn), wbr(c2, cle, c4)), wss(cdm(c0), co(c2, cfz, c4)))\n  simp2i(wfun(cdif(c1, csn(emptycls))), w3a(wcel(c5, cn), wcel(c3, cn), wbr(c5, cle, c3)), wss(cdm(c1), co(c5, cfz, c3)))\n  mp2an(wceq(cin(cdm(cdif(c0, csn(emptycls))), cdm(cdif(c1, csn(emptycls)))), emptycls), wss(cin(cdm(cdif(c0, csn(emptycls))), cdm(cdif(c1, csn(emptycls)))), cin(co(c2, cfz, c4), co(c5, cfz, c3))), wceq(cin(co(c2, cfz, c4), co(c5, cfz, c3)), emptycls))\n  mp2an(wss(cin(cdm(cdif(c0, csn(emptycls))), cdm(cdif(c1, csn(emptycls)))), cin(co(c2, cfz, c4), co(c5, cfz, c3))), wss(cdm(cdif(c0, csn(emptycls))), co(c2, cfz, c4)), wss(cdm(cdif(c1, csn(emptycls))), co(c5, cfz, c3)))\n  sstri(cdm(cdif(c0, csn(emptycls))), co(c2, cfz, c4), cdm(c0))\n  ax-mp(wss(cdm(cdif(c0, csn(emptycls))), cdm(c0)), wss(cdif(c0, csn(emptycls)), c0))\n  difss(c0, csn(emptycls))\n  dmss(cdif(c0, csn(emptycls)), c0)\n  sstri(cdm(cdif(c1, csn(emptycls))), co(c5, cfz, c3), cdm(c1))\n  ax-mp(wss(cdm(cdif(c1, csn(emptycls))), cdm(c1)), wss(cdif(c1, csn(emptycls)), c1))\n  difss(c1, csn(emptycls))\n  dmss(cdif(c1, csn(emptycls)), c1)\n  ss2in(cdm(cdif(c0, csn(emptycls))), co(c2, cfz, c4), cdm(cdif(c1, csn(emptycls))), co(c5, cfz, c3))\n  ax-mp(wceq(cin(co(c2, cfz, c4), co(c5, cfz, c3)), emptycls), wbr(c4, clt, c5))\n  fzdisj(c4, c5, c2, c3)\n  sseq0(cin(cdm(cdif(c0, csn(emptycls))), cdm(cdif(c1, csn(emptycls)))), cin(co(c2, cfz, c4), co(c5, cfz, c3)))\n  funun(cdif(c0, csn(emptycls)), cdif(c1, csn(emptycls)))\n  funeqi(cdif(cun(c0, c1), csn(emptycls)), cun(cdif(c0, csn(emptycls)), cdif(c1, csn(emptycls))))\n  difundir(c0, c1, csn(emptycls))\n  eqsstri(cdm(cun(c0, c1)), co(c2, cfz, c3), cun(cdm(c0), cdm(c1)))\n  dmun(c0, c1)\n  unssi(cdm(c0), cdm(c1), co(c2, cfz, c3))\n  sstri(cdm(c0), co(c2, cfz, c3), co(c2, cfz, c4))\n  simp3i(wss(cdm(c0), co(c2, cfz, c4)), w3a(wcel(c2, cn), wcel(c4, cn), wbr(c2, cle, c4)), wfun(cdif(c0, csn(emptycls))))\n  ax-mp(wss(co(c2, cfz, c4), co(c2, cfz, c3)), wcel(c3, cfv(cuz, c4)))\n  mpbir3an(wcel(c3, cfv(cuz, c4)), wcel(c4, cz), wcel(c3, cz), wbr(c4, cle, c3))\n  nnzi(c4)\n  nnzi(c3)\n  mp2an(wbr(c4, cle, c3), wbr(c4, cle, c5), wbr(c5, cle, c3))\n  simp3i(wbr(c5, cle, c3), wcel(c5, cn), wcel(c3, cn))\n  letri(c4, c5, c3)\n  nnrei(c3)\n  simp2i(wcel(c3, cn), wcel(c5, cn), wbr(c5, cle, c3))\n  eluz2(c3, c4)\n  fzss2(c3, c4, c2)\n  sstri(cdm(c1), co(c2, cfz, c3), co(c5, cfz, c3))\n  simp3i(wss(cdm(c1), co(c5, cfz, c3)), w3a(wcel(c5, cn), wcel(c3, cn), wbr(c5, cle, c3)), wfun(cdif(c1, csn(emptycls))))\n  ax-mp(wss(co(c5, cfz, c3), co(c2, cfz, c3)), wcel(c5, cfv(cuz, c2)))\n  mpbir3an(wcel(c5, cfv(cuz, c2)), wcel(c2, cz), wcel(c5, cz), wbr(c2, cle, c5))\n  nnzi(c2)\n  nnzi(c5)\n  mp2an(wbr(c2, cle, c5), wbr(c2, cle, c4), wbr(c4, cle, c5))\n  simp3i(wbr(c2, cle, c4), wcel(c2, cn), wcel(c4, cn))\n  ltleii(c4, c5)\n  letri(c2, c4, c5)\n  nnrei(c2)\n  simp1i(wcel(c2, cn), wcel(c4, cn), wbr(c2, cle, c4))\n  nnrei(c4)\n  simp2i(wcel(c4, cn), wcel(c2, cn), wbr(c2, cle, c4))\n  simp1i(w3a(wcel(c2, cn), wcel(c4, cn), wbr(c2, cle, c4)), wfun(cdif(c0, csn(emptycls))), wss(cdm(c0), co(c2, cfz, c4)))\n  mpbi(w3a(w3a(wcel(c2, cn), wcel(c4, cn), wbr(c2, cle, c4)), wfun(cdif(c0, csn(emptycls))), wss(cdm(c0), co(c2, cfz, c4))), wbr(c0, cstr, cop(c2, c4)))\n  isstruct(c0, c2, c4)\n  nnrei(c5)\n  simp1i(wcel(c5, cn), wcel(c3, cn), wbr(c5, cle, c3))\n  simp1i(w3a(wcel(c5, cn), wcel(c3, cn), wbr(c5, cle, c3)), wfun(cdif(c1, csn(emptycls))), wss(cdm(c1), co(c5, cfz, c3)))\n  mpbi(w3a(w3a(wcel(c5, cn), wcel(c3, cn), wbr(c5, cle, c3)), wfun(cdif(c1, csn(emptycls))), wss(cdm(c1), co(c5, cfz, c3))), wbr(c1, cstr, cop(c5, c3)))\n  isstruct(c1, c5, c3)\n  eluz2(c5, c2)\n  fzss1(c5, c2, c3)\n  isstruct(cun(c0, c1), c2, c3)\n}","pretty":"thm strleun(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ⋃ c1)[Struct]< c2, c3 >\n  ⊣ c0[Struct]< c2, c4 >\n  ⊣ c1[Struct]< c5, c3 >\n  ⊣ c4[<]c5\n} = {\n  mpbir3an((c0 ⋃ c1)[Struct]< c2, c3 >, (c2 ∈ ℕ ∧ c3 ∈ ℕ ∧ c2[≤]c3), Fun(((c0 ⋃ c1)\\ { ∅ })), dom((c0 ⋃ c1))⊆(c2[...]c3))\n  3pm3.2i(c2 ∈ ℕ, c3 ∈ ℕ, c2[≤]c3)\n  mp2an(c2[≤]c3, c2[≤]c5, c5[≤]c3)\n  letri(c2, c5, c3)\n  mpbir(Fun(((c0 ⋃ c1)\\ { ∅ })), Fun(((c0 \\ { ∅ })⋃(c1 \\ { ∅ }))))\n  mp2an(Fun(((c0 \\ { ∅ })⋃(c1 \\ { ∅ }))), (Fun((c0 \\ { ∅ }))∧ Fun((c1 \\ { ∅ }))), (dom((c0 \\ { ∅ }))⋂ dom((c1 \\ { ∅ })))= ∅)\n  pm3.2i(Fun((c0 \\ { ∅ })), Fun((c1 \\ { ∅ })))\n  simp2i(Fun((c0 \\ { ∅ })), (c2 ∈ ℕ ∧ c4 ∈ ℕ ∧ c2[≤]c4), dom(c0)⊆(c2[...]c4))\n  simp2i(Fun((c1 \\ { ∅ })), (c5 ∈ ℕ ∧ c3 ∈ ℕ ∧ c5[≤]c3), dom(c1)⊆(c5[...]c3))\n  mp2an((dom((c0 \\ { ∅ }))⋂ dom((c1 \\ { ∅ })))= ∅, (dom((c0 \\ { ∅ }))⋂ dom((c1 \\ { ∅ })))⊆((c2[...]c4)⋂(c5[...]c3)), ((c2[...]c4)⋂(c5[...]c3))= ∅)\n  mp2an((dom((c0 \\ { ∅ }))⋂ dom((c1 \\ { ∅ })))⊆((c2[...]c4)⋂(c5[...]c3)), dom((c0 \\ { ∅ }))⊆(c2[...]c4), dom((c1 \\ { ∅ }))⊆(c5[...]c3))\n  sstri(dom((c0 \\ { ∅ })), (c2[...]c4), dom(c0))\n  ax-mp(dom((c0 \\ { ∅ }))⊆ dom(c0), (c0 \\ { ∅ })⊆ c0)\n  difss(c0, { ∅ })\n  dmss((c0 \\ { ∅ }), c0)\n  sstri(dom((c1 \\ { ∅ })), (c5[...]c3), dom(c1))\n  ax-mp(dom((c1 \\ { ∅ }))⊆ dom(c1), (c1 \\ { ∅ })⊆ c1)\n  difss(c1, { ∅ })\n  dmss((c1 \\ { ∅ }), c1)\n  ss2in(dom((c0 \\ { ∅ })), (c2[...]c4), dom((c1 \\ { ∅ })), (c5[...]c3))\n  ax-mp(((c2[...]c4)⋂(c5[...]c3))= ∅, c4[<]c5)\n  fzdisj(c4, c5, c2, c3)\n  sseq0((dom((c0 \\ { ∅ }))⋂ dom((c1 \\ { ∅ }))), ((c2[...]c4)⋂(c5[...]c3)))\n  funun((c0 \\ { ∅ }), (c1 \\ { ∅ }))\n  funeqi(((c0 ⋃ c1)\\ { ∅ }), ((c0 \\ { ∅ })⋃(c1 \\ { ∅ })))\n  difundir(c0, c1, { ∅ })\n  eqsstri(dom((c0 ⋃ c1)), (c2[...]c3), (dom(c0)⋃ dom(c1)))\n  dmun(c0, c1)\n  unssi(dom(c0), dom(c1), (c2[...]c3))\n  sstri(dom(c0), (c2[...]c3), (c2[...]c4))\n  simp3i(dom(c0)⊆(c2[...]c4), (c2 ∈ ℕ ∧ c4 ∈ ℕ ∧ c2[≤]c4), Fun((c0 \\ { ∅ })))\n  ax-mp((c2[...]c4)⊆(c2[...]c3), c3 ∈(ℤ≥ ` c4))\n  mpbir3an(c3 ∈(ℤ≥ ` c4), c4 ∈ ℤ, c3 ∈ ℤ, c4[≤]c3)\n  nnzi(c4)\n  nnzi(c3)\n  mp2an(c4[≤]c3, c4[≤]c5, c5[≤]c3)\n  simp3i(c5[≤]c3, c5 ∈ ℕ, c3 ∈ ℕ)\n  letri(c4, c5, c3)\n  nnrei(c3)\n  simp2i(c3 ∈ ℕ, c5 ∈ ℕ, c5[≤]c3)\n  eluz2(c3, c4)\n  fzss2(c3, c4, c2)\n  sstri(dom(c1), (c2[...]c3), (c5[...]c3))\n  simp3i(dom(c1)⊆(c5[...]c3), (c5 ∈ ℕ ∧ c3 ∈ ℕ ∧ c5[≤]c3), Fun((c1 \\ { ∅ })))\n  ax-mp((c5[...]c3)⊆(c2[...]c3), c5 ∈(ℤ≥ ` c2))\n  mpbir3an(c5 ∈(ℤ≥ ` c2), c2 ∈ ℤ, c5 ∈ ℤ, c2[≤]c5)\n  nnzi(c2)\n  nnzi(c5)\n  mp2an(c2[≤]c5, c2[≤]c4, c4[≤]c5)\n  simp3i(c2[≤]c4, c2 ∈ ℕ, c4 ∈ ℕ)\n  ltleii(c4, c5)\n  letri(c2, c4, c5)\n  nnrei(c2)\n  simp1i(c2 ∈ ℕ, c4 ∈ ℕ, c2[≤]c4)\n  nnrei(c4)\n  simp2i(c4 ∈ ℕ, c2 ∈ ℕ, c2[≤]c4)\n  simp1i((c2 ∈ ℕ ∧ c4 ∈ ℕ ∧ c2[≤]c4), Fun((c0 \\ { ∅ })), dom(c0)⊆(c2[...]c4))\n  mpbi(((c2 ∈ ℕ ∧ c4 ∈ ℕ ∧ c2[≤]c4)∧ Fun((c0 \\ { ∅ }))∧ dom(c0)⊆(c2[...]c4)), c0[Struct]< c2, c4 >)\n  isstruct(c0, c2, c4)\n  nnrei(c5)\n  simp1i(c5 ∈ ℕ, c3 ∈ ℕ, c5[≤]c3)\n  simp1i((c5 ∈ ℕ ∧ c3 ∈ ℕ ∧ c5[≤]c3), Fun((c1 \\ { ∅ })), dom(c1)⊆(c5[...]c3))\n  mpbi(((c5 ∈ ℕ ∧ c3 ∈ ℕ ∧ c5[≤]c3)∧ Fun((c1 \\ { ∅ }))∧ dom(c1)⊆(c5[...]c3)), c1[Struct]< c5, c3 >)\n  isstruct(c1, c5, c3)\n  eluz2(c5, c2)\n  fzss1(c5, c2, c3)\n  isstruct((c0 ⋃ c1), c2, c3)\n}","parent":["mpbir3an","3pm3.2i","mp2an","letri","mpbir","pm3.2i","simp2i","sstri","ax-mp","difss","dmss","ss2in","fzdisj","sseq0","funun","funeqi","difundir","eqsstri","dmun","unssi","simp3i","nnzi","nnrei","eluz2","fzss2","ltleii","simp1i","mpbi","isstruct","fzss1"],"children":["strle2","strle3","srngstr","lmodstr","ipsstr","phlstr","odrngstr","imasvalstr","prdsvalstr","ipostr","psrvalstr","cnfldstr","eengstr","algstr"]},{"name":"strle1","content":"Make a structure from a singleton. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm strle1(class c0, class c1, class c2) {\n  |- wbr(csn(cop(c0, c1)), cstr, cop(c2, c2))\n  -| wcel(c2, cn)\n  -| wceq(c0, c2)\n} = {\n  mpbir3an(wbr(csn(cop(c0, c1)), cstr, cop(c2, c2)), w3a(wcel(c2, cn), wcel(c2, cn), wbr(c2, cle, c2)), wfun(cdif(csn(cop(c0, c1)), csn(emptycls))), wss(cdm(csn(cop(c0, c1))), co(c2, cfz, c2)))\n  3pm3.2i(wcel(c2, cn), wcel(c2, cn), wbr(c2, cle, c2))\n  leidi(c2)\n  nnrei(c2)\n  pm2.61i(wfun(cdif(csn(cop(c0, c1)), csn(emptycls))), wcel(c1, universe))\n  mpsyl(wcel(c1, universe), wfun(cdif(csn(cop(c0, c1)), csn(emptycls))), wss(cdif(csn(cop(c0, c1)), csn(emptycls)), csn(cop(c0, c1))), wfun(csn(cop(c0, c1))))\n  difss(csn(cop(c0, c1)), csn(emptycls))\n  mpan(wcel(c1, universe), wfun(csn(cop(c0, c1))), wcel(c0, cn))\n  eqeltri(c0, cn, c2)\n  funsng(c0, cn, c1, universe)\n  funss(cdif(csn(cop(c0, c1)), csn(emptycls)), csn(cop(c0, c1)))\n  mpbiri(wn(wcel(c1, universe)), wfun(cdif(csn(cop(c0, c1)), csn(emptycls))), wfun(emptycls))\n  fun0()\n  funeqd(cdif(csn(cop(c0, c1)), csn(emptycls)), emptycls, wn(wcel(c1, universe)))\n  syl6eq(cdif(csn(cop(c0, c1)), csn(emptycls)), emptycls, cdif(csn(emptycls), csn(emptycls)), wn(wcel(c1, universe)))\n  difeq1d(csn(cop(c0, c1)), csn(emptycls), csn(emptycls), wn(wcel(c1, universe)))\n  sneqd(cop(c0, c1), emptycls, wn(wcel(c1, universe)))\n  opprc2(c1, c0)\n  difid(csn(emptycls))\n  sseqtri(cdm(csn(cop(c0, c1))), co(c2, cfz, c2), csn(c0))\n  dmsnopss(c0, c1)\n  eqtr4i(csn(c0), co(c2, cfz, c2), csn(c2))\n  sneqi(c0, c2)\n  ax-mp(wceq(co(c2, cfz, c2), csn(c2)), wcel(c2, cz))\n  nnzi(c2)\n  fzsn(c2)\n  isstruct(csn(cop(c0, c1)), c2, c2)\n}","pretty":"thm strle1(class c0, class c1, class c2) {\n  ⊢ { < c0, c1 > }[Struct]< c2, c2 >\n  ⊣ c2 ∈ ℕ\n  ⊣ c0 = c2\n} = {\n  mpbir3an({ < c0, c1 > }[Struct]< c2, c2 >, (c2 ∈ ℕ ∧ c2 ∈ ℕ ∧ c2[≤]c2), Fun(({ < c0, c1 > } \\ { ∅ })), dom({ < c0, c1 > })⊆(c2[...]c2))\n  3pm3.2i(c2 ∈ ℕ, c2 ∈ ℕ, c2[≤]c2)\n  leidi(c2)\n  nnrei(c2)\n  pm2.61i(Fun(({ < c0, c1 > } \\ { ∅ })), c1 ∈ 𝕌)\n  mpsyl(c1 ∈ 𝕌, Fun(({ < c0, c1 > } \\ { ∅ })), ({ < c0, c1 > } \\ { ∅ })⊆ { < c0, c1 > }, Fun({ < c0, c1 > }))\n  difss({ < c0, c1 > }, { ∅ })\n  mpan(c1 ∈ 𝕌, Fun({ < c0, c1 > }), c0 ∈ ℕ)\n  eqeltri(c0, cn, c2)\n  funsng(c0, cn, c1, universe)\n  funss(({ < c0, c1 > } \\ { ∅ }), { < c0, c1 > })\n  mpbiri(¬ c1 ∈ 𝕌, Fun(({ < c0, c1 > } \\ { ∅ })), Fun(∅))\n  fun0()\n  funeqd(({ < c0, c1 > } \\ { ∅ }), emptycls, ¬ c1 ∈ 𝕌)\n  syl6eq(({ < c0, c1 > } \\ { ∅ }), emptycls, ({ ∅ } \\ { ∅ }), ¬ c1 ∈ 𝕌)\n  difeq1d({ < c0, c1 > }, { ∅ }, { ∅ }, ¬ c1 ∈ 𝕌)\n  sneqd(< c0, c1 >, emptycls, ¬ c1 ∈ 𝕌)\n  opprc2(c1, c0)\n  difid({ ∅ })\n  sseqtri(dom({ < c0, c1 > }), (c2[...]c2), { c0 })\n  dmsnopss(c0, c1)\n  eqtr4i({ c0 }, (c2[...]c2), { c2 })\n  sneqi(c0, c2)\n  ax-mp((c2[...]c2)= { c2 }, c2 ∈ ℤ)\n  nnzi(c2)\n  fzsn(c2)\n  isstruct({ < c0, c1 > }, c2, c2)\n}","parent":["mpbir3an","3pm3.2i","leidi","nnrei","pm2.61i","mpsyl","difss","mpan","eqeltri","funsng","funss","mpbiri","fun0","funeqd","syl6eq","difeq1d","sneqd","opprc2","difid","sseqtri","dmsnopss","eqtr4i","sneqi","ax-mp","nnzi","fzsn","isstruct"],"children":["strle2","strle3","1strstr","srngstr","lmodstr","phlstr","cnfldstr"]},{"name":"strle2","content":"Make a structure from a pair. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm strle2(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wbr(cpr(cop(c0, c1), cop(c2, c3)), cstr, cop(c4, c5))\n  -| wcel(c4, cn)\n  -| wceq(c0, c4)\n  -| wbr(c4, clt, c5)\n  -| wcel(c5, cn)\n  -| wceq(c2, c5)\n} = {\n  eqbrtri(cpr(cop(c0, c1), cop(c2, c3)), cstr, cop(c4, c5), cun(csn(cop(c0, c1)), csn(cop(c2, c3))))\n  df-pr(cop(c0, c1), cop(c2, c3))\n  strleun(csn(cop(c0, c1)), csn(cop(c2, c3)), c4, c5, c4, c5)\n  strle1(c0, c1, c4)\n  strle1(c2, c3, c5)\n}","pretty":"thm strle2(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ { < c0, c1 >, < c2, c3 > }[Struct]< c4, c5 >\n  ⊣ c4 ∈ ℕ\n  ⊣ c0 = c4\n  ⊣ c4[<]c5\n  ⊣ c5 ∈ ℕ\n  ⊣ c2 = c5\n} = {\n  eqbrtri({ < c0, c1 >, < c2, c3 > }, cstr, < c4, c5 >, ({ < c0, c1 > } ⋃ { < c2, c3 > }))\n  df-pr(< c0, c1 >, < c2, c3 >)\n  strleun({ < c0, c1 > }, { < c2, c3 > }, c4, c5, c4, c5)\n  strle1(c0, c1, c4)\n  strle1(c2, c3, c5)\n}","parent":["eqbrtri","df-pr","strleun","strle1"],"children":["strle3","2strstr","prdsvalstr","ipostr","eengstr","algstr"]},{"name":"strle3","content":"Make a structure from a triple. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm strle3(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8) {\n  |- wbr(ctp(cop(c0, c1), cop(c2, c3), cop(c4, c5)), cstr, cop(c6, c7))\n  -| wcel(c6, cn)\n  -| wceq(c0, c6)\n  -| wbr(c6, clt, c8)\n  -| wcel(c8, cn)\n  -| wceq(c2, c8)\n  -| wbr(c8, clt, c7)\n  -| wcel(c7, cn)\n  -| wceq(c4, c7)\n} = {\n  eqbrtri(ctp(cop(c0, c1), cop(c2, c3), cop(c4, c5)), cstr, cop(c6, c7), cun(cpr(cop(c0, c1), cop(c2, c3)), csn(cop(c4, c5))))\n  df-tp(cop(c0, c1), cop(c2, c3), cop(c4, c5))\n  strleun(cpr(cop(c0, c1), cop(c2, c3)), csn(cop(c4, c5)), c6, c7, c8, c7)\n  strle2(c0, c1, c2, c3, c6, c8)\n  strle1(c4, c5, c7)\n}","pretty":"thm strle3(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7, class c8) {\n  ⊢ { < c0, c1 >, < c2, c3 >, < c4, c5 > }[Struct]< c6, c7 >\n  ⊣ c6 ∈ ℕ\n  ⊣ c0 = c6\n  ⊣ c6[<]c8\n  ⊣ c8 ∈ ℕ\n  ⊣ c2 = c8\n  ⊣ c8[<]c7\n  ⊣ c7 ∈ ℕ\n  ⊣ c4 = c7\n} = {\n  eqbrtri({ < c0, c1 >, < c2, c3 >, < c4, c5 > }, cstr, < c6, c7 >, ({ < c0, c1 >, < c2, c3 > } ⋃ { < c4, c5 > }))\n  df-tp(< c0, c1 >, < c2, c3 >, < c4, c5 >)\n  strleun({ < c0, c1 >, < c2, c3 > }, { < c4, c5 > }, c6, c7, c8, c7)\n  strle2(c0, c1, c2, c3, c6, c8)\n  strle1(c4, c5, c7)\n}","parent":["eqbrtri","df-tp","strleun","strle2","strle1"],"children":["rngstr","lmodstr","ipsstr","topgrpstr","otpsstr","odrngstr","imasvalstr","catstr","psrvalstr","cnfldstr","trkgstr"]},{"name":"plusgndx","content":"Index value of the ~ df-plusg slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm plusgndx() {\n  |- wceq(cfv(cplusg, cnx), nat2)\n} = {\n  ndxarg(cplusg, nat2)\n  df-plusg()\n  2nn()\n}","pretty":"thm plusgndx() {\n  ⊢ (+ ` ndx)= 2\n} = {\n  ndxarg(cplusg, nat2)\n  df-plusg()\n  2nn()\n}","parent":["ndxarg","df-plusg","2nn"],"children":["basendxnplusgndx","grpbasex","grpplusgx","plusgndxnmulrndx","rngstr","lmodstr","topgrpstr","oppglem","mgplem","mgpress","rmodislmod","cnfldfun"]},{"name":"plusgid","content":"Utility theorem: index-independent form of ~ df-plusg . (Contributed by NM, 20-Oct-2012.)","origin":"thm plusgid() {\n  |- wceq(cplusg, cslot(cfv(cplusg, cnx)))\n} = {\n  ndxid(cplusg, nat2)\n  df-plusg()\n  2nn()\n}","pretty":"thm plusgid() {\n  ⊢ + = Slot((+ ` ndx))\n} = {\n  ndxid(cplusg, nat2)\n  df-plusg()\n  2nn()\n}","parent":["ndxid","df-plusg","2nn"],"children":["rngplusg","srngplusg","lmodplusg","ipsaddg","phlplusg","topgrpplusg","odrngplusg","prdsplusg","imasplusg","grpss","oppgplusfval","symgplusg","mgpplusg","rmodislmod","psrplusg","cnfldadd","matplusg","algaddg","cznabel","cznrng"]},{"name":"opelstrbas","content":"The base set of a structure with a base set. (Contributed by AV, 10-Nov-2021.)","origin":"thm opelstrbas(class c0, class c1, class c2, class c3, wff w0) {\n  |- wi(w0, wceq(c0, cfv(cbs, c1)))\n  -| wi(w0, wbr(c1, cstr, c2))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(cop(cfv(cbs, cnx), c0), c1))\n} = {\n  strfv2d(c0, cbs, c1, universe, c3, w0)\n  baseid()\n  syl(w0, wcel(c1, universe), wbr(c1, cstr, c2))\n  structex(c1, c2)\n  syl(w0, wfun(ccnv(ccnv(c1))), wbr(c1, cstr, c2))\n  structfung(c1, c2)\n}","pretty":"thm opelstrbas(class c0, class c1, class c2, class c3, wff w0) {\n  ⊢ (w0 → c0 =(Base ` c1))\n  ⊣ (w0 → c1[Struct]c2)\n  ⊣ (w0 → c0 ∈ c3)\n  ⊣ (w0 → <(Base ` ndx), c0 > ∈ c1)\n} = {\n  strfv2d(c0, cbs, c1, universe, c3, w0)\n  baseid()\n  syl(w0, c1 ∈ 𝕌, c1[Struct]c2)\n  structex(c1, c2)\n  syl(w0, Fun(`' `' c1), c1[Struct]c2)\n  structfung(c1, c2)\n}","parent":["strfv2d","baseid","syl","structex","structfung"],"children":["eengbas","basvtxval"]},{"name":"1strstr","content":"A constructed one-slot structure. (Contributed by AV, 27-Mar-2020.)","origin":"thm 1strstr(class c0, class c1) {\n  |- wbr(c0, cstr, cop(nat1, nat1))\n  -| wceq(c0, csn(cop(cfv(cbs, cnx), c1)))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, nat1), csn(cop(cfv(cbs, cnx), c1)))\n  strle1(cfv(cbs, cnx), c1, nat1)\n  1nn()\n  basendx()\n}","pretty":"thm 1strstr(class c0, class c1) {\n  ⊢ c0[Struct]< 1, 1 >\n  ⊣ c0 = { <(Base ` ndx), c1 > }\n} = {\n  eqbrtri(c0, cstr, < 1, 1 >, { <(Base ` ndx), c1 > })\n  strle1((Base ` ndx), c1, nat1)\n  1nn()\n  basendx()\n}","parent":["eqbrtri","strle1","1nn","basendx"],"children":["1strbas"]},{"name":"1strbas","content":"The base set of a constructed one-slot structure. (Contributed by AV, 27-Mar-2020.)","origin":"thm 1strbas(class c0, class c1, class c2) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, csn(cop(cfv(cbs, cnx), c0)))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, nat1))\n  1strstr(c2, c0)\n  baseid()\n  eqimss2i(csn(cop(cfv(cbs, cnx), c0)), c2)\n}","pretty":"thm 1strbas(class c0, class c1, class c2) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 = { <(Base ` ndx), c0 > }\n} = {\n  strfv(c0, c1, cbs, c2, < 1, 1 >)\n  1strstr(c2, c0)\n  baseid()\n  eqimss2i({ <(Base ` ndx), c0 > }, c2)\n}","parent":["strfv","1strstr","baseid","eqimss2i"],"children":["equivestrcsetc","funcsetcestrclem7","funcsetcestrclem8","funcsetcestrclem9","fullsetcestrc","snstrvtxval"]},{"name":"1strwunbndx","content":"A constructed one-slot structure in a weak universe containing the index of the base set extractor. (Contributed by AV, 27-Mar-2020.)","origin":"thm 1strwunbndx(class c0, class c1, class c2, wff w0) {\n  |- wi(wa(w0, wcel(c0, c1)), wcel(c2, c1))\n  -| wceq(c2, csn(cop(cfv(cbs, cnx), c0)))\n  -| wi(w0, wcel(c1, cwun))\n  -| wi(w0, wcel(cfv(cbs, cnx), c1))\n} = {\n  syl5eqel(c2, c1, csn(cop(cfv(cbs, cnx), c0)), wa(w0, wcel(c0, c1)))\n  wunsn(cop(cfv(cbs, cnx), c0), c1, wa(w0, wcel(c0, c1)))\n  wunop(cfv(cbs, cnx), c0, c1, wa(w0, wcel(c0, c1)))\n  adantr(w0, wcel(c0, c1), wcel(c1, cwun))\n  adantr(w0, wcel(c0, c1), wcel(cfv(cbs, cnx), c1))\n  simpr(w0, wcel(c0, c1))\n}","pretty":"thm 1strwunbndx(class c0, class c1, class c2, wff w0) {\n  ⊢ ((w0 ∧ c0 ∈ c1)→ c2 ∈ c1)\n  ⊣ c2 = { <(Base ` ndx), c0 > }\n  ⊣ (w0 → c1 ∈ WUni)\n  ⊣ (w0 →(Base ` ndx)∈ c1)\n} = {\n  syl5eqel(c2, c1, { <(Base ` ndx), c0 > }, (w0 ∧ c0 ∈ c1))\n  wunsn(<(Base ` ndx), c0 >, c1, (w0 ∧ c0 ∈ c1))\n  wunop((Base ` ndx), c0, c1, (w0 ∧ c0 ∈ c1))\n  adantr(w0, c0 ∈ c1, c1 ∈ WUni)\n  adantr(w0, c0 ∈ c1, (Base ` ndx)∈ c1)\n  simpr(w0, c0 ∈ c1)\n}","parent":["syl5eqel","wunsn","wunop","adantr","simpr"],"children":["1strwun","equivestrcsetc"]},{"name":"1strwun","content":"A constructed one-slot structure in a weak universe. (Contributed by AV, 27-Mar-2020.)","origin":"thm 1strwun(class c0, class c1, class c2, wff w0) {\n  |- wi(wa(w0, wcel(c0, c1)), wcel(c2, c1))\n  -| wceq(c2, csn(cop(cfv(cbs, cnx), c0)))\n  -| wi(w0, wcel(c1, cwun))\n  -| wi(w0, wcel(com, c1))\n} = {\n  1strwunbndx(c0, c1, c2, w0)\n  wunstr(cbs, cnx, c1, nat1, w0)\n  df-base()\n  wunndx(c1, w0)\n}","pretty":"thm 1strwun(class c0, class c1, class c2, wff w0) {\n  ⊢ ((w0 ∧ c0 ∈ c1)→ c2 ∈ c1)\n  ⊣ c2 = { <(Base ` ndx), c0 > }\n  ⊣ (w0 → c1 ∈ WUni)\n  ⊣ (w0 → _om ∈ c1)\n} = {\n  1strwunbndx(c0, c1, c2, w0)\n  wunstr(cbs, cnx, c1, nat1, w0)\n  df-base()\n  wunndx(c1, w0)\n}","parent":["1strwunbndx","wunstr","df-base","wunndx"],"children":["setc1strwun"]},{"name":"2strstr","content":"A constructed two-slot structure. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm 2strstr(class c0, class c1, class c2, class c3, class c4) {\n  |- wbr(c0, cstr, cop(nat1, c1))\n  -| wceq(c0, cpr(cop(cfv(cbs, cnx), c2), cop(cfv(c3, cnx), c4)))\n  -| wceq(c3, cslot(c1))\n  -| wbr(nat1, clt, c1)\n  -| wcel(c1, cn)\n} = {\n  eqbrtri(c0, cstr, cop(nat1, c1), cpr(cop(cfv(cbs, cnx), c2), cop(cfv(c3, cnx), c4)))\n  strle2(cfv(cbs, cnx), c2, cfv(c3, cnx), c4, nat1, c1)\n  1nn()\n  basendx()\n  ndxarg(c3, c1)\n}","pretty":"thm 2strstr(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ c0[Struct]< 1, c1 >\n  ⊣ c0 = { <(Base ` ndx), c2 >, <(c3 ` ndx), c4 > }\n  ⊣ c3 = Slot(c1)\n  ⊣ 1[<]c1\n  ⊣ c1 ∈ ℕ\n} = {\n  eqbrtri(c0, cstr, < 1, c1 >, { <(Base ` ndx), c2 >, <(c3 ` ndx), c4 > })\n  strle2((Base ` ndx), c2, (c3 ` ndx), c4, nat1, c1)\n  1nn()\n  basendx()\n  ndxarg(c3, c1)\n}","parent":["eqbrtri","strle2","1nn","basendx","ndxarg"],"children":["2strbas","2strop","2strstr1","grpstr"]},{"name":"2strbas","content":"The base set of a constructed two-slot structure. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm 2strbas(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cpr(cop(cfv(cbs, cnx), c0), cop(cfv(c3, cnx), c4)))\n  -| wceq(c3, cslot(c5))\n  -| wbr(nat1, clt, c5)\n  -| wcel(c5, cn)\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, c5))\n  2strstr(c2, c5, c0, c3, c4)\n  baseid()\n  sseqtr4i(csn(cop(cfv(cbs, cnx), c0)), c2, cpr(cop(cfv(cbs, cnx), c0), cop(cfv(c3, cnx), c4)))\n  snsspr1(cop(cfv(cbs, cnx), c0), cop(cfv(c3, cnx), c4))\n}","pretty":"thm 2strbas(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 = { <(Base ` ndx), c0 >, <(c3 ` ndx), c4 > }\n  ⊣ c3 = Slot(c5)\n  ⊣ 1[<]c5\n  ⊣ c5 ∈ ℕ\n} = {\n  strfv(c0, c1, cbs, c2, < 1, c5 >)\n  2strstr(c2, c5, c0, c3, c4)\n  baseid()\n  sseqtr4i({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(c3 ` ndx), c4 > })\n  snsspr1(<(Base ` ndx), c0 >, <(c3 ` ndx), c4 >)\n}","parent":["strfv","2strstr","baseid","sseqtr4i","snsspr1"],"children":["grpbase","isposix","eltpsg","indistpsALT","tuslem","tmslem"]},{"name":"2strop","content":"The other slot of a constructed two-slot structure. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm 2strop(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(c2, c3)))\n  -| wceq(c3, cpr(cop(cfv(cbs, cnx), c4), cop(cfv(c2, cnx), c0)))\n  -| wceq(c2, cslot(c5))\n  -| wbr(nat1, clt, c5)\n  -| wcel(c5, cn)\n} = {\n  strfv(c0, c1, c2, c3, cop(nat1, c5))\n  2strstr(c3, c5, c4, c2, c0)\n  ndxid(c2, c5)\n  sseqtr4i(csn(cop(cfv(c2, cnx), c0)), c3, cpr(cop(cfv(cbs, cnx), c4), cop(cfv(c2, cnx), c0)))\n  snsspr2(cop(cfv(c2, cnx), c0), cop(cfv(cbs, cnx), c4))\n}","pretty":"thm 2strop(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(c2 ` c3))\n  ⊣ c3 = { <(Base ` ndx), c4 >, <(c2 ` ndx), c0 > }\n  ⊣ c2 = Slot(c5)\n  ⊣ 1[<]c5\n  ⊣ c5 ∈ ℕ\n} = {\n  strfv(c0, c1, c2, c3, < 1, c5 >)\n  2strstr(c3, c5, c4, c2, c0)\n  ndxid(c2, c5)\n  sseqtr4i({ <(c2 ` ndx), c0 > }, c3, { <(Base ` ndx), c4 >, <(c2 ` ndx), c0 > })\n  snsspr2(<(c2 ` ndx), c0 >, <(Base ` ndx), c4 >)\n}","parent":["strfv","2strstr","ndxid","sseqtr4i","snsspr2"],"children":["grpplusg","isposix","eltpsg","indistpsALT","tuslem","tmslem"]},{"name":"2strstr1","content":"A constructed two-slot structure. Version of ~ 2strstr not depending on the hard-coded index value of the base set. (Contributed by AV, 22-Sep-2020.)","origin":"thm 2strstr1(class c0, class c1, class c2, class c3) {\n  |- wbr(c0, cstr, cop(cfv(cbs, cnx), c1))\n  -| wceq(c0, cpr(cop(cfv(cbs, cnx), c2), cop(c1, c3)))\n  -| wbr(cfv(cbs, cnx), clt, c1)\n  -| wcel(c1, cn)\n} = {\n  breqtrri(c0, cstr, cop(cfv(cbs, cnx), c1), cop(nat1, c1))\n  2strstr(c0, c1, c2, cslot(c1), c3)\n  eqtri(c0, cpr(cop(cfv(cbs, cnx), c2), cop(cfv(cslot(c1), cnx), c3)), cpr(cop(cfv(cbs, cnx), c2), cop(c1, c3)))\n  preq2i(cop(cfv(cbs, cnx), c2), cop(c1, c3), cop(cfv(cslot(c1), cnx), c3))\n  opeq1i(c1, c3, cfv(cslot(c1), cnx))\n  eqcomi(c1, cfv(cslot(c1), cnx))\n  ndxarg(cslot(c1), c1)\n  eqid(cslot(c1))\n  eqbrtrri(nat1, clt, c1, cfv(cbs, cnx))\n  opeq1i(cfv(cbs, cnx), c1, nat1)\n  basendx()\n}","pretty":"thm 2strstr1(class c0, class c1, class c2, class c3) {\n  ⊢ c0[Struct]<(Base ` ndx), c1 >\n  ⊣ c0 = { <(Base ` ndx), c2 >, < c1, c3 > }\n  ⊣ (Base ` ndx)[<]c1\n  ⊣ c1 ∈ ℕ\n} = {\n  breqtrri(c0, cstr, <(Base ` ndx), c1 >, < 1, c1 >)\n  2strstr(c0, c1, c2, Slot(c1), c3)\n  eqtri(c0, { <(Base ` ndx), c2 >, <(Slot(c1)` ndx), c3 > }, { <(Base ` ndx), c2 >, < c1, c3 > })\n  preq2i(<(Base ` ndx), c2 >, < c1, c3 >, <(Slot(c1)` ndx), c3 >)\n  opeq1i(c1, c3, (Slot(c1)` ndx))\n  eqcomi(c1, (Slot(c1)` ndx))\n  ndxarg(Slot(c1), c1)\n  eqid(Slot(c1))\n  eqbrtrri(nat1, clt, c1, (Base ` ndx))\n  opeq1i((Base ` ndx), c1, nat1)\n  basendx()\n}","parent":["breqtrri","2strstr","eqtri","preq2i","opeq1i","eqcomi","ndxarg","eqid","eqbrtrri","basendx"],"children":["2strbas1","2strop1","structvtxval","structiedg0val","struct2grstr"]},{"name":"2strbas1","content":"The base set of a constructed two-slot structure. Version of ~ 2strbas not depending on the hard-coded index value of the base set. (Contributed by AV, 22-Sep-2020.)","origin":"thm 2strbas1(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cpr(cop(cfv(cbs, cnx), c0), cop(c3, c4)))\n  -| wbr(cfv(cbs, cnx), clt, c3)\n  -| wcel(c3, cn)\n} = {\n  strfv(c0, c1, cbs, c2, cop(cfv(cbs, cnx), c3))\n  2strstr1(c2, c3, c0, c4)\n  baseid()\n  sseqtr4i(csn(cop(cfv(cbs, cnx), c0)), c2, cpr(cop(cfv(cbs, cnx), c0), cop(c3, c4)))\n  snsspr1(cop(cfv(cbs, cnx), c0), cop(c3, c4))\n}","pretty":"thm 2strbas1(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 = { <(Base ` ndx), c0 >, < c3, c4 > }\n  ⊣ (Base ` ndx)[<]c3\n  ⊣ c3 ∈ ℕ\n} = {\n  strfv(c0, c1, cbs, c2, <(Base ` ndx), c3 >)\n  2strstr1(c2, c3, c0, c4)\n  baseid()\n  sseqtr4i({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, < c3, c4 > })\n  snsspr1(<(Base ` ndx), c0 >, < c3, c4 >)\n}","parent":["strfv","2strstr1","baseid","sseqtr4i","snsspr1"],"children":[]},{"name":"2strop1","content":"The other slot of a constructed two-slot structure. Version of ~ 2strop not depending on the hard-coded index value of the base set. (Contributed by AV, 22-Sep-2020.)","origin":"thm 2strop1(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(c2, c3)))\n  -| wceq(c3, cpr(cop(cfv(cbs, cnx), c4), cop(c5, c0)))\n  -| wbr(cfv(cbs, cnx), clt, c5)\n  -| wcel(c5, cn)\n  -| wceq(c2, cslot(c5))\n} = {\n  strfv(c0, c1, c2, c3, cop(cfv(cbs, cnx), c5))\n  2strstr1(c3, c5, c4, c0)\n  ndxid(c2, c5)\n  3sstr4i(csn(cop(cfv(c2, cnx), c0)), c3, csn(cop(c5, c0)), cpr(cop(cfv(cbs, cnx), c4), cop(c5, c0)))\n  snsspr2(cop(c5, c0), cop(cfv(cbs, cnx), c4))\n  sneqi(cop(cfv(c2, cnx), c0), cop(c5, c0))\n  opeq1i(cfv(c2, cnx), c0, c5)\n  ndxarg(c2, c5)\n}","pretty":"thm 2strop1(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(c2 ` c3))\n  ⊣ c3 = { <(Base ` ndx), c4 >, < c5, c0 > }\n  ⊣ (Base ` ndx)[<]c5\n  ⊣ c5 ∈ ℕ\n  ⊣ c2 = Slot(c5)\n} = {\n  strfv(c0, c1, c2, c3, <(Base ` ndx), c5 >)\n  2strstr1(c3, c5, c4, c0)\n  ndxid(c2, c5)\n  3sstr4i({ <(c2 ` ndx), c0 > }, c3, { < c5, c0 > }, { <(Base ` ndx), c4 >, < c5, c0 > })\n  snsspr2(< c5, c0 >, <(Base ` ndx), c4 >)\n  sneqi(<(c2 ` ndx), c0 >, < c5, c0 >)\n  opeq1i((c2 ` ndx), c0, c5)\n  ndxarg(c2, c5)\n}","parent":["strfv","2strstr1","ndxid","3sstr4i","snsspr2","sneqi","opeq1i","ndxarg"],"children":[]},{"name":"basendxnplusgndx","content":"The slot for the base set is not the slot for the group operation in an extensible structure. (Contributed by AV, 14-Nov-2021.)","origin":"thm basendxnplusgndx() {\n  |- wne(cfv(cbs, cnx), cfv(cplusg, cnx))\n} = {\n  eqnetri(cfv(cbs, cnx), cfv(cplusg, cnx), nat1)\n  ndxarg(cbs, nat1)\n  df-base()\n  1nn()\n  neeqtrri(nat1, cfv(cplusg, cnx), nat2)\n  1ne2()\n  plusgndx()\n}","pretty":"thm basendxnplusgndx() {\n  ⊢ (Base ` ndx)≠(+ ` ndx)\n} = {\n  eqnetri((Base ` ndx), (+ ` ndx), nat1)\n  ndxarg(cbs, nat1)\n  df-base()\n  1nn()\n  neeqtrri(nat1, (+ ` ndx), nat2)\n  1ne2()\n  plusgndx()\n}","parent":["eqnetri","ndxarg","df-base","1nn","neeqtrri","1ne2","plusgndx"],"children":["cnfldfun"]},{"name":"grpstr","content":"A constructed group is a structure on ` 1 ... 2 ` . (Contributed by Mario Carneiro, 28-Sep-2013.) (Revised by Mario Carneiro, 30-Apr-2015.)","origin":"thm grpstr(class c0, class c1, class c2) {\n  |- wbr(c0, cstr, cop(nat1, nat2))\n  -| wceq(c0, cpr(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2)))\n} = {\n  2strstr(c0, nat2, c1, cplusg, c2)\n  df-plusg()\n  1lt2()\n  2nn()\n}","pretty":"thm grpstr(class c0, class c1, class c2) {\n  ⊢ c0[Struct]< 1, 2 >\n  ⊣ c0 = { <(Base ` ndx), c1 >, <(+ ` ndx), c2 > }\n} = {\n  2strstr(c0, nat2, c1, cplusg, c2)\n  df-plusg()\n  1lt2()\n  2nn()\n}","parent":["2strstr","df-plusg","1lt2","2nn"],"children":[]},{"name":"grpbase","content":"The base set of a constructed group. (Contributed by Mario Carneiro, 2-Aug-2013.) (Revised by Mario Carneiro, 30-Apr-2015.)","origin":"thm grpbase(class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cpr(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3)))\n} = {\n  2strbas(c0, c1, c2, cplusg, c3, nat2)\n  df-plusg()\n  1lt2()\n  2nn()\n}","pretty":"thm grpbase(class c0, class c1, class c2, class c3) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 = { <(Base ` ndx), c0 >, <(+ ` ndx), c3 > }\n} = {\n  2strbas(c0, c1, c2, cplusg, c3, nat2)\n  df-plusg()\n  1lt2()\n  2nn()\n}","parent":["2strbas","df-plusg","1lt2","2nn"],"children":["grpbasex","mgm0b","mgm1","sgrp0b","sgrp1","mnd1","mnd1id","frmdbas","mgmnsgrpex","sgrpnmndex","grppropstr","grp1","grp1inv","abl1","cnaddabl","cnaddid","cnaddinv","ring1","dchrbas","motgrp","signswbase","cnaddcom","tgrpbase","dvaabl","lmod1"]},{"name":"grpplusg","content":"The operation of a constructed group. (Contributed by Mario Carneiro, 2-Aug-2013.) (Revised by Mario Carneiro, 30-Apr-2015.)","origin":"thm grpplusg(class c0, class c1, class c2, class c3) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, cpr(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0)))\n} = {\n  2strop(c0, c1, cplusg, c2, c3, nat2)\n  df-plusg()\n  1lt2()\n  2nn()\n}","pretty":"thm grpplusg(class c0, class c1, class c2, class c3) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 = { <(Base ` ndx), c3 >, <(+ ` ndx), c0 > }\n} = {\n  2strop(c0, c1, cplusg, c2, c3, nat2)\n  df-plusg()\n  1lt2()\n  2nn()\n}","parent":["2strop","df-plusg","1lt2","2nn"],"children":["grpplusgx","mgm1","sgrp1","mnd1","mnd1id","frmdplusg","mgmnsgrpex","sgrpnmndex","grppropstr","grp1","abl1","cnaddabl","cnaddid","cnaddinv","ring1","dchrplusg","motplusg","signswplusg","cnaddcom","tgrpopr","dvaabl","lmod1"]},{"name":"ressplusg","content":"` +g ` is unaffected by restriction. (Contributed by Stefan O'Rear, 27-Nov-2014.)","origin":"thm ressplusg(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cplusg, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cplusg, c4))\n} = {\n  resslem(c0, c1, c2, cplusg, c3, c4, nat2)\n  df-plusg()\n  2nn()\n  1lt2()\n}","pretty":"thm ressplusg(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(+ ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(+ ` c4)\n} = {\n  resslem(c0, c1, c2, cplusg, c3, c4, nat2)\n  df-plusg()\n  2nn()\n  1lt2()\n}","parent":["resslem","df-plusg","2nn","1lt2"],"children":["issstrmgm","gsumress","issubmnd","ress0g","submnd0","resmhm","resmhm2","resmhm2b","submmulg","subg0","subginv","subgcl","subgsub","subgmulg","issubg2","nmznsg","resghm","subgga","gasubg","resscntz","sylow2blem2","sylow3lem6","subglsm","pj1ghm","subgabl","subcmn","submcmn2","ringidss","opprsubg","unitgrp","unitlinv","unitrinv","invrpropd","isdrng2","drngmcl","drngid2","isdrngd","subrgugrp","issubrg2","subrgpropd","abvres","islss3","sralmod","resspsradd","mpladd","ressmpladd","mplplusg","ply1plusg","ressply1add","xrs1mnd","xrs10","xrs1cmn","xrge0subm","cnmsubglem","expmhm","nn0srg","rge0srg","zringplusg","expghm","psgnghm","psgnco","evpmodpmf1o","replusg","phlssphl","frlmplusgval","mdetralt","invrvald","submtmd","imasdsf1olem","xrge0gsumle","clmadd","isclmp","ipcau2","reefgim","efabl","efsubm","dchrptlem2","dchrsum2","qabvle","padicabv","ostth2lem2","ostth3","ressplusf","ressmulgnn","xrge0plusg","submomnd","ringinvval","dvrcan5","rhmunitinv","xrge0slmod","drgextlsp","fedgmullem2","qqhghm","qqhrhm","esumpfinvallem","lcdvadd","cntzsdrg","deg1mhm","sge0tsms","cnfldsrngadd","issubmgm2","resmgmhm","resmgmhm2","resmgmhm2b","lidlrng","amgmlemALT"]},{"name":"grpbasex","content":"The base of an explicitly given group. Note: This theorem has hard-coded structure indices for demonstration purposes. It is not intended for general use; use ~ grpbase instead. (New usage is discouraged.) (Contributed by NM, 17-Oct-2012.)","origin":"thm grpbasex(class c0, class c1, class c2) {\n  |- wceq(c0, cfv(cbs, c1))\n  -| wcel(c0, universe)\n  -| wcel(c2, universe)\n  -| wceq(c1, cpr(cop(nat1, c0), cop(nat2, c2)))\n} = {\n  a1ii(wceq(c0, cfv(cbs, c1)), wcel(c2, universe))\n  ax-mp(wceq(c0, cfv(cbs, c1)), wcel(c0, universe))\n  grpbase(c0, universe, c1, c2)\n  eqtr4i(c1, cpr(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c2)), cpr(cop(nat1, c0), cop(nat2, c2)))\n  preq12i(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c2), cop(nat1, c0), cop(nat2, c2))\n  opeq1i(cfv(cbs, cnx), c0, nat1)\n  basendx()\n  opeq1i(cfv(cplusg, cnx), c2, nat2)\n  plusgndx()\n}","pretty":"thm grpbasex(class c0, class c1, class c2) {\n  ⊢ c0 =(Base ` c1)\n  ⊣ c0 ∈ 𝕌\n  ⊣ c2 ∈ 𝕌\n  ⊣ c1 = { < 1, c0 >, < 2, c2 > }\n} = {\n  a1ii(c0 =(Base ` c1), c2 ∈ 𝕌)\n  ax-mp(c0 =(Base ` c1), c0 ∈ 𝕌)\n  grpbase(c0, universe, c1, c2)\n  eqtr4i(c1, { <(Base ` ndx), c0 >, <(+ ` ndx), c2 > }, { < 1, c0 >, < 2, c2 > })\n  preq12i(<(Base ` ndx), c0 >, <(+ ` ndx), c2 >, < 1, c0 >, < 2, c2 >)\n  opeq1i((Base ` ndx), c0, nat1)\n  basendx()\n  opeq1i((+ ` ndx), c2, nat2)\n  plusgndx()\n}","parent":["a1ii","ax-mp","grpbase","eqtr4i","preq12i","opeq1i","basendx","plusgndx"],"children":["isgrpix","cnaddablx","zaddablx"]},{"name":"grpplusgx","content":"The operation of an explicitly given group. Note: This theorem has hard-coded structure indices for demonstration purposes. It is not intended for general use; use ~ grpplusg instead. (New usage is discouraged.) (Contributed by NM, 17-Oct-2012.)","origin":"thm grpplusgx(class c0, class c1, class c2) {\n  |- wceq(c0, cfv(cplusg, c1))\n  -| wcel(c2, universe)\n  -| wcel(c0, universe)\n  -| wceq(c1, cpr(cop(nat1, c2), cop(nat2, c0)))\n} = {\n  a1ii(wceq(c0, cfv(cplusg, c1)), wcel(c2, universe))\n  ax-mp(wceq(c0, cfv(cplusg, c1)), wcel(c0, universe))\n  grpplusg(c0, universe, c1, c2)\n  eqtr4i(c1, cpr(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), c0)), cpr(cop(nat1, c2), cop(nat2, c0)))\n  preq12i(cop(cfv(cbs, cnx), c2), cop(cfv(cplusg, cnx), c0), cop(nat1, c2), cop(nat2, c0))\n  opeq1i(cfv(cbs, cnx), c2, nat1)\n  basendx()\n  opeq1i(cfv(cplusg, cnx), c0, nat2)\n  plusgndx()\n}","pretty":"thm grpplusgx(class c0, class c1, class c2) {\n  ⊢ c0 =(+ ` c1)\n  ⊣ c2 ∈ 𝕌\n  ⊣ c0 ∈ 𝕌\n  ⊣ c1 = { < 1, c2 >, < 2, c0 > }\n} = {\n  a1ii(c0 =(+ ` c1), c2 ∈ 𝕌)\n  ax-mp(c0 =(+ ` c1), c0 ∈ 𝕌)\n  grpplusg(c0, universe, c1, c2)\n  eqtr4i(c1, { <(Base ` ndx), c2 >, <(+ ` ndx), c0 > }, { < 1, c2 >, < 2, c0 > })\n  preq12i(<(Base ` ndx), c2 >, <(+ ` ndx), c0 >, < 1, c2 >, < 2, c0 >)\n  opeq1i((Base ` ndx), c2, nat1)\n  basendx()\n  opeq1i((+ ` ndx), c0, nat2)\n  plusgndx()\n}","parent":["a1ii","ax-mp","grpplusg","eqtr4i","preq12i","opeq1i","basendx","plusgndx"],"children":["isgrpix","cnaddablx","zaddablx"]},{"name":"mulrndx","content":"Index value of the ~ df-mulr slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm mulrndx() {\n  |- wceq(cfv(cmulr, cnx), nat3)\n} = {\n  ndxarg(cmulr, nat3)\n  df-mulr()\n  3nn()\n}","pretty":"thm mulrndx() {\n  ⊢ (× ` ndx)= 3\n} = {\n  ndxarg(cmulr, nat3)\n  df-mulr()\n  3nn()\n}","parent":["ndxarg","df-mulr","3nn"],"children":["plusgndxnmulrndx","basendxnmulrndx","rngstr","opprlem","cnfldfun","matsca","matvsca"]},{"name":"mulrid","content":"Utility theorem: index-independent form of ~ df-mulr . (Contributed by Mario Carneiro, 8-Jun-2013.)","origin":"thm mulrid() {\n  |- wceq(cmulr, cslot(cfv(cmulr, cnx)))\n} = {\n  ndxid(cmulr, nat3)\n  df-mulr()\n  3nn()\n}","pretty":"thm mulrid() {\n  ⊢ × = Slot((× ` ndx))\n} = {\n  ndxid(cmulr, nat3)\n  df-mulr()\n  3nn()\n}","parent":["ndxid","df-mulr","3nn"],"children":["rngmulr","srngmulr","ipsmulr","odrngmulr","prdsmulr","imasmulr","opprmulfval","psrmulr","cnfldmul","matmulr","algmulr","cznrng","cznnring"]},{"name":"plusgndxnmulrndx","content":"The slot for the group (addition) operation is not the slot for the ring (multiplication) operation in an extensible structure. (Contributed by AV, 16-Feb-2020.)","origin":"thm plusgndxnmulrndx() {\n  |- wne(cfv(cplusg, cnx), cfv(cmulr, cnx))\n} = {\n  eqnetri(cfv(cplusg, cnx), cfv(cmulr, cnx), nat2)\n  plusgndx()\n  neeqtrri(nat2, cfv(cmulr, cnx), nat3)\n  ltneii(nat2, nat3)\n  2re()\n  2lt3()\n  mulrndx()\n}","pretty":"thm plusgndxnmulrndx() {\n  ⊢ (+ ` ndx)≠(× ` ndx)\n} = {\n  eqnetri((+ ` ndx), (× ` ndx), nat2)\n  plusgndx()\n  neeqtrri(nat2, (× ` ndx), nat3)\n  ltneii(nat2, nat3)\n  2re()\n  2lt3()\n  mulrndx()\n}","parent":["eqnetri","plusgndx","neeqtrri","ltneii","2re","2lt3","mulrndx"],"children":["cnfldfun","matplusg","cznabel","cznrng"]},{"name":"basendxnmulrndx","content":"The slot for the base set is not the slot for the ring (multiplication) operation in an extensible structure. (Contributed by AV, 16-Feb-2020.)","origin":"thm basendxnmulrndx() {\n  |- wne(cfv(cbs, cnx), cfv(cmulr, cnx))\n} = {\n  eqnetri(cfv(cbs, cnx), cfv(cmulr, cnx), nat1)\n  ndxarg(cbs, nat1)\n  df-base()\n  1nn()\n  neeqtrri(nat1, cfv(cmulr, cnx), nat3)\n  ltneii(nat1, nat3)\n  1re()\n  1lt3()\n  mulrndx()\n}","pretty":"thm basendxnmulrndx() {\n  ⊢ (Base ` ndx)≠(× ` ndx)\n} = {\n  eqnetri((Base ` ndx), (× ` ndx), nat1)\n  ndxarg(cbs, nat1)\n  df-base()\n  1nn()\n  neeqtrri(nat1, (× ` ndx), nat3)\n  ltneii(nat1, nat3)\n  1re()\n  1lt3()\n  mulrndx()\n}","parent":["eqnetri","ndxarg","df-base","1nn","neeqtrri","ltneii","1re","1lt3","mulrndx"],"children":["cnfldfun","matbas","cznrnglem","cznabel"]},{"name":"rngstr","content":"A constructed ring is a structure. (Contributed by Mario Carneiro, 28-Sep-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm rngstr(class c0, class c1, class c2, class c3) {\n  |- wbr(c0, cstr, cop(nat1, nat3))\n  -| wceq(c0, ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, nat3), ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)))\n  strle3(cfv(cbs, cnx), c1, cfv(cplusg, cnx), c2, cfv(cmulr, cnx), c3, nat1, nat3, nat2)\n  1nn()\n  basendx()\n  1lt2()\n  2nn()\n  plusgndx()\n  2lt3()\n  3nn()\n  mulrndx()\n}","pretty":"thm rngstr(class c0, class c1, class c2, class c3) {\n  ⊢ c0[Struct]< 1, 3 >\n  ⊣ c0 = { <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > }\n} = {\n  eqbrtri(c0, cstr, < 1, 3 >, { <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > })\n  strle3((Base ` ndx), c1, (+ ` ndx), c2, (× ` ndx), c3, nat1, nat3, nat2)\n  1nn()\n  basendx()\n  1lt2()\n  2nn()\n  plusgndx()\n  2lt3()\n  3nn()\n  mulrndx()\n}","parent":["eqbrtri","strle3","1nn","basendx","1lt2","2nn","plusgndx","2lt3","3nn","mulrndx"],"children":["rngbase","rngplusg","rngmulr","srngstr","ipsstr","odrngstr","psrvalstr","algstr"]},{"name":"rngbase","content":"The base set of a constructed ring. (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 30-Apr-2015.)","origin":"thm rngbase(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, nat3))\n  rngstr(c2, c0, c3, c4)\n  baseid()\n  sseqtr4i(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4))\n}","pretty":"thm rngbase(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 = { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > }\n} = {\n  strfv(c0, c1, cbs, c2, < 1, 3 >)\n  rngstr(c2, c0, c3, c4)\n  baseid()\n  sseqtr4i({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 >)\n}","parent":["strfv","rngstr","baseid","sseqtr4i","snsstp1"],"children":["ring1","rng1nnzr","erngbase","erngbase-rN","lmod1zr"]},{"name":"rngplusg","content":"The additive operation of a constructed ring. (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 30-Apr-2015.)","origin":"thm rngplusg(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)))\n} = {\n  strfv(c0, c1, cplusg, c2, cop(nat1, nat3))\n  rngstr(c2, c3, c0, c4)\n  plusgid()\n  sseqtr4i(csn(cop(cfv(cplusg, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)))\n  snsstp2(cop(cfv(cplusg, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cmulr, cnx), c4))\n}","pretty":"thm rngplusg(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 = { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > }\n} = {\n  strfv(c0, c1, cplusg, c2, < 1, 3 >)\n  rngstr(c2, c3, c0, c4)\n  plusgid()\n  sseqtr4i({ <(+ ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > })\n  snsstp2(<(+ ` ndx), c0 >, <(Base ` ndx), c3 >, <(× ` ndx), c4 >)\n}","parent":["strfv","rngstr","plusgid","sseqtr4i","snsstp2"],"children":["ring1","erngfplus","erngfplus-rN"]},{"name":"rngmulr","content":"The multiplicative operation of a constructed ring. (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 30-Apr-2015.)","origin":"thm rngmulr(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cmulr, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)))\n} = {\n  strfv(c0, c1, cmulr, c2, cop(nat1, nat3))\n  rngstr(c2, c3, c4, c0)\n  mulrid()\n  sseqtr4i(csn(cop(cfv(cmulr, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)))\n  snsstp3(cop(cfv(cmulr, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4))\n}","pretty":"thm rngmulr(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(× ` c2))\n  ⊣ c2 = { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > }\n} = {\n  strfv(c0, c1, cmulr, c2, < 1, 3 >)\n  rngstr(c2, c3, c4, c0)\n  mulrid()\n  sseqtr4i({ <(× ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > })\n  snsstp3(<(× ` ndx), c0 >, <(Base ` ndx), c3 >, <(+ ` ndx), c4 >)\n}","parent":["strfv","rngstr","mulrid","sseqtr4i","snsstp3"],"children":["ring1","erngfmul","erngfmul-rN"]},{"name":"starvndx","content":"Index value of the ~ df-starv slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm starvndx() {\n  |- wceq(cfv(cstv, cnx), nat4)\n} = {\n  ndxarg(cstv, nat4)\n  df-starv()\n  4nn()\n}","pretty":"thm starvndx() {\n  ⊢ (*r ` ndx)= 4\n} = {\n  ndxarg(cstv, nat4)\n  df-starv()\n  4nn()\n}","parent":["ndxarg","df-starv","4nn"],"children":["srngstr","cnfldfun","hlhilslem"]},{"name":"starvid","content":"Utility theorem: index-independent form of ~ df-starv . (Contributed by Mario Carneiro, 6-Oct-2013.)","origin":"thm starvid() {\n  |- wceq(cstv, cslot(cfv(cstv, cnx)))\n} = {\n  ndxid(cstv, nat4)\n  df-starv()\n  4nn()\n}","pretty":"thm starvid() {\n  ⊢ *r = Slot((*r ` ndx))\n} = {\n  ndxid(cstv, nat4)\n  df-starv()\n  4nn()\n}","parent":["ndxid","df-starv","4nn"],"children":["srnginvl","cnfldcj","hlhilnvl"]},{"name":"ressmulr","content":"` .r ` is unaffected by restriction. (Contributed by Stefan O'Rear, 27-Nov-2014.)","origin":"thm ressmulr(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cmulr, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cmulr, c4))\n} = {\n  resslem(c0, c1, c2, cmulr, c3, c4, nat3)\n  df-mulr()\n  3nn()\n  1lt3()\n}","pretty":"thm ressmulr(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(× ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(× ` c4)\n} = {\n  resslem(c0, c1, c2, cmulr, c3, c4, nat3)\n  df-mulr()\n  3nn()\n  1lt3()\n}","parent":["resslem","df-mulr","3nn","1lt3"],"children":["mgpress","subrg1","subrgmcl","subrgdvds","subrguss","subrginv","subrgdv","subrgunit","subrgugrp","issubrg2","subrgpropd","abvres","sralmod","issubassa","resspsrmul","resspsrvsca","mplmul","ressmplmul","mplmulr","ply1mulr","ressply1mul","nn0srg","rge0srg","zringmulr","remulr","dmatcrng","scmatcrng","scmatsrng1","scmatmhm","clmmul","isclmp","cphsubrglem","ipcau2","qabvexp","ostthlem2","padicabv","ostth2lem2","ostth3","ress1r","rdivmuldivd","suborng","xrge0slmod","drgextlsp","fedgmullem1","fedgmullem2","extdg1id","xrge0iifmhm","qqhrhm","cnfldsrngmul","lidlmmgm","lidlmsgrp","lidlrng","zlidlring","uzlidlring","aacllem"]},{"name":"ressstarv","content":"` *r ` is unaffected by restriction. (Contributed by Mario Carneiro, 9-Oct-2015.)","origin":"thm ressstarv(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cstv, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cstv, c4))\n} = {\n  resslem(c0, c1, c2, cstv, c3, c4, nat4)\n  df-starv()\n  4nn()\n  1lt4()\n}","pretty":"thm ressstarv(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(*r ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(*r ` c4)\n} = {\n  resslem(c0, c1, c2, cstv, c3, c4, nat4)\n  df-starv()\n  4nn()\n  1lt4()\n}","parent":["resslem","df-starv","4nn","1lt4"],"children":["refldcj","clmcj","cphcjcl","ipcau2"]},{"name":"srngstr","content":"A constructed star ring is a structure. (Contributed by Mario Carneiro, 18-Nov-2013.) (Revised by Mario Carneiro, 14-Aug-2015.)","origin":"thm srngstr(class c0, class c1, class c2, class c3, class c4) {\n  |- wbr(c0, cstr, cop(nat1, nat4))\n  -| wceq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), csn(cop(cfv(cstv, cnx), c4))))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, nat4), cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), csn(cop(cfv(cstv, cnx), c4))))\n  strleun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), csn(cop(cfv(cstv, cnx), c4)), nat1, nat4, nat3, nat4)\n  rngstr(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), c1, c2, c3)\n  eqid(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)))\n  strle1(cfv(cstv, cnx), c4, nat4)\n  4nn()\n  starvndx()\n  3lt4()\n}","pretty":"thm srngstr(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ c0[Struct]< 1, 4 >\n  ⊣ c0 =({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > } ⋃ { <(*r ` ndx), c4 > })\n} = {\n  eqbrtri(c0, cstr, < 1, 4 >, ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > } ⋃ { <(*r ` ndx), c4 > }))\n  strleun({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > }, { <(*r ` ndx), c4 > }, nat1, nat4, nat3, nat4)\n  rngstr({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > }, c1, c2, c3)\n  eqid({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > })\n  strle1((*r ` ndx), c4, nat4)\n  4nn()\n  starvndx()\n  3lt4()\n}","parent":["eqbrtri","strleun","rngstr","eqid","strle1","4nn","starvndx","3lt4"],"children":["srngbase","srngplusg","srngmulr","srnginvl","cnfldstr"]},{"name":"srngbase","content":"The base set of a constructed star ring. (Contributed by Mario Carneiro, 18-Nov-2013.) (Revised by Mario Carneiro, 6-May-2015.)","origin":"thm srngbase(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), csn(cop(cfv(cstv, cnx), c5))))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, nat4))\n  srngstr(c2, c0, c3, c4, c5)\n  baseid()\n  sstri(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), csn(cop(cfv(cstv, cnx), c5))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), csn(cop(cfv(cstv, cnx), c5)))\n}","pretty":"thm srngbase(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > } ⋃ { <(*r ` ndx), c5 > })\n} = {\n  strfv(c0, c1, cbs, c2, < 1, 4 >)\n  srngstr(c2, c0, c3, c4, c5)\n  baseid()\n  sstri({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > }, c2, ({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > } ⋃ { <(*r ` ndx), c5 > }))\n  ssun1({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > }, { <(*r ` ndx), c5 > })\n}","parent":["strfv","srngstr","baseid","sstri","snsstp1","sseqtr4i","ssun1"],"children":[]},{"name":"srngplusg","content":"The addition operation of a constructed star ring. (Contributed by Mario Carneiro, 20-Jun-2015.)","origin":"thm srngplusg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), csn(cop(cfv(cstv, cnx), c5))))\n} = {\n  strfv(c0, c1, cplusg, c2, cop(nat1, nat4))\n  srngstr(c2, c3, c0, c4, c5)\n  plusgid()\n  sstri(csn(cop(cfv(cplusg, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)))\n  snsstp2(cop(cfv(cplusg, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cmulr, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), csn(cop(cfv(cstv, cnx), c5))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), csn(cop(cfv(cstv, cnx), c5)))\n}","pretty":"thm srngplusg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > } ⋃ { <(*r ` ndx), c5 > })\n} = {\n  strfv(c0, c1, cplusg, c2, < 1, 4 >)\n  srngstr(c2, c3, c0, c4, c5)\n  plusgid()\n  sstri({ <(+ ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > })\n  snsstp2(<(+ ` ndx), c0 >, <(Base ` ndx), c3 >, <(× ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > } ⋃ { <(*r ` ndx), c5 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > }, { <(*r ` ndx), c5 > })\n}","parent":["strfv","srngstr","plusgid","sstri","snsstp2","sseqtr4i","ssun1"],"children":[]},{"name":"srngmulr","content":"The multiplication operation of a constructed star ring. (Contributed by Mario Carneiro, 20-Jun-2015.)","origin":"thm srngmulr(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cmulr, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), csn(cop(cfv(cstv, cnx), c5))))\n} = {\n  strfv(c0, c1, cmulr, c2, cop(nat1, nat4))\n  srngstr(c2, c3, c4, c0, c5)\n  mulrid()\n  sstri(csn(cop(cfv(cmulr, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)))\n  snsstp3(cop(cfv(cmulr, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), csn(cop(cfv(cstv, cnx), c5))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), csn(cop(cfv(cstv, cnx), c5)))\n}","pretty":"thm srngmulr(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(× ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > } ⋃ { <(*r ` ndx), c5 > })\n} = {\n  strfv(c0, c1, cmulr, c2, < 1, 4 >)\n  srngstr(c2, c3, c4, c0, c5)\n  mulrid()\n  sstri({ <(× ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > })\n  snsstp3(<(× ` ndx), c0 >, <(Base ` ndx), c3 >, <(+ ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > } ⋃ { <(*r ` ndx), c5 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > }, { <(*r ` ndx), c5 > })\n}","parent":["strfv","srngstr","mulrid","sstri","snsstp3","sseqtr4i","ssun1"],"children":[]},{"name":"srnginvl","content":"The involution function of a constructed star ring. (Contributed by Mario Carneiro, 20-Jun-2015.)","origin":"thm srnginvl(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cstv, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), csn(cop(cfv(cstv, cnx), c0))))\n} = {\n  strfv(c0, c1, cstv, c2, cop(nat1, nat4))\n  srngstr(c2, c3, c4, c5, c0)\n  starvid()\n  sseqtr4i(csn(cop(cfv(cstv, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), csn(cop(cfv(cstv, cnx), c0))))\n  ssun2(csn(cop(cfv(cstv, cnx), c0)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)))\n}","pretty":"thm srnginvl(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(*r ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(*r ` ndx), c0 > })\n} = {\n  strfv(c0, c1, cstv, c2, < 1, 4 >)\n  srngstr(c2, c3, c4, c5, c0)\n  starvid()\n  sseqtr4i({ <(*r ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(*r ` ndx), c0 > }))\n  ssun2({ <(*r ` ndx), c0 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > })\n}","parent":["strfv","srngstr","starvid","sseqtr4i","ssun2"],"children":[]},{"name":"scandx","content":"Index value of the ~ df-sca slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm scandx() {\n  |- wceq(cfv(csca, cnx), nat5)\n} = {\n  ndxarg(csca, nat5)\n  df-sca()\n  5nn()\n}","pretty":"thm scandx() {\n  ⊢ (Scalar ` ndx)= 5\n} = {\n  ndxarg(csca, nat5)\n  df-sca()\n  5nn()\n}","parent":["ndxarg","df-sca","5nn"],"children":["lmodstr","ipsstr","rmodislmod","sralem","srasca","psrvalstr","zlmlem","zlmsca","matsca","resvlem","zlmds","zlmtset","algstr"]},{"name":"scaid","content":"Utility theorem: index-independent form of scalar ~ df-sca . (Contributed by Mario Carneiro, 19-Jun-2014.)","origin":"thm scaid() {\n  |- wceq(csca, cslot(cfv(csca, cnx)))\n} = {\n  ndxid(csca, nat5)\n  df-sca()\n  5nn()\n}","pretty":"thm scaid() {\n  ⊢ Scalar = Slot((Scalar ` ndx))\n} = {\n  ndxid(csca, nat5)\n  df-sca()\n  5nn()\n}","parent":["ndxid","df-sca","5nn"],"children":["lmodsca","ipssca","phlsca","prdssca","imassca","rmodislmod","srasca","psrsca","zlmsca","matsca","resvsca","algsca"]},{"name":"vscandx","content":"Index value of the ~ df-vsca slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm vscandx() {\n  |- wceq(cfv(cvsca, cnx), nat6)\n} = {\n  ndxarg(cvsca, nat6)\n  df-vsca()\n  6nn()\n}","pretty":"thm vscandx() {\n  ⊢ (× ` ndx)= 6\n} = {\n  ndxarg(cvsca, nat6)\n  df-vsca()\n  6nn()\n}","parent":["ndxarg","df-vsca","6nn"],"children":["lmodstr","ipsstr","rmodislmod","sralem","srasca","sravsca","psrvalstr","zlmlem","zlmsca","matvsca","zlmds","zlmtset","algstr"]},{"name":"vscaid","content":"Utility theorem: index-independent form of scalar product ~ df-vsca . (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 19-Jun-2014.)","origin":"thm vscaid() {\n  |- wceq(cvsca, cslot(cfv(cvsca, cnx)))\n} = {\n  ndxid(cvsca, nat6)\n  df-vsca()\n  6nn()\n}","pretty":"thm vscaid() {\n  ⊢ × = Slot((× ` ndx))\n} = {\n  ndxid(cvsca, nat6)\n  df-vsca()\n  6nn()\n}","parent":["ndxid","df-vsca","6nn"],"children":["lmodvsca","ipsvsca","phlvsca","prdsvsca","imasvsca","rmodislmod","sravsca","psrvscafval","zlmvsca","matvsca","algvsca"]},{"name":"lmodstr","content":"A constructed left module or left vector space is a structure. (Contributed by Mario Carneiro, 1-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm lmodstr(class c0, class c1, class c2, class c3, class c4) {\n  |- wbr(c0, cstr, cop(nat1, nat6))\n  -| wceq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, nat6), cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))))\n  strleun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4)), nat1, nat6, nat5, nat6)\n  strle3(cfv(cbs, cnx), c1, cfv(cplusg, cnx), c2, cfv(csca, cnx), c3, nat1, nat5, nat2)\n  1nn()\n  basendx()\n  1lt2()\n  2nn()\n  plusgndx()\n  2lt5()\n  5nn()\n  scandx()\n  strle1(cfv(cvsca, cnx), c4, nat6)\n  6nn()\n  vscandx()\n  5lt6()\n}","pretty":"thm lmodstr(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ c0[Struct]< 1, 6 >\n  ⊣ c0 =({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 > })\n} = {\n  eqbrtri(c0, cstr, < 1, 6 >, ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 > }))\n  strleun({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > }, { <(× ` ndx), c4 > }, nat1, nat6, nat5, nat6)\n  strle3((Base ` ndx), c1, (+ ` ndx), c2, (Scalar ` ndx), c3, nat1, nat5, nat2)\n  1nn()\n  basendx()\n  1lt2()\n  2nn()\n  plusgndx()\n  2lt5()\n  5nn()\n  scandx()\n  strle1((× ` ndx), c4, nat6)\n  6nn()\n  vscandx()\n  5lt6()\n}","parent":["eqbrtri","strleun","strle3","1nn","basendx","1lt2","2nn","plusgndx","2lt5","5nn","scandx","strle1","6nn","vscandx","5lt6"],"children":["lmodbase","lmodplusg","lmodsca","lmodvsca","phlstr"]},{"name":"lmodbase","content":"The base set of a constructed left vector space. (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm lmodbase(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), csn(cop(cfv(cvsca, cnx), c5))))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, nat6))\n  lmodstr(c2, c0, c3, c4, c5)\n  baseid()\n  sstri(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), csn(cop(cfv(cvsca, cnx), c5))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), csn(cop(cfv(cvsca, cnx), c5)))\n}","pretty":"thm lmodbase(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 > })\n} = {\n  strfv(c0, c1, cbs, c2, < 1, 6 >)\n  lmodstr(c2, c0, c3, c4, c5)\n  baseid()\n  sstri({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > }, c2, ({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 > }))\n  ssun1({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > }, { <(× ` ndx), c5 > })\n}","parent":["strfv","lmodstr","baseid","sstri","snsstp1","sseqtr4i","ssun1"],"children":["cnlmodlem1","ldualvbase","dvavbase","dvaabl","dvhvbase","lmod1"]},{"name":"lmodplusg","content":"The additive operation of a constructed left vector space. (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm lmodplusg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), csn(cop(cfv(cvsca, cnx), c5))))\n} = {\n  strfv(c0, c1, cplusg, c2, cop(nat1, nat6))\n  lmodstr(c2, c3, c0, c4, c5)\n  plusgid()\n  sstri(csn(cop(cfv(cplusg, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)))\n  snsstp2(cop(cfv(cplusg, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(csca, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), csn(cop(cfv(cvsca, cnx), c5))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), csn(cop(cfv(cvsca, cnx), c5)))\n}","pretty":"thm lmodplusg(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 > })\n} = {\n  strfv(c0, c1, cplusg, c2, < 1, 6 >)\n  lmodstr(c2, c3, c0, c4, c5)\n  plusgid()\n  sstri({ <(+ ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > })\n  snsstp2(<(+ ` ndx), c0 >, <(Base ` ndx), c3 >, <(Scalar ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > }, { <(× ` ndx), c5 > })\n}","parent":["strfv","lmodstr","plusgid","sstri","snsstp2","sseqtr4i","ssun1"],"children":["cnlmodlem2","ldualfvadd","dvafvadd","dvaabl","dvhfvadd","lmod1lem2","lmod1lem3","lmod1"]},{"name":"lmodsca","content":"The set of scalars of a constructed left vector space. (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm lmodsca(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(csca, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), csn(cop(cfv(cvsca, cnx), c5))))\n} = {\n  strfv(c0, c1, csca, c2, cop(nat1, nat6))\n  lmodstr(c2, c3, c4, c0, c5)\n  scaid()\n  sstri(csn(cop(cfv(csca, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)))\n  snsstp3(cop(cfv(csca, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), csn(cop(cfv(cvsca, cnx), c5))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), csn(cop(cfv(cvsca, cnx), c5)))\n}","pretty":"thm lmodsca(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(Scalar ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > } ⋃ { <(× ` ndx), c5 > })\n} = {\n  strfv(c0, c1, csca, c2, < 1, 6 >)\n  lmodstr(c2, c3, c4, c0, c5)\n  scaid()\n  sstri({ <(Scalar ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > })\n  snsstp3(<(Scalar ` ndx), c0 >, <(Base ` ndx), c3 >, <(+ ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > } ⋃ { <(× ` ndx), c5 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > }, { <(× ` ndx), c5 > })\n}","parent":["strfv","lmodstr","scaid","sstri","snsstp3","sseqtr4i","ssun1"],"children":["cnlmodlem3","cnstrcvs","ldualsca","dvasca","dvhsca","lmod1lem3","lmod1lem4","lmod1lem5","lmod1","lmod1zrnlvec"]},{"name":"lmodvsca","content":"The scalar product operation of a constructed left vector space. (Contributed by Mario Carneiro, 2-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm lmodvsca(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cvsca, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)), csn(cop(cfv(cvsca, cnx), c0))))\n} = {\n  strfv(c0, c1, cvsca, c2, cop(nat1, nat6))\n  lmodstr(c2, c3, c4, c5, c0)\n  vscaid()\n  sseqtr4i(csn(cop(cfv(cvsca, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)), csn(cop(cfv(cvsca, cnx), c0))))\n  ssun2(csn(cop(cfv(cvsca, cnx), c0)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)))\n}","pretty":"thm lmodvsca(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ (c0 ∈ c1 → c0 =(× ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > } ⋃ { <(× ` ndx), c0 > })\n} = {\n  strfv(c0, c1, cvsca, c2, < 1, 6 >)\n  lmodstr(c2, c3, c4, c5, c0)\n  vscaid()\n  sseqtr4i({ <(× ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > } ⋃ { <(× ` ndx), c0 > }))\n  ssun2({ <(× ` ndx), c0 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > })\n}","parent":["strfv","lmodstr","vscaid","sseqtr4i","ssun2"],"children":["cnlmod4","ldualfvs","dvafvsca","dvhfvsca","lmod1lem1","lmod1lem2","lmod1lem3","lmod1lem4","lmod1lem5"]},{"name":"ipndx","content":"Index value of the ~ df-ip slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm ipndx() {\n  |- wceq(cfv(cip, cnx), nat8)\n} = {\n  ndxarg(cip, nat8)\n  df-ip()\n  8nn()\n}","pretty":"thm ipndx() {\n  ⊢ (· ` ndx)= 8\n} = {\n  ndxarg(cip, nat8)\n  df-ip()\n  8nn()\n}","parent":["ndxarg","df-ip","8nn"],"children":["ipsstr","phlstr","sralem","srasca","sravsca","cchhllem"]},{"name":"ipid","content":"Utility theorem: index-independent form of ~ df-ip . (Contributed by Mario Carneiro, 6-Oct-2013.)","origin":"thm ipid() {\n  |- wceq(cip, cslot(cfv(cip, cnx)))\n} = {\n  ndxid(cip, nat8)\n  df-ip()\n  8nn()\n}","pretty":"thm ipid() {\n  ⊢ · = Slot((· ` ndx))\n} = {\n  ndxid(cip, nat8)\n  df-ip()\n  8nn()\n}","parent":["ndxid","df-ip","8nn"],"children":["ipsip","phlip","prdsip","imasip","sraip"]},{"name":"ipsstr","content":"Lemma to shorten proofs of ~ ipsbase through ~ ipsvsca . (Contributed by Stefan O'Rear, 27-Nov-2014.) (Revised by Mario Carneiro, 29-Aug-2015.) (Revised by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ipsstr(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wbr(c0, cstr, cop(nat1, nat8))\n  -| wceq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), ctp(cop(cfv(csca, cnx), c4), cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, nat8), cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), ctp(cop(cfv(csca, cnx), c4), cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n  strleun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), ctp(cop(cfv(csca, cnx), c4), cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6)), nat1, nat8, nat3, nat5)\n  rngstr(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), c1, c2, c3)\n  eqid(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)))\n  strle3(cfv(csca, cnx), c4, cfv(cvsca, cnx), c5, cfv(cip, cnx), c6, nat5, nat8, nat6)\n  5nn()\n  scandx()\n  5lt6()\n  6nn()\n  vscandx()\n  6lt8()\n  8nn()\n  ipndx()\n  3lt5()\n}","pretty":"thm ipsstr(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ c0[Struct]< 1, 8 >\n  ⊣ c0 =({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > } ⋃ { <(Scalar ` ndx), c4 >, <(× ` ndx), c5 >, <(· ` ndx), c6 > })\n} = {\n  eqbrtri(c0, cstr, < 1, 8 >, ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > } ⋃ { <(Scalar ` ndx), c4 >, <(× ` ndx), c5 >, <(· ` ndx), c6 > }))\n  strleun({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > }, { <(Scalar ` ndx), c4 >, <(× ` ndx), c5 >, <(· ` ndx), c6 > }, nat1, nat8, nat3, nat5)\n  rngstr({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > }, c1, c2, c3)\n  eqid({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > })\n  strle3((Scalar ` ndx), c4, (× ` ndx), c5, (· ` ndx), c6, nat5, nat8, nat6)\n  5nn()\n  scandx()\n  5lt6()\n  6nn()\n  vscandx()\n  6lt8()\n  8nn()\n  ipndx()\n  3lt5()\n}","parent":["eqbrtri","strleun","rngstr","eqid","strle3","5nn","scandx","5lt6","6nn","vscandx","6lt8","8nn","ipndx","3lt5"],"children":["ipsbase","ipsaddg","ipsmulr","ipssca","ipsvsca","ipsip","imasvalstr"]},{"name":"ipsbase","content":"The base set of a constructed inner product space. (Contributed by Stefan O'Rear, 27-Nov-2014.) (Revised by Mario Carneiro, 29-Aug-2015.) (Revised by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ipsbase(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, nat8))\n  ipsstr(c2, c0, c3, c4, c5, c6, c7)\n  baseid()\n  sstri(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7)))\n}","pretty":"thm ipsbase(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > } ⋃ { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cbs, c2, < 1, 8 >)\n  ipsstr(c2, c0, c3, c4, c5, c6, c7)\n  baseid()\n  sstri({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > }, c2, ({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > } ⋃ { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > }))\n  ssun1({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > }, { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n}","parent":["strfv","ipsstr","baseid","sstri","snsstp1","sseqtr4i","ssun1"],"children":[]},{"name":"ipsaddg","content":"The additive operation of a constructed inner product space. (Contributed by Stefan O'Rear, 27-Nov-2014.) (Revised by Mario Carneiro, 29-Aug-2015.) (Revised by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ipsaddg(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n} = {\n  strfv(c0, c1, cplusg, c2, cop(nat1, nat8))\n  ipsstr(c2, c3, c0, c4, c5, c6, c7)\n  plusgid()\n  sstri(csn(cop(cfv(cplusg, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)))\n  snsstp2(cop(cfv(cplusg, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cmulr, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7)))\n}","pretty":"thm ipsaddg(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > } ⋃ { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cplusg, c2, < 1, 8 >)\n  ipsstr(c2, c3, c0, c4, c5, c6, c7)\n  plusgid()\n  sstri({ <(+ ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > })\n  snsstp2(<(+ ` ndx), c0 >, <(Base ` ndx), c3 >, <(× ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > } ⋃ { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > }, { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n}","parent":["strfv","ipsstr","plusgid","sstri","snsstp2","sseqtr4i","ssun1"],"children":[]},{"name":"ipsmulr","content":"The multiplicative operation of a constructed inner product space. (Contributed by Stefan O'Rear, 27-Nov-2014.) (Revised by Mario Carneiro, 29-Aug-2015.) (Revised by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ipsmulr(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cmulr, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n} = {\n  strfv(c0, c1, cmulr, c2, cop(nat1, nat8))\n  ipsstr(c2, c3, c4, c0, c5, c6, c7)\n  mulrid()\n  sstri(csn(cop(cfv(cmulr, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)))\n  snsstp3(cop(cfv(cmulr, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), ctp(cop(cfv(csca, cnx), c5), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7)))\n}","pretty":"thm ipsmulr(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(× ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > } ⋃ { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cmulr, c2, < 1, 8 >)\n  ipsstr(c2, c3, c4, c0, c5, c6, c7)\n  mulrid()\n  sstri({ <(× ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > })\n  snsstp3(<(× ` ndx), c0 >, <(Base ` ndx), c3 >, <(+ ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > } ⋃ { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > }, { <(Scalar ` ndx), c5 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n}","parent":["strfv","ipsstr","mulrid","sstri","snsstp3","sseqtr4i","ssun1"],"children":[]},{"name":"ipssca","content":"The set of scalars of a constructed inner product space. (Contributed by Stefan O'Rear, 27-Nov-2014.) (Revised by Mario Carneiro, 29-Aug-2015.) (Revised by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ipssca(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(csca, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(csca, cnx), c0), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n} = {\n  strfv(c0, c1, csca, c2, cop(nat1, nat8))\n  ipsstr(c2, c3, c4, c5, c0, c6, c7)\n  scaid()\n  sstri(csn(cop(cfv(csca, cnx), c0)), c2, ctp(cop(cfv(csca, cnx), c0), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7)))\n  snsstp1(cop(cfv(csca, cnx), c0), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))\n  sseqtr4i(ctp(cop(cfv(csca, cnx), c0), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(csca, cnx), c0), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7))))\n  ssun2(ctp(cop(cfv(csca, cnx), c0), cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c7)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)))\n}","pretty":"thm ipssca(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(Scalar ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(Scalar ` ndx), c0 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n} = {\n  strfv(c0, c1, csca, c2, < 1, 8 >)\n  ipsstr(c2, c3, c4, c5, c0, c6, c7)\n  scaid()\n  sstri({ <(Scalar ` ndx), c0 > }, c2, { <(Scalar ` ndx), c0 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > })\n  snsstp1(<(Scalar ` ndx), c0 >, <(× ` ndx), c6 >, <(· ` ndx), c7 >)\n  sseqtr4i({ <(Scalar ` ndx), c0 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(Scalar ` ndx), c0 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > }))\n  ssun2({ <(Scalar ` ndx), c0 >, <(× ` ndx), c6 >, <(· ` ndx), c7 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > })\n}","parent":["strfv","ipsstr","scaid","sstri","snsstp1","sseqtr4i","ssun2"],"children":[]},{"name":"ipsvsca","content":"The scalar product operation of a constructed inner product space. (Contributed by Stefan O'Rear, 27-Nov-2014.) (Revised by Mario Carneiro, 29-Aug-2015.) (Revised by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ipsvsca(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cvsca, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c7))))\n} = {\n  strfv(c0, c1, cvsca, c2, cop(nat1, nat8))\n  ipsstr(c2, c3, c4, c5, c6, c0, c7)\n  vscaid()\n  sstri(csn(cop(cfv(cvsca, cnx), c0)), c2, ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c7)))\n  snsstp2(cop(cfv(cvsca, cnx), c0), cop(cfv(csca, cnx), c6), cop(cfv(cip, cnx), c7))\n  sseqtr4i(ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c7)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c7))))\n  ssun2(ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c7)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)))\n}","pretty":"thm ipsvsca(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(× ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(Scalar ` ndx), c6 >, <(× ` ndx), c0 >, <(· ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cvsca, c2, < 1, 8 >)\n  ipsstr(c2, c3, c4, c5, c6, c0, c7)\n  vscaid()\n  sstri({ <(× ` ndx), c0 > }, c2, { <(Scalar ` ndx), c6 >, <(× ` ndx), c0 >, <(· ` ndx), c7 > })\n  snsstp2(<(× ` ndx), c0 >, <(Scalar ` ndx), c6 >, <(· ` ndx), c7 >)\n  sseqtr4i({ <(Scalar ` ndx), c6 >, <(× ` ndx), c0 >, <(· ` ndx), c7 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(Scalar ` ndx), c6 >, <(× ` ndx), c0 >, <(· ` ndx), c7 > }))\n  ssun2({ <(Scalar ` ndx), c6 >, <(× ` ndx), c0 >, <(· ` ndx), c7 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > })\n}","parent":["strfv","ipsstr","vscaid","sstri","snsstp2","sseqtr4i","ssun2"],"children":[]},{"name":"ipsip","content":"The multiplicative operation of a constructed inner product space. (Contributed by Stefan O'Rear, 27-Nov-2014.) (Revised by Mario Carneiro, 29-Aug-2015.) (Revised by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ipsip(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cip, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c7), cop(cfv(cip, cnx), c0))))\n} = {\n  strfv(c0, c1, cip, c2, cop(nat1, nat8))\n  ipsstr(c2, c3, c4, c5, c6, c7, c0)\n  ipid()\n  sstri(csn(cop(cfv(cip, cnx), c0)), c2, ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c7), cop(cfv(cip, cnx), c0)))\n  snsstp3(cop(cfv(cip, cnx), c0), cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c7))\n  sseqtr4i(ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c7), cop(cfv(cip, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c7), cop(cfv(cip, cnx), c0))))\n  ssun2(ctp(cop(cfv(csca, cnx), c6), cop(cfv(cvsca, cnx), c7), cop(cfv(cip, cnx), c0)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)))\n}","pretty":"thm ipsip(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(· ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(Scalar ` ndx), c6 >, <(× ` ndx), c7 >, <(· ` ndx), c0 > })\n} = {\n  strfv(c0, c1, cip, c2, < 1, 8 >)\n  ipsstr(c2, c3, c4, c5, c6, c7, c0)\n  ipid()\n  sstri({ <(· ` ndx), c0 > }, c2, { <(Scalar ` ndx), c6 >, <(× ` ndx), c7 >, <(· ` ndx), c0 > })\n  snsstp3(<(· ` ndx), c0 >, <(Scalar ` ndx), c6 >, <(× ` ndx), c7 >)\n  sseqtr4i({ <(Scalar ` ndx), c6 >, <(× ` ndx), c7 >, <(· ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(Scalar ` ndx), c6 >, <(× ` ndx), c7 >, <(· ` ndx), c0 > }))\n  ssun2({ <(Scalar ` ndx), c6 >, <(× ` ndx), c7 >, <(· ` ndx), c0 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > })\n}","parent":["strfv","ipsstr","ipid","sstri","snsstp3","sseqtr4i","ssun2"],"children":[]},{"name":"resssca","content":"` Scalar ` is unaffected by restriction. (Contributed by Mario Carneiro, 7-Dec-2014.)","origin":"thm resssca(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(csca, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(csca, c4))\n} = {\n  resslem(c0, c1, c2, csca, c3, c4, nat5)\n  df-sca()\n  5nn()\n  1lt5()\n}","pretty":"thm resssca(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(Scalar ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(Scalar ` c4)\n} = {\n  resslem(c0, c1, c2, csca, c3, c4, nat5)\n  df-sca()\n  5nn()\n  1lt5()\n}","parent":["resslem","df-sca","5nn","1lt5"],"children":["islss3","reslmhm","reslmhm2","reslmhm2b","pj1lmhm","lsslvec","issubassa","ressascl","mplsca","ply1sca","phlssphl","frlmsca","lsslindf","scmatghm","lssnlm","lssnvc","cphsscph","lssbn","cmslssbn","csschl","rrxsca","xrge0slmod","fedgmullem2","sitmcl","repwsmet","rrnequiv","lcdsca"]},{"name":"ressvsca","content":"` .s ` is unaffected by restriction. (Contributed by Mario Carneiro, 7-Dec-2014.)","origin":"thm ressvsca(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cvsca, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cvsca, c4))\n} = {\n  resslem(c0, c1, c2, cvsca, c3, c4, nat6)\n  df-vsca()\n  6nn()\n  1lt6()\n}","pretty":"thm ressvsca(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(× ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(× ` c4)\n} = {\n  resslem(c0, c1, c2, cvsca, c3, c4, nat6)\n  df-vsca()\n  6nn()\n  1lt6()\n}","parent":["resslem","df-vsca","6nn","1lt6"],"children":["islss3","reslmhm","reslmhm2","reslmhm2b","pj1lmhm","issubassa","ressascl","resspsrvsca","mplvsca2","ressmplvsca","ply1vsca","ressply1vsca","phlssphl","frlmvscafval","lsslindf","scmatghm","lssnlm","xrge0slmod","fedgmullem2","sitmcl","lcdvs"]},{"name":"ressip","content":"The inner product is unaffected by restriction. (Contributed by Thierry Arnoux, 16-Jun-2019.)","origin":"thm ressip(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cip, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cip, c4))\n} = {\n  resslem(c0, c1, c2, cip, c3, c4, nat8)\n  df-ip()\n  8nn()\n  1lt8()\n}","pretty":"thm ressip(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(· ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(· ` c4)\n} = {\n  resslem(c0, c1, c2, cip, c3, c4, nat8)\n  df-ip()\n  8nn()\n  1lt8()\n}","parent":["resslem","df-ip","8nn","1lt8"],"children":["ssipeq","frlmip","cphsscph","rrxip"]},{"name":"phlstr","content":"A constructed pre-Hilbert space is a structure. Starting from ~ lmodstr (which has 4 members), we chain ~ strleun once more, adding an ordered pair to the function, to get all 5 members. (Contributed by Mario Carneiro, 1-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm phlstr(class c0, class c1, class c2, class c3, class c4, class c5) {\n  |- wbr(c0, cstr, cop(nat1, nat8))\n  -| wceq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), cpr(cop(cfv(cvsca, cnx), c4), cop(cfv(cip, cnx), c5))))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, nat8), cun(cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))), csn(cop(cfv(cip, cnx), c5))))\n  3eqtr4i(c0, cun(cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))), csn(cop(cfv(cip, cnx), c5))), cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), cpr(cop(cfv(cvsca, cnx), c4), cop(cfv(cip, cnx), c5))), cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), cun(csn(cop(cfv(cvsca, cnx), c4)), csn(cop(cfv(cip, cnx), c5)))))\n  uneq2i(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), cpr(cop(cfv(cvsca, cnx), c4), cop(cfv(cip, cnx), c5)), cun(csn(cop(cfv(cvsca, cnx), c4)), csn(cop(cfv(cip, cnx), c5))))\n  df-pr(cop(cfv(cvsca, cnx), c4), cop(cfv(cip, cnx), c5))\n  unass(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4)), csn(cop(cfv(cip, cnx), c5)))\n  strleun(cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))), csn(cop(cfv(cip, cnx), c5)), nat1, nat8, nat6, nat8)\n  lmodstr(cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))), c1, c2, c3, c4)\n  eqid(cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(csca, cnx), c3)), csn(cop(cfv(cvsca, cnx), c4))))\n  strle1(cfv(cip, cnx), c5, nat8)\n  8nn()\n  ipndx()\n  6lt8()\n}","pretty":"thm phlstr(class c0, class c1, class c2, class c3, class c4, class c5) {\n  ⊢ c0[Struct]< 1, 8 >\n  ⊣ c0 =({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 >, <(· ` ndx), c5 > })\n} = {\n  eqbrtri(c0, cstr, < 1, 8 >, (({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 > })⋃ { <(· ` ndx), c5 > }))\n  3eqtr4i(c0, (({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 > })⋃ { <(· ` ndx), c5 > }), ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 >, <(· ` ndx), c5 > }), ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃({ <(× ` ndx), c4 > } ⋃ { <(· ` ndx), c5 > })))\n  uneq2i({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > }, { <(× ` ndx), c4 >, <(· ` ndx), c5 > }, ({ <(× ` ndx), c4 > } ⋃ { <(· ` ndx), c5 > }))\n  df-pr(<(× ` ndx), c4 >, <(· ` ndx), c5 >)\n  unass({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > }, { <(× ` ndx), c4 > }, { <(· ` ndx), c5 > })\n  strleun(({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 > }), { <(· ` ndx), c5 > }, nat1, nat8, nat6, nat8)\n  lmodstr(({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 > }), c1, c2, c3, c4)\n  eqid(({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(Scalar ` ndx), c3 > } ⋃ { <(× ` ndx), c4 > }))\n  strle1((· ` ndx), c5, nat8)\n  8nn()\n  ipndx()\n  6lt8()\n}","parent":["eqbrtri","3eqtr4i","uneq2i","df-pr","unass","strleun","lmodstr","eqid","strle1","8nn","ipndx","6lt8"],"children":["phlbase","phlplusg","phlsca","phlvsca","phlip"]},{"name":"phlbase","content":"The base set of a constructed pre-Hilbert space. (Contributed by Mario Carneiro, 6-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm phlbase(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, nat8))\n  phlstr(c2, c0, c3, c4, c5, c6)\n  baseid()\n  sstri(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(csca, cnx), c4)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6)))\n}","pretty":"thm phlbase(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 >, <(· ` ndx), c6 > })\n} = {\n  strfv(c0, c1, cbs, c2, < 1, 8 >)\n  phlstr(c2, c0, c3, c4, c5, c6)\n  baseid()\n  sstri({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > }, c2, ({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 >, <(· ` ndx), c6 > }))\n  ssun1({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(Scalar ` ndx), c4 > }, { <(× ` ndx), c5 >, <(· ` ndx), c6 > })\n}","parent":["strfv","phlstr","baseid","sstri","snsstp1","sseqtr4i","ssun1"],"children":["hlhilbase"]},{"name":"phlplusg","content":"The additive operation of a constructed pre-Hilbert space. (Contributed by Mario Carneiro, 6-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm phlplusg(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n} = {\n  strfv(c0, c1, cplusg, c2, cop(nat1, nat8))\n  phlstr(c2, c3, c0, c4, c5, c6)\n  plusgid()\n  sstri(csn(cop(cfv(cplusg, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)))\n  snsstp2(cop(cfv(cplusg, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(csca, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(csca, cnx), c4)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6)))\n}","pretty":"thm phlplusg(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 >, <(· ` ndx), c6 > })\n} = {\n  strfv(c0, c1, cplusg, c2, < 1, 8 >)\n  phlstr(c2, c3, c0, c4, c5, c6)\n  plusgid()\n  sstri({ <(+ ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > })\n  snsstp2(<(+ ` ndx), c0 >, <(Base ` ndx), c3 >, <(Scalar ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > } ⋃ { <(× ` ndx), c5 >, <(· ` ndx), c6 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(Scalar ` ndx), c4 > }, { <(× ` ndx), c5 >, <(· ` ndx), c6 > })\n}","parent":["strfv","phlstr","plusgid","sstri","snsstp2","sseqtr4i","ssun1"],"children":["hlhilplus"]},{"name":"phlsca","content":"The ring of scalars of a constructed pre-Hilbert space. (Contributed by Mario Carneiro, 6-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm phlsca(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(csca, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n} = {\n  strfv(c0, c1, csca, c2, cop(nat1, nat8))\n  phlstr(c2, c3, c4, c0, c5, c6)\n  scaid()\n  sstri(csn(cop(cfv(csca, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)))\n  snsstp3(cop(cfv(csca, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c0)), cpr(cop(cfv(cvsca, cnx), c5), cop(cfv(cip, cnx), c6)))\n}","pretty":"thm phlsca(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ (c0 ∈ c1 → c0 =(Scalar ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > } ⋃ { <(× ` ndx), c5 >, <(· ` ndx), c6 > })\n} = {\n  strfv(c0, c1, csca, c2, < 1, 8 >)\n  phlstr(c2, c3, c4, c0, c5, c6)\n  scaid()\n  sstri({ <(Scalar ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > })\n  snsstp3(<(Scalar ` ndx), c0 >, <(Base ` ndx), c3 >, <(+ ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > } ⋃ { <(× ` ndx), c5 >, <(· ` ndx), c6 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c0 > }, { <(× ` ndx), c5 >, <(· ` ndx), c6 > })\n}","parent":["strfv","phlstr","scaid","sstri","snsstp3","sseqtr4i","ssun1"],"children":["hlhilsca"]},{"name":"phlvsca","content":"The scalar product operation of a constructed pre-Hilbert space. (Contributed by Mario Carneiro, 6-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm phlvsca(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cvsca, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)), cpr(cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c6))))\n} = {\n  strfv(c0, c1, cvsca, c2, cop(nat1, nat8))\n  phlstr(c2, c3, c4, c5, c0, c6)\n  vscaid()\n  sstri(csn(cop(cfv(cvsca, cnx), c0)), c2, cpr(cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c6)))\n  snsspr1(cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c6))\n  sseqtr4i(cpr(cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c6)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)), cpr(cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c6))))\n  ssun2(cpr(cop(cfv(cvsca, cnx), c0), cop(cfv(cip, cnx), c6)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)))\n}","pretty":"thm phlvsca(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ (c0 ∈ c1 → c0 =(× ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > } ⋃ { <(× ` ndx), c0 >, <(· ` ndx), c6 > })\n} = {\n  strfv(c0, c1, cvsca, c2, < 1, 8 >)\n  phlstr(c2, c3, c4, c5, c0, c6)\n  vscaid()\n  sstri({ <(× ` ndx), c0 > }, c2, { <(× ` ndx), c0 >, <(· ` ndx), c6 > })\n  snsspr1(<(× ` ndx), c0 >, <(· ` ndx), c6 >)\n  sseqtr4i({ <(× ` ndx), c0 >, <(· ` ndx), c6 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > } ⋃ { <(× ` ndx), c0 >, <(· ` ndx), c6 > }))\n  ssun2({ <(× ` ndx), c0 >, <(· ` ndx), c6 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > })\n}","parent":["strfv","phlstr","vscaid","sstri","snsspr1","sseqtr4i","ssun2"],"children":["hlhilvsca"]},{"name":"phlip","content":"The inner product (Hermitian form) operation of a constructed pre-Hilbert space. (Contributed by Mario Carneiro, 6-Oct-2013.) (Revised by Mario Carneiro, 29-Aug-2015.)","origin":"thm phlip(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cip, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)), cpr(cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c0))))\n} = {\n  strfv(c0, c1, cip, c2, cop(nat1, nat8))\n  phlstr(c2, c3, c4, c5, c6, c0)\n  ipid()\n  sstri(csn(cop(cfv(cip, cnx), c0)), c2, cpr(cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c0)))\n  snsspr2(cop(cfv(cip, cnx), c0), cop(cfv(cvsca, cnx), c6))\n  sseqtr4i(cpr(cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)), cpr(cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c0))))\n  ssun2(cpr(cop(cfv(cvsca, cnx), c6), cop(cfv(cip, cnx), c0)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(csca, cnx), c5)))\n}","pretty":"thm phlip(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ (c0 ∈ c1 → c0 =(· ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > } ⋃ { <(× ` ndx), c6 >, <(· ` ndx), c0 > })\n} = {\n  strfv(c0, c1, cip, c2, < 1, 8 >)\n  phlstr(c2, c3, c4, c5, c6, c0)\n  ipid()\n  sstri({ <(· ` ndx), c0 > }, c2, { <(× ` ndx), c6 >, <(· ` ndx), c0 > })\n  snsspr2(<(· ` ndx), c0 >, <(× ` ndx), c6 >)\n  sseqtr4i({ <(× ` ndx), c6 >, <(· ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > } ⋃ { <(× ` ndx), c6 >, <(· ` ndx), c0 > }))\n  ssun2({ <(× ` ndx), c6 >, <(· ` ndx), c0 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(Scalar ` ndx), c5 > })\n}","parent":["strfv","phlstr","ipid","sstri","snsspr2","sseqtr4i","ssun2"],"children":["hlhilip"]},{"name":"tsetndx","content":"Index value of the ~ df-tset slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm tsetndx() {\n  |- wceq(cfv(cts, cnx), nat9)\n} = {\n  ndxarg(cts, nat9)\n  df-tset()\n  9nn()\n}","pretty":"thm tsetndx() {\n  ⊢ (TopSet ` ndx)= 9\n} = {\n  ndxarg(cts, nat9)\n  df-tset()\n  9nn()\n}","parent":["ndxarg","df-tset","9nn"],"children":["topgrpstr","otpsstr","odrngstr","imasvalstr","ipostr","psrvalstr","cnfldstr","cnfldfun","indistpsx","tuslem","setsmsbas","setsmsds","tnglem","tngds","zlmtset"]},{"name":"tsetid","content":"Utility theorem: index-independent form of ~ df-tset . (Contributed by NM, 20-Oct-2012.)","origin":"thm tsetid() {\n  |- wceq(cts, cslot(cfv(cts, cnx)))\n} = {\n  ndxid(cts, nat9)\n  df-tset()\n  9nn()\n}","pretty":"thm tsetid() {\n  ⊢ TopSet = Slot((TopSet ` ndx))\n} = {\n  ndxid(cts, nat9)\n  df-tset()\n  9nn()\n}","parent":["ndxid","df-tset","9nn"],"children":["topgrptset","otpstset","odrngtset","prdstset","imastset","ipotset","cnfldtset","tuslem","setsmstset","tngtset","zlmtset"]},{"name":"topgrpstr","content":"A constructed topological group is a structure. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm topgrpstr(class c0, class c1, class c2, class c3) {\n  |- wbr(c0, cstr, cop(nat1, nat9))\n  -| wceq(c0, ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cts, cnx), c3)))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, nat9), ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cts, cnx), c3)))\n  strle3(cfv(cbs, cnx), c1, cfv(cplusg, cnx), c2, cfv(cts, cnx), c3, nat1, nat9, nat2)\n  1nn()\n  basendx()\n  1lt2()\n  2nn()\n  plusgndx()\n  2lt9()\n  9nn()\n  tsetndx()\n}","pretty":"thm topgrpstr(class c0, class c1, class c2, class c3) {\n  ⊢ c0[Struct]< 1, 9 >\n  ⊣ c0 = { <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(TopSet ` ndx), c3 > }\n} = {\n  eqbrtri(c0, cstr, < 1, 9 >, { <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(TopSet ` ndx), c3 > })\n  strle3((Base ` ndx), c1, (+ ` ndx), c2, (TopSet ` ndx), c3, nat1, nat9, nat2)\n  1nn()\n  basendx()\n  1lt2()\n  2nn()\n  plusgndx()\n  2lt9()\n  9nn()\n  tsetndx()\n}","parent":["eqbrtri","strle3","1nn","basendx","1lt2","2nn","plusgndx","2lt9","9nn","tsetndx"],"children":["topgrpbas","topgrpplusg","topgrptset"]},{"name":"topgrpbas","content":"The base set of a constructed topological group. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm topgrpbas(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cts, cnx), c4)))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, nat9))\n  topgrpstr(c2, c0, c3, c4)\n  baseid()\n  sseqtr4i(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cts, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cts, cnx), c4))\n}","pretty":"thm topgrpbas(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 = { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(TopSet ` ndx), c4 > }\n} = {\n  strfv(c0, c1, cbs, c2, < 1, 9 >)\n  topgrpstr(c2, c0, c3, c4)\n  baseid()\n  sseqtr4i({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(TopSet ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(TopSet ` ndx), c4 >)\n}","parent":["strfv","topgrpstr","baseid","sseqtr4i","snsstp1"],"children":["symgbas","om1bas"]},{"name":"topgrpplusg","content":"The additive operation of a constructed topological group. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm topgrpplusg(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cts, cnx), c4)))\n} = {\n  strfv(c0, c1, cplusg, c2, cop(nat1, nat9))\n  topgrpstr(c2, c3, c0, c4)\n  plusgid()\n  sseqtr4i(csn(cop(cfv(cplusg, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cts, cnx), c4)))\n  snsstp2(cop(cfv(cplusg, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cts, cnx), c4))\n}","pretty":"thm topgrpplusg(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 = { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(TopSet ` ndx), c4 > }\n} = {\n  strfv(c0, c1, cplusg, c2, < 1, 9 >)\n  topgrpstr(c2, c3, c0, c4)\n  plusgid()\n  sseqtr4i({ <(+ ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(TopSet ` ndx), c4 > })\n  snsstp2(<(+ ` ndx), c0 >, <(Base ` ndx), c3 >, <(TopSet ` ndx), c4 >)\n}","parent":["strfv","topgrpstr","plusgid","sseqtr4i","snsstp2"],"children":["symgplusg","om1plusg"]},{"name":"topgrptset","content":"The topology of a constructed topological group. (Contributed by Mario Carneiro, 29-Aug-2015.)","origin":"thm topgrptset(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cts, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cts, cnx), c0)))\n} = {\n  strfv(c0, c1, cts, c2, cop(nat1, nat9))\n  topgrpstr(c2, c3, c4, c0)\n  tsetid()\n  sseqtr4i(csn(cop(cfv(cts, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cts, cnx), c0)))\n  snsstp3(cop(cfv(cts, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4))\n}","pretty":"thm topgrptset(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(TopSet ` c2))\n  ⊣ c2 = { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(TopSet ` ndx), c0 > }\n} = {\n  strfv(c0, c1, cts, c2, < 1, 9 >)\n  topgrpstr(c2, c3, c4, c0)\n  tsetid()\n  sseqtr4i({ <(TopSet ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(TopSet ` ndx), c0 > })\n  snsstp3(<(TopSet ` ndx), c0 >, <(Base ` ndx), c3 >, <(+ ` ndx), c4 >)\n}","parent":["strfv","topgrpstr","tsetid","sseqtr4i","snsstp3"],"children":["symgtset","om1tset"]},{"name":"resstset","content":"` TopSet ` is unaffected by restriction. (Contributed by Mario Carneiro, 13-Aug-2015.)","origin":"thm resstset(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cts, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cts, c4))\n} = {\n  resslem(c0, c1, c2, cts, c3, c4, nat9)\n  df-tset()\n  9nn()\n  1lt9()\n}","pretty":"thm resstset(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(TopSet ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(TopSet ` c4)\n} = {\n  resslem(c0, c1, c2, cts, c3, c4, nat9)\n  df-tset()\n  9nn()\n  1lt9()\n}","parent":["resslem","df-tset","9nn","1lt9"],"children":["resstopn","xrge0tsms","xrge0tsmsd","xrge0tmdOLD"]},{"name":"plendx","content":"Index value of the ~ df-ple slot. (Contributed by Mario Carneiro, 14-Aug-2015.) (Revised by AV, 9-Sep-2021.)","origin":"thm plendx() {\n  |- wceq(cfv(cple, cnx), cdc(nat1, nat0))\n} = {\n  ndxarg(cple, cdc(nat1, nat0))\n  df-ple()\n  10nn()\n}","pretty":"thm plendx() {\n  ⊢ (le ` ndx)= cdc(1, 0)\n} = {\n  ndxarg(cple, cdc(1, 0))\n  df-ple()\n  10nn()\n}","parent":["ndxarg","df-ple","10nn"],"children":["otpsstr","odrngstr","imasvalstr","odubas","ipostr","opsrbaslem","cnfldstr","cnfldfun","znbaslem","thlle"]},{"name":"pleid","content":"Utility theorem: self-referencing, index-independent form of ~ df-ple . (Contributed by NM, 9-Nov-2012.) (Revised by AV, 9-Sep-2021.)","origin":"thm pleid() {\n  |- wceq(cple, cslot(cfv(cple, cnx)))\n} = {\n  ndxid(cple, cdc(nat1, nat0))\n  df-ple()\n  10nn()\n}","pretty":"thm pleid() {\n  ⊢ le = Slot((le ` ndx))\n} = {\n  ndxid(cple, cdc(1, 0))\n  df-ple()\n  10nn()\n}","parent":["ndxid","df-ple","10nn"],"children":["otpsle","odrngle","prdsle","imasle","oduleval","ipolerval","opsrle","cnfldle","znle","thlle"]},{"name":"otpsstr","content":"Functionality of a topological ordered space. (Contributed by Mario Carneiro, 12-Nov-2015.) (Revised by AV, 9-Sep-2021.)","origin":"thm otpsstr(class c0, class c1, class c2, class c3) {\n  |- wbr(c0, cstr, cop(nat1, cdc(nat1, nat0)))\n  -| wceq(c0, ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cts, cnx), c2), cop(cfv(cple, cnx), c3)))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, cdc(nat1, nat0)), ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cts, cnx), c2), cop(cfv(cple, cnx), c3)))\n  strle3(cfv(cbs, cnx), c1, cfv(cts, cnx), c2, cfv(cple, cnx), c3, nat1, cdc(nat1, nat0), nat9)\n  1nn()\n  basendx()\n  1lt9()\n  9nn()\n  tsetndx()\n  9lt10()\n  10nn()\n  plendx()\n}","pretty":"thm otpsstr(class c0, class c1, class c2, class c3) {\n  ⊢ c0[Struct]< 1, cdc(1, 0)>\n  ⊣ c0 = { <(Base ` ndx), c1 >, <(TopSet ` ndx), c2 >, <(le ` ndx), c3 > }\n} = {\n  eqbrtri(c0, cstr, < 1, cdc(1, 0)>, { <(Base ` ndx), c1 >, <(TopSet ` ndx), c2 >, <(le ` ndx), c3 > })\n  strle3((Base ` ndx), c1, (TopSet ` ndx), c2, (le ` ndx), c3, nat1, cdc(1, 0), nat9)\n  1nn()\n  basendx()\n  1lt9()\n  9nn()\n  tsetndx()\n  9lt10()\n  10nn()\n  plendx()\n}","parent":["eqbrtri","strle3","1nn","basendx","1lt9","9nn","tsetndx","9lt10","10nn","plendx"],"children":["otpsbas","otpstset","otpsle"]},{"name":"otpsbas","content":"The base set of a topological ordered space. (Contributed by Mario Carneiro, 12-Nov-2015.) (Revised by AV, 9-Sep-2021.)","origin":"thm otpsbas(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cts, cnx), c3), cop(cfv(cple, cnx), c4)))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, cdc(nat1, nat0)))\n  otpsstr(c2, c0, c3, c4)\n  baseid()\n  sseqtr4i(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cts, cnx), c3), cop(cfv(cple, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cts, cnx), c3), cop(cfv(cple, cnx), c4))\n}","pretty":"thm otpsbas(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 = { <(Base ` ndx), c0 >, <(TopSet ` ndx), c3 >, <(le ` ndx), c4 > }\n} = {\n  strfv(c0, c1, cbs, c2, < 1, cdc(1, 0)>)\n  otpsstr(c2, c0, c3, c4)\n  baseid()\n  sseqtr4i({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(TopSet ` ndx), c3 >, <(le ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(TopSet ` ndx), c3 >, <(le ` ndx), c4 >)\n}","parent":["strfv","otpsstr","baseid","sseqtr4i","snsstp1"],"children":[]},{"name":"otpstset","content":"The open sets of a topological ordered space. (Contributed by Mario Carneiro, 12-Nov-2015.) (Revised by AV, 9-Sep-2021.)","origin":"thm otpstset(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cts, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c4)))\n} = {\n  strfv(c0, c1, cts, c2, cop(nat1, cdc(nat1, nat0)))\n  otpsstr(c2, c3, c0, c4)\n  tsetid()\n  sseqtr4i(csn(cop(cfv(cts, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c4)))\n  snsstp2(cop(cfv(cts, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cple, cnx), c4))\n}","pretty":"thm otpstset(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(TopSet ` c2))\n  ⊣ c2 = { <(Base ` ndx), c3 >, <(TopSet ` ndx), c0 >, <(le ` ndx), c4 > }\n} = {\n  strfv(c0, c1, cts, c2, < 1, cdc(1, 0)>)\n  otpsstr(c2, c3, c0, c4)\n  tsetid()\n  sseqtr4i({ <(TopSet ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(TopSet ` ndx), c0 >, <(le ` ndx), c4 > })\n  snsstp2(<(TopSet ` ndx), c0 >, <(Base ` ndx), c3 >, <(le ` ndx), c4 >)\n}","parent":["strfv","otpsstr","tsetid","sseqtr4i","snsstp2"],"children":[]},{"name":"otpsle","content":"The order of a topological ordered space. (Contributed by Mario Carneiro, 12-Nov-2015.) (Revised by AV, 9-Sep-2021.)","origin":"thm otpsle(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cple, c2)))\n  -| wceq(c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cts, cnx), c4), cop(cfv(cple, cnx), c0)))\n} = {\n  strfv(c0, c1, cple, c2, cop(nat1, cdc(nat1, nat0)))\n  otpsstr(c2, c3, c4, c0)\n  pleid()\n  sseqtr4i(csn(cop(cfv(cple, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cts, cnx), c4), cop(cfv(cple, cnx), c0)))\n  snsstp3(cop(cfv(cple, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cts, cnx), c4))\n}","pretty":"thm otpsle(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c0 =(le ` c2))\n  ⊣ c2 = { <(Base ` ndx), c3 >, <(TopSet ` ndx), c4 >, <(le ` ndx), c0 > }\n} = {\n  strfv(c0, c1, cple, c2, < 1, cdc(1, 0)>)\n  otpsstr(c2, c3, c4, c0)\n  pleid()\n  sseqtr4i({ <(le ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(TopSet ` ndx), c4 >, <(le ` ndx), c0 > })\n  snsstp3(<(le ` ndx), c0 >, <(Base ` ndx), c3 >, <(TopSet ` ndx), c4 >)\n}","parent":["strfv","otpsstr","pleid","sseqtr4i","snsstp3"],"children":[]},{"name":"ressle","content":"` le ` is unaffected by restriction. (Contributed by Mario Carneiro, 3-Nov-2015.)","origin":"thm ressle(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cple, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cple, c4))\n} = {\n  resslem(c0, c1, c2, cple, c3, c4, cdc(nat1, nat0))\n  df-ple()\n  10nn()\n  1lt10()\n}","pretty":"thm ressle(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(le ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(le ` c4)\n} = {\n  resslem(c0, c1, c2, cple, c3, c4, cdc(1, 0))\n  df-ple()\n  10nn()\n  1lt10()\n}","parent":["resslem","df-ple","10nn","1lt10"],"children":["rele2","ressprs","resspos","resstos","xrge0le","submomnd","submarchi","suborng","prsssdm","ordtrestNEW","ordtrest2NEW"]},{"name":"ocndx","content":"Index value of the ~ df-ocomp slot. (Contributed by Mario Carneiro, 25-Oct-2015.)","origin":"thm ocndx() {\n  |- wceq(cfv(coc, cnx), cdc(nat1, nat1))\n} = {\n  ndxarg(coc, cdc(nat1, nat1))\n  df-ocomp()\n  decnncl(nat1, nat1)\n  1nn0()\n  1nn()\n}","pretty":"thm ocndx() {\n  ⊢ (oc ` ndx)= cdc(1, 1)\n} = {\n  ndxarg(coc, cdc(1, 1))\n  df-ocomp()\n  decnncl(nat1, nat1)\n  1nn0()\n  1nn()\n}","parent":["ndxarg","df-ocomp","decnncl","1nn0","1nn"],"children":["ipostr","thlbas","thlle"]},{"name":"ocid","content":"Utility theorem: index-independent form of ~ df-ocomp . (Contributed by Mario Carneiro, 25-Oct-2015.)","origin":"thm ocid() {\n  |- wceq(coc, cslot(cfv(coc, cnx)))\n} = {\n  ndxid(coc, cdc(nat1, nat1))\n  df-ocomp()\n  decnncl(nat1, nat1)\n  1nn0()\n  1nn()\n}","pretty":"thm ocid() {\n  ⊢ oc = Slot((oc ` ndx))\n} = {\n  ndxid(coc, cdc(1, 1))\n  df-ocomp()\n  decnncl(nat1, nat1)\n  1nn0()\n  1nn()\n}","parent":["ndxid","df-ocomp","decnncl","1nn0","1nn"],"children":["thloc"]},{"name":"dsndx","content":"Index value of the ~ df-ds slot. (Contributed by Mario Carneiro, 14-Aug-2015.)","origin":"thm dsndx() {\n  |- wceq(cfv(cds, cnx), cdc(nat1, nat2))\n} = {\n  ndxarg(cds, cdc(nat1, nat2))\n  df-ds()\n  decnncl(nat1, nat2)\n  1nn0()\n  2nn()\n}","pretty":"thm dsndx() {\n  ⊢ (dist ` ndx)= cdc(1, 2)\n} = {\n  ndxarg(cds, cdc(1, 2))\n  df-ds()\n  decnncl(nat1, nat2)\n  1nn0()\n  2nn()\n}","parent":["ndxarg","df-ds","decnncl","1nn0","2nn"],"children":["odrngstr","imasvalstr","cnfldstr","cnfldfun","setsmsds","tnglem","tngds","trkgstr","eengstr","zlmds"]},{"name":"dsid","content":"Utility theorem: index-independent form of ~ df-ds . (Contributed by Mario Carneiro, 23-Dec-2013.)","origin":"thm dsid() {\n  |- wceq(cds, cslot(cfv(cds, cnx)))\n} = {\n  ndxid(cds, cdc(nat1, nat2))\n  df-ds()\n  decnncl(nat1, nat2)\n  1nn0()\n  2nn()\n}","pretty":"thm dsid() {\n  ⊢ dist = Slot((dist ` ndx))\n} = {\n  ndxid(cds, cdc(1, 2))\n  df-ds()\n  decnncl(nat1, nat2)\n  1nn0()\n  2nn()\n}","parent":["ndxid","df-ds","decnncl","1nn0","2nn"],"children":["odrngds","prdsds","imasds","cnfldds","setsmsds","tngds","trkgdist","ecgrtg","zlmds"]},{"name":"unifndx","content":"Index value of the ~ df-unif slot. (Contributed by Thierry Arnoux, 17-Dec-2017.)","origin":"thm unifndx() {\n  |- wceq(cfv(cunif, cnx), cdc(nat1, nat3))\n} = {\n  ndxarg(cunif, cdc(nat1, nat3))\n  df-unif()\n  decnncl(nat1, nat3)\n  1nn0()\n  3nn()\n}","pretty":"thm unifndx() {\n  ⊢ (UnifSet ` ndx)= cdc(1, 3)\n} = {\n  ndxarg(cunif, cdc(1, 3))\n  df-unif()\n  decnncl(nat1, nat3)\n  1nn0()\n  3nn()\n}","parent":["ndxarg","df-unif","decnncl","1nn0","3nn"],"children":["cnfldstr","cnfldfun","tuslem"]},{"name":"unifid","content":"Utility theorem: index-independent form of ~ df-unif . (Contributed by Thierry Arnoux, 17-Dec-2017.)","origin":"thm unifid() {\n  |- wceq(cunif, cslot(cfv(cunif, cnx)))\n} = {\n  ndxid(cunif, cdc(nat1, nat3))\n  df-unif()\n  decnncl(nat1, nat3)\n  1nn0()\n  3nn()\n}","pretty":"thm unifid() {\n  ⊢ UnifSet = Slot((UnifSet ` ndx))\n} = {\n  ndxid(cunif, cdc(1, 3))\n  df-unif()\n  decnncl(nat1, nat3)\n  1nn0()\n  3nn()\n}","parent":["ndxid","df-unif","decnncl","1nn0","3nn"],"children":["cnfldunif","tuslem"]},{"name":"odrngstr","content":"Functionality of an ordered metric ring. (Contributed by Mario Carneiro, 20-Aug-2015.) (Proof shortened by AV, 15-Sep-2021.)","origin":"thm odrngstr(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  |- wbr(c0, cstr, cop(nat1, cdc(nat1, nat2)))\n  -| wceq(c0, cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), ctp(cop(cfv(cts, cnx), c4), cop(cfv(cple, cnx), c5), cop(cfv(cds, cnx), c6))))\n} = {\n  eqbrtri(c0, cstr, cop(nat1, cdc(nat1, nat2)), cun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), ctp(cop(cfv(cts, cnx), c4), cop(cfv(cple, cnx), c5), cop(cfv(cds, cnx), c6))))\n  strleun(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), ctp(cop(cfv(cts, cnx), c4), cop(cfv(cple, cnx), c5), cop(cfv(cds, cnx), c6)), nat1, cdc(nat1, nat2), nat3, nat9)\n  rngstr(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)), c1, c2, c3)\n  eqid(ctp(cop(cfv(cbs, cnx), c1), cop(cfv(cplusg, cnx), c2), cop(cfv(cmulr, cnx), c3)))\n  strle3(cfv(cts, cnx), c4, cfv(cple, cnx), c5, cfv(cds, cnx), c6, nat9, cdc(nat1, nat2), cdc(nat1, nat0))\n  9nn()\n  tsetndx()\n  9lt10()\n  10nn()\n  plendx()\n  declt(nat1, nat0, nat2)\n  0nn0()\n  2pos()\n  decnncl(nat1, nat2)\n  1nn0()\n  2nn()\n  dsndx()\n  3lt9()\n}","pretty":"thm odrngstr(class c0, class c1, class c2, class c3, class c4, class c5, class c6) {\n  ⊢ c0[Struct]< 1, cdc(1, 2)>\n  ⊣ c0 =({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > } ⋃ { <(TopSet ` ndx), c4 >, <(le ` ndx), c5 >, <(dist ` ndx), c6 > })\n} = {\n  eqbrtri(c0, cstr, < 1, cdc(1, 2)>, ({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > } ⋃ { <(TopSet ` ndx), c4 >, <(le ` ndx), c5 >, <(dist ` ndx), c6 > }))\n  strleun({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > }, { <(TopSet ` ndx), c4 >, <(le ` ndx), c5 >, <(dist ` ndx), c6 > }, nat1, cdc(1, 2), nat3, nat9)\n  rngstr({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > }, c1, c2, c3)\n  eqid({ <(Base ` ndx), c1 >, <(+ ` ndx), c2 >, <(× ` ndx), c3 > })\n  strle3((TopSet ` ndx), c4, (le ` ndx), c5, (dist ` ndx), c6, nat9, cdc(1, 2), cdc(1, 0))\n  9nn()\n  tsetndx()\n  9lt10()\n  10nn()\n  plendx()\n  declt(nat1, nat0, nat2)\n  0nn0()\n  2pos()\n  decnncl(nat1, nat2)\n  1nn0()\n  2nn()\n  dsndx()\n  3lt9()\n}","parent":["eqbrtri","strleun","rngstr","eqid","strle3","9nn","tsetndx","9lt10","10nn","plendx","declt","0nn0","2pos","decnncl","1nn0","2nn","dsndx","3lt9"],"children":["odrngbas","odrngplusg","odrngmulr","odrngtset","odrngle","odrngds","xrsstr"]},{"name":"odrngbas","content":"The base set of an ordered metric ring. (Contributed by Mario Carneiro, 20-Aug-2015.)","origin":"thm odrngbas(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cbs, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n} = {\n  strfv(c0, c1, cbs, c2, cop(nat1, cdc(nat1, nat2)))\n  odrngstr(c2, c0, c3, c4, c5, c6, c7)\n  baseid()\n  sstri(csn(cop(cfv(cbs, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)))\n  snsstp1(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c0), cop(cfv(cplusg, cnx), c3), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7)))\n}","pretty":"thm odrngbas(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(Base ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > } ⋃ { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cbs, c2, < 1, cdc(1, 2)>)\n  odrngstr(c2, c0, c3, c4, c5, c6, c7)\n  baseid()\n  sstri({ <(Base ` ndx), c0 > }, c2, { <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > })\n  snsstp1(<(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > }, c2, ({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > } ⋃ { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > }))\n  ssun1({ <(Base ` ndx), c0 >, <(+ ` ndx), c3 >, <(× ` ndx), c4 > }, { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n}","parent":["strfv","odrngstr","baseid","sstri","snsstp1","sseqtr4i","ssun1"],"children":["xrsbas"]},{"name":"odrngplusg","content":"The addition operation of an ordered metric ring. (Contributed by Mario Carneiro, 20-Aug-2015.)","origin":"thm odrngplusg(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cplusg, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n} = {\n  strfv(c0, c1, cplusg, c2, cop(nat1, cdc(nat1, nat2)))\n  odrngstr(c2, c3, c0, c4, c5, c6, c7)\n  plusgid()\n  sstri(csn(cop(cfv(cplusg, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)))\n  snsstp2(cop(cfv(cplusg, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cmulr, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c0), cop(cfv(cmulr, cnx), c4)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7)))\n}","pretty":"thm odrngplusg(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(+ ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > } ⋃ { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cplusg, c2, < 1, cdc(1, 2)>)\n  odrngstr(c2, c3, c0, c4, c5, c6, c7)\n  plusgid()\n  sstri({ <(+ ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > })\n  snsstp2(<(+ ` ndx), c0 >, <(Base ` ndx), c3 >, <(× ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > } ⋃ { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c0 >, <(× ` ndx), c4 > }, { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n}","parent":["strfv","odrngstr","plusgid","sstri","snsstp2","sseqtr4i","ssun1"],"children":["xrsadd"]},{"name":"odrngmulr","content":"The multiplication operation of an ordered metric ring. (Contributed by Mario Carneiro, 20-Aug-2015.)","origin":"thm odrngmulr(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cmulr, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n} = {\n  strfv(c0, c1, cmulr, c2, cop(nat1, cdc(nat1, nat2)))\n  odrngstr(c2, c3, c4, c0, c5, c6, c7)\n  mulrid()\n  sstri(csn(cop(cfv(cmulr, cnx), c0)), c2, ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)))\n  snsstp3(cop(cfv(cmulr, cnx), c0), cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4))\n  sseqtr4i(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n  ssun1(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c0)), ctp(cop(cfv(cts, cnx), c5), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7)))\n}","pretty":"thm odrngmulr(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(× ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > } ⋃ { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cmulr, c2, < 1, cdc(1, 2)>)\n  odrngstr(c2, c3, c4, c0, c5, c6, c7)\n  mulrid()\n  sstri({ <(× ` ndx), c0 > }, c2, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > })\n  snsstp3(<(× ` ndx), c0 >, <(Base ` ndx), c3 >, <(+ ` ndx), c4 >)\n  sseqtr4i({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > } ⋃ { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > }))\n  ssun1({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c0 > }, { <(TopSet ` ndx), c5 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n}","parent":["strfv","odrngstr","mulrid","sstri","snsstp3","sseqtr4i","ssun1"],"children":["xrsmul"]},{"name":"odrngtset","content":"The open sets of an ordered metric ring. (Contributed by Mario Carneiro, 20-Aug-2015.)","origin":"thm odrngtset(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cts, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n} = {\n  strfv(c0, c1, cts, c2, cop(nat1, cdc(nat1, nat2)))\n  odrngstr(c2, c3, c4, c5, c0, c6, c7)\n  tsetid()\n  sstri(csn(cop(cfv(cts, cnx), c0)), c2, ctp(cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7)))\n  snsstp1(cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))\n  sseqtr4i(ctp(cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7))))\n  ssun2(ctp(cop(cfv(cts, cnx), c0), cop(cfv(cple, cnx), c6), cop(cfv(cds, cnx), c7)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)))\n}","pretty":"thm odrngtset(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(TopSet ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(TopSet ` ndx), c0 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cts, c2, < 1, cdc(1, 2)>)\n  odrngstr(c2, c3, c4, c5, c0, c6, c7)\n  tsetid()\n  sstri({ <(TopSet ` ndx), c0 > }, c2, { <(TopSet ` ndx), c0 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > })\n  snsstp1(<(TopSet ` ndx), c0 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 >)\n  sseqtr4i({ <(TopSet ` ndx), c0 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(TopSet ` ndx), c0 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > }))\n  ssun2({ <(TopSet ` ndx), c0 >, <(le ` ndx), c6 >, <(dist ` ndx), c7 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > })\n}","parent":["strfv","odrngstr","tsetid","sstri","snsstp1","sseqtr4i","ssun2"],"children":["xrstset"]},{"name":"odrngle","content":"The order of an ordered metric ring. (Contributed by Mario Carneiro, 20-Aug-2015.)","origin":"thm odrngle(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cple, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c0), cop(cfv(cds, cnx), c7))))\n} = {\n  strfv(c0, c1, cple, c2, cop(nat1, cdc(nat1, nat2)))\n  odrngstr(c2, c3, c4, c5, c6, c0, c7)\n  pleid()\n  sstri(csn(cop(cfv(cple, cnx), c0)), c2, ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c0), cop(cfv(cds, cnx), c7)))\n  snsstp2(cop(cfv(cple, cnx), c0), cop(cfv(cts, cnx), c6), cop(cfv(cds, cnx), c7))\n  sseqtr4i(ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c0), cop(cfv(cds, cnx), c7)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c0), cop(cfv(cds, cnx), c7))))\n  ssun2(ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c0), cop(cfv(cds, cnx), c7)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)))\n}","pretty":"thm odrngle(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(le ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(TopSet ` ndx), c6 >, <(le ` ndx), c0 >, <(dist ` ndx), c7 > })\n} = {\n  strfv(c0, c1, cple, c2, < 1, cdc(1, 2)>)\n  odrngstr(c2, c3, c4, c5, c6, c0, c7)\n  pleid()\n  sstri({ <(le ` ndx), c0 > }, c2, { <(TopSet ` ndx), c6 >, <(le ` ndx), c0 >, <(dist ` ndx), c7 > })\n  snsstp2(<(le ` ndx), c0 >, <(TopSet ` ndx), c6 >, <(dist ` ndx), c7 >)\n  sseqtr4i({ <(TopSet ` ndx), c6 >, <(le ` ndx), c0 >, <(dist ` ndx), c7 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(TopSet ` ndx), c6 >, <(le ` ndx), c0 >, <(dist ` ndx), c7 > }))\n  ssun2({ <(TopSet ` ndx), c6 >, <(le ` ndx), c0 >, <(dist ` ndx), c7 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > })\n}","parent":["strfv","odrngstr","pleid","sstri","snsstp2","sseqtr4i","ssun2"],"children":["xrsle"]},{"name":"odrngds","content":"The metric of an ordered metric ring. (Contributed by Mario Carneiro, 20-Aug-2015.)","origin":"thm odrngds(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  |- wi(wcel(c0, c1), wceq(c0, cfv(cds, c2)))\n  -| wceq(c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c7), cop(cfv(cds, cnx), c0))))\n} = {\n  strfv(c0, c1, cds, c2, cop(nat1, cdc(nat1, nat2)))\n  odrngstr(c2, c3, c4, c5, c6, c7, c0)\n  dsid()\n  sstri(csn(cop(cfv(cds, cnx), c0)), c2, ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c7), cop(cfv(cds, cnx), c0)))\n  snsstp3(cop(cfv(cds, cnx), c0), cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c7))\n  sseqtr4i(ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c7), cop(cfv(cds, cnx), c0)), c2, cun(ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)), ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c7), cop(cfv(cds, cnx), c0))))\n  ssun2(ctp(cop(cfv(cts, cnx), c6), cop(cfv(cple, cnx), c7), cop(cfv(cds, cnx), c0)), ctp(cop(cfv(cbs, cnx), c3), cop(cfv(cplusg, cnx), c4), cop(cfv(cmulr, cnx), c5)))\n}","pretty":"thm odrngds(class c0, class c1, class c2, class c3, class c4, class c5, class c6, class c7) {\n  ⊢ (c0 ∈ c1 → c0 =(dist ` c2))\n  ⊣ c2 =({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(TopSet ` ndx), c6 >, <(le ` ndx), c7 >, <(dist ` ndx), c0 > })\n} = {\n  strfv(c0, c1, cds, c2, < 1, cdc(1, 2)>)\n  odrngstr(c2, c3, c4, c5, c6, c7, c0)\n  dsid()\n  sstri({ <(dist ` ndx), c0 > }, c2, { <(TopSet ` ndx), c6 >, <(le ` ndx), c7 >, <(dist ` ndx), c0 > })\n  snsstp3(<(dist ` ndx), c0 >, <(TopSet ` ndx), c6 >, <(le ` ndx), c7 >)\n  sseqtr4i({ <(TopSet ` ndx), c6 >, <(le ` ndx), c7 >, <(dist ` ndx), c0 > }, c2, ({ <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > } ⋃ { <(TopSet ` ndx), c6 >, <(le ` ndx), c7 >, <(dist ` ndx), c0 > }))\n  ssun2({ <(TopSet ` ndx), c6 >, <(le ` ndx), c7 >, <(dist ` ndx), c0 > }, { <(Base ` ndx), c3 >, <(+ ` ndx), c4 >, <(× ` ndx), c5 > })\n}","parent":["strfv","odrngstr","dsid","sstri","snsstp3","sseqtr4i","ssun2"],"children":["xrsds"]},{"name":"ressds","content":"` dist ` is unaffected by restriction. (Contributed by Mario Carneiro, 26-Aug-2015.)","origin":"thm ressds(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cds, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cds, c4))\n} = {\n  resslem(c0, c1, c2, cds, c3, c4, cdc(nat1, nat2))\n  df-ds()\n  decnncl(nat1, nat2)\n  2nn()\n  declti(nat1, nat1, nat2)\n  1nn()\n  2nn0()\n  1nn0()\n  1lt10()\n}","pretty":"thm ressds(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(dist ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(dist ` c4)\n} = {\n  resslem(c0, c1, c2, cds, c3, c4, cdc(1, 2))\n  df-ds()\n  decnncl(nat1, nat2)\n  2nn()\n  declti(nat1, nat1, nat2)\n  1nn()\n  2nn0()\n  1nn0()\n  1lt10()\n}","parent":["resslem","df-ds","decnncl","2nn","declti","1nn","2nn0","1nn0","1lt10"],"children":["reds","ressprdsds","ressxms","ressms","sgrim","subgnm","subgngp","cmssmscld","cmsss","cmscsscms","cssbn","minveclem3a","ressnm","qqhcn","qqhucn","prdsbnd2","cnpwstotbnd","repwsmet","rrnequiv"]},{"name":"homndx","content":"Index value of the ~ df-hom slot. (Contributed by Mario Carneiro, 7-Jan-2017.)","origin":"thm homndx() {\n  |- wceq(cfv(chom, cnx), cdc(nat1, nat4))\n} = {\n  ndxarg(chom, cdc(nat1, nat4))\n  df-hom()\n  decnncl(nat1, nat4)\n  1nn0()\n  4nn()\n}","pretty":"thm homndx() {\n  ⊢ (Hom ` ndx)= cdc(1, 4)\n} = {\n  ndxarg(chom, cdc(1, 4))\n  df-hom()\n  decnncl(nat1, nat4)\n  1nn0()\n  4nn()\n}","parent":["ndxarg","df-hom","decnncl","1nn0","4nn"],"children":["slotsbhcdif","prdsvalstr","oppchomfval","oppcbas","rescbas","rescco","rescabs","catstr"]},{"name":"homid","content":"Utility theorem: index-independent form of ~ df-hom . (Contributed by Mario Carneiro, 7-Jan-2017.)","origin":"thm homid() {\n  |- wceq(chom, cslot(cfv(chom, cnx)))\n} = {\n  ndxid(chom, cdc(nat1, nat4))\n  df-hom()\n  decnncl(nat1, nat4)\n  1nn0()\n  4nn()\n}","pretty":"thm homid() {\n  ⊢ Hom = Slot((Hom ` ndx))\n} = {\n  ndxid(chom, cdc(1, 4))\n  df-hom()\n  decnncl(nat1, nat4)\n  1nn0()\n  4nn()\n}","parent":["ndxid","df-hom","decnncl","1nn0","4nn"],"children":["prdshom","oppchomfval","reschom","fuchom","setchomfval","catchomfval","estrchomfval","xpchomfval","rngchomfvalALTV","ringchomfvalALTV"]},{"name":"ccondx","content":"Index value of the ~ df-cco slot. (Contributed by Mario Carneiro, 7-Jan-2017.)","origin":"thm ccondx() {\n  |- wceq(cfv(cco, cnx), cdc(nat1, nat5))\n} = {\n  ndxarg(cco, cdc(nat1, nat5))\n  df-cco()\n  decnncl(nat1, nat5)\n  1nn0()\n  5nn()\n}","pretty":"thm ccondx() {\n  ⊢ (comp ` ndx)= cdc(1, 5)\n} = {\n  ndxarg(cco, cdc(1, 5))\n  df-cco()\n  decnncl(nat1, nat5)\n  1nn0()\n  5nn()\n}","parent":["ndxarg","df-cco","decnncl","1nn0","5nn"],"children":["slotsbhcdif","prdsvalstr","oppchomfval","oppcbas","rescco","catstr"]},{"name":"ccoid","content":"Utility theorem: index-independent form of ~ df-cco . (Contributed by Mario Carneiro, 7-Jan-2017.)","origin":"thm ccoid() {\n  |- wceq(cco, cslot(cfv(cco, cnx)))\n} = {\n  ndxid(cco, cdc(nat1, nat5))\n  df-cco()\n  decnncl(nat1, nat5)\n  1nn0()\n  5nn()\n}","pretty":"thm ccoid() {\n  ⊢ comp = Slot((comp ` ndx))\n} = {\n  ndxid(cco, cdc(1, 5))\n  df-cco()\n  decnncl(nat1, nat5)\n  1nn0()\n  5nn()\n}","parent":["ndxid","df-cco","decnncl","1nn0","5nn"],"children":["prdsco","oppccofval","rescco","fuccofval","setccofval","catccofval","estrccofval","xpccofval","rngccofvalALTV","ringccofvalALTV"]},{"name":"resshom","content":"` Hom ` is unaffected by restriction. (Contributed by Mario Carneiro, 5-Jan-2017.)","origin":"thm resshom(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(chom, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(chom, c4))\n} = {\n  resslem(c0, c1, c2, chom, c3, c4, cdc(nat1, nat4))\n  df-hom()\n  decnncl(nat1, nat4)\n  4nn()\n  declti(nat1, nat1, nat4)\n  1nn()\n  4nn0()\n  1nn0()\n  1lt10()\n}","pretty":"thm resshom(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(Hom ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(Hom ` c4)\n} = {\n  resslem(c0, c1, c2, chom, c3, c4, cdc(1, 4))\n  df-hom()\n  decnncl(nat1, nat4)\n  4nn()\n  declti(nat1, nat1, nat4)\n  1nn()\n  4nn0()\n  1nn0()\n  1lt10()\n}","parent":["resslem","df-hom","decnncl","4nn","declti","1nn","4nn0","1nn0","1lt10"],"children":["fullresc","funcres2c","ressffth","fullres2c","resssetc","resscatc"]},{"name":"ressco","content":"` comp ` is unaffected by restriction. (Contributed by Mario Carneiro, 5-Jan-2017.)","origin":"thm ressco(class c0, class c1, class c2, class c3, class c4) {\n  |- wi(wcel(c0, c1), wceq(c2, cfv(cco, c3)))\n  -| wceq(c3, co(c4, cress, c0))\n  -| wceq(c2, cfv(cco, c4))\n} = {\n  resslem(c0, c1, c2, cco, c3, c4, cdc(nat1, nat5))\n  df-cco()\n  decnncl(nat1, nat5)\n  5nn()\n  declti(nat1, nat1, nat5)\n  1nn()\n  5nn0()\n  1nn0()\n  1lt10()\n}","pretty":"thm ressco(class c0, class c1, class c2, class c3, class c4) {\n  ⊢ (c0 ∈ c1 → c2 =(comp ` c3))\n  ⊣ c3 =(c4[|`s]c0)\n  ⊣ c2 =(comp ` c4)\n} = {\n  resslem(c0, c1, c2, cco, c3, c4, cdc(1, 5))\n  df-cco()\n  decnncl(nat1, nat5)\n  5nn()\n  declti(nat1, nat1, nat5)\n  1nn()\n  5nn0()\n  1nn0()\n  1lt10()\n}","parent":["resslem","df-cco","decnncl","5nn","declti","1nn","5nn0","1nn0","1lt10"],"children":["rescco","fullresc","resssetc","resscatc"]},{"name":"slotsbhcdif","content":"The slots ` Base ` , ` Hom ` and ` comp ` are different. (Contributed by AV, 5-Mar-2020.)","origin":"thm slotsbhcdif() {\n  |- w3a(wne(cfv(cbs, cnx), cfv(chom, cnx)), wne(cfv(cbs, cnx), cfv(cco, cnx)), wne(cfv(chom, cnx), cfv(cco, cnx)))\n} = {\n  3pm3.2i(wne(cfv(cbs, cnx), cfv(chom, cnx)), wne(cfv(cbs, cnx), cfv(cco, cnx)), wne(cfv(chom, cnx), cfv(cco, cnx)))\n  eqnetri(cfv(cbs, cnx), cfv(chom, cnx), nat1)\n  neeqtrri(nat1, cfv(chom, cnx), cdc(nat1, nat4))\n  ltneii(nat1, cdc(nat1, nat4))\n  declti(nat1, nat1, nat4)\n  eqnetri(cfv(cbs, cnx), cfv(cco, cnx), nat1)\n  ndxarg(cbs, nat1)\n  df-base()\n  neeqtrri(nat1, cfv(cco, cnx), cdc(nat1, nat5))\n  ltneii(nat1, cdc(nat1, nat5))\n  1re()\n  declti(nat1, nat1, nat5)\n  1nn()\n  5nn0()\n  1lt10()\n  eqnetri(cfv(chom, cnx), cfv(cco, cnx), cdc(nat1, nat4))\n  homndx()\n  neeqtrri(cdc(nat1, nat4), cfv(cco, cnx), cdc(nat1, nat5))\n  ltneii(cdc(nat1, nat4), cdc(nat1, nat5))\n  nn0rei(cdc(nat1, nat4))\n  deccl(nat1, nat4)\n  declt(nat1, nat4, nat5)\n  1nn0()\n  4nn0()\n  5nn()\n  4lt5()\n  ccondx()\n}","pretty":"thm slotsbhcdif() {\n  ⊢ ((Base ` ndx)≠(Hom ` ndx)∧(Base ` ndx)≠(comp ` ndx)∧(Hom ` ndx)≠(comp ` ndx))\n} = {\n  3pm3.2i((Base ` ndx)≠(Hom ` ndx), (Base ` ndx)≠(comp ` ndx), (Hom ` ndx)≠(comp ` ndx))\n  eqnetri((Base ` ndx), (Hom ` ndx), nat1)\n  neeqtrri(nat1, (Hom ` ndx), cdc(1, 4))\n  ltneii(nat1, cdc(1, 4))\n  declti(nat1, nat1, nat4)\n  eqnetri((Base ` ndx), (comp ` ndx), nat1)\n  ndxarg(cbs, nat1)\n  df-base()\n  neeqtrri(nat1, (comp ` ndx), cdc(1, 5))\n  ltneii(nat1, cdc(1, 5))\n  1re()\n  declti(nat1, nat1, nat5)\n  1nn()\n  5nn0()\n  1lt10()\n  eqnetri((Hom ` ndx), (comp ` ndx), cdc(1, 4))\n  homndx()\n  neeqtrri(cdc(1, 4), (comp ` ndx), cdc(1, 5))\n  ltneii(cdc(1, 4), cdc(1, 5))\n  nn0rei(cdc(1, 4))\n  deccl(nat1, nat4)\n  declt(nat1, nat4, nat5)\n  1nn0()\n  4nn0()\n  5nn()\n  4lt5()\n  ccondx()\n}","parent":["3pm3.2i","eqnetri","neeqtrri","ltneii","declti","ndxarg","df-base","1re","1nn","5nn0","1lt10","homndx","nn0rei","deccl","declt","1nn0","4nn0","5nn","4lt5","ccondx"],"children":["estrreslem1","estrres"]}]}