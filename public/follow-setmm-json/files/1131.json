{"index":1131,"title":"Around ~ equsal","content":"As a rule of thumb, if a theorem of the form ` |- ( ph <-> ps ) => |- ( ch <-> th ) ` is in the database, and the \"more precise\" theorems ` |- ( ph -> ps ) => |- ( ch -> th ) ` and ` |- ( ps -> ph ) => |- ( th -> ch ) ` also hold (see ~ bj-bisym ), then they should be added to the database. The present case is similar. Similar additions can be done regarding ~ equsex (and ~ equsalh and ~ equsexh ). Even if only one of these two theorems holds, it should be added to the database.","blocks":[{"name":"bj-equsal1t","content":"Duplication of ~ wl-equsal1t , with shorter proof. If one imposes a disjoint variable condition on x,y , then one can use ~ bj-alequexv and reduce axiom dependencies, and similarly for the following theorems. Note: ~ wl-equsalcom is also interesting. (Contributed by BJ, 6-Oct-2018.)","origin":"thm bj-equsal1t(setvar s0, setvar s1, wff w0) {\n  |- wi(wnf(s0, w0), wb(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0))\n} = {\n  impbid(wnf(s0, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n  syl5ib(wnf(s0, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0, wex(s0, w0))\n  bj-alequex(s0, s1, w0)\n  19.9t(s0, w0)\n  syl6(wnf(s0, w0), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wal(s0, w0))\n  nf5r(s0, w0)\n  ala1(s0, w0, wceq(cv(s0), cv(s1)))\n}","pretty":"thm bj-equsal1t(setvar s0, setvar s1, wff w0) {\n  ⊢ (F/(s0, w0)→(∀(s0,(s0 = s1 → w0))↔ w0))\n} = {\n  impbid(F/(s0, w0), ∀(s0,(s0 = s1 → w0)), w0)\n  syl5ib(F/(s0, w0), ∀(s0,(s0 = s1 → w0)), w0, ∃(s0, w0))\n  bj-alequex(s0, s1, w0)\n  19.9t(s0, w0)\n  syl6(F/(s0, w0), w0, ∀(s0,(s0 = s1 → w0)), ∀(s0, w0))\n  nf5r(s0, w0)\n  ala1(s0, w0, s0 = s1)\n}","parent":["impbid","syl5ib","bj-alequex","19.9t","syl6","nf5r","ala1"],"children":["bj-equsal1ti"]},{"name":"bj-equsal1ti","content":"Inference associated with ~ bj-equsal1t . (Contributed by BJ, 30-Sep-2018.)","origin":"thm bj-equsal1ti(setvar s0, setvar s1, wff w0) {\n  |- wb(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n  -| wnf(s0, w0)\n} = {\n  ax-mp(wb(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0), wnf(s0, w0))\n  bj-equsal1t(s0, s1, w0)\n}","pretty":"thm bj-equsal1ti(setvar s0, setvar s1, wff w0) {\n  ⊢ (∀(s0,(s0 = s1 → w0))↔ w0)\n  ⊣ F/(s0, w0)\n} = {\n  ax-mp((∀(s0,(s0 = s1 → w0))↔ w0), F/(s0, w0))\n  bj-equsal1t(s0, s1, w0)\n}","parent":["ax-mp","bj-equsal1t"],"children":["bj-equsal1","bj-equsal2"]},{"name":"bj-equsal1","content":"One direction of ~ equsal . (Contributed by BJ, 30-Sep-2018.)","origin":"thm bj-equsal1(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n} = {\n  sylib(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1, wal(s0, wi(wceq(cv(s0), cv(s1)), w1)))\n  alimi(s0, wi(wceq(cv(s0), cv(s1)), w0), wi(wceq(cv(s0), cv(s1)), w1))\n  a2i(wceq(cv(s0), cv(s1)), w0, w1)\n  bj-equsal1ti(s0, s1, w1)\n}","pretty":"thm bj-equsal1(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0,(s0 = s1 → w0))→ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 → w1))\n} = {\n  sylib(∀(s0,(s0 = s1 → w0)), w1, ∀(s0,(s0 = s1 → w1)))\n  alimi(s0, (s0 = s1 → w0), (s0 = s1 → w1))\n  a2i(s0 = s1, w0, w1)\n  bj-equsal1ti(s0, s1, w1)\n}","parent":["sylib","alimi","a2i","bj-equsal1ti"],"children":["bj-equsal"]},{"name":"bj-equsal2","content":"One direction of ~ equsal . (Contributed by BJ, 30-Sep-2018.)","origin":"thm bj-equsal2(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w1)))\n  -| wnf(s0, w0)\n  -| wi(wceq(cv(s0), cv(s1)), wi(w0, w1))\n} = {\n  sylbir(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w1)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n  bj-equsal1ti(s0, s1, w0)\n  alimi(s0, wi(wceq(cv(s0), cv(s1)), w0), wi(wceq(cv(s0), cv(s1)), w1))\n  a2i(wceq(cv(s0), cv(s1)), w0, w1)\n}","pretty":"thm bj-equsal2(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (w0 → ∀(s0,(s0 = s1 → w1)))\n  ⊣ F/(s0, w0)\n  ⊣ (s0 = s1 →(w0 → w1))\n} = {\n  sylbir(w0, ∀(s0,(s0 = s1 → w1)), ∀(s0,(s0 = s1 → w0)))\n  bj-equsal1ti(s0, s1, w0)\n  alimi(s0, (s0 = s1 → w0), (s0 = s1 → w1))\n  a2i(s0 = s1, w0, w1)\n}","parent":["sylbir","bj-equsal1ti","alimi","a2i"],"children":["bj-equsal"]},{"name":"bj-equsal","content":"Shorter proof of ~ equsal . (Contributed by BJ, 30-Sep-2018.) Proof modification is discouraged to avoid using ~ equsal , but \"min */exc equsal\" is ok. (Proof modification is discouraged.)","origin":"thm bj-equsal(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1)\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s0), cv(s1)), wb(w0, w1))\n} = {\n  impbii(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w1)\n  bj-equsal1(s0, s1, w0, w1)\n  biimpd(wceq(cv(s0), cv(s1)), w0, w1)\n  bj-equsal2(s0, s1, w1, w0)\n  biimprd(wceq(cv(s0), cv(s1)), w1, w0)\n}","pretty":"thm bj-equsal(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ (∀(s0,(s0 = s1 → w0))↔ w1)\n  ⊣ F/(s0, w1)\n  ⊣ (s0 = s1 →(w0 ↔ w1))\n} = {\n  impbii(∀(s0,(s0 = s1 → w0)), w1)\n  bj-equsal1(s0, s1, w0, w1)\n  biimpd(s0 = s1, w0, w1)\n  bj-equsal2(s0, s1, w1, w0)\n  biimprd(s0 = s1, w1, w0)\n}","parent":["impbii","bj-equsal1","biimpd","bj-equsal2","biimprd"],"children":[]}]}