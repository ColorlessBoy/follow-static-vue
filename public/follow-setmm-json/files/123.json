{"index":123,"title":"The identity relation","content":"","blocks":[{"name":"cid","content":"Extend the definition of a class to include the identity relation.","origin":"const class cid { = }","pretty":"","parent":[],"children":[]},{"name":"diff.cid.s","content":"","origin":"axiom diff.cid.s(setvar s0) {\n  |- diffsc(s0, cid)\n}","pretty":"axiom diff.cid.s(setvar s0) {\n  ⊢ d(s0, =)\n}","parent":[],"children":[]},{"name":"diff.cid.c","content":"","origin":"axiom diff.cid.c(class c0) {\n  |- diffcc(cid, c0)\n}","pretty":"axiom diff.cid.c(class c0) {\n  ⊢ d(=, c0)\n}","parent":[],"children":[]},{"name":"diff.cid.w","content":"","origin":"axiom diff.cid.w(wff w0) {\n  |- diffcw(cid, w0)\n}","pretty":"axiom diff.cid.w(wff w0) {\n  ⊢ d(=, w0)\n}","parent":[],"children":[]},{"name":"df-id","content":"Define the identity relation. Definition 9.15 of [Quine] p. 64. For example, ` 5 _I 5 ` and ` -. 4 _I 5 ` ( ~ ex-id ). (Contributed by NM, 13-Aug-1995.)","origin":"axiom df-id(setvar s0, setvar s1) {\n  |- wceq(cid, copab(s0, s1, wceq(cv(s0), cv(s1))))\n  -| diffss(s0, s1)\n}","pretty":"axiom df-id(setvar s0, setvar s1) {\n  ⊢ = = { < s0, s1 > | s0 = s1 }\n  ⊣ d(s0, s1)\n}","parent":[],"children":["dfid3","dfid4","reli","ideqg","opabresid","cnvi","dffun2","ider","epinid0","bj-elid","cossssid2","cossid"]},{"name":"dfid3","content":"A stronger version of ~ df-id that does not require ` x ` and ` y ` to be disjoint. This is not the \"official\" definition since our definition soundness check without this requirement would be much more complex. The proof can be instructive in showing how disjoint variable requirements may be eliminated, a task that is not necessarily obvious. (Contributed by NM, 5-Feb-2008.) (Revised by Mario Carneiro, 18-Nov-2016.) Use directly the definition ~ df-id when sufficient, since the derivation of ~ dfid3 is nontrivial and uses auxiliary axioms ~ ax-10 to ~ ax-13 . (New usage is discouraged.)","origin":"thm dfid3(setvar s0, setvar s1) {\n  |- wceq(cid, copab(s0, s1, wceq(cv(s0), cv(s1))))\n} = {\n  eqtri(cid, copab(s0, s1, wceq(cv(s0), cv(s1))), copab(s0, hs0, wceq(cv(s0), cv(hs0))))\n  df-id(s0, hs0)\n  3eqtr4i(copab(s0, hs0, wceq(cv(s0), cv(hs0))), copab(s0, s1, wceq(cv(s0), cv(s1))), cab(hs1, wex(s0, wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0)))))), cab(hs1, wex(s0, wex(s1, wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))))))\n  abbii(hs1, wex(s0, wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0))))), wex(s0, wex(s1, wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1))))))\n  pm2.61i(wb(wex(s0, wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0))))), wex(s0, wex(s1, wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))))), wal(s0, wceq(cv(s0), cv(s1))))\n  syl5bb(wal(s0, wceq(cv(s0), cv(s1))), wex(s0, wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0))))), wex(s0, wex(s1, wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1))))), wex(s0, wex(s0, wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0))))))\n  bitr4i(wex(s0, wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0))))), wex(s0, wex(s0, wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0))))), wex(s0, wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0)))))\n  exbii(s0, wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0)))), wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0))))\n  3bitri(wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0)))), wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0))), wex(hs0, wa(wceq(cv(hs0), cv(s0)), wceq(cv(hs1), cop(cv(s0), cv(hs0))))), wceq(cv(hs1), cop(cv(s0), cv(s0))))\n  exbii(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0))), wa(wceq(cv(hs0), cv(s0)), wceq(cv(hs1), cop(cv(s0), cv(hs0)))))\n  anbi1ci(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0)), wceq(cv(hs0), cv(s0)))\n  equcom(s0, hs0)\n  equsexvw(hs0, s0, wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(hs1), cop(cv(s0), cv(s0))))\n  eqeq2d(cv(hs1), cop(cv(s0), cv(hs0)), cop(cv(s0), cv(s0)), wceq(cv(hs0), cv(s0)))\n  opeq2(cv(hs0), cv(s0), cv(s0))\n  biantru(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0)))\n  equid(s0)\n  19.9(s0, wex(s0, wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0)))))\n  nfe1(s0, wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0))))\n  drex2(s0, s1, s0, wex(s0, wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0)))), wex(s1, wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))))\n  drex1(s0, s1, wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0))), wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1))))\n  sps(s0, wceq(cv(s0), cv(s1)), wb(wa(wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0))), wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))))\n  anbi12d(wceq(cv(s0), cv(s1)), wceq(cv(hs1), cop(cv(s0), cv(s0))), wceq(cv(s0), cv(s0)), wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))\n  eqeq2d(cv(hs1), cop(cv(s0), cv(s0)), cop(cv(s0), cv(s1)), wceq(cv(s0), cv(s1)))\n  opeq2(cv(s0), cv(s1), cv(s0))\n  equequ2(s0, s1, s0)\n  exbid(s0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wex(hs0, wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0)))), wex(s1, wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))))\n  nfnae(s0, s0, s1)\n  cbvexd(hs0, s1, wn(wal(s0, wceq(cv(s0), cv(s1)))), wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0))), wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1))))\n  nfnae(s1, s0, s1)\n  nfand(s1, wn(wal(s0, wceq(cv(s0), cv(s1)))), wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0)))\n  nfeqd(s1, cv(hs1), cop(cv(s0), cv(hs0)), wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  nfcvd(s1, cv(hs1), wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  nfopd(s1, cv(s0), cv(hs0), wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  nfeqd(s1, cv(s0), cv(hs0), wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  nfcvf2(s0, s1)\n  nfcvd(s1, cv(hs0), wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  a1i(wn(wal(s0, wceq(cv(s0), cv(s1)))), wi(wceq(cv(hs0), cv(s1)), wb(wa(wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0))), wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1))))))\n  anbi12d(wceq(cv(hs0), cv(s1)), wceq(cv(hs1), cop(cv(s0), cv(hs0))), wceq(cv(s0), cv(hs0)), wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1)))\n  eqeq2d(cv(hs1), cop(cv(s0), cv(hs0)), cop(cv(s0), cv(s1)), wceq(cv(hs0), cv(s1)))\n  opeq2(cv(hs0), cv(s1), cv(s0))\n  equequ2(hs0, s1, s0)\n  df-opab(s0, hs0, hs1, wceq(cv(s0), cv(hs0)))\n  df-opab(s0, s1, hs1, wceq(cv(s0), cv(s1)))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(wceq(cv(hs1), cop(cv(s0), cv(s0))))\n  diff.hs0.w(wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  diff.hs0.w(wa(wceq(cv(hs1), cop(cv(s0), cv(s1))), wceq(cv(s0), cv(s1))))\n  diff.cv.s(s1, hs1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.hs0.s(hs1)\n  diff.hs1.w(wceq(cv(s0), cv(hs0)))\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n  diff.hs1.w(wceq(cv(s0), cv(s1)))\n}","pretty":"thm dfid3(setvar s0, setvar s1) {\n  ⊢ = = { < s0, s1 > | s0 = s1 }\n} = {\n  eqtri(cid, { < s0, s1 > | s0 = s1 }, { < s0, hs0 > | s0 = hs0 })\n  df-id(s0, hs0)\n  3eqtr4i({ < s0, hs0 > | s0 = hs0 }, { < s0, s1 > | s0 = s1 }, { hs1 | ∃(s0, ∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0)))}, { hs1 | ∃(s0, ∃(s1,(hs1 = < s0, s1 > ∧ s0 = s1)))})\n  abbii(hs1, ∃(s0, ∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0))), ∃(s0, ∃(s1,(hs1 = < s0, s1 > ∧ s0 = s1))))\n  pm2.61i((∃(s0, ∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0)))↔ ∃(s0, ∃(s1,(hs1 = < s0, s1 > ∧ s0 = s1)))), ∀(s0, s0 = s1))\n  syl5bb(∀(s0, s0 = s1), ∃(s0, ∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0))), ∃(s0, ∃(s1,(hs1 = < s0, s1 > ∧ s0 = s1))), ∃(s0, ∃(s0,(hs1 = < s0, s0 > ∧ s0 = s0))))\n  bitr4i(∃(s0, ∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0))), ∃(s0, ∃(s0,(hs1 = < s0, s0 > ∧ s0 = s0))), ∃(s0,(hs1 = < s0, s0 > ∧ s0 = s0)))\n  exbii(s0, ∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0)), (hs1 = < s0, s0 > ∧ s0 = s0))\n  3bitri(∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0)), (hs1 = < s0, s0 > ∧ s0 = s0), ∃(hs0,(hs0 = s0 ∧ hs1 = < s0, hs0 >)), hs1 = < s0, s0 >)\n  exbii(hs0, (hs1 = < s0, hs0 > ∧ s0 = hs0), (hs0 = s0 ∧ hs1 = < s0, hs0 >))\n  anbi1ci(hs1 = < s0, hs0 >, s0 = hs0, hs0 = s0)\n  equcom(s0, hs0)\n  equsexvw(hs0, s0, hs1 = < s0, hs0 >, hs1 = < s0, s0 >)\n  eqeq2d(hs1, < s0, hs0 >, < s0, s0 >, hs0 = s0)\n  opeq2(hs0, s0, s0)\n  biantru(hs1 = < s0, s0 >, s0 = s0)\n  equid(s0)\n  19.9(s0, ∃(s0,(hs1 = < s0, s0 > ∧ s0 = s0)))\n  nfe1(s0, (hs1 = < s0, s0 > ∧ s0 = s0))\n  drex2(s0, s1, s0, ∃(s0,(hs1 = < s0, s0 > ∧ s0 = s0)), ∃(s1,(hs1 = < s0, s1 > ∧ s0 = s1)))\n  drex1(s0, s1, (hs1 = < s0, s0 > ∧ s0 = s0), (hs1 = < s0, s1 > ∧ s0 = s1))\n  sps(s0, s0 = s1, ((hs1 = < s0, s0 > ∧ s0 = s0)↔(hs1 = < s0, s1 > ∧ s0 = s1)))\n  anbi12d(s0 = s1, hs1 = < s0, s0 >, s0 = s0, hs1 = < s0, s1 >, s0 = s1)\n  eqeq2d(hs1, < s0, s0 >, < s0, s1 >, s0 = s1)\n  opeq2(s0, s1, s0)\n  equequ2(s0, s1, s0)\n  exbid(s0, ¬ ∀(s0, s0 = s1), ∃(hs0,(hs1 = < s0, hs0 > ∧ s0 = hs0)), ∃(s1,(hs1 = < s0, s1 > ∧ s0 = s1)))\n  nfnae(s0, s0, s1)\n  cbvexd(hs0, s1, ¬ ∀(s0, s0 = s1), (hs1 = < s0, hs0 > ∧ s0 = hs0), (hs1 = < s0, s1 > ∧ s0 = s1))\n  nfnae(s1, s0, s1)\n  nfand(s1, ¬ ∀(s0, s0 = s1), hs1 = < s0, hs0 >, s0 = hs0)\n  nfeqd(s1, hs1, < s0, hs0 >, ¬ ∀(s0, s0 = s1))\n  nfcvd(s1, hs1, ¬ ∀(s0, s0 = s1))\n  nfopd(s1, s0, hs0, ¬ ∀(s0, s0 = s1))\n  nfeqd(s1, s0, hs0, ¬ ∀(s0, s0 = s1))\n  nfcvf2(s0, s1)\n  nfcvd(s1, hs0, ¬ ∀(s0, s0 = s1))\n  a1i(¬ ∀(s0, s0 = s1), (hs0 = s1 →((hs1 = < s0, hs0 > ∧ s0 = hs0)↔(hs1 = < s0, s1 > ∧ s0 = s1))))\n  anbi12d(hs0 = s1, hs1 = < s0, hs0 >, s0 = hs0, hs1 = < s0, s1 >, s0 = s1)\n  eqeq2d(hs1, < s0, hs0 >, < s0, s1 >, hs0 = s1)\n  opeq2(hs0, s1, s0)\n  equequ2(hs0, s1, s0)\n  df-opab(s0, hs0, hs1, s0 = hs0)\n  df-opab(s0, s1, hs1, s0 = s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(hs1 = < s0, s0 >)\n  diff.hs0.w(¬ ∀(s0, s0 = s1))\n  diff.hs0.w((hs1 = < s0, s1 > ∧ s0 = s1))\n  diff.cv.s(s1, hs1)\n  diff.cv.s(s1, hs0)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.hs0.s(hs1)\n  diff.hs1.w(s0 = hs0)\n  diffss.ex(s1, hs1)\n  diff.hs1.s(s1)\n  diff.hs1.w(s0 = s1)\n}","parent":["eqtri","df-id","3eqtr4i","abbii","pm2.61i","syl5bb","bitr4i","exbii","3bitri","anbi1ci","equcom","equsexvw","eqeq2d","opeq2","biantru","equid","19.9","nfe1","drex2","drex1","sps","anbi12d","equequ2","exbid","nfnae","cbvexd","nfand","nfeqd","nfcvd","nfopd","nfcvf2","a1i","df-opab","diffss.ex","diff.hs0.s","diff.hs0.w","diff.cv.s","diff.hs1.s","diff.hs1.w"],"children":["dfid2"]},{"name":"dfid4","content":"The identity function using maps-to notation. (Contributed by Scott Fenton, 15-Dec-2017.)","origin":"thm dfid4(setvar s0) {\n  |- wceq(cid, cmpt(s0, universe, cv(s0)))\n} = {\n  3eqtr4i(cid, cmpt(s0, universe, cv(s0)), copab(s0, hs0, wceq(cv(s0), cv(hs0))), copab(s0, hs0, wa(wcel(cv(s0), universe), wceq(cv(hs0), cv(s0)))))\n  opabbii(s0, hs0, wceq(cv(s0), cv(hs0)), wa(wcel(cv(s0), universe), wceq(cv(hs0), cv(s0))))\n  bitri(wceq(cv(s0), cv(hs0)), wa(wcel(cv(s0), universe), wceq(cv(hs0), cv(s0))), wceq(cv(hs0), cv(s0)))\n  equcom(s0, hs0)\n  biantrur(wceq(cv(hs0), cv(s0)), wcel(cv(s0), universe))\n  vex(s0)\n  df-id(s0, hs0)\n  df-mpt(s0, hs0, universe, cv(s0))\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(universe)\n  diff.hs0.c(cv(s0))\n}","pretty":"thm dfid4(setvar s0) {\n  ⊢ = =(s0 ∈ 𝕌 ↦ s0)\n} = {\n  3eqtr4i(cid, (s0 ∈ 𝕌 ↦ s0), { < s0, hs0 > | s0 = hs0 }, { < s0, hs0 > |(s0 ∈ 𝕌 ∧ hs0 = s0)})\n  opabbii(s0, hs0, s0 = hs0, (s0 ∈ 𝕌 ∧ hs0 = s0))\n  bitri(s0 = hs0, (s0 ∈ 𝕌 ∧ hs0 = s0), hs0 = s0)\n  equcom(s0, hs0)\n  biantrur(hs0 = s0, s0 ∈ 𝕌)\n  vex(s0)\n  df-id(s0, hs0)\n  df-mpt(s0, hs0, universe, s0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(universe)\n  diff.hs0.c(s0)\n}","parent":["3eqtr4i","opabbii","bitri","equcom","biantrur","vex","df-id","df-mpt","diffss.ex","diff.hs0.s","diff.hs0.c"],"children":["dfid5","dfid6","cnmptid","dfid7"]},{"name":"dfid2","content":"Alternate definition of the identity relation. (Contributed by NM, 15-Mar-2007.) Use ~ df-id when sufficient (see comment at ~ dfid3 ). (New usage is discouraged.)","origin":"thm dfid2(setvar s0) {\n  |- wceq(cid, copab(s0, s0, wceq(cv(s0), cv(s0))))\n} = {\n  dfid3(s0, s0)\n}","pretty":"thm dfid2(setvar s0) {\n  ⊢ = = { < s0, s0 > | s0 = s0 }\n} = {\n  dfid3(s0, s0)\n}","parent":["dfid3"],"children":["fsplit"]}]}