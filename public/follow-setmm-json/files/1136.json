{"index":1136,"title":"First-order logic: miscellaneous","content":"Miscellaneous theorems of first-order logic.","blocks":[{"name":"bj-sblem1","content":"Lemma for substitution. (Contributed by BJ, 23-Jul-2023.)","origin":"thm bj-sblem1(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wal(s0, wi(w0, wi(w1, w2))), wi(wal(s0, wi(w0, w1)), wi(wex(s0, w0), w2)))\n  -| diffsw(s0, w2)\n} = {\n  syl6ib(wal(s0, wi(w0, wi(w1, w2))), wal(s0, wi(w0, w1)), wi(wex(s0, w0), w2), wal(s0, wi(w0, w2)))\n  al2imi(s0, wi(w0, wi(w1, w2)), wi(w0, w1), wi(w0, w2))\n  ax-2(w0, w1, w2)\n  19.23v(s0, w0, w2)\n}","pretty":"thm bj-sblem1(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∀(s0,(w0 →(w1 → w2)))→(∀(s0,(w0 → w1))→(∃(s0, w0)→ w2)))\n  ⊣ d(s0, w2)\n} = {\n  syl6ib(∀(s0,(w0 →(w1 → w2))), ∀(s0,(w0 → w1)), (∃(s0, w0)→ w2), ∀(s0,(w0 → w2)))\n  al2imi(s0, (w0 →(w1 → w2)), (w0 → w1), (w0 → w2))\n  ax-2(w0, w1, w2)\n  19.23v(s0, w0, w2)\n}","parent":["syl6ib","al2imi","ax-2","19.23v"],"children":["bj-sbievw1"]},{"name":"bj-sblem2","content":"Lemma for substitution. (Contributed by BJ, 23-Jul-2023.)","origin":"thm bj-sblem2(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wal(s0, wi(w0, wi(w1, w2))), wi(wi(wex(s0, w0), w1), wal(s0, wi(w0, w2))))\n  -| diffsw(s0, w1)\n} = {\n  syl5bir(wal(s0, wi(w0, wi(w1, w2))), wi(wex(s0, w0), w1), wal(s0, wi(w0, w2)), wal(s0, wi(w0, w1)))\n  19.23v(s0, w0, w1)\n  al2imi(s0, wi(w0, wi(w1, w2)), wi(w0, w1), wi(w0, w2))\n  ax-2(w0, w1, w2)\n}","pretty":"thm bj-sblem2(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∀(s0,(w0 →(w1 → w2)))→((∃(s0, w0)→ w1)→ ∀(s0,(w0 → w2))))\n  ⊣ d(s0, w1)\n} = {\n  syl5bir(∀(s0,(w0 →(w1 → w2))), (∃(s0, w0)→ w1), ∀(s0,(w0 → w2)), ∀(s0,(w0 → w1)))\n  19.23v(s0, w0, w1)\n  al2imi(s0, (w0 →(w1 → w2)), (w0 → w1), (w0 → w2))\n  ax-2(w0, w1, w2)\n}","parent":["syl5bir","19.23v","al2imi","ax-2"],"children":["bj-sbievw2"]},{"name":"bj-sblem","content":"Lemma for substitution. (Contributed by BJ, 23-Jul-2023.)","origin":"thm bj-sblem(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(wal(s0, wi(w0, wb(w1, w2))), wb(wal(s0, wi(w0, w1)), wi(wex(s0, w0), w2)))\n  -| diffsw(s0, w2)\n} = {\n  syl6bb(wal(s0, wi(w0, wb(w1, w2))), wal(s0, wi(w0, w1)), wi(wex(s0, w0), w2), wal(s0, wi(w0, w2)))\n  sylbi(wal(s0, wi(w0, wb(w1, w2))), wb(wal(s0, wi(w0, w1)), wal(s0, wi(w0, w2))), wal(s0, wb(wi(w0, w1), wi(w0, w2))))\n  albii(s0, wi(w0, wb(w1, w2)), wb(wi(w0, w1), wi(w0, w2)))\n  pm5.74(w0, w1, w2)\n  albi(s0, wi(w0, w1), wi(w0, w2))\n  19.23v(s0, w0, w2)\n}","pretty":"thm bj-sblem(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (∀(s0,(w0 →(w1 ↔ w2)))→(∀(s0,(w0 → w1))↔(∃(s0, w0)→ w2)))\n  ⊣ d(s0, w2)\n} = {\n  syl6bb(∀(s0,(w0 →(w1 ↔ w2))), ∀(s0,(w0 → w1)), (∃(s0, w0)→ w2), ∀(s0,(w0 → w2)))\n  sylbi(∀(s0,(w0 →(w1 ↔ w2))), (∀(s0,(w0 → w1))↔ ∀(s0,(w0 → w2))), ∀(s0,((w0 → w1)↔(w0 → w2))))\n  albii(s0, (w0 →(w1 ↔ w2)), ((w0 → w1)↔(w0 → w2)))\n  pm5.74(w0, w1, w2)\n  albi(s0, (w0 → w1), (w0 → w2))\n  19.23v(s0, w0, w2)\n}","parent":["syl6bb","sylbi","albii","pm5.74","albi","19.23v"],"children":["bj-sbievw"]},{"name":"bj-sbievw1","content":"Lemma for substitution. (Contributed by BJ, 23-Jul-2023.)","origin":"thm bj-sbievw1(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wsb(s0, s1, wi(w0, w1)), wi(wsb(s0, s1, w0), w1))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w1)\n} = {\n  sylbi(wsb(s0, s1, wi(w0, w1)), wi(wsb(s0, s1, w0), w1), wal(s1, wi(wceq(cv(s1), cv(s0)), wi(w0, w1))))\n  sb6(s0, s1, wi(w0, w1))\n  3imtr4g(wal(s1, wi(wceq(cv(s1), cv(s0)), wi(w0, w1))), wsb(s0, s1, w0), w1, wal(s1, wi(wceq(cv(s1), cv(s0)), w0)), wi(wex(s1, wceq(cv(s1), cv(s0))), w1))\n  bj-sblem1(s1, wceq(cv(s1), cv(s0)), w0, w1)\n  sb6(s0, s1, w0)\n  a1bi(w1, wex(s1, wceq(cv(s1), cv(s0))))\n  ax6ev(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm bj-sbievw1(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1](w0 → w1)→([s0 / s1]w0 → w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w1)\n} = {\n  sylbi([s0 / s1](w0 → w1), ([s0 / s1]w0 → w1), ∀(s1,(s1 = s0 →(w0 → w1))))\n  sb6(s0, s1, (w0 → w1))\n  3imtr4g(∀(s1,(s1 = s0 →(w0 → w1))), [s0 / s1]w0, w1, ∀(s1,(s1 = s0 → w0)), (∃(s1, s1 = s0)→ w1))\n  bj-sblem1(s1, s1 = s0, w0, w1)\n  sb6(s0, s1, w0)\n  a1bi(w1, ∃(s1, s1 = s0))\n  ax6ev(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["sylbi","sb6","3imtr4g","bj-sblem1","a1bi","ax6ev","diffss.ex"],"children":[]},{"name":"bj-sbievw2","content":"Lemma for substitution. (Contributed by BJ, 23-Jul-2023.)","origin":"thm bj-sbievw2(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wsb(s0, s1, wi(w0, w1)), wi(w0, wsb(s0, s1, w1)))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w0)\n} = {\n  sylbi(wsb(s0, s1, wi(w0, w1)), wi(w0, wsb(s0, s1, w1)), wal(s1, wi(wceq(cv(s1), cv(s0)), wi(w0, w1))))\n  sb6(s0, s1, wi(w0, w1))\n  syl(wal(s1, wi(wceq(cv(s1), cv(s0)), wi(w0, w1))), wi(w0, wsb(s0, s1, w1)), wi(wi(wex(s1, wceq(cv(s1), cv(s0))), w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w1))))\n  bj-sblem2(s1, wceq(cv(s1), cv(s0)), w0, w1)\n  syl6ibr(wi(wi(wex(s1, wceq(cv(s1), cv(s0))), w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w1))), w0, wsb(s0, s1, w1), wal(s1, wi(wceq(cv(s1), cv(s0)), w1)))\n  jarr(wex(s1, wceq(cv(s1), cv(s0))), w0, wal(s1, wi(wceq(cv(s1), cv(s0)), w1)))\n  sb6(s0, s1, w1)\n}","pretty":"thm bj-sbievw2(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1](w0 → w1)→(w0 →[s0 / s1]w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w0)\n} = {\n  sylbi([s0 / s1](w0 → w1), (w0 →[s0 / s1]w1), ∀(s1,(s1 = s0 →(w0 → w1))))\n  sb6(s0, s1, (w0 → w1))\n  syl(∀(s1,(s1 = s0 →(w0 → w1))), (w0 →[s0 / s1]w1), ((∃(s1, s1 = s0)→ w0)→ ∀(s1,(s1 = s0 → w1))))\n  bj-sblem2(s1, s1 = s0, w0, w1)\n  syl6ibr(((∃(s1, s1 = s0)→ w0)→ ∀(s1,(s1 = s0 → w1))), w0, [s0 / s1]w1, ∀(s1,(s1 = s0 → w1)))\n  jarr(∃(s1, s1 = s0), w0, ∀(s1,(s1 = s0 → w1)))\n  sb6(s0, s1, w1)\n}","parent":["sylbi","sb6","syl","bj-sblem2","syl6ibr","jarr"],"children":[]},{"name":"bj-sbievw","content":"Lemma for substitution. Closed form of ~ equsalvw and ~ sbievw . (Contributed by BJ, 23-Jul-2023.)","origin":"thm bj-sbievw(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wi(wsb(s0, s1, wb(w0, w1)), wb(wsb(s0, s1, w0), w1))\n  -| diffss(s0, s1)\n  -| diffsw(s1, w1)\n} = {\n  sylbi(wsb(s0, s1, wb(w0, w1)), wb(wsb(s0, s1, w0), w1), wal(s1, wi(wceq(cv(s1), cv(s0)), wb(w0, w1))))\n  sb6(s0, s1, wb(w0, w1))\n  3bitr4g(wal(s1, wi(wceq(cv(s1), cv(s0)), wb(w0, w1))), wsb(s0, s1, w0), w1, wal(s1, wi(wceq(cv(s1), cv(s0)), w0)), wi(wex(s1, wceq(cv(s1), cv(s0))), w1))\n  bj-sblem(s1, wceq(cv(s1), cv(s0)), w0, w1)\n  sb6(s0, s1, w0)\n  a1bi(w1, wex(s1, wceq(cv(s1), cv(s0))))\n  ax6ev(s1, s0)\n  diffss.ex(s1, s0)\n}","pretty":"thm bj-sbievw(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1](w0 ↔ w1)→([s0 / s1]w0 ↔ w1))\n  ⊣ d(s0, s1)\n  ⊣ d(s1, w1)\n} = {\n  sylbi([s0 / s1](w0 ↔ w1), ([s0 / s1]w0 ↔ w1), ∀(s1,(s1 = s0 →(w0 ↔ w1))))\n  sb6(s0, s1, (w0 ↔ w1))\n  3bitr4g(∀(s1,(s1 = s0 →(w0 ↔ w1))), [s0 / s1]w0, w1, ∀(s1,(s1 = s0 → w0)), (∃(s1, s1 = s0)→ w1))\n  bj-sblem(s1, s1 = s0, w0, w1)\n  sb6(s0, s1, w0)\n  a1bi(w1, ∃(s1, s1 = s0))\n  ax6ev(s1, s0)\n  diffss.ex(s1, s0)\n}","parent":["sylbi","sb6","3bitr4g","bj-sblem","a1bi","ax6ev","diffss.ex"],"children":[]},{"name":"bj-sbievv","content":"Version of ~ sbie with a second nonfreeness hypothesis and shorter proof. (Contributed by BJ, 18-Jul-2023.)","origin":"thm bj-sbievv(setvar s0, setvar s1, wff w0, wff w1) {\n  |- wb(wsb(s0, s1, w0), w1)\n  -| wnf(s1, w1)\n  -| wnf(s0, w0)\n  -| wi(wceq(cv(s1), cv(s0)), wb(w0, w1))\n} = {\n  bitri(wsb(s0, s1, w0), w1, wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n  sb6f(s0, s1, w0)\n  equsal(s1, s0, w0, w1)\n}","pretty":"thm bj-sbievv(setvar s0, setvar s1, wff w0, wff w1) {\n  ⊢ ([s0 / s1]w0 ↔ w1)\n  ⊣ F/(s1, w1)\n  ⊣ F/(s0, w0)\n  ⊣ (s1 = s0 →(w0 ↔ w1))\n} = {\n  bitri([s0 / s1]w0, w1, ∀(s1,(s1 = s0 → w0)))\n  sb6f(s0, s1, w0)\n  equsal(s1, s0, w0, w1)\n}","parent":["bitri","sb6f","equsal"],"children":[]},{"name":"bj-moeub","content":"Uniqueness is equivalent to existence being equivalent to unique existence. (Contributed by BJ, 14-Oct-2022.)","origin":"thm bj-moeub(setvar s0, wff w0) {\n  |- wb(wmo(s0, w0), wb(wex(s0, w0), weu(s0, w0)))\n} = {\n  bitri(wmo(s0, w0), wb(wex(s0, w0), weu(s0, w0)), wi(wex(s0, w0), weu(s0, w0)))\n  moeu(s0, w0)\n  impbii(wi(wex(s0, w0), weu(s0, w0)), wb(wex(s0, w0), weu(s0, w0)))\n  mpi(wi(wex(s0, w0), weu(s0, w0)), wb(wex(s0, w0), weu(s0, w0)), wi(weu(s0, w0), wex(s0, w0)))\n  euex(s0, w0)\n  impbi(wex(s0, w0), weu(s0, w0))\n  biimp(wex(s0, w0), weu(s0, w0))\n}","pretty":"thm bj-moeub(setvar s0, wff w0) {\n  ⊢ (∃*(s0, w0)↔(∃(s0, w0)↔ ∃!(s0, w0)))\n} = {\n  bitri(∃*(s0, w0), (∃(s0, w0)↔ ∃!(s0, w0)), (∃(s0, w0)→ ∃!(s0, w0)))\n  moeu(s0, w0)\n  impbii((∃(s0, w0)→ ∃!(s0, w0)), (∃(s0, w0)↔ ∃!(s0, w0)))\n  mpi((∃(s0, w0)→ ∃!(s0, w0)), (∃(s0, w0)↔ ∃!(s0, w0)), (∃!(s0, w0)→ ∃(s0, w0)))\n  euex(s0, w0)\n  impbi(∃(s0, w0), ∃!(s0, w0))\n  biimp(∃(s0, w0), ∃!(s0, w0))\n}","parent":["bitri","moeu","impbii","mpi","euex","impbi","biimp"],"children":[]},{"name":"bj-sbidmOLD","content":"Obsolete proof of ~ sbidm temporarily kept here to check it gives no additional insight. (Contributed by NM, 8-Mar-1995.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm bj-sbidmOLD(setvar s0, setvar s1, wff w0) {\n  |- wb(wsb(s0, s1, wsb(s0, s1, w0)), wsb(s0, s1, w0))\n} = {\n  mpbi(wb(wsb(s0, s1, wsb(s0, s1, w0)), wsb(s0, s1, w0)), wsb(s0, s1, wb(wsb(s0, s1, w0), w0)))\n  ax-mp(wsb(s0, s1, wb(wsb(s0, s1, w0), w0)), wsb(s0, s1, wceq(cv(s0), cv(s1))))\n  equsb2(s0, s1)\n  sbimi(s0, s1, wceq(cv(s0), cv(s1)), wb(wsb(s0, s1, w0), w0))\n  sbequ12r(s0, s1, w0)\n  sbbi(s0, s1, wsb(s0, s1, w0), w0)\n}","pretty":"thm bj-sbidmOLD(setvar s0, setvar s1, wff w0) {\n  ⊢ ([s0 / s1][s0 / s1]w0 ↔[s0 / s1]w0)\n} = {\n  mpbi(([s0 / s1][s0 / s1]w0 ↔[s0 / s1]w0), [s0 / s1]([s0 / s1]w0 ↔ w0))\n  ax-mp([s0 / s1]([s0 / s1]w0 ↔ w0), [s0 / s1]s0 = s1)\n  equsb2(s0, s1)\n  sbimi(s0, s1, s0 = s1, ([s0 / s1]w0 ↔ w0))\n  sbequ12r(s0, s1, w0)\n  sbbi(s0, s1, [s0 / s1]w0, w0)\n}","parent":["mpbi","ax-mp","equsb2","sbimi","sbequ12r","sbbi"],"children":[]},{"name":"bj-dvelimdv","content":"Deduction form of ~ dvelim with disjoint variable conditions. Uncurried (imported) form of ~ bj-dvelimdv1 . Typically, ` z ` is a fresh variable used for the implicit substitution hypothesis that results in ` ch ` (namely, ` ps ` can be thought as ` ps ( x , y ) ` and ` ch ` as ` ps ( x , z ) ` ). So the theorem says that if x is effectively free in ` ps ( x , z ) ` , then if x and y are not the same variable, then ` x ` is also effectively free in ` ps ( x , y ) ` , in a context ` ph ` . One can weaken the implicit substitution hypothesis by adding the antecedent ` ph ` but this typically does not make the theorem much more useful. Similarly, one could use nonfreeness hypotheses instead of disjoint variable conditions but since this result is typically used when ` z ` is a dummy variable, this would not be of much benefit. One could also remove DV(x,z) since in the proof ~ nfv can be replaced with ~ nfal followed by ~ nfn . Remark: ~ nfald uses ~ ax-11 ; it might be possible to inline and use ~ ax11w instead, but there is still a use via ~ 19.12 anyway. (Contributed by BJ, 20-Oct-2021.) (Proof modification is discouraged.)","origin":"thm bj-dvelimdv(setvar s0, setvar s1, setvar s2, wff w0, wff w1, wff w2) {\n  |- wi(wa(w0, wn(wal(s0, wceq(cv(s0), cv(s1))))), wnf(s0, w1))\n  -| wi(w0, wnf(s0, w2))\n  -| wi(wceq(cv(s2), cv(s1)), wb(w2, w1))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s2, w0)\n  -| diffsw(s2, w1)\n} = {\n  nfxfrd(s0, wa(w0, wn(wal(s0, wceq(cv(s0), cv(s1))))), w1, wal(s2, wi(wceq(cv(s2), cv(s1)), w2)))\n  bicomi(w1, wal(s2, wi(wceq(cv(s2), cv(s1)), w2)))\n  equsalvw(s2, s1, w2, w1)\n  nfald(s0, s2, wa(w0, wn(wal(s0, wceq(cv(s0), cv(s1))))), wi(wceq(cv(s2), cv(s1)), w2))\n  nfan(s2, w0, wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  nfv(s2, w0)\n  nfv(s2, wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  nfimd(s0, wa(w0, wn(wal(s0, wceq(cv(s0), cv(s1))))), wceq(cv(s2), cv(s1)), w2)\n  adantl(w0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, wceq(cv(s2), cv(s1))))\n  nfeqf2(s0, s1, s2)\n  adantr(w0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, w2))\n  diff.wn.s(s2, wal(s0, wceq(cv(s0), cv(s1))))\n  diff.wal.s(s2, s0, wceq(cv(s0), cv(s1)))\n  diff.wceq.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm bj-dvelimdv(setvar s0, setvar s1, setvar s2, wff w0, wff w1, wff w2) {\n  ⊢ ((w0 ∧ ¬ ∀(s0, s0 = s1))→ F/(s0, w1))\n  ⊣ (w0 → F/(s0, w2))\n  ⊣ (s2 = s1 →(w2 ↔ w1))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s2, w0)\n  ⊣ d(s2, w1)\n} = {\n  nfxfrd(s0, (w0 ∧ ¬ ∀(s0, s0 = s1)), w1, ∀(s2,(s2 = s1 → w2)))\n  bicomi(w1, ∀(s2,(s2 = s1 → w2)))\n  equsalvw(s2, s1, w2, w1)\n  nfald(s0, s2, (w0 ∧ ¬ ∀(s0, s0 = s1)), (s2 = s1 → w2))\n  nfan(s2, w0, ¬ ∀(s0, s0 = s1))\n  nfv(s2, w0)\n  nfv(s2, ¬ ∀(s0, s0 = s1))\n  nfimd(s0, (w0 ∧ ¬ ∀(s0, s0 = s1)), s2 = s1, w2)\n  adantl(w0, ¬ ∀(s0, s0 = s1), F/(s0, s2 = s1))\n  nfeqf2(s0, s1, s2)\n  adantr(w0, ¬ ∀(s0, s0 = s1), F/(s0, w2))\n  diff.wn.s(s2, ∀(s0, s0 = s1))\n  diff.wal.s(s2, s0, s0 = s1)\n  diff.wceq.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["nfxfrd","bicomi","equsalvw","nfald","nfan","nfv","nfimd","adantl","nfeqf2","adantr","diff.wn.s","diff.wal.s","diff.wceq.s","diff.cv.s","diffss.ex"],"children":[]},{"name":"bj-dvelimdv1","content":"Curried (exported) form of ~ bj-dvelimdv (of course, one is directly provable from the other, but we keep this proof for illustration purposes). (Contributed by BJ, 20-Oct-2021.) (Proof modification is discouraged.)","origin":"thm bj-dvelimdv1(setvar s0, setvar s1, setvar s2, wff w0, wff w1, wff w2) {\n  |- wi(w0, wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, w1)))\n  -| wi(w0, wnf(s0, w2))\n  -| wi(wceq(cv(s2), cv(s1)), wb(w2, w1))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s2, w0)\n  -| diffsw(s2, w1)\n} = {\n  bj-syl66ib(w0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, w1), wal(s2, wnf(s0, wi(wceq(cv(s2), cv(s1)), w2))), wnf(s0, wal(s2, wi(wceq(cv(s2), cv(s1)), w2))))\n  alrimdv(s2, w0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, wi(wceq(cv(s2), cv(s1)), w2)))\n  syl2imc(w0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, wi(wceq(cv(s2), cv(s1)), w2)), wnf(s0, wceq(cv(s2), cv(s1))), wnf(s0, w2))\n  nfeqf2(s0, s1, s2)\n  bj-nfimt(s0, wceq(cv(s2), cv(s1)), w2)\n  bj-nfalt(s2, s0, wi(wceq(cv(s2), cv(s1)), w2))\n  nfbii(s0, wal(s2, wi(wceq(cv(s2), cv(s1)), w2)), w1)\n  equsalvw(s2, s1, w2, w1)\n  diff.wn.s(s2, wal(s0, wceq(cv(s0), cv(s1))))\n  diff.wal.s(s2, s0, wceq(cv(s0), cv(s1)))\n  diff.wceq.s(s2, cv(s0), cv(s1))\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","pretty":"thm bj-dvelimdv1(setvar s0, setvar s1, setvar s2, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(¬ ∀(s0, s0 = s1)→ F/(s0, w1)))\n  ⊣ (w0 → F/(s0, w2))\n  ⊣ (s2 = s1 →(w2 ↔ w1))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s2, w0)\n  ⊣ d(s2, w1)\n} = {\n  bj-syl66ib(w0, ¬ ∀(s0, s0 = s1), F/(s0, w1), ∀(s2, F/(s0,(s2 = s1 → w2))), F/(s0, ∀(s2,(s2 = s1 → w2))))\n  alrimdv(s2, w0, ¬ ∀(s0, s0 = s1), F/(s0,(s2 = s1 → w2)))\n  syl2imc(w0, ¬ ∀(s0, s0 = s1), F/(s0,(s2 = s1 → w2)), F/(s0, s2 = s1), F/(s0, w2))\n  nfeqf2(s0, s1, s2)\n  bj-nfimt(s0, s2 = s1, w2)\n  bj-nfalt(s2, s0, (s2 = s1 → w2))\n  nfbii(s0, ∀(s2,(s2 = s1 → w2)), w1)\n  equsalvw(s2, s1, w2, w1)\n  diff.wn.s(s2, ∀(s0, s0 = s1))\n  diff.wal.s(s2, s0, s0 = s1)\n  diff.wceq.s(s2, s0, s1)\n  diff.cv.s(s2, s0)\n  diffss.ex(s2, s0)\n  diff.cv.s(s2, s1)\n  diffss.ex(s2, s1)\n}","parent":["bj-syl66ib","alrimdv","syl2imc","nfeqf2","bj-nfimt","bj-nfalt","nfbii","equsalvw","diff.wn.s","diff.wal.s","diff.wceq.s","diff.cv.s","diffss.ex"],"children":["bj-dvelimv","bj-axc14nf"]},{"name":"bj-dvelimv","content":"A version of ~ dvelim using the \"nonfree\" idiom. (Contributed by BJ, 20-Oct-2021.) (Proof modification is discouraged.)","origin":"thm bj-dvelimv(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  |- wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, w0))\n  -| wnf(s0, w1)\n  -| wi(wceq(cv(s2), cv(s1)), wb(w1, w0))\n  -| diffss(s0, s2)\n  -| diffss(s1, s2)\n  -| diffsw(s2, w0)\n} = {\n  mptru(wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, w0)))\n  bj-dvelimdv1(s0, s1, s2, wtru, w0, w1)\n  a1i(wtru, wnf(s0, w1))\n  diff.wtru.s(s2)\n}","pretty":"thm bj-dvelimv(setvar s0, setvar s1, setvar s2, wff w0, wff w1) {\n  ⊢ (¬ ∀(s0, s0 = s1)→ F/(s0, w0))\n  ⊣ F/(s0, w1)\n  ⊣ (s2 = s1 →(w1 ↔ w0))\n  ⊣ d(s0, s2)\n  ⊣ d(s1, s2)\n  ⊣ d(s2, w0)\n} = {\n  mptru((¬ ∀(s0, s0 = s1)→ F/(s0, w0)))\n  bj-dvelimdv1(s0, s1, s2, wtru, w0, w1)\n  a1i(wtru, F/(s0, w1))\n  diff.wtru.s(s2)\n}","parent":["mptru","bj-dvelimdv1","a1i","diff.wtru.s"],"children":["bj-nfeel2"]},{"name":"bj-nfeel2","content":"Nonfreeness in a membership statement. (Contributed by BJ, 20-Oct-2021.) (Proof modification is discouraged.)","origin":"thm bj-nfeel2(setvar s0, setvar s1, setvar s2) {\n  |- wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wnf(s0, wcel(cv(s1), cv(s2))))\n  -| diffss(s0, s2)\n} = {\n  bj-dvelimv(s0, s1, hs0, wcel(cv(s1), cv(s2)), wcel(cv(hs0), cv(s2)))\n  nfv(s0, wcel(cv(hs0), cv(s2)))\n  elequ1(hs0, s1, s2)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(wcel(cv(s1), cv(s2)))\n  diff.wcel.s(s0, cv(hs0), cv(s2))\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s2)\n}","pretty":"thm bj-nfeel2(setvar s0, setvar s1, setvar s2) {\n  ⊢ (¬ ∀(s0, s0 = s1)→ F/(s0, s1 ∈ s2))\n  ⊣ d(s0, s2)\n} = {\n  bj-dvelimv(s0, s1, hs0, s1 ∈ s2, hs0 ∈ s2)\n  nfv(s0, hs0 ∈ s2)\n  elequ1(hs0, s1, s2)\n  diffss.ex(s1, hs0)\n  diff.hs0.s(s1)\n  diff.hs0.w(s1 ∈ s2)\n  diff.wcel.s(s0, hs0, s2)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.cv.s(s0, s2)\n}","parent":["bj-dvelimv","nfv","elequ1","diffss.ex","diff.hs0.s","diff.hs0.w","diff.wcel.s","diff.cv.s"],"children":["bj-axc14nf"]},{"name":"bj-axc14nf","content":"Proof of a version of ~ axc14 using the \"nonfree\" idiom. (Contributed by BJ, 20-Oct-2021.) (Proof modification is discouraged.)","origin":"thm bj-axc14nf(setvar s0, setvar s1, setvar s2) {\n  |- wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wi(wn(wal(s0, wceq(cv(s0), cv(s2)))), wnf(s0, wcel(cv(s1), cv(s2)))))\n} = {\n  bj-dvelimdv1(s0, s2, hs0, wn(wal(s0, wceq(cv(s0), cv(s1)))), wcel(cv(s1), cv(s2)), wcel(cv(s1), cv(hs0)))\n  bj-nfeel2(s0, s1, hs0)\n  elequ2(hs0, s2, s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(wn(wal(s0, wceq(cv(s0), cv(s1)))))\n  diff.hs0.w(wcel(cv(s1), cv(s2)))\n}","pretty":"thm bj-axc14nf(setvar s0, setvar s1, setvar s2) {\n  ⊢ (¬ ∀(s0, s0 = s1)→(¬ ∀(s0, s0 = s2)→ F/(s0, s1 ∈ s2)))\n} = {\n  bj-dvelimdv1(s0, s2, hs0, ¬ ∀(s0, s0 = s1), s1 ∈ s2, s1 ∈ hs0)\n  bj-nfeel2(s0, s1, hs0)\n  elequ2(hs0, s2, s1)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diffss.ex(s2, hs0)\n  diff.hs0.s(s2)\n  diff.hs0.w(¬ ∀(s0, s0 = s1))\n  diff.hs0.w(s1 ∈ s2)\n}","parent":["bj-dvelimdv1","bj-nfeel2","elequ2","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["bj-axc14"]},{"name":"bj-axc14","content":"Alternate proof of ~ axc14 (even when inlining the above results, this gives a shorter proof). (Contributed by BJ, 20-Oct-2021.) (Proof modification is discouraged.)","origin":"thm bj-axc14(setvar s0, setvar s1, setvar s2) {\n  |- wi(wn(wal(s0, wceq(cv(s0), cv(s1)))), wi(wn(wal(s0, wceq(cv(s0), cv(s2)))), wi(wcel(cv(s1), cv(s2)), wal(s0, wcel(cv(s1), cv(s2))))))\n} = {\n  syld(wn(wal(s0, wceq(cv(s0), cv(s1)))), wn(wal(s0, wceq(cv(s0), cv(s2)))), wi(wcel(cv(s1), cv(s2)), wal(s0, wcel(cv(s1), cv(s2)))), wnf(s0, wcel(cv(s1), cv(s2))))\n  bj-axc14nf(s0, s1, s2)\n  a1i(wn(wal(s0, wceq(cv(s0), cv(s1)))), wi(wnf(s0, wcel(cv(s1), cv(s2))), wi(wcel(cv(s1), cv(s2)), wal(s0, wcel(cv(s1), cv(s2))))))\n  nf5r(s0, wcel(cv(s1), cv(s2)))\n}","pretty":"thm bj-axc14(setvar s0, setvar s1, setvar s2) {\n  ⊢ (¬ ∀(s0, s0 = s1)→(¬ ∀(s0, s0 = s2)→(s1 ∈ s2 → ∀(s0, s1 ∈ s2))))\n} = {\n  syld(¬ ∀(s0, s0 = s1), ¬ ∀(s0, s0 = s2), (s1 ∈ s2 → ∀(s0, s1 ∈ s2)), F/(s0, s1 ∈ s2))\n  bj-axc14nf(s0, s1, s2)\n  a1i(¬ ∀(s0, s0 = s1), (F/(s0, s1 ∈ s2)→(s1 ∈ s2 → ∀(s0, s1 ∈ s2))))\n  nf5r(s0, s1 ∈ s2)\n}","parent":["syld","bj-axc14nf","a1i","nf5r"],"children":[]},{"name":"mobidvALT","content":"Alternate proof of ~ mobidv directly from its analogues ~ albidv and ~ exbidv , using deduction style. Note the proof structure, similar to ~ mobi . (Contributed by Mario Carneiro, 7-Oct-2016.) Reduce axiom dependencies and shorten proof. Remove dependency on ~ ax-6 , ~ ax-7 , ~ ax-12 by adapting proof of ~ mobid . (Revised by BJ, 26-Sep-2022.) (Proof modification is discouraged.) (New usage is discouraged.)","origin":"thm mobidvALT(setvar s0, wff w0, wff w1, wff w2) {\n  |- wi(w0, wb(wmo(s0, w1), wmo(s0, w2)))\n  -| wi(w0, wb(w1, w2))\n  -| diffsw(s0, w0)\n} = {\n  3bitr4g(w0, wmo(s0, w1), wmo(s0, w2), wex(hs0, wal(s0, wi(w1, wceq(cv(s0), cv(hs0))))), wex(hs0, wal(s0, wi(w2, wceq(cv(s0), cv(hs0))))))\n  exbidv(hs0, w0, wal(s0, wi(w1, wceq(cv(s0), cv(hs0)))), wal(s0, wi(w2, wceq(cv(s0), cv(hs0)))))\n  albidv(s0, w0, wi(w1, wceq(cv(s0), cv(hs0))), wi(w2, wceq(cv(s0), cv(hs0))))\n  imbi1d(w0, w1, wceq(cv(s0), cv(hs0)), w2)\n  df-mo(s0, hs0, w1)\n  df-mo(s0, hs0, w2)\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w1)\n  diff.hs0.w(w2)\n}","pretty":"thm mobidvALT(setvar s0, wff w0, wff w1, wff w2) {\n  ⊢ (w0 →(∃*(s0, w1)↔ ∃*(s0, w2)))\n  ⊣ (w0 →(w1 ↔ w2))\n  ⊣ d(s0, w0)\n} = {\n  3bitr4g(w0, ∃*(s0, w1), ∃*(s0, w2), ∃(hs0, ∀(s0,(w1 → s0 = hs0))), ∃(hs0, ∀(s0,(w2 → s0 = hs0))))\n  exbidv(hs0, w0, ∀(s0,(w1 → s0 = hs0)), ∀(s0,(w2 → s0 = hs0)))\n  albidv(s0, w0, (w1 → s0 = hs0), (w2 → s0 = hs0))\n  imbi1d(w0, w1, s0 = hs0, w2)\n  df-mo(s0, hs0, w1)\n  df-mo(s0, hs0, w2)\n  diff.hs0.w(w0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.w(w1)\n  diff.hs0.w(w2)\n}","parent":["3bitr4g","exbidv","albidv","imbi1d","df-mo","diff.hs0.w","diffss.ex","diff.hs0.s"],"children":[]}]}