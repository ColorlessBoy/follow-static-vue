{"index":977,"title":"Preimage set mapping operator","content":"","blocks":[{"name":"corvc","content":"Extend class notation to include the preimage set mapping operator.","origin":"prop class corvc(class c0) { oRVC(c0) }","pretty":"","parent":[],"children":[]},{"name":"diff.corvc.s","content":"","origin":"axiom diff.corvc.s(setvar sBase, class c0) {\n  |- diffsc(sBase, corvc(c0))\n  -| diffsc(sBase, c0)\n}","pretty":"axiom diff.corvc.s(setvar sBase, class c0) {\n  ‚ä¢ d(sBase, oRVC(c0))\n  ‚ä£ d(sBase, c0)\n}","parent":[],"children":[]},{"name":"diff.corvc.c","content":"","origin":"axiom diff.corvc.c(class cBase, class c0) {\n  |- diffcc(cBase, corvc(c0))\n  -| diffcc(cBase, c0)\n}","pretty":"axiom diff.corvc.c(class cBase, class c0) {\n  ‚ä¢ d(cBase, oRVC(c0))\n  ‚ä£ d(cBase, c0)\n}","parent":[],"children":[]},{"name":"diff.corvc.w","content":"","origin":"axiom diff.corvc.w(wff wBase, class c0) {\n  |- diffcw(corvc(c0), wBase)\n  -| diffcw(c0, wBase)\n}","pretty":"axiom diff.corvc.w(wff wBase, class c0) {\n  ‚ä¢ d(oRVC(c0), wBase)\n  ‚ä£ d(c0, wBase)\n}","parent":[],"children":[]},{"name":"df-orvc","content":"Define the preimage set mapping operator. In probability theory, the notation ` P ( X = A ) ` denotes the probability that a random variable ` X ` takes the value ` A ` . We introduce here an operator which enables to write this in Metamath as ` ( P `` ( X oRVC _I A ) ) ` , and keep a similar notation. Because with this notation ` ( X oRVC _I A ) ` is a set, we can also apply it to conditional probabilities, like in ` ( P `` ( X oRVC _I A ) | ( Y oRVC _I B ) ) ) ` . The oRVC operator transforms a relation ` R ` into an operation taking a random variable ` X ` and a constant ` C ` , and returning the preimage through ` X ` of the equivalence class of ` C ` . The most commonly used relations are: - equality: ` { X = A } ` as ` ( X oRVC _I A ) ` cf. ~ ideq - elementhood: ` { X e. A } ` as ` ( X oRVC _E A ) ` cf. ~ epel - less-than: ` { X <_ A } ` as ` ( X oRVC <_ A ) ` Even though it is primarily designed to be used within probability theory and with random variables, this operator is defined on generic functions, and could be used in other fields, e.g., for continuous functions. (Contributed by Thierry Arnoux, 15-Jan-2017.)","origin":"axiom df-orvc(setvar s0, setvar s1, setvar s2, class c0) {\n  |- wceq(corvc(c0), cmpo(s0, s1, cab(s0, wfun(cv(s0))), universe, cima(ccnv(cv(s0)), cab(s2, wbr(cv(s2), c0, cv(s1))))))\n  -| diffss(s0, s1)\n  -| diffss(s1, s2)\n  -| diffss(s0, s2)\n  -| diffsc(s1, c0)\n  -| diffsc(s0, c0)\n  -| diffsc(s2, c0)\n}","pretty":"axiom df-orvc(setvar s0, setvar s1, setvar s2, class c0) {\n  ‚ä¢ oRVC(c0)=(s0 ‚àà { s0 | Fun(s0)}, s1 ‚àà ùïå ‚Ü¶(`' s0 \" { s2 | s2[c0]s1 }))\n  ‚ä£ d(s0, s1)\n  ‚ä£ d(s1, s2)\n  ‚ä£ d(s0, s2)\n  ‚ä£ d(s1, c0)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s2, c0)\n}","parent":[],"children":["orvcval"]},{"name":"orvcval","content":"Value of the preimage mapping operator applied on a given random variable and constant. (Contributed by Thierry Arnoux, 19-Jan-2017.)","origin":"thm orvcval(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(w0, wceq(co(c0, corvc(c1), c2), cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2)))))\n  -| wi(w0, wfun(c0))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(c2, c4))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  ovmpt2d(hs0, hs1, c0, corvc(c1), c2, cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2))), cab(hs0, wfun(cv(hs0))), universe, cima(ccnv(cv(hs0)), cab(s0, wbr(cv(s0), c1, cv(hs1)))), universe, w0)\n  a1i(w0, wceq(corvc(c1), cmpo(hs0, hs1, cab(hs0, wfun(cv(hs0))), universe, cima(ccnv(cv(hs0)), cab(s0, wbr(cv(s0), c1, cv(hs1)))))))\n  df-orvc(hs0, hs1, s0, c1)\n  adantl(w0, wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)), wceq(cima(ccnv(cv(hs0)), cab(s0, wbr(cv(s0), c1, cv(hs1)))), cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2)))))\n  imaeq12d(ccnv(cv(hs0)), cab(s0, wbr(cv(s0), c1, cv(hs1))), ccnv(c0), cab(s0, wbr(cv(s0), c1, c2)), wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)))\n  cnveqd(cv(hs0), c0, wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)))\n  simpl(wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  abbidv(s0, wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)), wbr(cv(s0), c1, cv(hs1)), wbr(cv(s0), c1, c2))\n  breq2d(cv(s0), c1, cv(hs1), c2, wa(wceq(cv(hs0), c0), wceq(cv(hs1), c2)))\n  simpr(wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  mpbird(w0, wcel(c0, cab(hs0, wfun(cv(hs0)))), wfun(c0))\n  syl(w0, wb(wcel(c0, cab(hs0, wfun(cv(hs0)))), wfun(c0)), wcel(c0, c3))\n  elabg(hs0, c0, c3, wfun(cv(hs0)), wfun(c0))\n  funeq(cv(hs0), c0)\n  syl(w0, wcel(c2, universe), wcel(c2, c4))\n  elex(c2, c4)\n  3syl(w0, wcel(cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2))), universe), wcel(c0, c3), wcel(ccnv(c0), universe))\n  cnvexg(c0, c3)\n  imaexg(ccnv(c0), universe, cab(s0, wbr(cv(s0), c1, c2)))\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c(cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2))))\n  diff.hs1.c(c0)\n  diff.hs1.c(c2)\n  diff.hs1.c(cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2))))\n  diff.hs0.w(w0)\n  diff.hs1.w(w0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c1)\n  diff.wa.s(s0, wceq(cv(hs0), c0), wceq(cv(hs1), c2))\n  diff.wceq.s(s0, cv(hs0), c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wceq.s(s0, cv(hs1), c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.hs0.w(wfun(c0))\n}","pretty":"thm orvcval(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)=(`' c0 \" { s0 | s0[c1]c2 }))\n  ‚ä£ (w0 ‚Üí Fun(c0))\n  ‚ä£ (w0 ‚Üí c0 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  ovmpt2d(hs0, hs1, c0, oRVC(c1), c2, (`' c0 \" { s0 | s0[c1]c2 }), { hs0 | Fun(hs0)}, universe, (`' hs0 \" { s0 | s0[c1]hs1 }), universe, w0)\n  a1i(w0, oRVC(c1)=(hs0 ‚àà { hs0 | Fun(hs0)}, hs1 ‚àà ùïå ‚Ü¶(`' hs0 \" { s0 | s0[c1]hs1 })))\n  df-orvc(hs0, hs1, s0, c1)\n  adantl(w0, (hs0 = c0 ‚àß hs1 = c2), (`' hs0 \" { s0 | s0[c1]hs1 })=(`' c0 \" { s0 | s0[c1]c2 }))\n  imaeq12d(`' hs0, { s0 | s0[c1]hs1 }, `' c0, { s0 | s0[c1]c2 }, (hs0 = c0 ‚àß hs1 = c2))\n  cnveqd(hs0, c0, (hs0 = c0 ‚àß hs1 = c2))\n  simpl(hs0 = c0, hs1 = c2)\n  abbidv(s0, (hs0 = c0 ‚àß hs1 = c2), s0[c1]hs1, s0[c1]c2)\n  breq2d(s0, c1, hs1, c2, (hs0 = c0 ‚àß hs1 = c2))\n  simpr(hs0 = c0, hs1 = c2)\n  mpbird(w0, c0 ‚àà { hs0 | Fun(hs0)}, Fun(c0))\n  syl(w0, (c0 ‚àà { hs0 | Fun(hs0)} ‚Üî Fun(c0)), c0 ‚àà c3)\n  elabg(hs0, c0, c3, Fun(hs0), Fun(c0))\n  funeq(hs0, c0)\n  syl(w0, c2 ‚àà ùïå, c2 ‚àà c4)\n  elex(c2, c4)\n  3syl(w0, (`' c0 \" { s0 | s0[c1]c2 })‚àà ùïå, c0 ‚àà c3, `' c0 ‚àà ùïå)\n  cnvexg(c0, c3)\n  imaexg(`' c0, universe, { s0 | s0[c1]c2 })\n  diff.hs0.s(hs1)\n  diff.hs0.c(c0)\n  diff.hs0.c(c2)\n  diff.hs0.c((`' c0 \" { s0 | s0[c1]c2 }))\n  diff.hs1.c(c0)\n  diff.hs1.c(c2)\n  diff.hs1.c((`' c0 \" { s0 | s0[c1]c2 }))\n  diff.hs0.w(w0)\n  diff.hs1.w(w0)\n  diff.hs1.c(c1)\n  diff.hs0.c(c1)\n  diff.wa.s(s0, hs0 = c0, hs1 = c2)\n  diff.wceq.s(s0, hs0, c0)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.wceq.s(s0, hs1, c2)\n  diff.cv.s(s0, hs1)\n  diffss.ex(s0, hs1)\n  diff.hs1.s(s0)\n  diff.hs0.w(Fun(c0))\n}","parent":["ovmpt2d","a1i","df-orvc","adantl","imaeq12d","cnveqd","simpl","abbidv","breq2d","simpr","mpbird","syl","elabg","funeq","elex","3syl","cnvexg","imaexg","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs0.w","diff.hs1.w","diff.wa.s","diff.wceq.s","diff.cv.s","diffss.ex","diff.hs1.s"],"children":["orvcval2","orvcval4"]},{"name":"orvcval2","content":"Another way to express the value of the preimage mapping operator. (Contributed by Thierry Arnoux, 19-Jan-2017.)","origin":"thm orvcval2(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(w0, wceq(co(c0, corvc(c1), c2), crab(s0, cdm(c0), wbr(cfv(c0, cv(s0)), c1, c2))))\n  -| wi(w0, wfun(c0))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(c2, c4))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  3eqtrd(co(c0, corvc(c1), c2), crab(s0, cdm(c0), wbr(cfv(c0, cv(s0)), c1, c2)), cima(ccnv(c0), cab(hs0, wbr(cv(hs0), c1, c2))), crab(s0, cdm(c0), wcel(cfv(c0, cv(s0)), cab(hs0, wbr(cv(hs0), c1, c2)))), w0)\n  orvcval(hs0, c0, c1, c2, c3, c4, w0)\n  syl(w0, wceq(cima(ccnv(c0), cab(hs0, wbr(cv(hs0), c1, c2))), crab(s0, cdm(c0), wcel(cfv(c0, cv(s0)), cab(hs0, wbr(cv(hs0), c1, c2))))), wfn(c0, cdm(c0)))\n  sylib(w0, wfn(c0, cdm(c0)), wfun(c0))\n  funfn(c0)\n  fncnvima2(s0, c0, cdm(c0), cab(hs0, wbr(cv(hs0), c1, c2)))\n  a1i(w0, wceq(crab(s0, cdm(c0), wcel(cfv(c0, cv(s0)), cab(hs0, wbr(cv(hs0), c1, c2)))), crab(s0, cdm(c0), wbr(cfv(c0, cv(s0)), c1, c2))))\n  rabbii(s0, cdm(c0), wcel(cfv(c0, cv(s0)), cab(hs0, wbr(cv(hs0), c1, c2))), wbr(cfv(c0, cv(s0)), c1, c2))\n  elab(hs0, cfv(c0, cv(s0)), wbr(cv(hs0), c1, c2), wbr(cfv(c0, cv(s0)), c1, c2))\n  fvex(c0, cv(s0))\n  breq1(cv(hs0), cfv(c0, cv(s0)), c1, c2)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.cdm.s(s0, c0)\n  diff.cab.s(s0, hs0, wbr(cv(hs0), c1, c2))\n  diff.wbr.s(s0, cv(hs0), c1, c2)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c(cfv(c0, cv(s0)))\n  diff.hs0.w(wbr(cfv(c0, cv(s0)), c1, c2))\n}","pretty":"thm orvcval2(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)= { s0 ‚àà dom(c0)|(c0 ` s0)[c1]c2 })\n  ‚ä£ (w0 ‚Üí Fun(c0))\n  ‚ä£ (w0 ‚Üí c0 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  3eqtrd((c0[oRVC(c1)]c2), { s0 ‚àà dom(c0)|(c0 ` s0)[c1]c2 }, (`' c0 \" { hs0 | hs0[c1]c2 }), { s0 ‚àà dom(c0)|(c0 ` s0)‚àà { hs0 | hs0[c1]c2 } }, w0)\n  orvcval(hs0, c0, c1, c2, c3, c4, w0)\n  syl(w0, (`' c0 \" { hs0 | hs0[c1]c2 })= { s0 ‚àà dom(c0)|(c0 ` s0)‚àà { hs0 | hs0[c1]c2 } }, c0[Fn]dom(c0))\n  sylib(w0, c0[Fn]dom(c0), Fun(c0))\n  funfn(c0)\n  fncnvima2(s0, c0, dom(c0), { hs0 | hs0[c1]c2 })\n  a1i(w0, { s0 ‚àà dom(c0)|(c0 ` s0)‚àà { hs0 | hs0[c1]c2 } } = { s0 ‚àà dom(c0)|(c0 ` s0)[c1]c2 })\n  rabbii(s0, dom(c0), (c0 ` s0)‚àà { hs0 | hs0[c1]c2 }, (c0 ` s0)[c1]c2)\n  elab(hs0, (c0 ` s0), hs0[c1]c2, (c0 ` s0)[c1]c2)\n  fvex(c0, s0)\n  breq1(hs0, (c0 ` s0), c1, c2)\n  diff.hs0.c(c0)\n  diff.hs0.c(c1)\n  diff.hs0.c(c2)\n  diff.cdm.s(s0, c0)\n  diff.cab.s(s0, hs0, hs0[c1]c2)\n  diff.wbr.s(s0, hs0, c1, c2)\n  diff.cv.s(s0, hs0)\n  diffss.ex(s0, hs0)\n  diff.hs0.s(s0)\n  diff.hs0.c((c0 ` s0))\n  diff.hs0.w((c0 ` s0)[c1]c2)\n}","parent":["3eqtrd","orvcval","syl","sylib","funfn","fncnvima2","a1i","rabbii","elab","fvex","breq1","diff.hs0.c","diff.cdm.s","diff.cab.s","diff.wbr.s","diff.cv.s","diffss.ex","diff.hs0.s","diff.hs0.w"],"children":["elorvc"]},{"name":"elorvc","content":"Elementhood of a preimage. (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm elorvc(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(wa(w0, wcel(cv(s0), cdm(c0))), wb(wcel(cv(s0), co(c0, corvc(c1), c2)), wbr(cfv(c0, cv(s0)), c1, c2)))\n  -| wi(w0, wfun(c0))\n  -| wi(w0, wcel(c0, c3))\n  -| wi(w0, wcel(c2, c4))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  baibd(w0, wcel(cv(s0), cdm(c0)), wcel(cv(s0), co(c0, corvc(c1), c2)), wbr(cfv(c0, cv(s0)), c1, c2))\n  syl6bb(w0, wcel(cv(s0), co(c0, corvc(c1), c2)), wa(wcel(cv(s0), cdm(c0)), wbr(cfv(c0, cv(s0)), c1, c2)), wcel(cv(s0), crab(s0, cdm(c0), wbr(cfv(c0, cv(s0)), c1, c2))))\n  eleq2d(cv(s0), co(c0, corvc(c1), c2), crab(s0, cdm(c0), wbr(cfv(c0, cv(s0)), c1, c2)), w0)\n  orvcval2(s0, c0, c1, c2, c3, c4, w0)\n  rabid(s0, cdm(c0), wbr(cfv(c0, cv(s0)), c1, c2))\n}","pretty":"thm elorvc(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ ((w0 ‚àß s0 ‚àà dom(c0))‚Üí(s0 ‚àà(c0[oRVC(c1)]c2)‚Üî(c0 ` s0)[c1]c2))\n  ‚ä£ (w0 ‚Üí Fun(c0))\n  ‚ä£ (w0 ‚Üí c0 ‚àà c3)\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  baibd(w0, s0 ‚àà dom(c0), s0 ‚àà(c0[oRVC(c1)]c2), (c0 ` s0)[c1]c2)\n  syl6bb(w0, s0 ‚àà(c0[oRVC(c1)]c2), (s0 ‚àà dom(c0)‚àß(c0 ` s0)[c1]c2), s0 ‚àà { s0 ‚àà dom(c0)|(c0 ` s0)[c1]c2 })\n  eleq2d(s0, (c0[oRVC(c1)]c2), { s0 ‚àà dom(c0)|(c0 ` s0)[c1]c2 }, w0)\n  orvcval2(s0, c0, c1, c2, c3, c4, w0)\n  rabid(s0, dom(c0), (c0 ` s0)[c1]c2)\n}","parent":["baibd","syl6bb","eleq2d","orvcval2","rabid"],"children":["elorrvc"]},{"name":"orvcval4","content":"The value of the preimage mapping operator can be restricted to preimages in the base set of the topology. Cf. ~ orvcval . (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm orvcval4(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wceq(co(c0, corvc(c1), c2), cima(ccnv(c0), crab(s0, cuni(c3), wbr(cv(s0), c1, c2)))))\n  -| wi(w0, wcel(c4, cuni(crn(csiga))))\n  -| wi(w0, wcel(c3, ctop))\n  -| wi(w0, wcel(c0, co(c4, cmbfm, cfv(csigagen, c3))))\n  -| wi(w0, wcel(c2, c5))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  3eqtr4d(co(c0, corvc(c1), c2), cima(ccnv(c0), crab(s0, cuni(c3), wbr(cv(s0), c1, c2))), cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2))), cima(ccnv(c0), cin(cab(s0, wbr(cv(s0), c1, c2)), cuni(c3))), w0)\n  syl2anc(w0, wceq(cima(ccnv(c0), cab(s0, wbr(cv(s0), c1, c2))), cima(ccnv(c0), cin(cab(s0, wbr(cv(s0), c1, c2)), cuni(c3)))), wfun(c0), wss(crn(c0), cuni(c3)))\n  frnd(c0, cuni(c3), cuni(c4), w0)\n  mpbid(w0, wf(c0, cuni(c4), cuni(c3)), wf(c0, cuni(c4), cuni(cfv(csigagen, c3))))\n  mbfmf(c0, c4, cfv(csigagen, c3), w0)\n  feq3d(c0, cuni(c4), cuni(cfv(csigagen, c3)), cuni(c3), w0)\n  3syl(w0, wceq(cuni(cfv(csigagen, c3)), cuni(c3)), wcel(c3, ctop), wcel(c3, universe))\n  elex(c3, ctop)\n  unisg(c3, universe)\n  fimacnvinrn2(c0, cuni(c3), cab(s0, wbr(cv(s0), c1, c2)))\n  orvcval(s0, c0, c1, c2, co(c4, cmbfm, cfv(csigagen, c3)), c5, w0)\n  mbfmfun(c0, w0)\n  isanmbfm(c0, c4, cfv(csigagen, c3), w0)\n  sgsiga(c3, ctop, w0)\n  imaeq2d(ccnv(c0), crab(s0, cuni(c3), wbr(cv(s0), c1, c2)), cin(cab(s0, wbr(cv(s0), c1, c2)), cuni(c3)), w0)\n  a1i(w0, wceq(crab(s0, cuni(c3), wbr(cv(s0), c1, c2)), cin(cab(s0, wbr(cv(s0), c1, c2)), cuni(c3))))\n  dfrab2(s0, cuni(c3), wbr(cv(s0), c1, c2))\n  diff.cuni.s(s0, c3)\n}","pretty":"thm orvcval4(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)=(`' c0 \" { s0 ‚àà ‚ãÉ c3 | s0[c1]c2 }))\n  ‚ä£ (w0 ‚Üí c4 ‚àà ‚ãÉ ran(sigAlgebra))\n  ‚ä£ (w0 ‚Üí c3 ‚àà Top)\n  ‚ä£ (w0 ‚Üí c0 ‚àà(c4[MblFnM](sigaGen ` c3)))\n  ‚ä£ (w0 ‚Üí c2 ‚àà c5)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n} = {\n  3eqtr4d((c0[oRVC(c1)]c2), (`' c0 \" { s0 ‚àà ‚ãÉ c3 | s0[c1]c2 }), (`' c0 \" { s0 | s0[c1]c2 }), (`' c0 \"({ s0 | s0[c1]c2 } ‚ãÇ ‚ãÉ c3)), w0)\n  syl2anc(w0, (`' c0 \" { s0 | s0[c1]c2 })=(`' c0 \"({ s0 | s0[c1]c2 } ‚ãÇ ‚ãÉ c3)), Fun(c0), ran(c0)‚äÜ ‚ãÉ c3)\n  frnd(c0, ‚ãÉ c3, ‚ãÉ c4, w0)\n  mpbid(w0, (c0 : ‚ãÉ c4 ‚Üí ‚ãÉ c3), (c0 : ‚ãÉ c4 ‚Üí ‚ãÉ(sigaGen ` c3)))\n  mbfmf(c0, c4, (sigaGen ` c3), w0)\n  feq3d(c0, ‚ãÉ c4, ‚ãÉ(sigaGen ` c3), ‚ãÉ c3, w0)\n  3syl(w0, ‚ãÉ(sigaGen ` c3)= ‚ãÉ c3, c3 ‚àà Top, c3 ‚àà ùïå)\n  elex(c3, ctop)\n  unisg(c3, universe)\n  fimacnvinrn2(c0, ‚ãÉ c3, { s0 | s0[c1]c2 })\n  orvcval(s0, c0, c1, c2, (c4[MblFnM](sigaGen ` c3)), c5, w0)\n  mbfmfun(c0, w0)\n  isanmbfm(c0, c4, (sigaGen ` c3), w0)\n  sgsiga(c3, ctop, w0)\n  imaeq2d(`' c0, { s0 ‚àà ‚ãÉ c3 | s0[c1]c2 }, ({ s0 | s0[c1]c2 } ‚ãÇ ‚ãÉ c3), w0)\n  a1i(w0, { s0 ‚àà ‚ãÉ c3 | s0[c1]c2 } =({ s0 | s0[c1]c2 } ‚ãÇ ‚ãÉ c3))\n  dfrab2(s0, ‚ãÉ c3, s0[c1]c2)\n  diff.cuni.s(s0, c3)\n}","parent":["3eqtr4d","syl2anc","frnd","mpbid","mbfmf","feq3d","3syl","elex","unisg","fimacnvinrn2","orvcval","mbfmfun","isanmbfm","sgsiga","imaeq2d","a1i","dfrab2","diff.cuni.s"],"children":["orvcoel","orvccel","orrvcval4"]},{"name":"orvcoel","content":"If the relation produces open sets, preimage maps by a measurable function are measurable sets. (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm orvcoel(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wcel(co(c0, corvc(c1), c2), c3))\n  -| wi(w0, wcel(c3, cuni(crn(csiga))))\n  -| wi(w0, wcel(c4, ctop))\n  -| wi(w0, wcel(c0, co(c3, cmbfm, cfv(csigagen, c4))))\n  -| wi(w0, wcel(c2, c5))\n  -| wi(w0, wcel(crab(s0, cuni(c4), wbr(cv(s0), c1, c2)), c4))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c4)\n} = {\n  eqeltrd(co(c0, corvc(c1), c2), c3, cima(ccnv(c0), crab(s0, cuni(c4), wbr(cv(s0), c1, c2))), w0)\n  orvcval4(s0, c0, c1, c2, c4, c3, c5, w0)\n  mbfmcnvima(c0, crab(s0, cuni(c4), wbr(cv(s0), c1, c2)), c3, cfv(csigagen, c4), w0)\n  sgsiga(c4, ctop, w0)\n  sseldd(crab(s0, cuni(c4), wbr(cv(s0), c1, c2)), cfv(csigagen, c4), c4, w0)\n  syl(w0, wss(c4, cfv(csigagen, c4)), wcel(c4, ctop))\n  sssigagen(c4, ctop)\n}","pretty":"thm orvcoel(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)‚àà c3)\n  ‚ä£ (w0 ‚Üí c3 ‚àà ‚ãÉ ran(sigAlgebra))\n  ‚ä£ (w0 ‚Üí c4 ‚àà Top)\n  ‚ä£ (w0 ‚Üí c0 ‚àà(c3[MblFnM](sigaGen ` c4)))\n  ‚ä£ (w0 ‚Üí c2 ‚àà c5)\n  ‚ä£ (w0 ‚Üí { s0 ‚àà ‚ãÉ c4 | s0[c1]c2 } ‚àà c4)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c4)\n} = {\n  eqeltrd((c0[oRVC(c1)]c2), c3, (`' c0 \" { s0 ‚àà ‚ãÉ c4 | s0[c1]c2 }), w0)\n  orvcval4(s0, c0, c1, c2, c4, c3, c5, w0)\n  mbfmcnvima(c0, { s0 ‚àà ‚ãÉ c4 | s0[c1]c2 }, c3, (sigaGen ` c4), w0)\n  sgsiga(c4, ctop, w0)\n  sseldd({ s0 ‚àà ‚ãÉ c4 | s0[c1]c2 }, (sigaGen ` c4), c4, w0)\n  syl(w0, c4 ‚äÜ(sigaGen ` c4), c4 ‚àà Top)\n  sssigagen(c4, ctop)\n}","parent":["eqeltrd","orvcval4","mbfmcnvima","sgsiga","sseldd","syl","sssigagen"],"children":["orrvcoel"]},{"name":"orvccel","content":"If the relation produces closed sets, preimage maps by a measurable function are measurable sets. (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm orvccel(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  |- wi(w0, wcel(co(c0, corvc(c1), c2), c3))\n  -| wi(w0, wcel(c3, cuni(crn(csiga))))\n  -| wi(w0, wcel(c4, ctop))\n  -| wi(w0, wcel(c0, co(c3, cmbfm, cfv(csigagen, c4))))\n  -| wi(w0, wcel(c2, c5))\n  -| wi(w0, wcel(crab(s0, cuni(c4), wbr(cv(s0), c1, c2)), cfv(ccld, c4)))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c4)\n} = {\n  eqeltrd(co(c0, corvc(c1), c2), c3, cima(ccnv(c0), crab(s0, cuni(c4), wbr(cv(s0), c1, c2))), w0)\n  orvcval4(s0, c0, c1, c2, c4, c3, c5, w0)\n  mbfmcnvima(c0, crab(s0, cuni(c4), wbr(cv(s0), c1, c2)), c3, cfv(csigagen, c4), w0)\n  sgsiga(c4, ctop, w0)\n  sseldd(crab(s0, cuni(c4), wbr(cv(s0), c1, c2)), cfv(csigagen, c4), cfv(ccld, c4), w0)\n  syl(w0, wss(cfv(ccld, c4), cfv(csigagen, c4)), wcel(c4, ctop))\n  cldssbrsiga(c4)\n}","pretty":"thm orvccel(setvar s0, class c0, class c1, class c2, class c3, class c4, class c5, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)‚àà c3)\n  ‚ä£ (w0 ‚Üí c3 ‚àà ‚ãÉ ran(sigAlgebra))\n  ‚ä£ (w0 ‚Üí c4 ‚àà Top)\n  ‚ä£ (w0 ‚Üí c0 ‚àà(c3[MblFnM](sigaGen ` c4)))\n  ‚ä£ (w0 ‚Üí c2 ‚àà c5)\n  ‚ä£ (w0 ‚Üí { s0 ‚àà ‚ãÉ c4 | s0[c1]c2 } ‚àà(Clsd ` c4))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c4)\n} = {\n  eqeltrd((c0[oRVC(c1)]c2), c3, (`' c0 \" { s0 ‚àà ‚ãÉ c4 | s0[c1]c2 }), w0)\n  orvcval4(s0, c0, c1, c2, c4, c3, c5, w0)\n  mbfmcnvima(c0, { s0 ‚àà ‚ãÉ c4 | s0[c1]c2 }, c3, (sigaGen ` c4), w0)\n  sgsiga(c4, ctop, w0)\n  sseldd({ s0 ‚àà ‚ãÉ c4 | s0[c1]c2 }, (sigaGen ` c4), (Clsd ` c4), w0)\n  syl(w0, (Clsd ` c4)‚äÜ(sigaGen ` c4), c4 ‚àà Top)\n  cldssbrsiga(c4)\n}","parent":["eqeltrd","orvcval4","mbfmcnvima","sgsiga","sseldd","syl","cldssbrsiga"],"children":["orrvccel"]},{"name":"elorrvc","content":"Elementhood of a preimage for a real-valued random variable. (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm elorrvc(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(wa(w0, wcel(cv(s0), cuni(cdm(c0)))), wb(wcel(cv(s0), co(c1, corvc(c2), c3)), wbr(cfv(c1, cv(s0)), c2, c3)))\n  -| wi(w0, wcel(c0, cprb))\n  -| wi(w0, wcel(c1, cfv(crrv, c0)))\n  -| wi(w0, wcel(c3, c4))\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n  -| diffsc(s0, c3)\n} = {\n  syl(wa(w0, wcel(cv(s0), cuni(cdm(c0)))), wb(wcel(cv(s0), co(c1, corvc(c2), c3)), wbr(cfv(c1, cv(s0)), c2, c3)), wa(w0, wcel(cv(s0), cdm(c1))))\n  imdistani(w0, wcel(cv(s0), cuni(cdm(c0))), wcel(cv(s0), cdm(c1)))\n  biimprd(w0, wcel(cv(s0), cuni(cdm(c0))), wcel(cv(s0), cdm(c1)))\n  eleq2d(cv(s0), cdm(c1), cuni(cdm(c0)), w0)\n  rrvdm(c1, c0, w0)\n  elorvc(s0, c1, c2, c3, cfv(crrv, c0), c4, w0)\n  syl(w0, wfun(c1), wfn(c1, cuni(cdm(c0))))\n  rrvfn(c1, c0, w0)\n  fnfun(c1, cuni(cdm(c0)))\n}","pretty":"thm elorrvc(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ ((w0 ‚àß s0 ‚àà ‚ãÉ dom(c0))‚Üí(s0 ‚àà(c1[oRVC(c2)]c3)‚Üî(c1 ` s0)[c2]c3))\n  ‚ä£ (w0 ‚Üí c0 ‚àà Prob)\n  ‚ä£ (w0 ‚Üí c1 ‚àà(rRndVar ` c0))\n  ‚ä£ (w0 ‚Üí c3 ‚àà c4)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n  ‚ä£ d(s0, c3)\n} = {\n  syl((w0 ‚àß s0 ‚àà ‚ãÉ dom(c0)), (s0 ‚àà(c1[oRVC(c2)]c3)‚Üî(c1 ` s0)[c2]c3), (w0 ‚àß s0 ‚àà dom(c1)))\n  imdistani(w0, s0 ‚àà ‚ãÉ dom(c0), s0 ‚àà dom(c1))\n  biimprd(w0, s0 ‚àà ‚ãÉ dom(c0), s0 ‚àà dom(c1))\n  eleq2d(s0, dom(c1), ‚ãÉ dom(c0), w0)\n  rrvdm(c1, c0, w0)\n  elorvc(s0, c1, c2, c3, (rRndVar ` c0), c4, w0)\n  syl(w0, Fun(c1), c1[Fn]‚ãÉ dom(c0))\n  rrvfn(c1, c0, w0)\n  fnfun(c1, ‚ãÉ dom(c0))\n}","parent":["syl","imdistani","biimprd","eleq2d","rrvdm","elorvc","rrvfn","fnfun"],"children":[]},{"name":"orrvcval4","content":"The value of the preimage mapping operator can be restricted to preimages of subsets of RR. (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm orrvcval4(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(w0, wceq(co(c0, corvc(c1), c2), cima(ccnv(c0), crab(s0, cr, wbr(cv(s0), c1, c2)))))\n  -| wi(w0, wcel(c3, cprb))\n  -| wi(w0, wcel(c0, cfv(crrv, c3)))\n  -| wi(w0, wcel(c2, c4))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  syl6eqr(co(c0, corvc(c1), c2), cima(ccnv(c0), crab(s0, cr, wbr(cv(s0), c1, c2))), cima(ccnv(c0), crab(s0, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2))), w0)\n  orvcval4(s0, c0, c1, c2, cfv(ctg, crn(cioo)), cdm(c3), c4, w0)\n  syl(w0, wcel(cdm(c3), cuni(crn(csiga))), wcel(c3, cprb))\n  domprobsiga(c3)\n  a1i(w0, wcel(cfv(ctg, crn(cioo)), ctop))\n  retop()\n  syl6eleq(c0, co(cdm(c3), cmbfm, cfv(csigagen, cfv(ctg, crn(cioo)))), co(cdm(c3), cmbfm, cbrsiga), w0)\n  mpbid(w0, wcel(c0, co(cdm(c3), cmbfm, cbrsiga)), wcel(c0, cfv(crrv, c3)))\n  rrvmbfm(c0, c3, w0)\n  oveq2i(cdm(c3), cmbfm, cbrsiga, cfv(csigagen, cfv(ctg, crn(cioo))))\n  df-brsiga()\n  imaeq2i(ccnv(c0), crab(s0, cr, wbr(cv(s0), c1, c2)), crab(s0, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2)))\n  ax-mp(wceq(crab(s0, cr, wbr(cv(s0), c1, c2)), crab(s0, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2))), wceq(cr, cuni(cfv(ctg, crn(cioo)))))\n  uniretop()\n  rabeq(s0, cr, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2))\n  diff.cr.s(s0)\n  diff.cuni.s(s0, cfv(ctg, crn(cioo)))\n  diff.cfv.s(s0, ctg, crn(cioo))\n  diff.ctg.s(s0)\n  diff.crn.s(s0, cioo)\n  diff.cioo.s(s0)\n}","pretty":"thm orrvcval4(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)=(`' c0 \" { s0 ‚àà ‚Ñù | s0[c1]c2 }))\n  ‚ä£ (w0 ‚Üí c3 ‚àà Prob)\n  ‚ä£ (w0 ‚Üí c0 ‚àà(rRndVar ` c3))\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  syl6eqr((c0[oRVC(c1)]c2), (`' c0 \" { s0 ‚àà ‚Ñù | s0[c1]c2 }), (`' c0 \" { s0 ‚àà ‚ãÉ(topGen ` ran((,)))| s0[c1]c2 }), w0)\n  orvcval4(s0, c0, c1, c2, (topGen ` ran((,))), dom(c3), c4, w0)\n  syl(w0, dom(c3)‚àà ‚ãÉ ran(sigAlgebra), c3 ‚àà Prob)\n  domprobsiga(c3)\n  a1i(w0, (topGen ` ran((,)))‚àà Top)\n  retop()\n  syl6eleq(c0, (dom(c3)[MblFnM](sigaGen `(topGen ` ran((,))))), (dom(c3)[MblFnM]BrSiga), w0)\n  mpbid(w0, c0 ‚àà(dom(c3)[MblFnM]BrSiga), c0 ‚àà(rRndVar ` c3))\n  rrvmbfm(c0, c3, w0)\n  oveq2i(dom(c3), cmbfm, cbrsiga, (sigaGen `(topGen ` ran((,)))))\n  df-brsiga()\n  imaeq2i(`' c0, { s0 ‚àà ‚Ñù | s0[c1]c2 }, { s0 ‚àà ‚ãÉ(topGen ` ran((,)))| s0[c1]c2 })\n  ax-mp({ s0 ‚àà ‚Ñù | s0[c1]c2 } = { s0 ‚àà ‚ãÉ(topGen ` ran((,)))| s0[c1]c2 }, ‚Ñù = ‚ãÉ(topGen ` ran((,))))\n  uniretop()\n  rabeq(s0, cr, ‚ãÉ(topGen ` ran((,))), s0[c1]c2)\n  diff.cr.s(s0)\n  diff.cuni.s(s0, (topGen ` ran((,))))\n  diff.cfv.s(s0, ctg, ran((,)))\n  diff.ctg.s(s0)\n  diff.crn.s(s0, cioo)\n  diff.cioo.s(s0)\n}","parent":["syl6eqr","orvcval4","syl","domprobsiga","a1i","retop","syl6eleq","mpbid","rrvmbfm","oveq2i","df-brsiga","imaeq2i","ax-mp","uniretop","rabeq","diff.cr.s","diff.cuni.s","diff.cfv.s","diff.ctg.s","diff.crn.s","diff.cioo.s"],"children":["orvcelval","dstfrvel","orvclteinc"]},{"name":"orrvcoel","content":"If the relation produces open sets, preimage maps of a random variable are measurable sets. (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm orrvcoel(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(w0, wcel(co(c0, corvc(c1), c2), cdm(c3)))\n  -| wi(w0, wcel(c3, cprb))\n  -| wi(w0, wcel(c0, cfv(crrv, c3)))\n  -| wi(w0, wcel(c2, c4))\n  -| wi(w0, wcel(crab(s0, cr, wbr(cv(s0), c1, c2)), cfv(ctg, crn(cioo))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  orvcoel(s0, c0, c1, c2, cdm(c3), cfv(ctg, crn(cioo)), c4, w0)\n  syl(w0, wcel(cdm(c3), cuni(crn(csiga))), wcel(c3, cprb))\n  domprobsiga(c3)\n  a1i(w0, wcel(cfv(ctg, crn(cioo)), ctop))\n  retop()\n  syl6eleq(c0, co(cdm(c3), cmbfm, cfv(csigagen, cfv(ctg, crn(cioo)))), co(cdm(c3), cmbfm, cbrsiga), w0)\n  mpbid(w0, wcel(c0, co(cdm(c3), cmbfm, cbrsiga)), wcel(c0, cfv(crrv, c3)))\n  rrvmbfm(c0, c3, w0)\n  oveq2i(cdm(c3), cmbfm, cbrsiga, cfv(csigagen, cfv(ctg, crn(cioo))))\n  df-brsiga()\n  syl5eqelr(crab(s0, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2)), cfv(ctg, crn(cioo)), crab(s0, cr, wbr(cv(s0), c1, c2)), w0)\n  ax-mp(wceq(crab(s0, cr, wbr(cv(s0), c1, c2)), crab(s0, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2))), wceq(cr, cuni(cfv(ctg, crn(cioo)))))\n  uniretop()\n  rabeq(s0, cr, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2))\n  diff.cr.s(s0)\n  diff.cuni.s(s0, cfv(ctg, crn(cioo)))\n  diff.cfv.s(s0, ctg, crn(cioo))\n  diff.ctg.s(s0)\n  diff.crn.s(s0, cioo)\n  diff.cioo.s(s0)\n}","pretty":"thm orrvcoel(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)‚àà dom(c3))\n  ‚ä£ (w0 ‚Üí c3 ‚àà Prob)\n  ‚ä£ (w0 ‚Üí c0 ‚àà(rRndVar ` c3))\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n  ‚ä£ (w0 ‚Üí { s0 ‚àà ‚Ñù | s0[c1]c2 } ‚àà(topGen ` ran((,))))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  orvcoel(s0, c0, c1, c2, dom(c3), (topGen ` ran((,))), c4, w0)\n  syl(w0, dom(c3)‚àà ‚ãÉ ran(sigAlgebra), c3 ‚àà Prob)\n  domprobsiga(c3)\n  a1i(w0, (topGen ` ran((,)))‚àà Top)\n  retop()\n  syl6eleq(c0, (dom(c3)[MblFnM](sigaGen `(topGen ` ran((,))))), (dom(c3)[MblFnM]BrSiga), w0)\n  mpbid(w0, c0 ‚àà(dom(c3)[MblFnM]BrSiga), c0 ‚àà(rRndVar ` c3))\n  rrvmbfm(c0, c3, w0)\n  oveq2i(dom(c3), cmbfm, cbrsiga, (sigaGen `(topGen ` ran((,)))))\n  df-brsiga()\n  syl5eqelr({ s0 ‚àà ‚ãÉ(topGen ` ran((,)))| s0[c1]c2 }, (topGen ` ran((,))), { s0 ‚àà ‚Ñù | s0[c1]c2 }, w0)\n  ax-mp({ s0 ‚àà ‚Ñù | s0[c1]c2 } = { s0 ‚àà ‚ãÉ(topGen ` ran((,)))| s0[c1]c2 }, ‚Ñù = ‚ãÉ(topGen ` ran((,))))\n  uniretop()\n  rabeq(s0, cr, ‚ãÉ(topGen ` ran((,))), s0[c1]c2)\n  diff.cr.s(s0)\n  diff.cuni.s(s0, (topGen ` ran((,))))\n  diff.cfv.s(s0, ctg, ran((,)))\n  diff.ctg.s(s0)\n  diff.crn.s(s0, cioo)\n  diff.cioo.s(s0)\n}","parent":["orvcoel","syl","domprobsiga","a1i","retop","syl6eleq","mpbid","rrvmbfm","oveq2i","df-brsiga","syl5eqelr","ax-mp","uniretop","rabeq","diff.cr.s","diff.cuni.s","diff.cfv.s","diff.ctg.s","diff.crn.s","diff.cioo.s"],"children":[]},{"name":"orrvccel","content":"If the relation produces closed sets, preimage maps are measurable sets. (Contributed by Thierry Arnoux, 21-Jan-2017.)","origin":"thm orrvccel(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  |- wi(w0, wcel(co(c0, corvc(c1), c2), cdm(c3)))\n  -| wi(w0, wcel(c3, cprb))\n  -| wi(w0, wcel(c0, cfv(crrv, c3)))\n  -| wi(w0, wcel(c2, c4))\n  -| wi(w0, wcel(crab(s0, cr, wbr(cv(s0), c1, c2)), cfv(ccld, cfv(ctg, crn(cioo)))))\n  -| diffsc(s0, c0)\n  -| diffsc(s0, c1)\n  -| diffsc(s0, c2)\n} = {\n  orvccel(s0, c0, c1, c2, cdm(c3), cfv(ctg, crn(cioo)), c4, w0)\n  syl(w0, wcel(cdm(c3), cuni(crn(csiga))), wcel(c3, cprb))\n  domprobsiga(c3)\n  a1i(w0, wcel(cfv(ctg, crn(cioo)), ctop))\n  retop()\n  syl6eleq(c0, co(cdm(c3), cmbfm, cfv(csigagen, cfv(ctg, crn(cioo)))), co(cdm(c3), cmbfm, cbrsiga), w0)\n  mpbid(w0, wcel(c0, co(cdm(c3), cmbfm, cbrsiga)), wcel(c0, cfv(crrv, c3)))\n  rrvmbfm(c0, c3, w0)\n  oveq2i(cdm(c3), cmbfm, cbrsiga, cfv(csigagen, cfv(ctg, crn(cioo))))\n  df-brsiga()\n  syl5eqelr(crab(s0, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2)), cfv(ccld, cfv(ctg, crn(cioo))), crab(s0, cr, wbr(cv(s0), c1, c2)), w0)\n  ax-mp(wceq(crab(s0, cr, wbr(cv(s0), c1, c2)), crab(s0, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2))), wceq(cr, cuni(cfv(ctg, crn(cioo)))))\n  uniretop()\n  rabeq(s0, cr, cuni(cfv(ctg, crn(cioo))), wbr(cv(s0), c1, c2))\n  diff.cr.s(s0)\n  diff.cuni.s(s0, cfv(ctg, crn(cioo)))\n  diff.cfv.s(s0, ctg, crn(cioo))\n  diff.ctg.s(s0)\n  diff.crn.s(s0, cioo)\n  diff.cioo.s(s0)\n}","pretty":"thm orrvccel(setvar s0, class c0, class c1, class c2, class c3, class c4, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(c1)]c2)‚àà dom(c3))\n  ‚ä£ (w0 ‚Üí c3 ‚àà Prob)\n  ‚ä£ (w0 ‚Üí c0 ‚àà(rRndVar ` c3))\n  ‚ä£ (w0 ‚Üí c2 ‚àà c4)\n  ‚ä£ (w0 ‚Üí { s0 ‚àà ‚Ñù | s0[c1]c2 } ‚àà(Clsd `(topGen ` ran((,)))))\n  ‚ä£ d(s0, c0)\n  ‚ä£ d(s0, c1)\n  ‚ä£ d(s0, c2)\n} = {\n  orvccel(s0, c0, c1, c2, dom(c3), (topGen ` ran((,))), c4, w0)\n  syl(w0, dom(c3)‚àà ‚ãÉ ran(sigAlgebra), c3 ‚àà Prob)\n  domprobsiga(c3)\n  a1i(w0, (topGen ` ran((,)))‚àà Top)\n  retop()\n  syl6eleq(c0, (dom(c3)[MblFnM](sigaGen `(topGen ` ran((,))))), (dom(c3)[MblFnM]BrSiga), w0)\n  mpbid(w0, c0 ‚àà(dom(c3)[MblFnM]BrSiga), c0 ‚àà(rRndVar ` c3))\n  rrvmbfm(c0, c3, w0)\n  oveq2i(dom(c3), cmbfm, cbrsiga, (sigaGen `(topGen ` ran((,)))))\n  df-brsiga()\n  syl5eqelr({ s0 ‚àà ‚ãÉ(topGen ` ran((,)))| s0[c1]c2 }, (Clsd `(topGen ` ran((,)))), { s0 ‚àà ‚Ñù | s0[c1]c2 }, w0)\n  ax-mp({ s0 ‚àà ‚Ñù | s0[c1]c2 } = { s0 ‚àà ‚ãÉ(topGen ` ran((,)))| s0[c1]c2 }, ‚Ñù = ‚ãÉ(topGen ` ran((,))))\n  uniretop()\n  rabeq(s0, cr, ‚ãÉ(topGen ` ran((,))), s0[c1]c2)\n  diff.cr.s(s0)\n  diff.cuni.s(s0, (topGen ` ran((,))))\n  diff.cfv.s(s0, ctg, ran((,)))\n  diff.ctg.s(s0)\n  diff.crn.s(s0, cioo)\n  diff.cioo.s(s0)\n}","parent":["orvccel","syl","domprobsiga","a1i","retop","syl6eleq","mpbid","rrvmbfm","oveq2i","df-brsiga","syl5eqelr","ax-mp","uniretop","rabeq","diff.cr.s","diff.cuni.s","diff.cfv.s","diff.ctg.s","diff.crn.s","diff.cioo.s"],"children":["orvcgteel","orvclteel"]},{"name":"orvcgteel","content":"Preimage maps produced by the \"greater than or equal to\" relation are measurable sets. (Contributed by Thierry Arnoux, 5-Feb-2017.)","origin":"thm orvcgteel(class c0, class c1, class c2, wff w0) {\n  |- wi(w0, wcel(co(c0, corvc(ccnv(cle)), c1), cdm(c2)))\n  -| wi(w0, wcel(c2, cprb))\n  -| wi(w0, wcel(c0, cfv(crrv, c2)))\n  -| wi(w0, wcel(c1, cr))\n} = {\n  orrvccel(hs0, c0, ccnv(cle), c1, c2, cr, w0)\n  eqeltrd(crab(hs0, cr, wbr(cv(hs0), ccnv(cle), c1)), cfv(ccld, cfv(ctg, crn(cioo))), co(c1, cico, cpnf), w0)\n  eqtr4d(crab(hs0, cr, wbr(cv(hs0), ccnv(cle), c1)), co(c1, cico, cpnf), crab(hs0, cxr, wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))), w0)\n  rabbidva2(hs0, cr, cxr, w0, wbr(cv(hs0), ccnv(cle), c1), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf)))\n  bitrd(w0, wa(wcel(cv(hs0), cr), wbr(cv(hs0), ccnv(cle), c1)), wa(wcel(cv(hs0), cxr), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))), wa(wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0))))\n  pm5.32da(w0, wcel(cv(hs0), cr), wbr(cv(hs0), ccnv(cle), c1), wbr(c1, cle, cv(hs0)))\n  syl2anc(wa(w0, wcel(cv(hs0), cr)), wb(wbr(cv(hs0), ccnv(cle), c1), wbr(c1, cle, cv(hs0))), wcel(cv(hs0), cr), wcel(c1, cr))\n  simpr(w0, wcel(cv(hs0), cr))\n  adantr(w0, wcel(cv(hs0), cr), wcel(c1, cr))\n  brcnvg(cv(hs0), cr, c1, cr, cle)\n  impbida(w0, wa(wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0))), wa(wcel(cv(hs0), cxr), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))))\n  jca(wa(w0, wa(wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0)))), wcel(cv(hs0), cxr), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf)))\n  ad2antrl(w0, wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0)), wcel(cv(hs0), cxr))\n  rexr(cv(hs0))\n  jca(wa(w0, wa(wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0)))), wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))\n  simprr(w0, wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0)))\n  ad2antrl(w0, wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))\n  ltpnf(cv(hs0))\n  jca(wa(w0, wa(wcel(cv(hs0), cxr), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf)))), wcel(cv(hs0), cr), wbr(c1, cle, cv(hs0)))\n  syl22anc(wa(w0, wa(wcel(cv(hs0), cxr), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf)))), wcel(cv(hs0), cr), wcel(cv(hs0), cxr), wcel(c1, cr), wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))\n  simprl(w0, wcel(cv(hs0), cxr), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf)))\n  adantr(w0, wa(wcel(cv(hs0), cxr), wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))), wcel(c1, cr))\n  simprrr(w0, wcel(cv(hs0), cxr), wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))\n  xrre3(cv(hs0), c1)\n  simprrl(w0, wcel(cv(hs0), cxr), wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf))\n  sylancl(w0, wceq(co(c1, cico, cpnf), crab(hs0, cxr, wa(wbr(c1, cle, cv(hs0)), wbr(cv(hs0), clt, cpnf)))), wcel(c1, cxr), wcel(cpnf, cxr))\n  rexrd(c1, w0)\n  pnfxr()\n  icoval(hs0, c1, cpnf)\n  syl(w0, wcel(co(c1, cico, cpnf), cfv(ccld, cfv(ctg, crn(cioo)))), wcel(c1, cr))\n  icopnfcld(c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(ccnv(cle))\n  diff.hs0.c(c1)\n  diff.hs0.w(w0)\n  diff.hs0.c(cpnf)\n}","pretty":"thm orvcgteel(class c0, class c1, class c2, wff w0) {\n  ‚ä¢ (w0 ‚Üí(c0[oRVC(`' ‚â§)]c1)‚àà dom(c2))\n  ‚ä£ (w0 ‚Üí c2 ‚àà Prob)\n  ‚ä£ (w0 ‚Üí c0 ‚àà(rRndVar ` c2))\n  ‚ä£ (w0 ‚Üí c1 ‚àà ‚Ñù)\n} = {\n  orrvccel(hs0, c0, `' ‚â§, c1, c2, cr, w0)\n  eqeltrd({ hs0 ‚àà ‚Ñù | hs0[`' ‚â§]c1 }, (Clsd `(topGen ` ran((,)))), (c1[[,)]+‚àû), w0)\n  eqtr4d({ hs0 ‚àà ‚Ñù | hs0[`' ‚â§]c1 }, (c1[[,)]+‚àû), { hs0 ‚àà ‚Ñù* |(c1[‚â§]hs0 ‚àß hs0[<]+‚àû)}, w0)\n  rabbidva2(hs0, cr, cxr, w0, hs0[`' ‚â§]c1, (c1[‚â§]hs0 ‚àß hs0[<]+‚àû))\n  bitrd(w0, (hs0 ‚àà ‚Ñù ‚àß hs0[`' ‚â§]c1), (hs0 ‚àà ‚Ñù* ‚àß(c1[‚â§]hs0 ‚àß hs0[<]+‚àû)), (hs0 ‚àà ‚Ñù ‚àß c1[‚â§]hs0))\n  pm5.32da(w0, hs0 ‚àà ‚Ñù, hs0[`' ‚â§]c1, c1[‚â§]hs0)\n  syl2anc((w0 ‚àß hs0 ‚àà ‚Ñù), (hs0[`' ‚â§]c1 ‚Üî c1[‚â§]hs0), hs0 ‚àà ‚Ñù, c1 ‚àà ‚Ñù)\n  simpr(w0, hs0 ‚àà ‚Ñù)\n  adantr(w0, hs0 ‚àà ‚Ñù, c1 ‚àà ‚Ñù)\n  brcnvg(hs0, cr, c1, cr, cle)\n  impbida(w0, (hs0 ‚àà ‚Ñù ‚àß c1[‚â§]hs0), (hs0 ‚àà ‚Ñù* ‚àß(c1[‚â§]hs0 ‚àß hs0[<]+‚àû)))\n  jca((w0 ‚àß(hs0 ‚àà ‚Ñù ‚àß c1[‚â§]hs0)), hs0 ‚àà ‚Ñù*, (c1[‚â§]hs0 ‚àß hs0[<]+‚àû))\n  ad2antrl(w0, hs0 ‚àà ‚Ñù, c1[‚â§]hs0, hs0 ‚àà ‚Ñù*)\n  rexr(hs0)\n  jca((w0 ‚àß(hs0 ‚àà ‚Ñù ‚àß c1[‚â§]hs0)), c1[‚â§]hs0, hs0[<]+‚àû)\n  simprr(w0, hs0 ‚àà ‚Ñù, c1[‚â§]hs0)\n  ad2antrl(w0, hs0 ‚àà ‚Ñù, c1[‚â§]hs0, hs0[<]+‚àû)\n  ltpnf(hs0)\n  jca((w0 ‚àß(hs0 ‚àà ‚Ñù* ‚àß(c1[‚â§]hs0 ‚àß hs0[<]+‚àû))), hs0 ‚àà ‚Ñù, c1[‚â§]hs0)\n  syl22anc((w0 ‚àß(hs0 ‚àà ‚Ñù* ‚àß(c1[‚â§]hs0 ‚àß hs0[<]+‚àû))), hs0 ‚àà ‚Ñù, hs0 ‚àà ‚Ñù*, c1 ‚àà ‚Ñù, c1[‚â§]hs0, hs0[<]+‚àû)\n  simprl(w0, hs0 ‚àà ‚Ñù*, (c1[‚â§]hs0 ‚àß hs0[<]+‚àû))\n  adantr(w0, (hs0 ‚àà ‚Ñù* ‚àß(c1[‚â§]hs0 ‚àß hs0[<]+‚àû)), c1 ‚àà ‚Ñù)\n  simprrr(w0, hs0 ‚àà ‚Ñù*, c1[‚â§]hs0, hs0[<]+‚àû)\n  xrre3(hs0, c1)\n  simprrl(w0, hs0 ‚àà ‚Ñù*, c1[‚â§]hs0, hs0[<]+‚àû)\n  sylancl(w0, (c1[[,)]+‚àû)= { hs0 ‚àà ‚Ñù* |(c1[‚â§]hs0 ‚àß hs0[<]+‚àû)}, c1 ‚àà ‚Ñù*, +‚àû ‚àà ‚Ñù*)\n  rexrd(c1, w0)\n  pnfxr()\n  icoval(hs0, c1, cpnf)\n  syl(w0, (c1[[,)]+‚àû)‚àà(Clsd `(topGen ` ran((,)))), c1 ‚àà ‚Ñù)\n  icopnfcld(c1)\n  diff.hs0.c(c0)\n  diff.hs0.c(`' ‚â§)\n  diff.hs0.c(c1)\n  diff.hs0.w(w0)\n  diff.hs0.c(cpnf)\n}","parent":["orrvccel","eqeltrd","eqtr4d","rabbidva2","bitrd","pm5.32da","syl2anc","simpr","adantr","brcnvg","impbida","jca","ad2antrl","rexr","simprr","ltpnf","syl22anc","simprl","simprrr","xrre3","simprrl","sylancl","rexrd","pnfxr","icoval","syl","icopnfcld","diff.hs0.c","diff.hs0.w"],"children":[]}]}