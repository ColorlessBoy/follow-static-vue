{"bIdx":18046,"bType":"axiom","type":"","name":"df-homf","params":"setvar s0, setvar s1, setvar s2","body":["|- wceq(chomf, cmpt(s0, universe, cmpo(s1, s2, cfv(cbs, cv(s0)), cfv(cbs, cv(s0)), co(cv(s1), cfv(chom, cv(s0)), cv(s2)))))","-| diffss(s0, s1)","-| diffss(s0, s2)","-| diffss(s1, s2)"],"bodyPretty":["‚ä¢ Homf =(s0 ‚àà ùïå ‚Ü¶(s1 ‚àà(Base ` s0), s2 ‚àà(Base ` s0)‚Ü¶(s1[(Hom ` s0)]s2)))","‚ä£ d(s0, s1)","‚ä£ d(s0, s2)","‚ä£ d(s1, s2)"],"proof":[],"comment":"Define the functionalized Hom-set operator, which is exactly like ` Hom ` but is guaranteed to be a function on the base. (Contributed by Mario Carneiro, 4-Jan-2017.)","parent":[],"children":["homffval"]}