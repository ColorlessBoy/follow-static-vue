{"bIdx":37661,"bType":"thm","type":"","name":"wl-clabv","params":"setvar s0, setvar s1, wff w0","body":["|- wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))","-| diffss(s0, s1)","-| diffsw(s0, w0)"],"bodyPretty":["⊢ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)","⊣ d(s0, s1)","⊣ d(s0, w0)"],"proof":[{"stmt":{"origin":"a1ii(wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0)), diffss(s0, s1))","pretty":"a1ii((s0 ∈ { s1 | w0 } ↔[s0 / s1]w0), d(s0, s1))"},"body":{"origin":"|- wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| diffss(s0, s1)","pretty":"⊢ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| diffss(s0, s1)","pretty":"⊢ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ d(s0, s1)"}},{"stmt":{"origin":"a1ii(wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0)), diffsw(s0, w0))","pretty":"a1ii((s0 ∈ { s1 | w0 } ↔[s0 / s1]w0), d(s0, w0))"},"body":{"origin":"|- wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| diffsw(s0, w0)","pretty":"⊢ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ d(s0, w0)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| diffss(s0, s1)\n-| wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| diffsw(s0, w0)","pretty":"⊢ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ d(s0, s1)\n⊣ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ d(s0, w0)"}},{"stmt":{"origin":"df-clab(s0, s1, w0)","pretty":"df-clab(s0, s1, w0)"},"body":{"origin":"|- wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))","pretty":"⊢ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cab(s1, w0)), wsb(s0, s1, w0))\n-| diffss(s0, s1)\n-| diffsw(s0, w0)","pretty":"⊢ (s0 ∈ { s1 | w0 } ↔[s0 / s1]w0)\n⊣ d(s0, s1)\n⊣ d(s0, w0)"}}],"comment":"Variant of ~ df-clab , where the element ` x ` is required to be disjoint from the class it is taken from. This restriction meets similar ones found in other definitions and axioms like ~ ax-ext , ~ df-clel and ~ df-cleq . ` x e. A ` with ` A ` depending on ` x ` can be the source of side effects, that you rather want to be aware of. So here we eliminate one possible way of letting this slip in instead. An expression ` x e. A ` with ` x ` , ` A ` not disjoint, is now only introduced either via ~ ax-8 , ~ ax-9 , or ~ df-clel . Theorem ~ cleljust shows that a possible choice does not matter. The original ~ df-clab can be rederived, see ~ wl-dfclab . In an implementation this theorem is the only user of df-clab. (Contributed by NM, 26-May-1993.) Element and class are disjoint. (Revised by Wolf Lammen, 31-May-2023.)","parent":["a1ii","df-clab"],"children":["wl-dfclab"]}