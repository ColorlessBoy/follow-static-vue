{"bIdx":36049,"bType":"thm","type":"","name":"dfpprod2","params":"class c0, class c1","body":["|- wceq(cpprod(c0, c1), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))"],"bodyPretty":["⊢ pprod(c0, c1)=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))"],"proof":[{"stmt":{"origin":"eqtri(cpprod(c0, c1), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))), ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))))","pretty":"eqtri(pprod(c0, c1), ((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌))))), ((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌)))))"},"body":{"origin":"|- wceq(cpprod(c0, c1), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))\n-| wceq(cpprod(c0, c1), ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))))\n-| wceq(ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))","pretty":"⊢ pprod(c0, c1)=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))\n⊣ pprod(c0, c1)=((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌))))\n⊣ ((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌))))=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))"},"cumulated":{"origin":"|- wceq(cpprod(c0, c1), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))\n-| wceq(cpprod(c0, c1), ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))))\n-| wceq(ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))","pretty":"⊢ pprod(c0, c1)=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))\n⊣ pprod(c0, c1)=((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌))))\n⊣ ((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌))))=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))"}},{"stmt":{"origin":"df-pprod(c0, c1)","pretty":"df-pprod(c0, c1)"},"body":{"origin":"|- wceq(cpprod(c0, c1), ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))))","pretty":"⊢ pprod(c0, c1)=((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌))))"},"cumulated":{"origin":"|- wceq(cpprod(c0, c1), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))\n-| wceq(ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))","pretty":"⊢ pprod(c0, c1)=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))\n⊣ ((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌))))=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))"}},{"stmt":{"origin":"df-txp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))","pretty":"df-txp((c0 ∘(1st |`(𝕌 × 𝕌))), (c1 ∘(2nd |`(𝕌 × 𝕌))))"},"body":{"origin":"|- wceq(ctxp(ccom(c0, cres(c1st, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe)))), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))","pretty":"⊢ ((c0 ∘(1st |`(𝕌 × 𝕌)))(×)(c1 ∘(2nd |`(𝕌 × 𝕌))))=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))"},"cumulated":{"origin":"|- wceq(cpprod(c0, c1), cin(ccom(ccnv(cres(c1st, cxp(universe, universe))), ccom(c0, cres(c1st, cxp(universe, universe)))), ccom(ccnv(cres(c2nd, cxp(universe, universe))), ccom(c1, cres(c2nd, cxp(universe, universe))))))","pretty":"⊢ pprod(c0, c1)=((`'(1st |`(𝕌 × 𝕌))∘(c0 ∘(1st |`(𝕌 × 𝕌))))⋂(`'(2nd |`(𝕌 × 𝕌))∘(c1 ∘(2nd |`(𝕌 × 𝕌)))))"}}],"comment":"Expanded definition of parallel product. (Contributed by Scott Fenton, 3-May-2014.)","parent":["eqtri","df-pprod","df-txp"],"children":["pprodcnveq"]}