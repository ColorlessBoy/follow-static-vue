{"bIdx":43743,"bType":"thm","type":"","name":"int-addsimpd","params":"class c0, class c1, wff w0","body":["|- wi(w0, wceq(nat0, co(c0, cmin, c1)))","-| wi(w0, wcel(c0, cr))","-| wi(w0, wceq(c0, c1))"],"bodyPretty":["⊢ (w0 → 0 =(c0[-]c1))","⊣ (w0 → c0 ∈ ℝ)","⊣ (w0 → c0 = c1)"],"proof":[{"stmt":{"origin":"eqcomd(nat0, co(c0, cmin, c1), w0)","pretty":"eqcomd(nat0, (c0[-]c1), w0)"},"body":{"origin":"|- wi(w0, wceq(nat0, co(c0, cmin, c1)))\n-| wi(w0, wceq(co(c0, cmin, c1), nat0))","pretty":"⊢ (w0 → 0 =(c0[-]c1))\n⊣ (w0 →(c0[-]c1)= 0)"},"cumulated":{"origin":"|- wi(w0, wceq(nat0, co(c0, cmin, c1)))\n-| wi(w0, wceq(co(c0, cmin, c1), nat0))","pretty":"⊢ (w0 → 0 =(c0[-]c1))\n⊣ (w0 →(c0[-]c1)= 0)"}},{"stmt":{"origin":"subeq0bd(c0, c1, w0)","pretty":"subeq0bd(c0, c1, w0)"},"body":{"origin":"|- wi(w0, wceq(co(c0, cmin, c1), nat0))\n-| wi(w0, wcel(c0, cc))\n-| wi(w0, wceq(c0, c1))","pretty":"⊢ (w0 →(c0[-]c1)= 0)\n⊣ (w0 → c0 ∈ ℂ)\n⊣ (w0 → c0 = c1)"},"cumulated":{"origin":"|- wi(w0, wceq(nat0, co(c0, cmin, c1)))\n-| wi(w0, wcel(c0, cc))\n-| wi(w0, wceq(c0, c1))","pretty":"⊢ (w0 → 0 =(c0[-]c1))\n⊣ (w0 → c0 ∈ ℂ)\n⊣ (w0 → c0 = c1)"}},{"stmt":{"origin":"recnd(c0, w0)","pretty":"recnd(c0, w0)"},"body":{"origin":"|- wi(w0, wcel(c0, cc))\n-| wi(w0, wcel(c0, cr))","pretty":"⊢ (w0 → c0 ∈ ℂ)\n⊣ (w0 → c0 ∈ ℝ)"},"cumulated":{"origin":"|- wi(w0, wceq(nat0, co(c0, cmin, c1)))\n-| wi(w0, wceq(c0, c1))\n-| wi(w0, wcel(c0, cr))","pretty":"⊢ (w0 → 0 =(c0[-]c1))\n⊣ (w0 → c0 = c1)\n⊣ (w0 → c0 ∈ ℝ)"}}],"comment":"AdditionSimplification generator rule. (Contributed by Stanislas Polu, 7-Apr-2020.)","parent":["eqcomd","subeq0bd","recnd"],"children":[]}