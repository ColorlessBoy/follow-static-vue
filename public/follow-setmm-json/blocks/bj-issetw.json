{"bIdx":36939,"bType":"thm","type":"","name":"bj-issetw","params":"setvar s0, setvar s1, class c0, wff w0","body":["|- wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0)))","-| w0","-| diffsc(s1, c0)"],"bodyPretty":["⊢ (c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0))","⊣ w0","⊣ d(s1, c0)"],"proof":[{"stmt":{"origin":"mpg(s0, wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0))), w0)","pretty":"mpg(s0, (c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0)), w0)"},"body":{"origin":"|- wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0)))\n-| wi(wal(s0, w0), wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0))))\n-| w0","pretty":"⊢ (c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0))\n⊣ (∀(s0, w0)→(c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0)))\n⊣ w0"},"cumulated":{"origin":"|- wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0)))\n-| wi(wal(s0, w0), wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0))))\n-| w0","pretty":"⊢ (c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0))\n⊣ (∀(s0, w0)→(c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0)))\n⊣ w0"}},{"stmt":{"origin":"bj-issetwt(s0, s1, c0, w0)","pretty":"bj-issetwt(s0, s1, c0, w0)"},"body":{"origin":"|- wi(wal(s0, w0), wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0))))\n-| diffsc(s1, c0)","pretty":"⊢ (∀(s0, w0)→(c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0)))\n⊣ d(s1, c0)"},"cumulated":{"origin":"|- wb(wcel(c0, cab(s0, w0)), wex(s1, wceq(cv(s1), c0)))\n-| w0\n-| diffsc(s1, c0)","pretty":"⊢ (c0 ∈ { s0 | w0 } ↔ ∃(s1, s1 = c0))\n⊣ w0\n⊣ d(s1, c0)"}}],"comment":"The closest one can get to ~ isset without using ~ ax-ext . See also ~ bj-vexw . Note that the only disjoint variable condition is between ` y ` and ` A ` . From there, one can prove ~ isset using ~ eleq2i (which requires ~ ax-ext and ~ df-cleq ). (Contributed by BJ, 29-Apr-2019.) (Proof modification is discouraged.)","parent":["mpg","bj-issetwt"],"children":[]}