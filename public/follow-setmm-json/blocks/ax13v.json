{"bIdx":2596,"bType":"thm","type":"","name":"ax13v","params":"setvar s0, setvar s1, setvar s2","body":["|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))","-| diffss(s0, s2)","-| diffss(s1, s2)"],"bodyPretty":["⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))","⊣ d(s0, s2)","⊣ d(s1, s2)"],"proof":[{"stmt":{"origin":"a1ii(wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2))))), diffss(s0, s2))","pretty":"a1ii((¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2))), d(s0, s2))"},"body":{"origin":"|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| diffss(s0, s2)","pretty":"⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ d(s0, s2)"},"cumulated":{"origin":"|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| diffss(s0, s2)","pretty":"⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ d(s0, s2)"}},{"stmt":{"origin":"a1ii(wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2))))), diffss(s1, s2))","pretty":"a1ii((¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2))), d(s1, s2))"},"body":{"origin":"|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| diffss(s1, s2)","pretty":"⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ d(s1, s2)"},"cumulated":{"origin":"|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| diffss(s0, s2)\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| diffss(s1, s2)","pretty":"⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ d(s0, s2)\n⊣ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ d(s1, s2)"}},{"stmt":{"origin":"ax-13(s0, s1, s2)","pretty":"ax-13(s0, s1, s2)"},"body":{"origin":"|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))","pretty":"⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))"},"cumulated":{"origin":"|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s1), cv(s2)), wal(s0, wceq(cv(s1), cv(s2)))))\n-| diffss(s0, s2)\n-| diffss(s1, s2)","pretty":"⊢ (¬ s0 = s1 →(s1 = s2 → ∀(s0, s1 = s2)))\n⊣ d(s0, s2)\n⊣ d(s1, s2)"}}],"comment":"A weaker version of ~ ax-13 with distinct variable restrictions on pairs ` x , z ` and ` y , z ` . In order to show (with ~ ax13 ) that this weakening is still adequate, this should be the only theorem referencing ~ ax-13 directly. Had we additionally required ` x ` and ` y ` be distinct, too, this theorem would have been a direct consequence of ~ ax-5 . So essentially this theorem states, that a distinct variable condition can be replaced with an inequality between set variables. (Contributed by NM, 30-Jun-2016.)","parent":["a1ii","ax-13"],"children":["ax13lem1","wl-spae"]}