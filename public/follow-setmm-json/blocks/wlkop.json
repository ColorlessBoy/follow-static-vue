{"bIdx":29529,"bType":"thm","type":"","name":"wlkop","params":"class c0, class c1","body":["|- wi(wcel(c0, cfv(cwlks, c1)), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))"],"bodyPretty":["⊢ (c0 ∈(Walks ` c1)→ c0 = <(1st ` c0),(2nd ` c0)>)"],"proof":[{"stmt":{"origin":"mpan(wcel(c0, cfv(cwlks, c1)), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))), wrel(cfv(cwlks, c1)))","pretty":"mpan(c0 ∈(Walks ` c1), c0 = <(1st ` c0),(2nd ` c0)>, Rel((Walks ` c1)))"},"body":{"origin":"|- wi(wcel(c0, cfv(cwlks, c1)), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))\n-| wrel(cfv(cwlks, c1))\n-| wi(wa(wrel(cfv(cwlks, c1)), wcel(c0, cfv(cwlks, c1))), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))","pretty":"⊢ (c0 ∈(Walks ` c1)→ c0 = <(1st ` c0),(2nd ` c0)>)\n⊣ Rel((Walks ` c1))\n⊣ ((Rel((Walks ` c1))∧ c0 ∈(Walks ` c1))→ c0 = <(1st ` c0),(2nd ` c0)>)"},"cumulated":{"origin":"|- wi(wcel(c0, cfv(cwlks, c1)), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))\n-| wrel(cfv(cwlks, c1))\n-| wi(wa(wrel(cfv(cwlks, c1)), wcel(c0, cfv(cwlks, c1))), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))","pretty":"⊢ (c0 ∈(Walks ` c1)→ c0 = <(1st ` c0),(2nd ` c0)>)\n⊣ Rel((Walks ` c1))\n⊣ ((Rel((Walks ` c1))∧ c0 ∈(Walks ` c1))→ c0 = <(1st ` c0),(2nd ` c0)>)"}},{"stmt":{"origin":"relwlk(c1)","pretty":"relwlk(c1)"},"body":{"origin":"|- wrel(cfv(cwlks, c1))","pretty":"⊢ Rel((Walks ` c1))"},"cumulated":{"origin":"|- wi(wcel(c0, cfv(cwlks, c1)), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))\n-| wi(wa(wrel(cfv(cwlks, c1)), wcel(c0, cfv(cwlks, c1))), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))","pretty":"⊢ (c0 ∈(Walks ` c1)→ c0 = <(1st ` c0),(2nd ` c0)>)\n⊣ ((Rel((Walks ` c1))∧ c0 ∈(Walks ` c1))→ c0 = <(1st ` c0),(2nd ` c0)>)"}},{"stmt":{"origin":"1st2nd(cfv(cwlks, c1), c0)","pretty":"1st2nd((Walks ` c1), c0)"},"body":{"origin":"|- wi(wa(wrel(cfv(cwlks, c1)), wcel(c0, cfv(cwlks, c1))), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))","pretty":"⊢ ((Rel((Walks ` c1))∧ c0 ∈(Walks ` c1))→ c0 = <(1st ` c0),(2nd ` c0)>)"},"cumulated":{"origin":"|- wi(wcel(c0, cfv(cwlks, c1)), wceq(c0, cop(cfv(c1st, c0), cfv(c2nd, c0))))","pretty":"⊢ (c0 ∈(Walks ` c1)→ c0 = <(1st ` c0),(2nd ` c0)>)"}}],"comment":"A walk is an ordered pair. (Contributed by Alexander van der Vekens, 30-Jun-2018.) (Revised by AV, 1-Jan-2021.)","parent":["mpan","relwlk","1st2nd"],"children":["wlkcpr","wlkeq","clwlkcompbp","clwlkclwwlkflem","wlkl0"]}