{"bIdx":37578,"bType":"thm","type":"","name":"wl-nax6im","params":"setvar s0, setvar s1, wff w0","body":["|- wi(wn(wex(s0, wtru)), w0)","-| wi(wn(wex(s0, wceq(cv(s0), cv(s1)))), w0)","-| diffss(s0, s1)"],"bodyPretty":["⊢ (¬ ∃(s0, T)→ w0)","⊣ (¬ ∃(s0, s0 = s1)→ w0)","⊣ d(s0, s1)"],"proof":[{"stmt":{"origin":"a1ii(wi(wn(wex(s0, wtru)), w0), diffss(s0, s1))","pretty":"a1ii((¬ ∃(s0, T)→ w0), d(s0, s1))"},"body":{"origin":"|- wi(wn(wex(s0, wtru)), w0)\n-| wi(wn(wex(s0, wtru)), w0)\n-| diffss(s0, s1)","pretty":"⊢ (¬ ∃(s0, T)→ w0)\n⊣ (¬ ∃(s0, T)→ w0)\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wi(wn(wex(s0, wtru)), w0)\n-| wi(wn(wex(s0, wtru)), w0)\n-| diffss(s0, s1)","pretty":"⊢ (¬ ∃(s0, T)→ w0)\n⊣ (¬ ∃(s0, T)→ w0)\n⊣ d(s0, s1)"}},{"stmt":{"origin":"con1i(wex(s0, wtru), w0)","pretty":"con1i(∃(s0, T), w0)"},"body":{"origin":"|- wi(wn(wex(s0, wtru)), w0)\n-| wi(wn(w0), wex(s0, wtru))","pretty":"⊢ (¬ ∃(s0, T)→ w0)\n⊣ (¬ w0 → ∃(s0, T))"},"cumulated":{"origin":"|- wi(wn(wex(s0, wtru)), w0)\n-| diffss(s0, s1)\n-| wi(wn(w0), wex(s0, wtru))","pretty":"⊢ (¬ ∃(s0, T)→ w0)\n⊣ d(s0, s1)\n⊣ (¬ w0 → ∃(s0, T))"}},{"stmt":{"origin":"nsyl4(w0, wex(s0, wtru), wex(s0, wceq(cv(s0), cv(s1))))","pretty":"nsyl4(w0, ∃(s0, T), ∃(s0, s0 = s1))"},"body":{"origin":"|- wi(wn(w0), wex(s0, wtru))\n-| wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, wtru))\n-| wi(wn(wex(s0, wceq(cv(s0), cv(s1)))), w0)","pretty":"⊢ (¬ w0 → ∃(s0, T))\n⊣ (∃(s0, s0 = s1)→ ∃(s0, T))\n⊣ (¬ ∃(s0, s0 = s1)→ w0)"},"cumulated":{"origin":"|- wi(wn(wex(s0, wtru)), w0)\n-| diffss(s0, s1)\n-| wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, wtru))\n-| wi(wn(wex(s0, wceq(cv(s0), cv(s1)))), w0)","pretty":"⊢ (¬ ∃(s0, T)→ w0)\n⊣ d(s0, s1)\n⊣ (∃(s0, s0 = s1)→ ∃(s0, T))\n⊣ (¬ ∃(s0, s0 = s1)→ w0)"}},{"stmt":{"origin":"eximi(s0, wceq(cv(s0), cv(s1)), wtru)","pretty":"eximi(s0, s0 = s1, wtru)"},"body":{"origin":"|- wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, wtru))\n-| wi(wceq(cv(s0), cv(s1)), wtru)","pretty":"⊢ (∃(s0, s0 = s1)→ ∃(s0, T))\n⊣ (s0 = s1 → T)"},"cumulated":{"origin":"|- wi(wn(wex(s0, wtru)), w0)\n-| diffss(s0, s1)\n-| wi(wn(wex(s0, wceq(cv(s0), cv(s1)))), w0)\n-| wi(wceq(cv(s0), cv(s1)), wtru)","pretty":"⊢ (¬ ∃(s0, T)→ w0)\n⊣ d(s0, s1)\n⊣ (¬ ∃(s0, s0 = s1)→ w0)\n⊣ (s0 = s1 → T)"}},{"stmt":{"origin":"trud(wceq(cv(s0), cv(s1)))","pretty":"trud(s0 = s1)"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wtru)","pretty":"⊢ (s0 = s1 → T)"},"cumulated":{"origin":"|- wi(wn(wex(s0, wtru)), w0)\n-| diffss(s0, s1)\n-| wi(wn(wex(s0, wceq(cv(s0), cv(s1)))), w0)","pretty":"⊢ (¬ ∃(s0, T)→ w0)\n⊣ d(s0, s1)\n⊣ (¬ ∃(s0, s0 = s1)→ w0)"}}],"comment":"The following series of theorems are centered around the empty domain, where no set exists. As a consequence, a set variable like ` x ` has no instance to assign to. An expression like ` x = y ` is not really meaningful then. What does it evaluate to, true or false? In fact, the grammar extension ~ weq requires us to formally assign a boolean value to an equation, say always false, unless you want to give up on ~ exmid , for example. Whatever it is, we start out with the contraposition of ~ ax-6 , that guarantees the existence of at least one set. Our hypothesis here expresses tentatively it might not hold. We can simplify the antecedent then, to the point where we do not need equation any more. This suggests what a decent characterization of the empty domain could be. (Contributed by Wolf Lammen, 12-Mar-2023.)","parent":["a1ii","con1i","nsyl4","eximi","trud"],"children":[]}