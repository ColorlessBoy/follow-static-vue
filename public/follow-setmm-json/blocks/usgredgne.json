{"bIdx":29072,"bType":"thm","type":"","name":"usgredgne","params":"class c0, class c1, class c2, class c3","body":["|- wi(wa(wcel(c0, cusgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))","-| wceq(c3, cfv(cedg, c0))"],"bodyPretty":["⊢ ((c0 ∈ USGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)","⊣ c3 =(Edg ` c0)"],"proof":[{"stmt":{"origin":"sylan(wcel(c0, cusgr), wcel(cpr(c1, c2), c3), wne(c1, c2), wcel(c0, cumgr))","pretty":"sylan(c0 ∈ USGraph, { c1, c2 } ∈ c3, c1 ≠ c2, c0 ∈ UMGraph)"},"body":{"origin":"|- wi(wa(wcel(c0, cusgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))\n-| wi(wcel(c0, cusgr), wcel(c0, cumgr))\n-| wi(wa(wcel(c0, cumgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))","pretty":"⊢ ((c0 ∈ USGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)\n⊣ (c0 ∈ USGraph → c0 ∈ UMGraph)\n⊣ ((c0 ∈ UMGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, cusgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))\n-| wi(wcel(c0, cusgr), wcel(c0, cumgr))\n-| wi(wa(wcel(c0, cumgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))","pretty":"⊢ ((c0 ∈ USGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)\n⊣ (c0 ∈ USGraph → c0 ∈ UMGraph)\n⊣ ((c0 ∈ UMGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)"}},{"stmt":{"origin":"usgrumgr(c0)","pretty":"usgrumgr(c0)"},"body":{"origin":"|- wi(wcel(c0, cusgr), wcel(c0, cumgr))","pretty":"⊢ (c0 ∈ USGraph → c0 ∈ UMGraph)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, cusgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))\n-| wi(wa(wcel(c0, cumgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))","pretty":"⊢ ((c0 ∈ USGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)\n⊣ ((c0 ∈ UMGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)"}},{"stmt":{"origin":"umgredgne(c0, c1, c2, c3)","pretty":"umgredgne(c0, c1, c2, c3)"},"body":{"origin":"|- wi(wa(wcel(c0, cumgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))\n-| wceq(c3, cfv(cedg, c0))","pretty":"⊢ ((c0 ∈ UMGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)\n⊣ c3 =(Edg ` c0)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, cusgr), wcel(cpr(c1, c2), c3)), wne(c1, c2))\n-| wceq(c3, cfv(cedg, c0))","pretty":"⊢ ((c0 ∈ USGraph ∧ { c1, c2 } ∈ c3)→ c1 ≠ c2)\n⊣ c3 =(Edg ` c0)"}}],"comment":"An edge of a simple graph always connects two different vertices. Analogue of ~ usgrnloopv resp. ~ usgrnloop . (Contributed by Alexander van der Vekens, 2-Sep-2017.) (Revised by AV, 17-Oct-2020.) (Proof shortened by AV, 27-Nov-2020.)","parent":["sylan","usgrumgr","umgredgne"],"children":["nb3grprlem1","nfrgr2v","frgr3vlem1","frgr3vlem2","3vfriswmgrlem","2pthfrgrrn2","3cyclfrgrrn2"]}