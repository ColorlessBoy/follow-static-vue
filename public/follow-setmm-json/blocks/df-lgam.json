{"bIdx":27544,"bType":"axiom","type":"","name":"df-lgam","params":"setvar s0, setvar s1","body":["|- wceq(clgam, cmpt(s0, cdif(cc, cdif(cz, cn)), co(csu(s1, cn, co(co(cv(s0), cmul, cfv(clog, co(co(cv(s1), caddc, nat1), cdiv, cv(s1)))), cmin, cfv(clog, co(co(cv(s0), cdiv, cv(s1)), caddc, nat1)))), cmin, cfv(clog, cv(s0)))))","-| diffss(s0, s1)"],"bodyPretty":["⊢ log_G =(s0 ∈(ℂ \\(ℤ \\ ℕ))↦(sum(s1 ∈ ℕ,((s0[×](log `((s1[+]1)[÷]s1)))[-](log `((s0[÷]s1)[+]1))))[-](log ` s0)))","⊣ d(s0, s1)"],"proof":[],"comment":"Define the log-Gamma function. We can work with this form of the gamma function a bit easier than the equivalent expression for the gamma function itself, and moreover this function is not actually equal to ` log ( _G ( x ) ) ` because the branch cuts are placed differently (we do have ` exp ( log_G ( x ) ) = _G ( x ) ` , though). This definition is attributed to Euler, and unlike the usual integral definition is defined on the entire complex plane except the nonpositive integers ` ZZ \\ NN ` , where the function has simple poles. (Contributed by Mario Carneiro, 12-Jul-2014.)","parent":[],"children":["lgamgulm2","lgamf","iprodgam"]}