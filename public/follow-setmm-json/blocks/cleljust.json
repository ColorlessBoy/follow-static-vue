{"bIdx":2377,"bType":"thm","type":"","name":"cleljust","params":"setvar s0, setvar s1, setvar s2","body":["|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))","-| diffss(s0, s2)","-| diffss(s1, s2)"],"bodyPretty":["⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))","⊣ d(s0, s2)","⊣ d(s1, s2)"],"proof":[{"stmt":{"origin":"bicomi(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))","pretty":"bicomi(s0 ∈ s1, ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))"},"body":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| wb(wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))), wcel(cv(s0), cv(s1)))","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ (∃(s2,(s2 = s0 ∧ s2 ∈ s1))↔ s0 ∈ s1)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| wb(wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))), wcel(cv(s0), cv(s1)))","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ (∃(s2,(s2 = s0 ∧ s2 ∈ s1))↔ s0 ∈ s1)"}},{"stmt":{"origin":"equsexvw(s2, s0, wcel(cv(s2), cv(s1)), wcel(cv(s0), cv(s1)))","pretty":"equsexvw(s2, s0, s2 ∈ s1, s0 ∈ s1)"},"body":{"origin":"|- wb(wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))), wcel(cv(s0), cv(s1)))\n-| wi(wceq(cv(s2), cv(s0)), wb(wcel(cv(s2), cv(s1)), wcel(cv(s0), cv(s1))))\n-| diffss(s2, s0)\n-| diffsw(s2, wcel(cv(s0), cv(s1)))","pretty":"⊢ (∃(s2,(s2 = s0 ∧ s2 ∈ s1))↔ s0 ∈ s1)\n⊣ (s2 = s0 →(s2 ∈ s1 ↔ s0 ∈ s1))\n⊣ d(s2, s0)\n⊣ d(s2, s0 ∈ s1)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| wi(wceq(cv(s2), cv(s0)), wb(wcel(cv(s2), cv(s1)), wcel(cv(s0), cv(s1))))\n-| diffss(s2, s0)\n-| diffsw(s2, wcel(cv(s0), cv(s1)))","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ (s2 = s0 →(s2 ∈ s1 ↔ s0 ∈ s1))\n⊣ d(s2, s0)\n⊣ d(s2, s0 ∈ s1)"}},{"stmt":{"origin":"elequ1(s2, s0, s1)","pretty":"elequ1(s2, s0, s1)"},"body":{"origin":"|- wi(wceq(cv(s2), cv(s0)), wb(wcel(cv(s2), cv(s1)), wcel(cv(s0), cv(s1))))","pretty":"⊢ (s2 = s0 →(s2 ∈ s1 ↔ s0 ∈ s1))"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| diffss(s2, s0)\n-| diffsw(s2, wcel(cv(s0), cv(s1)))","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ d(s2, s0)\n⊣ d(s2, s0 ∈ s1)"}},{"stmt":{"origin":"diff.wcel.s(s2, cv(s0), cv(s1))","pretty":"diff.wcel.s(s2, s0, s1)"},"body":{"origin":"|- diffsw(s2, wcel(cv(s0), cv(s1)))\n-| diffsc(s2, cv(s0))\n-| diffsc(s2, cv(s1))","pretty":"⊢ d(s2, s0 ∈ s1)\n⊣ d(s2, s0)\n⊣ d(s2, s1)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| diffss(s2, s0)\n-| diffsc(s2, cv(s0))\n-| diffsc(s2, cv(s1))","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ d(s2, s0)\n⊣ d(s2, s0)\n⊣ d(s2, s1)"}},{"stmt":{"origin":"diff.cv.s(s2, s0)","pretty":"diff.cv.s(s2, s0)"},"body":{"origin":"|- diffsc(s2, cv(s0))\n-| diffss(s2, s0)","pretty":"⊢ d(s2, s0)\n⊣ d(s2, s0)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| diffss(s2, s0)\n-| diffsc(s2, cv(s1))","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ d(s2, s0)\n⊣ d(s2, s1)"}},{"stmt":{"origin":"diffss.ex(s2, s0)","pretty":"diffss.ex(s2, s0)"},"body":{"origin":"|- diffss(s2, s0)\n-| diffss(s0, s2)","pretty":"⊢ d(s2, s0)\n⊣ d(s0, s2)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| diffsc(s2, cv(s1))\n-| diffss(s0, s2)","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ d(s2, s1)\n⊣ d(s0, s2)"}},{"stmt":{"origin":"diff.cv.s(s2, s1)","pretty":"diff.cv.s(s2, s1)"},"body":{"origin":"|- diffsc(s2, cv(s1))\n-| diffss(s2, s1)","pretty":"⊢ d(s2, s1)\n⊣ d(s2, s1)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| diffss(s0, s2)\n-| diffss(s2, s1)","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ d(s0, s2)\n⊣ d(s2, s1)"}},{"stmt":{"origin":"diffss.ex(s2, s1)","pretty":"diffss.ex(s2, s1)"},"body":{"origin":"|- diffss(s2, s1)\n-| diffss(s1, s2)","pretty":"⊢ d(s2, s1)\n⊣ d(s1, s2)"},"cumulated":{"origin":"|- wb(wcel(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wcel(cv(s2), cv(s1)))))\n-| diffss(s0, s2)\n-| diffss(s1, s2)","pretty":"⊢ (s0 ∈ s1 ↔ ∃(s2,(s2 = s0 ∧ s2 ∈ s1)))\n⊣ d(s0, s2)\n⊣ d(s1, s2)"}}],"comment":"When the class variables in definition ~ df-clel are replaced with setvar variables, this theorem of predicate calculus is the result. This theorem provides part of the justification for the consistency of that definition, which \"overloads\" the setvar variables in ~ wel with the class variables in ~ wcel . (Contributed by NM, 28-Jan-2004.) Revised to use ~ equsexvw in order to remove dependencies on ~ ax-10 , ~ ax-12 , ~ ax-13 . Note that there is no disjoint variable condition on ` x , y ` , that is, on the variables of the left-hand side, as should be the case for definitions. (Revised by BJ, 29-Dec-2020.)","parent":["bicomi","equsexvw","elequ1","diff.wcel.s","diff.cv.s","diffss.ex"],"children":["bj-dfclel"]}