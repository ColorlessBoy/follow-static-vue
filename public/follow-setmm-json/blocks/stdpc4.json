{"bIdx":2340,"bType":"thm","type":"","name":"stdpc4","params":"setvar s0, setvar s1, wff w0","body":["|- wi(wal(s0, w0), wsb(s1, s0, w0))"],"bodyPretty":["⊢ (∀(s0, w0)→[s1 / s0]w0)"],"proof":[{"stmt":{"origin":"sylibr(wal(s0, w0), wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))","pretty":"sylibr(∀(s0, w0), [s1 / s0]w0, ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))"},"body":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| wi(wal(s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n-| wb(wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ (∀(s0, w0)→ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n⊣ ([s1 / s0]w0 ↔ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| wi(wal(s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n-| wb(wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ (∀(s0, w0)→ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n⊣ ([s1 / s0]w0 ↔ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))"}},{"stmt":{"origin":"alrimiv(hs0, wal(s0, w0), wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))))","pretty":"alrimiv(hs0, ∀(s0, w0), (hs0 = s1 → ∀(s0,(s0 = hs0 → w0))))"},"body":{"origin":"|- wi(wal(s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n-| wi(wal(s0, w0), wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))))\n-| diffsw(hs0, wal(s0, w0))","pretty":"⊢ (∀(s0, w0)→ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n⊣ (∀(s0, w0)→(hs0 = s1 → ∀(s0,(s0 = hs0 → w0))))\n⊣ d(hs0, ∀(s0, w0))"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| wb(wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n-| wi(wal(s0, w0), wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))))\n-| diffsw(hs0, wal(s0, w0))","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ ([s1 / s0]w0 ↔ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n⊣ (∀(s0, w0)→(hs0 = s1 → ∀(s0,(s0 = hs0 → w0))))\n⊣ d(hs0, ∀(s0, w0))"}},{"stmt":{"origin":"a1d(wal(s0, w0), wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))","pretty":"a1d(∀(s0, w0), hs0 = s1, ∀(s0,(s0 = hs0 → w0)))"},"body":{"origin":"|- wi(wal(s0, w0), wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0))))\n-| wi(wal(s0, w0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))","pretty":"⊢ (∀(s0, w0)→(hs0 = s1 → ∀(s0,(s0 = hs0 → w0))))\n⊣ (∀(s0, w0)→ ∀(s0,(s0 = hs0 → w0)))"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| wb(wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n-| diffsw(hs0, wal(s0, w0))\n-| wi(wal(s0, w0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ ([s1 / s0]w0 ↔ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n⊣ d(hs0, ∀(s0, w0))\n⊣ (∀(s0, w0)→ ∀(s0,(s0 = hs0 → w0)))"}},{"stmt":{"origin":"ala1(s0, w0, wceq(cv(s0), cv(hs0)))","pretty":"ala1(s0, w0, s0 = hs0)"},"body":{"origin":"|- wi(wal(s0, w0), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))","pretty":"⊢ (∀(s0, w0)→ ∀(s0,(s0 = hs0 → w0)))"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| wb(wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n-| diffsw(hs0, wal(s0, w0))","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ ([s1 / s0]w0 ↔ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n⊣ d(hs0, ∀(s0, w0))"}},{"stmt":{"origin":"df-sb(s1, s0, hs0, w0)","pretty":"df-sb(s1, s0, hs0, w0)"},"body":{"origin":"|- wb(wsb(s1, s0, w0), wal(hs0, wi(wceq(cv(hs0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(hs0)), w0)))))\n-| diffss(s0, hs0)\n-| diffss(s1, hs0)\n-| diffsw(hs0, w0)","pretty":"⊢ ([s1 / s0]w0 ↔ ∀(hs0,(hs0 = s1 → ∀(s0,(s0 = hs0 → w0)))))\n⊣ d(s0, hs0)\n⊣ d(s1, hs0)\n⊣ d(hs0, w0)"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| diffsw(hs0, wal(s0, w0))\n-| diffss(s0, hs0)\n-| diffss(s1, hs0)\n-| diffsw(hs0, w0)","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ d(hs0, ∀(s0, w0))\n⊣ d(s0, hs0)\n⊣ d(s1, hs0)\n⊣ d(hs0, w0)"}},{"stmt":{"origin":"diff.hs0.w(wal(s0, w0))","pretty":"diff.hs0.w(∀(s0, w0))"},"body":{"origin":"|- diffsw(hs0, wal(s0, w0))","pretty":"⊢ d(hs0, ∀(s0, w0))"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| diffss(s0, hs0)\n-| diffss(s1, hs0)\n-| diffsw(hs0, w0)","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ d(s0, hs0)\n⊣ d(s1, hs0)\n⊣ d(hs0, w0)"}},{"stmt":{"origin":"diffss.ex(s0, hs0)","pretty":"diffss.ex(s0, hs0)"},"body":{"origin":"|- diffss(s0, hs0)\n-| diffss(hs0, s0)","pretty":"⊢ d(s0, hs0)\n⊣ d(hs0, s0)"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| diffss(s1, hs0)\n-| diffsw(hs0, w0)\n-| diffss(hs0, s0)","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ d(s1, hs0)\n⊣ d(hs0, w0)\n⊣ d(hs0, s0)"}},{"stmt":{"origin":"diff.hs0.s(s0)","pretty":"diff.hs0.s(s0)"},"body":{"origin":"|- diffss(hs0, s0)","pretty":"⊢ d(hs0, s0)"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| diffss(s1, hs0)\n-| diffsw(hs0, w0)","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ d(s1, hs0)\n⊣ d(hs0, w0)"}},{"stmt":{"origin":"diffss.ex(s1, hs0)","pretty":"diffss.ex(s1, hs0)"},"body":{"origin":"|- diffss(s1, hs0)\n-| diffss(hs0, s1)","pretty":"⊢ d(s1, hs0)\n⊣ d(hs0, s1)"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| diffsw(hs0, w0)\n-| diffss(hs0, s1)","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ d(hs0, w0)\n⊣ d(hs0, s1)"}},{"stmt":{"origin":"diff.hs0.s(s1)","pretty":"diff.hs0.s(s1)"},"body":{"origin":"|- diffss(hs0, s1)","pretty":"⊢ d(hs0, s1)"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))\n-| diffsw(hs0, w0)","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)\n⊣ d(hs0, w0)"}},{"stmt":{"origin":"diff.hs0.w(w0)","pretty":"diff.hs0.w(w0)"},"body":{"origin":"|- diffsw(hs0, w0)","pretty":"⊢ d(hs0, w0)"},"cumulated":{"origin":"|- wi(wal(s0, w0), wsb(s1, s0, w0))","pretty":"⊢ (∀(s0, w0)→[s1 / s0]w0)"}}],"comment":"The specialization axiom of standard predicate calculus. It states that if a statement ` ph ` holds for all ` x ` , then it also holds for the specific case of ` t ` (properly) substituted for ` x ` . Translated to traditional notation, it can be read: \" ` A. x ph ( x ) -> ph ( t ) ` , provided that ` t ` is free for ` x ` in ` ph ( x ) ` \". Axiom 4 of [Mendelson] p. 69. See also ~ spsbc and ~ rspsbc . (Contributed by NM, 14-May-1993.) Revise ~ df-sb . (Revised by BJ, 22-Dec-2020.)","parent":["sylibr","alrimiv","a1d","ala1","df-sb","diff.hs0.w","diffss.ex","diff.hs0.s"],"children":["sbtALT","2stdpc4","spsbim","sbv","sbft","sb2","spsbimOLD","spsbbiOLD","sbtrt","pm13.183","pm13.183OLD","spsbc","nd1","nd2","bj-ssbft","bj-vexwt","bj-ab0","axfrege58b","pm10.14","pm11.57"]}