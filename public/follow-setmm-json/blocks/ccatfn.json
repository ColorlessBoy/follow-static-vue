{"bIdx":14671,"bType":"thm","type":"","name":"ccatfn","params":"","body":["|- wfn(cconcat, cxp(universe, universe))"],"bodyPretty":["⊢ ++[Fn](𝕌 × 𝕌)"],"proof":[{"stmt":{"origin":"fnmpt2i(hs0, hs1, cconcat, universe, universe, cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0)))))))","pretty":"fnmpt2i(hs0, hs1, cconcat, universe, universe, (hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0))))))"},"body":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| wceq(cconcat, cmpo(hs0, hs1, universe, universe, cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0))))))))\n-| wcel(cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0)))))), universe)\n-| diffss(hs0, hs1)\n-| diffsc(hs0, universe)\n-| diffsc(hs0, universe)\n-| diffsc(hs1, universe)\n-| diffsc(hs1, universe)","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ ++ =(hs0 ∈ 𝕌, hs1 ∈ 𝕌 ↦(hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0))))))\n⊣ (hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0)))))∈ 𝕌\n⊣ d(hs0, hs1)\n⊣ d(hs0, 𝕌)\n⊣ d(hs0, 𝕌)\n⊣ d(hs1, 𝕌)\n⊣ d(hs1, 𝕌)"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| wceq(cconcat, cmpo(hs0, hs1, universe, universe, cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0))))))))\n-| wcel(cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0)))))), universe)\n-| diffss(hs0, hs1)\n-| diffsc(hs0, universe)\n-| diffsc(hs1, universe)","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ ++ =(hs0 ∈ 𝕌, hs1 ∈ 𝕌 ↦(hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0))))))\n⊣ (hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0)))))∈ 𝕌\n⊣ d(hs0, hs1)\n⊣ d(hs0, 𝕌)\n⊣ d(hs1, 𝕌)"}},{"stmt":{"origin":"df-concat(hs0, hs1, hs2)","pretty":"df-concat(hs0, hs1, hs2)"},"body":{"origin":"|- wceq(cconcat, cmpo(hs0, hs1, universe, universe, cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0))))))))\n-| diffss(hs0, hs1)\n-| diffss(hs0, hs2)\n-| diffss(hs1, hs2)","pretty":"⊢ ++ =(hs0 ∈ 𝕌, hs1 ∈ 𝕌 ↦(hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0))))))\n⊣ d(hs0, hs1)\n⊣ d(hs0, hs2)\n⊣ d(hs1, hs2)"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| wcel(cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0)))))), universe)\n-| diffss(hs0, hs1)\n-| diffsc(hs0, universe)\n-| diffsc(hs1, universe)\n-| diffss(hs0, hs2)\n-| diffss(hs1, hs2)","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ (hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0)))))∈ 𝕌\n⊣ d(hs0, hs1)\n⊣ d(hs0, 𝕌)\n⊣ d(hs1, 𝕌)\n⊣ d(hs0, hs2)\n⊣ d(hs1, hs2)"}},{"stmt":{"origin":"mptex(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0))))))","pretty":"mptex(hs2, (0[..^]((# ` hs0)[+](# ` hs1))), if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0)))))"},"body":{"origin":"|- wcel(cmpt(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), cif(cfv(cv(hs0), cv(hs2)), cfv(cv(hs1), co(cv(hs2), cmin, cfv(chash, cv(hs0)))), wcel(cv(hs2), co(nat0, cfzo, cfv(chash, cv(hs0)))))), universe)\n-| wcel(co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), universe)\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ (hs2 ∈(0[..^]((# ` hs0)[+](# ` hs1)))↦ if(hs2 ∈(0[..^](# ` hs0)),(hs0 ` hs2),(hs1 `(hs2[-](# ` hs0)))))∈ 𝕌\n⊣ (0[..^]((# ` hs0)[+](# ` hs1)))∈ 𝕌\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| diffss(hs0, hs1)\n-| diffsc(hs0, universe)\n-| diffsc(hs1, universe)\n-| diffss(hs0, hs2)\n-| diffss(hs1, hs2)\n-| wcel(co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), universe)\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ d(hs0, hs1)\n⊣ d(hs0, 𝕌)\n⊣ d(hs1, 𝕌)\n⊣ d(hs0, hs2)\n⊣ d(hs1, hs2)\n⊣ (0[..^]((# ` hs0)[+](# ` hs1)))∈ 𝕌\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"}},{"stmt":{"origin":"ovex(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1))))","pretty":"ovex(nat0, cfzo, ((# ` hs0)[+](# ` hs1)))"},"body":{"origin":"|- wcel(co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))), universe)","pretty":"⊢ (0[..^]((# ` hs0)[+](# ` hs1)))∈ 𝕌"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| diffss(hs0, hs1)\n-| diffsc(hs0, universe)\n-| diffsc(hs1, universe)\n-| diffss(hs0, hs2)\n-| diffss(hs1, hs2)\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ d(hs0, hs1)\n⊣ d(hs0, 𝕌)\n⊣ d(hs1, 𝕌)\n⊣ d(hs0, hs2)\n⊣ d(hs1, hs2)\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"}},{"stmt":{"origin":"diff.hs0.s(hs1)","pretty":"diff.hs0.s(hs1)"},"body":{"origin":"|- diffss(hs0, hs1)","pretty":"⊢ d(hs0, hs1)"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| diffsc(hs0, universe)\n-| diffsc(hs1, universe)\n-| diffss(hs0, hs2)\n-| diffss(hs1, hs2)\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ d(hs0, 𝕌)\n⊣ d(hs1, 𝕌)\n⊣ d(hs0, hs2)\n⊣ d(hs1, hs2)\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"}},{"stmt":{"origin":"diff.hs0.c(universe)","pretty":"diff.hs0.c(universe)"},"body":{"origin":"|- diffsc(hs0, universe)","pretty":"⊢ d(hs0, 𝕌)"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| diffsc(hs1, universe)\n-| diffss(hs0, hs2)\n-| diffss(hs1, hs2)\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ d(hs1, 𝕌)\n⊣ d(hs0, hs2)\n⊣ d(hs1, hs2)\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"}},{"stmt":{"origin":"diff.hs1.c(universe)","pretty":"diff.hs1.c(universe)"},"body":{"origin":"|- diffsc(hs1, universe)","pretty":"⊢ d(hs1, 𝕌)"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| diffss(hs0, hs2)\n-| diffss(hs1, hs2)\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ d(hs0, hs2)\n⊣ d(hs1, hs2)\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"}},{"stmt":{"origin":"diff.hs0.s(hs2)","pretty":"diff.hs0.s(hs2)"},"body":{"origin":"|- diffss(hs0, hs2)","pretty":"⊢ d(hs0, hs2)"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| diffss(hs1, hs2)\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ d(hs1, hs2)\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"}},{"stmt":{"origin":"diff.hs1.s(hs2)","pretty":"diff.hs1.s(hs2)"},"body":{"origin":"|- diffss(hs1, hs2)","pretty":"⊢ d(hs1, hs2)"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))\n-| diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)\n⊣ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"}},{"stmt":{"origin":"diff.hs2.c(co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"diff.hs2.c((0[..^]((# ` hs0)[+](# ` hs1))))"},"body":{"origin":"|- diffsc(hs2, co(nat0, cfzo, co(cfv(chash, cv(hs0)), caddc, cfv(chash, cv(hs1)))))","pretty":"⊢ d(hs2,(0[..^]((# ` hs0)[+](# ` hs1))))"},"cumulated":{"origin":"|- wfn(cconcat, cxp(universe, universe))","pretty":"⊢ ++[Fn](𝕌 × 𝕌)"}}],"comment":"The concatenation operator is a two-argument function. (Contributed by Mario Carneiro, 27-Sep-2015.) (Proof shortened by AV, 29-Apr-2020.)","parent":["fnmpt2i","df-concat","mptex","ovex","diff.hs0.s","diff.hs0.c","diff.hs1.c","diff.hs1.s","diff.hs2.c"],"children":["frmdplusg"]}