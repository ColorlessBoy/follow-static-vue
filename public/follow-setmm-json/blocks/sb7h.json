{"bIdx":2791,"bType":"thm","type":"","name":"sb7h","params":"setvar s0, setvar s1, setvar s2, wff w0","body":["|- wb(wsb(s0, s1, w0), wex(s2, wa(wceq(cv(s2), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))))","-| wi(w0, wal(s2, w0))","-| diffss(s0, s2)"],"bodyPretty":["⊢ ([s0 / s1]w0 ↔ ∃(s2,(s2 = s0 ∧ ∃(s1,(s1 = s2 ∧ w0)))))","⊣ (w0 → ∀(s2, w0))","⊣ d(s0, s2)"],"proof":[{"stmt":{"origin":"sb7f(s0, s1, s2, w0)","pretty":"sb7f(s0, s1, s2, w0)"},"body":{"origin":"|- wb(wsb(s0, s1, w0), wex(s2, wa(wceq(cv(s2), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))))\n-| wnf(s2, w0)\n-| diffss(s0, s2)","pretty":"⊢ ([s0 / s1]w0 ↔ ∃(s2,(s2 = s0 ∧ ∃(s1,(s1 = s2 ∧ w0)))))\n⊣ F/(s2, w0)\n⊣ d(s0, s2)"},"cumulated":{"origin":"|- wb(wsb(s0, s1, w0), wex(s2, wa(wceq(cv(s2), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))))\n-| wnf(s2, w0)\n-| diffss(s0, s2)","pretty":"⊢ ([s0 / s1]w0 ↔ ∃(s2,(s2 = s0 ∧ ∃(s1,(s1 = s2 ∧ w0)))))\n⊣ F/(s2, w0)\n⊣ d(s0, s2)"}},{"stmt":{"origin":"nf5i(s2, w0)","pretty":"nf5i(s2, w0)"},"body":{"origin":"|- wnf(s2, w0)\n-| wi(w0, wal(s2, w0))","pretty":"⊢ F/(s2, w0)\n⊣ (w0 → ∀(s2, w0))"},"cumulated":{"origin":"|- wb(wsb(s0, s1, w0), wex(s2, wa(wceq(cv(s2), cv(s0)), wex(s1, wa(wceq(cv(s1), cv(s2)), w0)))))\n-| diffss(s0, s2)\n-| wi(w0, wal(s2, w0))","pretty":"⊢ ([s0 / s1]w0 ↔ ∃(s2,(s2 = s0 ∧ ∃(s1,(s1 = s2 ∧ w0)))))\n⊣ d(s0, s2)\n⊣ (w0 → ∀(s2, w0))"}}],"comment":"This version of ~ dfsb7 does not require that ` ph ` and ` z ` be distinct. This permits it to be used as a definition for substitution in a formalization that omits the logically redundant axiom ~ ax-5 i.e. that doesn't have the concept of a variable not occurring in a wff. ( ~ df-sb is also suitable, but its mixing of free and bound variables is distasteful to some logicians.) (Contributed by NM, 26-Jul-2006.) (Proof shortened by Andrew Salmon, 25-May-2011.)","parent":["sb7f","nf5i"],"children":[]}