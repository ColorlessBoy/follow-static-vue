{"bIdx":14168,"bType":"axiom","type":"","name":"df-exp","params":"setvar s0, setvar s1","body":["|- wceq(cexp, cmpo(s0, s1, cc, cz, cif(nat1, cif(cfv(cseq(nat1, cmul, cxp(cn, csn(cv(s0)))), cv(s1)), co(nat1, cdiv, cfv(cseq(nat1, cmul, cxp(cn, csn(cv(s0)))), cneg(cv(s1)))), wbr(nat0, clt, cv(s1))), wceq(cv(s1), nat0))))","-| diffss(s0, s1)"],"bodyPretty":["⊢ ^ =(s0 ∈ ℂ, s1 ∈ ℤ ↦ if(s1 = 0, 1, if(0[<]s1,(seq(1(×,(ℕ × { s0 })))` s1),(1[÷](seq(1(×,(ℕ × { s0 })))` -u(s1))))))","⊣ d(s0, s1)"],"proof":[],"comment":"Define exponentiation to nonnegative integer powers. For example, ` ( 5 ^ 2 ) = 2 5 ` ( ~ ex-exp ). Terminology: In general, \"exponentiation\" is the operation of raising a \"base\" ` x ` to the power of the \"exponent\" ` y ` , resulting in the \"power\" ` ( x ^ y ) ` , also called \"x to the power of y\". In this case, \"integer exponentiation\" is the operation of raising a complex \"base\" ` x ` to the power of an integer ` y ` , resulting in the \"integer power\" ` ( x ^ y ) ` . This definition is not meant to be used directly; instead, ~ exp0 and ~ expp1 provide the standard recursive definition. The up-arrow notation is used by Donald Knuth for iterated exponentiation (_Science_ 194, 1235-1242, 1976) and is convenient for us since we don't have superscripts. 10-Jun-2005: The definition was extended to include zero exponents, so that ` 0 ^ 0 = 1 ` per the convention of Definition 10-4.1 of [Gleason] p. 134 ( ~ 0exp0e1 ). 4-Jun-2014: The definition was extended to include negative integer exponents. For example, ` ( -u 3 ^ -u 2 ) = ( 1 / 9 ) ` ( ~ ex-exp ). The case ` x = 0 , y < 0 ` gives the value ` ( 1 / 0 ) ` , so we will avoid this case in our theorems. For a definition of exponentiation including complex exponents see ~ df-cxp (complex exponentiation). Both definitions are equivalent for integer exponents, see ~ cxpexpz . (Contributed by Raph Levien, 20-May-2004.) (Revised by NM, 15-Oct-2004.)","parent":[],"children":["expval"]}