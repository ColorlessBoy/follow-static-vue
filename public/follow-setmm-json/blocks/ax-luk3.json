{"bIdx":37522,"bType":"axiom","type":"","name":"ax-luk3","params":"wff w0, wff w1","body":["|- wi(w0, wi(wn(w0), w1))"],"bodyPretty":["⊢ (w0 →(¬ w0 → w1))"],"proof":[],"comment":"3 of 3 axioms for propositional calculus due to Lukasiewicz. Copy of ~ luk-3 and ~ pm2.24 , but introduced as an axiom. One might think that the similar ~ pm2.21 ` ( -. ph -> ( ph -> ps ) ) ` is a valid replacement for this axiom. But this is not true, ~ ax-3 is not derivable from this modification. This can be shown by designing carefully operators ` -. ` and ` -> ` on a finite set of primitive statements. In propositional logic such statements are ` T. ` and ` F. ` , but we can assume more and other primitives in our universe of statements. So we denote our primitive statements as phi0 , phi1 and phi2. The actual meaning of the statements are not important in this context, it rather counts how they behave under our operations ` -. ` and ` -> ` , and which of them we assume to hold unconditionally (phi1, phi2). For our disproving model, I give that information in tabular form below. The interested reader may check per hand, that all possible interpretations of ~ ax-mp , ~ ax-luk1 , ~ ax-luk2 and ~ pm2.21 result in phi1 or phi2, meaning they always hold. But for ~ wl-luk-ax3 we can find a counter example resulting in phi0, not a statement always true. The verification of a particular set of axioms in a given model is tedious and error prone, so I wrote a computer program, first checking this for me, and second, hunting for a counter example. Here is the result, after 9165 fruitlessly computer generated models: <HTML> <br><br> ax-3 fails for phi2, phi2<br> number of statements: 3<br> always true phi1 phi2 <br><br> Negation is defined as<br> ---------------------------------------------------------------------- <table border=\"1\"> <tr><td>-. phi0</td><td>-. phi1</td><td>-. phi2</td></tr> <tr><td>phi1</td><td>phi0</td><td>phi1</td></tr></table> <br> Implication is defined as<br> ---------------------------------------------------------------------- <table border=1> <tr><td>p->q</td><td>q: phi0</td><td>q: phi1</td><td>q: phi2</td></tr> <tr><td>p: phi0</td><td>phi1</td><td>phi1</td><td>phi1</td></tr> <tr><td>p: phi1</td><td>phi0</td><td>phi1</td><td>phi1</td></tr> <tr><td>p: phi2</td><td>phi0</td><td>phi0</td><td>phi0</td></tr> </table><br></HTML> (Contributed by Wolf Lammen, 17-Dec-2018.) (New usage is discouraged.)","parent":[],"children":["wl-luk-con4i","wl-luk-pm2.24i","wl-luk-ax3","wl-luk-ax1","wl-luk-pm2.21","wl-luk-id"]}