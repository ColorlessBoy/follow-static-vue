{"bIdx":3756,"bType":"thm","type":"","name":"isset","params":"setvar s0, class c0","body":["|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))","-| diffsc(s0, c0)"],"bodyPretty":["⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))","⊣ d(s0, c0)"],"proof":[{"stmt":{"origin":"bitr4i(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))","pretty":"bitr4i(c0 ∈ 𝕌, ∃(s0, s0 = c0), ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))"},"body":{"origin":"|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))\n-| wb(wcel(c0, universe), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))\n-| wb(wex(s0, wceq(cv(s0), c0)), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))\n⊣ (c0 ∈ 𝕌 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))\n⊣ (∃(s0, s0 = c0)↔ ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))"},"cumulated":{"origin":"|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))\n-| wb(wcel(c0, universe), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))\n-| wb(wex(s0, wceq(cv(s0), c0)), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))\n⊣ (c0 ∈ 𝕌 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))\n⊣ (∃(s0, s0 = c0)↔ ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))"}},{"stmt":{"origin":"df-clel(s0, c0, universe)","pretty":"df-clel(s0, c0, universe)"},"body":{"origin":"|- wb(wcel(c0, universe), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))\n-| diffsc(s0, c0)\n-| diffsc(s0, universe)","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))\n⊣ d(s0, c0)\n⊣ d(s0, 𝕌)"},"cumulated":{"origin":"|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))\n-| wb(wex(s0, wceq(cv(s0), c0)), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))\n-| diffsc(s0, c0)\n-| diffsc(s0, universe)","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))\n⊣ (∃(s0, s0 = c0)↔ ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))\n⊣ d(s0, c0)\n⊣ d(s0, 𝕌)"}},{"stmt":{"origin":"exbii(s0, wceq(cv(s0), c0), wa(wceq(cv(s0), c0), wcel(cv(s0), universe)))","pretty":"exbii(s0, s0 = c0, (s0 = c0 ∧ s0 ∈ 𝕌))"},"body":{"origin":"|- wb(wex(s0, wceq(cv(s0), c0)), wex(s0, wa(wceq(cv(s0), c0), wcel(cv(s0), universe))))\n-| wb(wceq(cv(s0), c0), wa(wceq(cv(s0), c0), wcel(cv(s0), universe)))","pretty":"⊢ (∃(s0, s0 = c0)↔ ∃(s0,(s0 = c0 ∧ s0 ∈ 𝕌)))\n⊣ (s0 = c0 ↔(s0 = c0 ∧ s0 ∈ 𝕌))"},"cumulated":{"origin":"|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))\n-| diffsc(s0, c0)\n-| diffsc(s0, universe)\n-| wb(wceq(cv(s0), c0), wa(wceq(cv(s0), c0), wcel(cv(s0), universe)))","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))\n⊣ d(s0, c0)\n⊣ d(s0, 𝕌)\n⊣ (s0 = c0 ↔(s0 = c0 ∧ s0 ∈ 𝕌))"}},{"stmt":{"origin":"biantru(wceq(cv(s0), c0), wcel(cv(s0), universe))","pretty":"biantru(s0 = c0, s0 ∈ 𝕌)"},"body":{"origin":"|- wb(wceq(cv(s0), c0), wa(wceq(cv(s0), c0), wcel(cv(s0), universe)))\n-| wcel(cv(s0), universe)","pretty":"⊢ (s0 = c0 ↔(s0 = c0 ∧ s0 ∈ 𝕌))\n⊣ s0 ∈ 𝕌"},"cumulated":{"origin":"|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))\n-| diffsc(s0, c0)\n-| diffsc(s0, universe)\n-| wcel(cv(s0), universe)","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))\n⊣ d(s0, c0)\n⊣ d(s0, 𝕌)\n⊣ s0 ∈ 𝕌"}},{"stmt":{"origin":"vex(s0)","pretty":"vex(s0)"},"body":{"origin":"|- wcel(cv(s0), universe)","pretty":"⊢ s0 ∈ 𝕌"},"cumulated":{"origin":"|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))\n-| diffsc(s0, c0)\n-| diffsc(s0, universe)","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))\n⊣ d(s0, c0)\n⊣ d(s0, 𝕌)"}},{"stmt":{"origin":"diff.universe.s(s0)","pretty":"diff.universe.s(s0)"},"body":{"origin":"|- diffsc(s0, universe)","pretty":"⊢ d(s0, 𝕌)"},"cumulated":{"origin":"|- wb(wcel(c0, universe), wex(s0, wceq(cv(s0), c0)))\n-| diffsc(s0, c0)","pretty":"⊢ (c0 ∈ 𝕌 ↔ ∃(s0, s0 = c0))\n⊣ d(s0, c0)"}}],"comment":"Two ways to say \" ` A ` is a set\": A class ` A ` is a member of the universal class ` _V ` (see ~ df-v ) if and only if the class ` A ` exists (i.e. there exists some set ` x ` equal to class ` A ` ). Theorem 6.9 of [Quine] p. 43. _Notational convention_: We will use the notational device \" ` A e. _V ` \" to mean \" ` A ` is a set\" very frequently, for example in ~ uniex . Note that a class ` A ` which is not a set is called a _proper class_. In some theorems, such as ~ uniexg , in order to shorten certain proofs we use the more general antecedent ` A e. V ` instead of ` A e. _V ` to mean \" ` A ` is a set.\" Note that a constant is implicitly considered distinct from all variables. This is why ` _V ` is not included in the distinct variable list, even though ~ df-clel requires that the expression substituted for ` B ` not contain ` x ` . (Also, the Metamath spec does not allow constants in the distinct variable list.) (Contributed by NM, 26-May-1993.)","parent":["bitr4i","df-clel","exbii","biantru","vex","diff.universe.s"],"children":["issetf","isseti","issetri","elex","elisset","vtoclg1f","eueq","eueqOLD","moeqOLD","ru","sbc5","snprc","vprc","eusvnfb","reusv2lem3","iotaex","funimaexg","fvmptd3f","fvmptdv2","ovmpt2df","rankf","isssc","dmscut","snelsingles","bj-snglex","bj-nul","dissneqlem","iotaexeu","elnev","ax6e2nd","ax6e2ndVD","ax6e2ndALT","upbdrech","itgsubsticclem"]}