{"bIdx":36524,"bType":"thm","type":"","name":"negsym1","params":"wff w0","body":["|- wi(wn(wn(wfal)), wn(w0))"],"bodyPretty":["⊢ (¬ ¬ F → ¬ w0)"],"proof":[{"stmt":{"origin":"pm2.24i(wn(wfal), wn(w0))","pretty":"pm2.24i(¬ F, ¬ w0)"},"body":{"origin":"|- wi(wn(wn(wfal)), wn(w0))\n-| wn(wfal)","pretty":"⊢ (¬ ¬ F → ¬ w0)\n⊣ ¬ F"},"cumulated":{"origin":"|- wi(wn(wn(wfal)), wn(w0))\n-| wn(wfal)","pretty":"⊢ (¬ ¬ F → ¬ w0)\n⊣ ¬ F"}},{"stmt":{"origin":"fal()","pretty":"fal()"},"body":{"origin":"|- wn(wfal)","pretty":"⊢ ¬ F"},"cumulated":{"origin":"|- wi(wn(wn(wfal)), wn(w0))","pretty":"⊢ (¬ ¬ F → ¬ w0)"}}],"comment":"In the paper \"On Variable Functors of Propositional Arguments\", Lukasiewicz introduced a system that can handle variable connectives. This was done by introducing a variable, marked with a lowercase delta, which takes a wff as input. In the system, \"delta ` ph ` \" means that \"something is true of ` ph ` \". The expression \"delta ` ph ` \" can be substituted with ` -. ph ` , ` ps /\\ ph ` , ` A. x ph ` , etc. Later on, Meredith discovered a single axiom, in the form of ` ( ` delta delta ` F. -> ` delta ` ph ` ` ) ` . This represents the shortest theorem in the extended propositional calculus that cannot be derived as an instance of a theorem in propositional calculus. A symmetry with ` -. ` . (Contributed by Anthony Hart, 4-Sep-2011.)","parent":["pm2.24i","fal"],"children":[]}