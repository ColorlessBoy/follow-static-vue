{"bIdx":5186,"bType":"axiom","type":"","name":"df-iun","params":"setvar s0, setvar s1, class c0, class c1","body":["|- wceq(ciun(s0, c0, c1), cab(s1, wrex(s0, c0, wcel(cv(s1), c1))))","-| diffss(s0, s1)","-| diffsc(s1, c0)","-| diffsc(s1, c1)"],"bodyPretty":["⊢ ⋃(s0 ∈ c0, c1)= { s1 | ∃(s0 ∈ c0, s1 ∈ c1)}","⊣ d(s0, s1)","⊣ d(s1, c0)","⊣ d(s1, c1)"],"proof":[],"comment":"Define indexed union. Definition indexed union in [Stoll] p. 45. In most applications, ` A ` is independent of ` x ` (although this is not required by the definition), and ` B ` depends on ` x ` i.e. can be read informally as ` B ( x ) ` . We call ` x ` the index, ` A ` the index set, and ` B ` the indexed set. In most books, ` x e. A ` is written as a subscript or underneath a union symbol ` U. ` . We use a special union symbol ` U_ ` to make it easier to distinguish from plain class union. In many theorems, you will see that ` x ` and ` A ` are in the same distinct variable group (meaning ` A ` cannot depend on ` x ` ) and that ` B ` and ` x ` do not share a distinct variable group (meaning that can be thought of as ` B ( x ) ` i.e. can be substituted with a class expression containing ` x ` ). An alternate definition tying indexed union to ordinary union is ~ dfiun2 . Theorem ~ uniiun provides a definition of ordinary union in terms of indexed union. Theorems ~ fniunfv and ~ funiunfv are useful when ` B ` is a function. (Contributed by NM, 27-Jun-1998.)","parent":[],"children":["eliun","iuneq12df","nfiun","nfiu1","dfiunv2","cbviun","iunss","uniiun","iunopab","opeliunxp","reliun","fnasrn","abrexex2g","marypha2lem4","cshwsiun","cbviunf","iuneq12daf","iunrdx","iunrnmptss","bnj956","bnj1143","bnj1146","bnj1400","bnj882","bnj18eq1","bnj893","bnj1398","volsupnfl","iunsn","ss2iundf","iunssf","opeliun2xp","nfiund"]}