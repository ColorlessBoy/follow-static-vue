{"bIdx":3079,"bType":"thm","type":"","name":"cvjust","params":"setvar s0, setvar s1","body":["|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))","-| diffss(s0, s1)"],"bodyPretty":["⊢ s0 = { s1 | s1 ∈ s0 }","⊣ d(s0, s1)"],"proof":[{"stmt":{"origin":"mpgbir(hs0, wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0)))), wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0))))))","pretty":"mpgbir(hs0, s0 = { s1 | s1 ∈ s0 }, (hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 }))"},"body":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| wb(wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0)))), wal(hs0, wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))))))\n-| wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))))","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ (s0 = { s1 | s1 ∈ s0 } ↔ ∀(hs0,(hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 })))\n⊣ (hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 })"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| wb(wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0)))), wal(hs0, wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))))))\n-| wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))))","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ (s0 = { s1 | s1 ∈ s0 } ↔ ∀(hs0,(hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 })))\n⊣ (hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 })"}},{"stmt":{"origin":"dfcleq(hs0, cv(s0), cab(s1, wcel(cv(s1), cv(s0))))","pretty":"dfcleq(hs0, s0, { s1 | s1 ∈ s0 })"},"body":{"origin":"|- wb(wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0)))), wal(hs0, wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))))))\n-| diffsc(hs0, cv(s0))\n-| diffsc(hs0, cab(s1, wcel(cv(s1), cv(s0))))","pretty":"⊢ (s0 = { s1 | s1 ∈ s0 } ↔ ∀(hs0,(hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 })))\n⊣ d(hs0, s0)\n⊣ d(hs0, { s1 | s1 ∈ s0 })"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))))\n-| diffsc(hs0, cv(s0))\n-| diffsc(hs0, cab(s1, wcel(cv(s1), cv(s0))))","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ (hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 })\n⊣ d(hs0, s0)\n⊣ d(hs0, { s1 | s1 ∈ s0 })"}},{"stmt":{"origin":"bitr2i(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))), wsb(hs0, s1, wcel(cv(s1), cv(s0))))","pretty":"bitr2i(hs0 ∈ s0, hs0 ∈ { s1 | s1 ∈ s0 }, [hs0 / s1]s1 ∈ s0)"},"body":{"origin":"|- wb(wcel(cv(hs0), cv(s0)), wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))))\n-| wb(wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))), wsb(hs0, s1, wcel(cv(s1), cv(s0))))\n-| wb(wsb(hs0, s1, wcel(cv(s1), cv(s0))), wcel(cv(hs0), cv(s0)))","pretty":"⊢ (hs0 ∈ s0 ↔ hs0 ∈ { s1 | s1 ∈ s0 })\n⊣ (hs0 ∈ { s1 | s1 ∈ s0 } ↔[hs0 / s1]s1 ∈ s0)\n⊣ ([hs0 / s1]s1 ∈ s0 ↔ hs0 ∈ s0)"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| diffsc(hs0, cv(s0))\n-| diffsc(hs0, cab(s1, wcel(cv(s1), cv(s0))))\n-| wb(wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))), wsb(hs0, s1, wcel(cv(s1), cv(s0))))\n-| wb(wsb(hs0, s1, wcel(cv(s1), cv(s0))), wcel(cv(hs0), cv(s0)))","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ d(hs0, s0)\n⊣ d(hs0, { s1 | s1 ∈ s0 })\n⊣ (hs0 ∈ { s1 | s1 ∈ s0 } ↔[hs0 / s1]s1 ∈ s0)\n⊣ ([hs0 / s1]s1 ∈ s0 ↔ hs0 ∈ s0)"}},{"stmt":{"origin":"df-clab(hs0, s1, wcel(cv(s1), cv(s0)))","pretty":"df-clab(hs0, s1, s1 ∈ s0)"},"body":{"origin":"|- wb(wcel(cv(hs0), cab(s1, wcel(cv(s1), cv(s0)))), wsb(hs0, s1, wcel(cv(s1), cv(s0))))","pretty":"⊢ (hs0 ∈ { s1 | s1 ∈ s0 } ↔[hs0 / s1]s1 ∈ s0)"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| diffsc(hs0, cv(s0))\n-| diffsc(hs0, cab(s1, wcel(cv(s1), cv(s0))))\n-| wb(wsb(hs0, s1, wcel(cv(s1), cv(s0))), wcel(cv(hs0), cv(s0)))","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ d(hs0, s0)\n⊣ d(hs0, { s1 | s1 ∈ s0 })\n⊣ ([hs0 / s1]s1 ∈ s0 ↔ hs0 ∈ s0)"}},{"stmt":{"origin":"elsb3(hs0, s1, s0)","pretty":"elsb3(hs0, s1, s0)"},"body":{"origin":"|- wb(wsb(hs0, s1, wcel(cv(s1), cv(s0))), wcel(cv(hs0), cv(s0)))\n-| diffss(s1, s0)","pretty":"⊢ ([hs0 / s1]s1 ∈ s0 ↔ hs0 ∈ s0)\n⊣ d(s1, s0)"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| diffsc(hs0, cv(s0))\n-| diffsc(hs0, cab(s1, wcel(cv(s1), cv(s0))))\n-| diffss(s1, s0)","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ d(hs0, s0)\n⊣ d(hs0, { s1 | s1 ∈ s0 })\n⊣ d(s1, s0)"}},{"stmt":{"origin":"diff.hs0.c(cv(s0))","pretty":"diff.hs0.c(s0)"},"body":{"origin":"|- diffsc(hs0, cv(s0))","pretty":"⊢ d(hs0, s0)"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| diffsc(hs0, cab(s1, wcel(cv(s1), cv(s0))))\n-| diffss(s1, s0)","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ d(hs0, { s1 | s1 ∈ s0 })\n⊣ d(s1, s0)"}},{"stmt":{"origin":"diff.hs0.c(cab(s1, wcel(cv(s1), cv(s0))))","pretty":"diff.hs0.c({ s1 | s1 ∈ s0 })"},"body":{"origin":"|- diffsc(hs0, cab(s1, wcel(cv(s1), cv(s0))))","pretty":"⊢ d(hs0, { s1 | s1 ∈ s0 })"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| diffss(s1, s0)","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ d(s1, s0)"}},{"stmt":{"origin":"diffss.ex(s1, s0)","pretty":"diffss.ex(s1, s0)"},"body":{"origin":"|- diffss(s1, s0)\n-| diffss(s0, s1)","pretty":"⊢ d(s1, s0)\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wceq(cv(s0), cab(s1, wcel(cv(s1), cv(s0))))\n-| diffss(s0, s1)","pretty":"⊢ s0 = { s1 | s1 ∈ s0 }\n⊣ d(s0, s1)"}}],"comment":"Every set is a class. Proposition 4.9 of [TakeutiZaring] p. 13. This theorem shows that a setvar variable can be expressed as a class abstraction. This provides a motivation for the class syntax construction ~ cv , which allows us to substitute a setvar variable for a class variable. See also ~ cab and ~ df-clab . Note that this is not a rigorous justification, because ~ cv is used as part of the proof of this theorem, but a careful argument can be made outside of the formalism of Metamath, for example as is done in Chapter 4 of Takeuti and Zaring. See also the discussion under the definition of class in [Jech] p. 4 showing that \"Every set can be considered to be a class.\" See ~ abid1 for the version of ~ cvjust extended to classes. (Contributed by NM, 7-Nov-2006.) Avoid ~ ax-13 . (Revised by Wolf Lammen, 4-May-2023.)","parent":["mpgbir","dfcleq","bitr2i","df-clab","elsb3","diff.hs0.c","diffss.ex"],"children":["cnambfre"]}