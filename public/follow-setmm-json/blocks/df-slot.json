{"bIdx":17485,"bType":"axiom","type":"","name":"df-slot","params":"setvar s0, class c0","body":["|- wceq(cslot(c0), cmpt(s0, universe, cfv(cv(s0), c0)))","-| diffsc(s0, c0)"],"bodyPretty":["⊢ Slot(c0)=(s0 ∈ 𝕌 ↦(s0 ` c0))","⊣ d(s0, c0)"],"proof":[],"comment":"Define the slot extractor for extensible structures. The class ` Slot A ` is a function whose argument can be any set, although it is meaningful only if that set is a member of an extensible structure (such as a partially ordered set ( ~ df-poset ) or a group ( ~ df-grp )). Note that ` Slot A ` is implemented as \"evaluation at ` A ` \". That is, ` ( Slot A `` S ) ` is defined to be ` ( S `` A ) ` , where ` A ` will typically be a small nonzero natural number. Each extensible structure ` S ` is a function defined on specific natural number \"slots\", and this function extracts the value at a particular slot. The special \"structure\" ` ndx ` , defined as the identity function restricted to ` NN ` , can be used to extract the number ` A ` from a slot, since ` ( Slot A `` ndx ) = A ` (see ~ ndxarg ). This is typically used to refer to the number of a slot when defining structures without having to expose the detail of what that number is (for instance, we use the expression ` ( Base `` ndx ) ` in theorems and proofs instead of its value 1). The class ` Slot ` cannot be defined as ` ( x e. _V |-> ( f e. _V |-> ( f `` x ) ) ) ` because each ` Slot A ` is a function on the proper class ` _V ` so is itself a proper class, and the values of functions are sets ( ~ fvex ). It is necessary to allow proper classes as values of ` Slot A ` since for instance the class of all (base sets of) groups is proper. (Contributed by Mario Carneiro, 22-Sep-2015.)","parent":[],"children":["sloteq","slotfn","strfvnd","bj-evaleq","bj-evalfun","bj-evalfn","bj-evalval"]}