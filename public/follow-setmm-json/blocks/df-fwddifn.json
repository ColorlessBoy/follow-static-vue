{"bIdx":36373,"bType":"axiom","type":"","name":"df-fwddifn","params":"setvar s0, setvar s1, setvar s2, setvar s3, setvar s4","body":["|- wceq(cfwddifn, cmpo(s0, s1, cn0, co(cc, cpm, cc), cmpt(s2, crab(s3, cc, wral(s4, co(nat0, cfz, cv(s0)), wcel(co(cv(s3), caddc, cv(s4)), cdm(cv(s1))))), csu(s4, co(nat0, cfz, cv(s0)), co(co(cv(s0), cbc, cv(s4)), cmul, co(co(cneg(nat1), cexp, co(cv(s0), cmin, cv(s4))), cmul, cfv(cv(s1), co(cv(s2), caddc, cv(s4)))))))))","-| diffss(s1, s4)","-| diffss(s0, s1)","-| diffss(s1, s2)","-| diffss(s1, s3)","-| diffss(s0, s4)","-| diffss(s2, s4)","-| diffss(s3, s4)","-| diffss(s0, s2)","-| diffss(s0, s3)","-| diffss(s2, s3)"],"bodyPretty":["⊢ _/_\\^n =(s0 ∈ ℕ0, s1 ∈(ℂ[p↦]ℂ)↦(s2 ∈ { s3 ∈ ℂ | ∀(s4 ∈(0[...]s0),(s3[+]s4)∈ dom(s1))} ↦ sum(s4 ∈(0[...]s0),((s0[_C]s4)[×]((-u(1)[^](s0[-]s4))[×](s1 `(s2[+]s4)))))))","⊣ d(s1, s4)","⊣ d(s0, s1)","⊣ d(s1, s2)","⊣ d(s1, s3)","⊣ d(s0, s4)","⊣ d(s2, s4)","⊣ d(s3, s4)","⊣ d(s0, s2)","⊣ d(s0, s3)","⊣ d(s2, s3)"],"proof":[],"comment":"Define the nth forward difference operator. This works out to be the forward difference operator iterated ` n ` times. (Contributed by Scott Fenton, 28-May-2020.)","parent":[],"children":["fwddifnval"]}