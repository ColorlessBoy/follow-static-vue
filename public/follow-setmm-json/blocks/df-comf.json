{"bIdx":18047,"bType":"axiom","type":"","name":"df-comf","params":"setvar s0, setvar s1, setvar s2, setvar s3, setvar s4","body":["|- wceq(ccomf, cmpt(s0, universe, cmpo(s1, s2, cxp(cfv(cbs, cv(s0)), cfv(cbs, cv(s0))), cfv(cbs, cv(s0)), cmpo(s3, s4, co(cfv(c2nd, cv(s1)), cfv(chom, cv(s0)), cv(s2)), cfv(cfv(chom, cv(s0)), cv(s1)), co(cv(s3), co(cv(s1), cfv(cco, cv(s0)), cv(s2)), cv(s4))))))","-| diffss(s0, s4)","-| diffss(s0, s3)","-| diffss(s0, s1)","-| diffss(s0, s2)","-| diffss(s3, s4)","-| diffss(s1, s4)","-| diffss(s2, s4)","-| diffss(s1, s3)","-| diffss(s2, s3)","-| diffss(s1, s2)"],"bodyPretty":["‚ä¢ comf =(s0 ‚àà ùïå ‚Ü¶(s1 ‚àà((Base ` s0)√ó(Base ` s0)), s2 ‚àà(Base ` s0)‚Ü¶(s3 ‚àà((2nd ` s1)[(Hom ` s0)]s2), s4 ‚àà((Hom ` s0)` s1)‚Ü¶(s3[(s1[(comp ` s0)]s2)]s4))))","‚ä£ d(s0, s4)","‚ä£ d(s0, s3)","‚ä£ d(s0, s1)","‚ä£ d(s0, s2)","‚ä£ d(s3, s4)","‚ä£ d(s1, s4)","‚ä£ d(s2, s4)","‚ä£ d(s1, s3)","‚ä£ d(s2, s3)","‚ä£ d(s1, s2)"],"proof":[],"comment":"Define the functionalized composition operator, which is exactly like ` comp ` but is guaranteed to be a function of the proper type. (Contributed by Mario Carneiro, 4-Jan-2017.)","parent":[],"children":["comfffval"]}