{"bIdx":1882,"bType":"thm","type":"","name":"had0","params":"wff w0, wff w1, wff w2","body":["|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))"],"bodyPretty":["⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))"],"proof":[{"stmt":{"origin":"con4bid(wn(w0), whad(w0, w1, w2), wxo(w1, w2))","pretty":"con4bid(¬ w0, hadd(w0, w1, w2), (w1 ⊻ w2))"},"body":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n-| wi(wn(w0), wb(wn(whad(w0, w1, w2)), wn(wxo(w1, w2))))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n⊣ (¬ w0 →(¬ hadd(w0, w1, w2)↔ ¬(w1 ⊻ w2)))"},"cumulated":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n-| wi(wn(w0), wb(wn(whad(w0, w1, w2)), wn(wxo(w1, w2))))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n⊣ (¬ w0 →(¬ hadd(w0, w1, w2)↔ ¬(w1 ⊻ w2)))"}},{"stmt":{"origin":"3bitr4g(wn(w0), wn(whad(w0, w1, w2)), wn(wxo(w1, w2)), whad(wn(w0), wn(w1), wn(w2)), wb(wn(w1), wn(w2)))","pretty":"3bitr4g(¬ w0, ¬ hadd(w0, w1, w2), ¬(w1 ⊻ w2), hadd(¬ w0, ¬ w1, ¬ w2), (¬ w1 ↔ ¬ w2))"},"body":{"origin":"|- wi(wn(w0), wb(wn(whad(w0, w1, w2)), wn(wxo(w1, w2))))\n-| wi(wn(w0), wb(whad(wn(w0), wn(w1), wn(w2)), wb(wn(w1), wn(w2))))\n-| wb(wn(whad(w0, w1, w2)), whad(wn(w0), wn(w1), wn(w2)))\n-| wb(wn(wxo(w1, w2)), wb(wn(w1), wn(w2)))","pretty":"⊢ (¬ w0 →(¬ hadd(w0, w1, w2)↔ ¬(w1 ⊻ w2)))\n⊣ (¬ w0 →(hadd(¬ w0, ¬ w1, ¬ w2)↔(¬ w1 ↔ ¬ w2)))\n⊣ (¬ hadd(w0, w1, w2)↔ hadd(¬ w0, ¬ w1, ¬ w2))\n⊣ (¬(w1 ⊻ w2)↔(¬ w1 ↔ ¬ w2))"},"cumulated":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n-| wi(wn(w0), wb(whad(wn(w0), wn(w1), wn(w2)), wb(wn(w1), wn(w2))))\n-| wb(wn(whad(w0, w1, w2)), whad(wn(w0), wn(w1), wn(w2)))\n-| wb(wn(wxo(w1, w2)), wb(wn(w1), wn(w2)))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n⊣ (¬ w0 →(hadd(¬ w0, ¬ w1, ¬ w2)↔(¬ w1 ↔ ¬ w2)))\n⊣ (¬ hadd(w0, w1, w2)↔ hadd(¬ w0, ¬ w1, ¬ w2))\n⊣ (¬(w1 ⊻ w2)↔(¬ w1 ↔ ¬ w2))"}},{"stmt":{"origin":"had1(wn(w0), wn(w1), wn(w2))","pretty":"had1(¬ w0, ¬ w1, ¬ w2)"},"body":{"origin":"|- wi(wn(w0), wb(whad(wn(w0), wn(w1), wn(w2)), wb(wn(w1), wn(w2))))","pretty":"⊢ (¬ w0 →(hadd(¬ w0, ¬ w1, ¬ w2)↔(¬ w1 ↔ ¬ w2)))"},"cumulated":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n-| wb(wn(whad(w0, w1, w2)), whad(wn(w0), wn(w1), wn(w2)))\n-| wb(wn(wxo(w1, w2)), wb(wn(w1), wn(w2)))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n⊣ (¬ hadd(w0, w1, w2)↔ hadd(¬ w0, ¬ w1, ¬ w2))\n⊣ (¬(w1 ⊻ w2)↔(¬ w1 ↔ ¬ w2))"}},{"stmt":{"origin":"hadnot(w0, w1, w2)","pretty":"hadnot(w0, w1, w2)"},"body":{"origin":"|- wb(wn(whad(w0, w1, w2)), whad(wn(w0), wn(w1), wn(w2)))","pretty":"⊢ (¬ hadd(w0, w1, w2)↔ hadd(¬ w0, ¬ w1, ¬ w2))"},"cumulated":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n-| wb(wn(wxo(w1, w2)), wb(wn(w1), wn(w2)))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n⊣ (¬(w1 ⊻ w2)↔(¬ w1 ↔ ¬ w2))"}},{"stmt":{"origin":"bitr3i(wn(wxo(w1, w2)), wb(wn(w1), wn(w2)), wb(w1, w2))","pretty":"bitr3i(¬(w1 ⊻ w2), (¬ w1 ↔ ¬ w2), (w1 ↔ w2))"},"body":{"origin":"|- wb(wn(wxo(w1, w2)), wb(wn(w1), wn(w2)))\n-| wb(wb(w1, w2), wn(wxo(w1, w2)))\n-| wb(wb(w1, w2), wb(wn(w1), wn(w2)))","pretty":"⊢ (¬(w1 ⊻ w2)↔(¬ w1 ↔ ¬ w2))\n⊣ ((w1 ↔ w2)↔ ¬(w1 ⊻ w2))\n⊣ ((w1 ↔ w2)↔(¬ w1 ↔ ¬ w2))"},"cumulated":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n-| wb(wb(w1, w2), wn(wxo(w1, w2)))\n-| wb(wb(w1, w2), wb(wn(w1), wn(w2)))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n⊣ ((w1 ↔ w2)↔ ¬(w1 ⊻ w2))\n⊣ ((w1 ↔ w2)↔(¬ w1 ↔ ¬ w2))"}},{"stmt":{"origin":"xnor(w1, w2)","pretty":"xnor(w1, w2)"},"body":{"origin":"|- wb(wb(w1, w2), wn(wxo(w1, w2)))","pretty":"⊢ ((w1 ↔ w2)↔ ¬(w1 ⊻ w2))"},"cumulated":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))\n-| wb(wb(w1, w2), wb(wn(w1), wn(w2)))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))\n⊣ ((w1 ↔ w2)↔(¬ w1 ↔ ¬ w2))"}},{"stmt":{"origin":"notbi(w1, w2)","pretty":"notbi(w1, w2)"},"body":{"origin":"|- wb(wb(w1, w2), wb(wn(w1), wn(w2)))","pretty":"⊢ ((w1 ↔ w2)↔(¬ w1 ↔ ¬ w2))"},"cumulated":{"origin":"|- wi(wn(w0), wb(whad(w0, w1, w2), wxo(w1, w2)))","pretty":"⊢ (¬ w0 →(hadd(w0, w1, w2)↔(w1 ⊻ w2)))"}}],"comment":"If the first input is false, then the adder sum is equivalent to the exclusive disjunction of the other two inputs. (Contributed by Mario Carneiro, 4-Sep-2016.) (Proof shortened by Wolf Lammen, 12-Jul-2020.)","parent":["con4bid","3bitr4g","had1","hadnot","bitr3i","xnor","notbi"],"children":["hadifp","sadadd2lem2","saddisjlem"]}