{"bIdx":10360,"bType":"axiom","type":"","name":"ax-ac2","params":"setvar s0, setvar s1, setvar s2, setvar s3, setvar s4","body":["|- wex(s0, wal(s1, wex(s2, wal(s3, wo(wa(wcel(cv(s0), cv(s4)), wi(wcel(cv(s1), cv(s0)), wa(wa(wcel(cv(s2), cv(s4)), wn(wceq(cv(s0), cv(s2)))), wcel(cv(s1), cv(s2))))), wa(wn(wcel(cv(s0), cv(s4))), wi(wcel(cv(s1), cv(s4)), wa(wa(wcel(cv(s2), cv(s1)), wcel(cv(s2), cv(s0))), wi(wa(wcel(cv(s3), cv(s1)), wcel(cv(s3), cv(s0))), wceq(cv(s3), cv(s2)))))))))))","-| diffss(s2, s3)","-| diffss(s3, s4)","-| diffss(s0, s3)","-| diffss(s1, s3)","-| diffss(s2, s4)","-| diffss(s0, s2)","-| diffss(s1, s2)","-| diffss(s0, s4)","-| diffss(s1, s4)","-| diffss(s0, s1)"],"bodyPretty":["⊢ ∃(s0, ∀(s1, ∃(s2, ∀(s3,((s0 ∈ s4 ∧(s1 ∈ s0 →((s2 ∈ s4 ∧ ¬ s0 = s2)∧ s1 ∈ s2)))∨(¬ s0 ∈ s4 ∧(s1 ∈ s4 →((s2 ∈ s1 ∧ s2 ∈ s0)∧((s3 ∈ s1 ∧ s3 ∈ s0)→ s3 = s2)))))))))","⊣ d(s2, s3)","⊣ d(s3, s4)","⊣ d(s0, s3)","⊣ d(s1, s3)","⊣ d(s2, s4)","⊣ d(s0, s2)","⊣ d(s1, s2)","⊣ d(s0, s4)","⊣ d(s1, s4)","⊣ d(s0, s1)"],"proof":[],"comment":"In order to avoid uses of ~ ax-reg for derivation of AC equivalents, we provide ~ ax-ac2 , which is equivalent to the standard AC of textbooks. This appears to be the shortest known equivalent to the standard AC when expressed in terms of set theory primitives. It was found by Kurt Maes as theorem ~ ackm . We removed the leading quantifier to make it slightly shorter, since we have ~ ax-gen available. The derivation of ~ ax-ac2 from ~ ax-ac is shown by theorem ~ axac2 , and the reverse derivation by ~ axac . Note that we use ~ ax-reg to derive ~ ax-ac from ~ ax-ac2 , but not to derive ~ ax-ac2 from ~ ax-ac . (Contributed by NM, 19-Dec-2016.)","parent":[],"children":["axac3"]}