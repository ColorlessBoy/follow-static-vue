{"bIdx":38973,"bType":"thm","type":"","name":"funALTVfun","params":"class c0","body":["|- wb(wfunALTV(c0), wfun(c0))"],"bodyPretty":["⊢ (FunALTV(c0)↔ Fun(c0))"],"proof":[{"stmt":{"origin":"3bitr4i(wfunALTV(c0), wfun(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))","pretty":"3bitr4i(FunALTV(c0), Fun(c0), (CnvRefRel(, ~(c0))∧ Rel(c0)), (Rel(c0)∧(c0 ∘ `' c0)⊆ =))"},"body":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wa(wcnvrefrel(ccoss(c0)), wrel(c0)), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))\n-| wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ ((CnvRefRel(, ~(c0))∧ Rel(c0))↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))\n⊣ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wa(wcnvrefrel(ccoss(c0)), wrel(c0)), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))\n-| wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ ((CnvRefRel(, ~(c0))∧ Rel(c0))↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))\n⊣ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))"}},{"stmt":{"origin":"anbi2ci(wcnvrefrel(ccoss(c0)), wrel(c0), wss(ccom(c0, ccnv(c0)), cid))","pretty":"anbi2ci(CnvRefRel(, ~(c0)), Rel(c0), (c0 ∘ `' c0)⊆ =)"},"body":{"origin":"|- wb(wa(wcnvrefrel(ccoss(c0)), wrel(c0)), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))\n-| wb(wcnvrefrel(ccoss(c0)), wss(ccom(c0, ccnv(c0)), cid))","pretty":"⊢ ((CnvRefRel(, ~(c0))∧ Rel(c0))↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))\n⊣ (CnvRefRel(, ~(c0))↔(c0 ∘ `' c0)⊆ =)"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))\n-| wb(wcnvrefrel(ccoss(c0)), wss(ccom(c0, ccnv(c0)), cid))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))\n⊣ (CnvRefRel(, ~(c0))↔(c0 ∘ `' c0)⊆ =)"}},{"stmt":{"origin":"bitri(wcnvrefrel(ccoss(c0)), wss(ccom(c0, ccnv(c0)), cid), wss(ccoss(c0), cid))","pretty":"bitri(CnvRefRel(, ~(c0)), (c0 ∘ `' c0)⊆ =, , ~(c0)⊆ =)"},"body":{"origin":"|- wb(wcnvrefrel(ccoss(c0)), wss(ccom(c0, ccnv(c0)), cid))\n-| wb(wcnvrefrel(ccoss(c0)), wss(ccoss(c0), cid))\n-| wb(wss(ccoss(c0), cid), wss(ccom(c0, ccnv(c0)), cid))","pretty":"⊢ (CnvRefRel(, ~(c0))↔(c0 ∘ `' c0)⊆ =)\n⊣ (CnvRefRel(, ~(c0))↔, ~(c0)⊆ =)\n⊣ (, ~(c0)⊆ = ↔(c0 ∘ `' c0)⊆ =)"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))\n-| wb(wcnvrefrel(ccoss(c0)), wss(ccoss(c0), cid))\n-| wb(wss(ccoss(c0), cid), wss(ccom(c0, ccnv(c0)), cid))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))\n⊣ (CnvRefRel(, ~(c0))↔, ~(c0)⊆ =)\n⊣ (, ~(c0)⊆ = ↔(c0 ∘ `' c0)⊆ =)"}},{"stmt":{"origin":"cnvrefrelcoss2(c0)","pretty":"cnvrefrelcoss2(c0)"},"body":{"origin":"|- wb(wcnvrefrel(ccoss(c0)), wss(ccoss(c0), cid))","pretty":"⊢ (CnvRefRel(, ~(c0))↔, ~(c0)⊆ =)"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))\n-| wb(wss(ccoss(c0), cid), wss(ccom(c0, ccnv(c0)), cid))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))\n⊣ (, ~(c0)⊆ = ↔(c0 ∘ `' c0)⊆ =)"}},{"stmt":{"origin":"sseq1i(ccoss(c0), cid, ccom(c0, ccnv(c0)))","pretty":"sseq1i(, ~(c0), cid, (c0 ∘ `' c0))"},"body":{"origin":"|- wb(wss(ccoss(c0), cid), wss(ccom(c0, ccnv(c0)), cid))\n-| wceq(ccoss(c0), ccom(c0, ccnv(c0)))","pretty":"⊢ (, ~(c0)⊆ = ↔(c0 ∘ `' c0)⊆ =)\n⊣ , ~(c0)=(c0 ∘ `' c0)"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))\n-| wceq(ccoss(c0), ccom(c0, ccnv(c0)))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))\n⊣ , ~(c0)=(c0 ∘ `' c0)"}},{"stmt":{"origin":"dfcoss3(c0)","pretty":"dfcoss3(c0)"},"body":{"origin":"|- wceq(ccoss(c0), ccom(c0, ccnv(c0)))","pretty":"⊢ , ~(c0)=(c0 ∘ `' c0)"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))"}},{"stmt":{"origin":"df-funALTV(c0)","pretty":"df-funALTV(c0)"},"body":{"origin":"|- wb(wfunALTV(c0), wa(wcnvrefrel(ccoss(c0)), wrel(c0)))","pretty":"⊢ (FunALTV(c0)↔(CnvRefRel(, ~(c0))∧ Rel(c0)))"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))\n-| wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))\n⊣ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))"}},{"stmt":{"origin":"df-fun(c0)","pretty":"df-fun(c0)"},"body":{"origin":"|- wb(wfun(c0), wa(wrel(c0), wss(ccom(c0, ccnv(c0)), cid)))","pretty":"⊢ (Fun(c0)↔(Rel(c0)∧(c0 ∘ `' c0)⊆ =))"},"cumulated":{"origin":"|- wb(wfunALTV(c0), wfun(c0))","pretty":"⊢ (FunALTV(c0)↔ Fun(c0))"}}],"comment":"Our definition of the function predicate ~ df-funALTV (based on a more general, converse reflexive, relation) and the original definition of function in set.mm ~ df-fun , are always the same and interchangeable. (Contributed by Peter Mazsa, 27-Jul-2021.)","parent":["3bitr4i","anbi2ci","bitri","cnvrefrelcoss2","sseq1i","dfcoss3","df-funALTV","df-fun"],"children":[]}