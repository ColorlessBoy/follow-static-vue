{"bIdx":14724,"bType":"thm","type":"","name":"wrdlenccats1lenm1","params":"class c0, class c1, class c2","body":["|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))"],"bodyPretty":["⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))"],"proof":[{"stmt":{"origin":"eqtrd(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0), co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), wcel(c0, cword(c1)))","pretty":"eqtrd(((# `(c0[++]<\" c2 \">))[-]1), (# ` c0), (((# ` c0)[+]1)[-]1), c0 ∈ Word(c1))"},"body":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), co(co(cfv(chash, c0), caddc, nat1), cmin, nat1)))\n-| wi(wcel(c0, cword(c1)), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(((# ` c0)[+]1)[-]1))\n⊣ (c0 ∈ Word(c1)→(((# ` c0)[+]1)[-]1)=(# ` c0))"},"cumulated":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), co(co(cfv(chash, c0), caddc, nat1), cmin, nat1)))\n-| wi(wcel(c0, cword(c1)), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(((# ` c0)[+]1)[-]1))\n⊣ (c0 ∈ Word(c1)→(((# ` c0)[+]1)[-]1)=(# ` c0))"}},{"stmt":{"origin":"oveq1d(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1, co(cfv(chash, c0), caddc, nat1), wcel(c0, cword(c1)))","pretty":"oveq1d((# `(c0[++]<\" c2 \">)), cmin, nat1, ((# ` c0)[+]1), c0 ∈ Word(c1))"},"body":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), co(co(cfv(chash, c0), caddc, nat1), cmin, nat1)))\n-| wi(wcel(c0, cword(c1)), wceq(cfv(chash, co(c0, cconcat, cs1(c2))), co(cfv(chash, c0), caddc, nat1)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(((# ` c0)[+]1)[-]1))\n⊣ (c0 ∈ Word(c1)→(# `(c0[++]<\" c2 \">))=((# ` c0)[+]1))"},"cumulated":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wceq(cfv(chash, co(c0, cconcat, cs1(c2))), co(cfv(chash, c0), caddc, nat1)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→(((# ` c0)[+]1)[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→(# `(c0[++]<\" c2 \">))=((# ` c0)[+]1))"}},{"stmt":{"origin":"ccatws1len(c0, c1, c2)","pretty":"ccatws1len(c0, c1, c2)"},"body":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(cfv(chash, co(c0, cconcat, cs1(c2))), co(cfv(chash, c0), caddc, nat1)))","pretty":"⊢ (c0 ∈ Word(c1)→(# `(c0[++]<\" c2 \">))=((# ` c0)[+]1))"},"cumulated":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→(((# ` c0)[+]1)[-]1)=(# ` c0))"}},{"stmt":{"origin":"syl(wcel(c0, cword(c1)), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)), wcel(cfv(chash, c0), cc))","pretty":"syl(c0 ∈ Word(c1), (((# ` c0)[+]1)[-]1)=(# ` c0), (# ` c0)∈ ℂ)"},"body":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wcel(cfv(chash, c0), cc))\n-| wi(wcel(cfv(chash, c0), cc), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ (c0 ∈ Word(c1)→(((# ` c0)[+]1)[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→(# ` c0)∈ ℂ)\n⊣ ((# ` c0)∈ ℂ →(((# ` c0)[+]1)[-]1)=(# ` c0))"},"cumulated":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wcel(cfv(chash, c0), cc))\n-| wi(wcel(cfv(chash, c0), cc), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→(# ` c0)∈ ℂ)\n⊣ ((# ` c0)∈ ℂ →(((# ` c0)[+]1)[-]1)=(# ` c0))"}},{"stmt":{"origin":"nn0cnd(cfv(chash, c0), wcel(c0, cword(c1)))","pretty":"nn0cnd((# ` c0), c0 ∈ Word(c1))"},"body":{"origin":"|- wi(wcel(c0, cword(c1)), wcel(cfv(chash, c0), cc))\n-| wi(wcel(c0, cword(c1)), wcel(cfv(chash, c0), cn0))","pretty":"⊢ (c0 ∈ Word(c1)→(# ` c0)∈ ℂ)\n⊣ (c0 ∈ Word(c1)→(# ` c0)∈ ℕ0)"},"cumulated":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(cfv(chash, c0), cc), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(c0, cword(c1)), wcel(cfv(chash, c0), cn0))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))\n⊣ ((# ` c0)∈ ℂ →(((# ` c0)[+]1)[-]1)=(# ` c0))\n⊣ (c0 ∈ Word(c1)→(# ` c0)∈ ℕ0)"}},{"stmt":{"origin":"lencl(c0, c1)","pretty":"lencl(c0, c1)"},"body":{"origin":"|- wi(wcel(c0, cword(c1)), wcel(cfv(chash, c0), cn0))","pretty":"⊢ (c0 ∈ Word(c1)→(# ` c0)∈ ℕ0)"},"cumulated":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))\n-| wi(wcel(cfv(chash, c0), cc), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))\n⊣ ((# ` c0)∈ ℂ →(((# ` c0)[+]1)[-]1)=(# ` c0))"}},{"stmt":{"origin":"pncan1(cfv(chash, c0))","pretty":"pncan1((# ` c0))"},"body":{"origin":"|- wi(wcel(cfv(chash, c0), cc), wceq(co(co(cfv(chash, c0), caddc, nat1), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ ((# ` c0)∈ ℂ →(((# ` c0)[+]1)[-]1)=(# ` c0))"},"cumulated":{"origin":"|- wi(wcel(c0, cword(c1)), wceq(co(cfv(chash, co(c0, cconcat, cs1(c2))), cmin, nat1), cfv(chash, c0)))","pretty":"⊢ (c0 ∈ Word(c1)→((# `(c0[++]<\" c2 \">))[-]1)=(# ` c0))"}}],"comment":"The length of a word is the length of the word concatenated with a singleton word minus 1. (Contributed by AV, 28-Jun-2018.) (Revised by AV, 5-Mar-2022.)","parent":["eqtrd","oveq1d","ccatws1len","syl","nn0cnd","lencl","pncan1"],"children":["clwlkclwwlk2","clwlkclwwlk2OLD","clwlkclwwlkfolem","clwlkclwwlkfoOLD","clwlkclwwlkfo","clwwlkext2edg"]}