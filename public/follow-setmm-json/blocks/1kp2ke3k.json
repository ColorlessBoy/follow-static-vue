{"bIdx":30480,"bType":"thm","type":"","name":"1kp2ke3k","params":"","body":["|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))"],"bodyPretty":["⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)"],"proof":[{"stmt":{"origin":"decadd(cdc(cdc(cdc(nat1, nat0), nat0), nat0), cdc(cdc(cdc(nat2, nat0), nat0), nat0), cdc(cdc(nat3, nat0), nat0), nat0, cdc(cdc(nat1, nat0), nat0), nat0, cdc(cdc(nat2, nat0), nat0), nat0)","pretty":"decadd(cdc(cdc(cdc(1, 0), 0), 0), cdc(cdc(cdc(2, 0), 0), 0), cdc(cdc(3, 0), 0), nat0, cdc(cdc(1, 0), 0), nat0, cdc(cdc(2, 0), 0), nat0)"},"body":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(cdc(cdc(nat1, nat0), nat0), cn0)\n-| wcel(nat0, cn0)\n-| wcel(cdc(cdc(nat2, nat0), nat0), cn0)\n-| wcel(nat0, cn0)\n-| wceq(cdc(cdc(cdc(nat1, nat0), nat0), nat0), cdc(cdc(cdc(nat1, nat0), nat0), nat0))\n-| wceq(cdc(cdc(cdc(nat2, nat0), nat0), nat0), cdc(cdc(cdc(nat2, nat0), nat0), nat0))\n-| wceq(co(cdc(cdc(nat1, nat0), nat0), caddc, cdc(cdc(nat2, nat0), nat0)), cdc(cdc(nat3, nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ cdc(cdc(1, 0), 0)∈ ℕ0\n⊣ 0 ∈ ℕ0\n⊣ cdc(cdc(2, 0), 0)∈ ℕ0\n⊣ 0 ∈ ℕ0\n⊣ cdc(cdc(cdc(1, 0), 0), 0)= cdc(cdc(cdc(1, 0), 0), 0)\n⊣ cdc(cdc(cdc(2, 0), 0), 0)= cdc(cdc(cdc(2, 0), 0), 0)\n⊣ (cdc(cdc(1, 0), 0)[+]cdc(cdc(2, 0), 0))= cdc(cdc(3, 0), 0)\n⊣ (0[+]0)= 0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(cdc(cdc(nat1, nat0), nat0), cn0)\n-| wcel(nat0, cn0)\n-| wcel(cdc(cdc(nat2, nat0), nat0), cn0)\n-| wceq(cdc(cdc(cdc(nat1, nat0), nat0), nat0), cdc(cdc(cdc(nat1, nat0), nat0), nat0))\n-| wceq(cdc(cdc(cdc(nat2, nat0), nat0), nat0), cdc(cdc(cdc(nat2, nat0), nat0), nat0))\n-| wceq(co(cdc(cdc(nat1, nat0), nat0), caddc, cdc(cdc(nat2, nat0), nat0)), cdc(cdc(nat3, nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ cdc(cdc(1, 0), 0)∈ ℕ0\n⊣ 0 ∈ ℕ0\n⊣ cdc(cdc(2, 0), 0)∈ ℕ0\n⊣ cdc(cdc(cdc(1, 0), 0), 0)= cdc(cdc(cdc(1, 0), 0), 0)\n⊣ cdc(cdc(cdc(2, 0), 0), 0)= cdc(cdc(cdc(2, 0), 0), 0)\n⊣ (cdc(cdc(1, 0), 0)[+]cdc(cdc(2, 0), 0))= cdc(cdc(3, 0), 0)\n⊣ (0[+]0)= 0"}},{"stmt":{"origin":"deccl(cdc(nat1, nat0), nat0)","pretty":"deccl(cdc(1, 0), nat0)"},"body":{"origin":"|- wcel(cdc(cdc(nat1, nat0), nat0), cn0)\n-| wcel(cdc(nat1, nat0), cn0)\n-| wcel(nat0, cn0)","pretty":"⊢ cdc(cdc(1, 0), 0)∈ ℕ0\n⊣ cdc(1, 0)∈ ℕ0\n⊣ 0 ∈ ℕ0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wcel(cdc(cdc(nat2, nat0), nat0), cn0)\n-| wceq(cdc(cdc(cdc(nat1, nat0), nat0), nat0), cdc(cdc(cdc(nat1, nat0), nat0), nat0))\n-| wceq(cdc(cdc(cdc(nat2, nat0), nat0), nat0), cdc(cdc(cdc(nat2, nat0), nat0), nat0))\n-| wceq(co(cdc(cdc(nat1, nat0), nat0), caddc, cdc(cdc(nat2, nat0), nat0)), cdc(cdc(nat3, nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(cdc(nat1, nat0), cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ cdc(cdc(2, 0), 0)∈ ℕ0\n⊣ cdc(cdc(cdc(1, 0), 0), 0)= cdc(cdc(cdc(1, 0), 0), 0)\n⊣ cdc(cdc(cdc(2, 0), 0), 0)= cdc(cdc(cdc(2, 0), 0), 0)\n⊣ (cdc(cdc(1, 0), 0)[+]cdc(cdc(2, 0), 0))= cdc(cdc(3, 0), 0)\n⊣ (0[+]0)= 0\n⊣ cdc(1, 0)∈ ℕ0"}},{"stmt":{"origin":"deccl(cdc(nat2, nat0), nat0)","pretty":"deccl(cdc(2, 0), nat0)"},"body":{"origin":"|- wcel(cdc(cdc(nat2, nat0), nat0), cn0)\n-| wcel(cdc(nat2, nat0), cn0)\n-| wcel(nat0, cn0)","pretty":"⊢ cdc(cdc(2, 0), 0)∈ ℕ0\n⊣ cdc(2, 0)∈ ℕ0\n⊣ 0 ∈ ℕ0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(cdc(cdc(cdc(nat1, nat0), nat0), nat0), cdc(cdc(cdc(nat1, nat0), nat0), nat0))\n-| wceq(cdc(cdc(cdc(nat2, nat0), nat0), nat0), cdc(cdc(cdc(nat2, nat0), nat0), nat0))\n-| wceq(co(cdc(cdc(nat1, nat0), nat0), caddc, cdc(cdc(nat2, nat0), nat0)), cdc(cdc(nat3, nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(cdc(nat1, nat0), cn0)\n-| wcel(cdc(nat2, nat0), cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ cdc(cdc(cdc(1, 0), 0), 0)= cdc(cdc(cdc(1, 0), 0), 0)\n⊣ cdc(cdc(cdc(2, 0), 0), 0)= cdc(cdc(cdc(2, 0), 0), 0)\n⊣ (cdc(cdc(1, 0), 0)[+]cdc(cdc(2, 0), 0))= cdc(cdc(3, 0), 0)\n⊣ (0[+]0)= 0\n⊣ cdc(1, 0)∈ ℕ0\n⊣ cdc(2, 0)∈ ℕ0"}},{"stmt":{"origin":"eqid(cdc(cdc(cdc(nat1, nat0), nat0), nat0))","pretty":"eqid(cdc(cdc(cdc(1, 0), 0), 0))"},"body":{"origin":"|- wceq(cdc(cdc(cdc(nat1, nat0), nat0), nat0), cdc(cdc(cdc(nat1, nat0), nat0), nat0))","pretty":"⊢ cdc(cdc(cdc(1, 0), 0), 0)= cdc(cdc(cdc(1, 0), 0), 0)"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(cdc(cdc(cdc(nat2, nat0), nat0), nat0), cdc(cdc(cdc(nat2, nat0), nat0), nat0))\n-| wceq(co(cdc(cdc(nat1, nat0), nat0), caddc, cdc(cdc(nat2, nat0), nat0)), cdc(cdc(nat3, nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(cdc(nat1, nat0), cn0)\n-| wcel(cdc(nat2, nat0), cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ cdc(cdc(cdc(2, 0), 0), 0)= cdc(cdc(cdc(2, 0), 0), 0)\n⊣ (cdc(cdc(1, 0), 0)[+]cdc(cdc(2, 0), 0))= cdc(cdc(3, 0), 0)\n⊣ (0[+]0)= 0\n⊣ cdc(1, 0)∈ ℕ0\n⊣ cdc(2, 0)∈ ℕ0"}},{"stmt":{"origin":"eqid(cdc(cdc(cdc(nat2, nat0), nat0), nat0))","pretty":"eqid(cdc(cdc(cdc(2, 0), 0), 0))"},"body":{"origin":"|- wceq(cdc(cdc(cdc(nat2, nat0), nat0), nat0), cdc(cdc(cdc(nat2, nat0), nat0), nat0))","pretty":"⊢ cdc(cdc(cdc(2, 0), 0), 0)= cdc(cdc(cdc(2, 0), 0), 0)"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(cdc(cdc(nat1, nat0), nat0), caddc, cdc(cdc(nat2, nat0), nat0)), cdc(cdc(nat3, nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(cdc(nat1, nat0), cn0)\n-| wcel(cdc(nat2, nat0), cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (cdc(cdc(1, 0), 0)[+]cdc(cdc(2, 0), 0))= cdc(cdc(3, 0), 0)\n⊣ (0[+]0)= 0\n⊣ cdc(1, 0)∈ ℕ0\n⊣ cdc(2, 0)∈ ℕ0"}},{"stmt":{"origin":"decadd(cdc(cdc(nat1, nat0), nat0), cdc(cdc(nat2, nat0), nat0), cdc(nat3, nat0), nat0, cdc(nat1, nat0), nat0, cdc(nat2, nat0), nat0)","pretty":"decadd(cdc(cdc(1, 0), 0), cdc(cdc(2, 0), 0), cdc(3, 0), nat0, cdc(1, 0), nat0, cdc(2, 0), nat0)"},"body":{"origin":"|- wceq(co(cdc(cdc(nat1, nat0), nat0), caddc, cdc(cdc(nat2, nat0), nat0)), cdc(cdc(nat3, nat0), nat0))\n-| wcel(cdc(nat1, nat0), cn0)\n-| wcel(nat0, cn0)\n-| wcel(cdc(nat2, nat0), cn0)\n-| wcel(nat0, cn0)\n-| wceq(cdc(cdc(nat1, nat0), nat0), cdc(cdc(nat1, nat0), nat0))\n-| wceq(cdc(cdc(nat2, nat0), nat0), cdc(cdc(nat2, nat0), nat0))\n-| wceq(co(cdc(nat1, nat0), caddc, cdc(nat2, nat0)), cdc(nat3, nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)","pretty":"⊢ (cdc(cdc(1, 0), 0)[+]cdc(cdc(2, 0), 0))= cdc(cdc(3, 0), 0)\n⊣ cdc(1, 0)∈ ℕ0\n⊣ 0 ∈ ℕ0\n⊣ cdc(2, 0)∈ ℕ0\n⊣ 0 ∈ ℕ0\n⊣ cdc(cdc(1, 0), 0)= cdc(cdc(1, 0), 0)\n⊣ cdc(cdc(2, 0), 0)= cdc(cdc(2, 0), 0)\n⊣ (cdc(1, 0)[+]cdc(2, 0))= cdc(3, 0)\n⊣ (0[+]0)= 0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(cdc(nat1, nat0), cn0)\n-| wcel(cdc(nat2, nat0), cn0)\n-| wceq(cdc(cdc(nat1, nat0), nat0), cdc(cdc(nat1, nat0), nat0))\n-| wceq(cdc(cdc(nat2, nat0), nat0), cdc(cdc(nat2, nat0), nat0))\n-| wceq(co(cdc(nat1, nat0), caddc, cdc(nat2, nat0)), cdc(nat3, nat0))","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ cdc(1, 0)∈ ℕ0\n⊣ cdc(2, 0)∈ ℕ0\n⊣ cdc(cdc(1, 0), 0)= cdc(cdc(1, 0), 0)\n⊣ cdc(cdc(2, 0), 0)= cdc(cdc(2, 0), 0)\n⊣ (cdc(1, 0)[+]cdc(2, 0))= cdc(3, 0)"}},{"stmt":{"origin":"deccl(nat1, nat0)","pretty":"deccl(nat1, nat0)"},"body":{"origin":"|- wcel(cdc(nat1, nat0), cn0)\n-| wcel(nat1, cn0)\n-| wcel(nat0, cn0)","pretty":"⊢ cdc(1, 0)∈ ℕ0\n⊣ 1 ∈ ℕ0\n⊣ 0 ∈ ℕ0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(cdc(nat2, nat0), cn0)\n-| wceq(cdc(cdc(nat1, nat0), nat0), cdc(cdc(nat1, nat0), nat0))\n-| wceq(cdc(cdc(nat2, nat0), nat0), cdc(cdc(nat2, nat0), nat0))\n-| wceq(co(cdc(nat1, nat0), caddc, cdc(nat2, nat0)), cdc(nat3, nat0))\n-| wcel(nat1, cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ cdc(2, 0)∈ ℕ0\n⊣ cdc(cdc(1, 0), 0)= cdc(cdc(1, 0), 0)\n⊣ cdc(cdc(2, 0), 0)= cdc(cdc(2, 0), 0)\n⊣ (cdc(1, 0)[+]cdc(2, 0))= cdc(3, 0)\n⊣ 1 ∈ ℕ0"}},{"stmt":{"origin":"deccl(nat2, nat0)","pretty":"deccl(nat2, nat0)"},"body":{"origin":"|- wcel(cdc(nat2, nat0), cn0)\n-| wcel(nat2, cn0)\n-| wcel(nat0, cn0)","pretty":"⊢ cdc(2, 0)∈ ℕ0\n⊣ 2 ∈ ℕ0\n⊣ 0 ∈ ℕ0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wceq(cdc(cdc(nat1, nat0), nat0), cdc(cdc(nat1, nat0), nat0))\n-| wceq(cdc(cdc(nat2, nat0), nat0), cdc(cdc(nat2, nat0), nat0))\n-| wceq(co(cdc(nat1, nat0), caddc, cdc(nat2, nat0)), cdc(nat3, nat0))\n-| wcel(nat1, cn0)\n-| wcel(nat2, cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ cdc(cdc(1, 0), 0)= cdc(cdc(1, 0), 0)\n⊣ cdc(cdc(2, 0), 0)= cdc(cdc(2, 0), 0)\n⊣ (cdc(1, 0)[+]cdc(2, 0))= cdc(3, 0)\n⊣ 1 ∈ ℕ0\n⊣ 2 ∈ ℕ0"}},{"stmt":{"origin":"eqid(cdc(cdc(nat1, nat0), nat0))","pretty":"eqid(cdc(cdc(1, 0), 0))"},"body":{"origin":"|- wceq(cdc(cdc(nat1, nat0), nat0), cdc(cdc(nat1, nat0), nat0))","pretty":"⊢ cdc(cdc(1, 0), 0)= cdc(cdc(1, 0), 0)"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wceq(cdc(cdc(nat2, nat0), nat0), cdc(cdc(nat2, nat0), nat0))\n-| wceq(co(cdc(nat1, nat0), caddc, cdc(nat2, nat0)), cdc(nat3, nat0))\n-| wcel(nat1, cn0)\n-| wcel(nat2, cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ cdc(cdc(2, 0), 0)= cdc(cdc(2, 0), 0)\n⊣ (cdc(1, 0)[+]cdc(2, 0))= cdc(3, 0)\n⊣ 1 ∈ ℕ0\n⊣ 2 ∈ ℕ0"}},{"stmt":{"origin":"eqid(cdc(cdc(nat2, nat0), nat0))","pretty":"eqid(cdc(cdc(2, 0), 0))"},"body":{"origin":"|- wceq(cdc(cdc(nat2, nat0), nat0), cdc(cdc(nat2, nat0), nat0))","pretty":"⊢ cdc(cdc(2, 0), 0)= cdc(cdc(2, 0), 0)"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wceq(co(cdc(nat1, nat0), caddc, cdc(nat2, nat0)), cdc(nat3, nat0))\n-| wcel(nat1, cn0)\n-| wcel(nat2, cn0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ (cdc(1, 0)[+]cdc(2, 0))= cdc(3, 0)\n⊣ 1 ∈ ℕ0\n⊣ 2 ∈ ℕ0"}},{"stmt":{"origin":"decadd(cdc(nat1, nat0), cdc(nat2, nat0), nat3, nat0, nat1, nat0, nat2, nat0)","pretty":"decadd(cdc(1, 0), cdc(2, 0), nat3, nat0, nat1, nat0, nat2, nat0)"},"body":{"origin":"|- wceq(co(cdc(nat1, nat0), caddc, cdc(nat2, nat0)), cdc(nat3, nat0))\n-| wcel(nat1, cn0)\n-| wcel(nat0, cn0)\n-| wcel(nat2, cn0)\n-| wcel(nat0, cn0)\n-| wceq(cdc(nat1, nat0), cdc(nat1, nat0))\n-| wceq(cdc(nat2, nat0), cdc(nat2, nat0))\n-| wceq(co(nat1, caddc, nat2), nat3)\n-| wceq(co(nat0, caddc, nat0), nat0)","pretty":"⊢ (cdc(1, 0)[+]cdc(2, 0))= cdc(3, 0)\n⊣ 1 ∈ ℕ0\n⊣ 0 ∈ ℕ0\n⊣ 2 ∈ ℕ0\n⊣ 0 ∈ ℕ0\n⊣ cdc(1, 0)= cdc(1, 0)\n⊣ cdc(2, 0)= cdc(2, 0)\n⊣ (1[+]2)= 3\n⊣ (0[+]0)= 0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(nat1, cn0)\n-| wcel(nat2, cn0)\n-| wceq(cdc(nat1, nat0), cdc(nat1, nat0))\n-| wceq(cdc(nat2, nat0), cdc(nat2, nat0))\n-| wceq(co(nat1, caddc, nat2), nat3)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ 1 ∈ ℕ0\n⊣ 2 ∈ ℕ0\n⊣ cdc(1, 0)= cdc(1, 0)\n⊣ cdc(2, 0)= cdc(2, 0)\n⊣ (1[+]2)= 3"}},{"stmt":{"origin":"1nn0()","pretty":"1nn0()"},"body":{"origin":"|- wcel(nat1, cn0)","pretty":"⊢ 1 ∈ ℕ0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wcel(nat2, cn0)\n-| wceq(cdc(nat1, nat0), cdc(nat1, nat0))\n-| wceq(cdc(nat2, nat0), cdc(nat2, nat0))\n-| wceq(co(nat1, caddc, nat2), nat3)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ 2 ∈ ℕ0\n⊣ cdc(1, 0)= cdc(1, 0)\n⊣ cdc(2, 0)= cdc(2, 0)\n⊣ (1[+]2)= 3"}},{"stmt":{"origin":"2nn0()","pretty":"2nn0()"},"body":{"origin":"|- wcel(nat2, cn0)","pretty":"⊢ 2 ∈ ℕ0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wcel(nat0, cn0)\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wceq(cdc(nat1, nat0), cdc(nat1, nat0))\n-| wceq(cdc(nat2, nat0), cdc(nat2, nat0))\n-| wceq(co(nat1, caddc, nat2), nat3)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ 0 ∈ ℕ0\n⊣ (0[+]0)= 0\n⊣ cdc(1, 0)= cdc(1, 0)\n⊣ cdc(2, 0)= cdc(2, 0)\n⊣ (1[+]2)= 3"}},{"stmt":{"origin":"0nn0()","pretty":"0nn0()"},"body":{"origin":"|- wcel(nat0, cn0)","pretty":"⊢ 0 ∈ ℕ0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wceq(cdc(nat1, nat0), cdc(nat1, nat0))\n-| wceq(cdc(nat2, nat0), cdc(nat2, nat0))\n-| wceq(co(nat1, caddc, nat2), nat3)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ (0[+]0)= 0\n⊣ cdc(1, 0)= cdc(1, 0)\n⊣ cdc(2, 0)= cdc(2, 0)\n⊣ (1[+]2)= 3"}},{"stmt":{"origin":"eqid(cdc(nat1, nat0))","pretty":"eqid(cdc(1, 0))"},"body":{"origin":"|- wceq(cdc(nat1, nat0), cdc(nat1, nat0))","pretty":"⊢ cdc(1, 0)= cdc(1, 0)"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wceq(cdc(nat2, nat0), cdc(nat2, nat0))\n-| wceq(co(nat1, caddc, nat2), nat3)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ (0[+]0)= 0\n⊣ cdc(2, 0)= cdc(2, 0)\n⊣ (1[+]2)= 3"}},{"stmt":{"origin":"eqid(cdc(nat2, nat0))","pretty":"eqid(cdc(2, 0))"},"body":{"origin":"|- wceq(cdc(nat2, nat0), cdc(nat2, nat0))","pretty":"⊢ cdc(2, 0)= cdc(2, 0)"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)\n-| wceq(co(nat1, caddc, nat2), nat3)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ (0[+]0)= 0\n⊣ (1[+]2)= 3"}},{"stmt":{"origin":"1p2e3()","pretty":"1p2e3()"},"body":{"origin":"|- wceq(co(nat1, caddc, nat2), nat3)","pretty":"⊢ (1[+]2)= 3"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))\n-| wceq(co(nat0, caddc, nat0), nat0)","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)\n⊣ (0[+]0)= 0"}},{"stmt":{"origin":"00id()","pretty":"00id()"},"body":{"origin":"|- wceq(co(nat0, caddc, nat0), nat0)","pretty":"⊢ (0[+]0)= 0"},"cumulated":{"origin":"|- wceq(co(cdc(cdc(cdc(nat1, nat0), nat0), nat0), caddc, cdc(cdc(cdc(nat2, nat0), nat0), nat0)), cdc(cdc(cdc(nat3, nat0), nat0), nat0))","pretty":"⊢ (cdc(cdc(cdc(1, 0), 0), 0)[+]cdc(cdc(cdc(2, 0), 0), 0))= cdc(cdc(cdc(3, 0), 0), 0)"}}],"comment":"Example for ~ df-dec , 1000 + 2000 = 3000. This proof disproves (by counterexample) the assertion of Hao Wang, who stated, \"There is a theorem in the primitive notation of set theory that corresponds to the arithmetic theorem 1000 + 2000 = 3000. The formula would be forbiddingly long... even if (one) knows the definitions and is asked to simplify the long formula according to them, chances are he will make errors and arrive at some incorrect result.\" (Hao Wang, \"Theory and practice in mathematics\" , In Thomas Tymoczko, editor, _New Directions in the Philosophy of Mathematics_, pp 129-152, Birkauser Boston, Inc., Boston, 1986. (QA8.6.N48). The quote itself is on page 140.) This is noted in _Metamath: A Computer Language for Pure Mathematics_ by Norman Megill (2007) section 1.1.3. Megill then states, \"A number of writers have conveyed the impression that the kind of absolute rigor provided by Metamath is an impossible dream, suggesting that a complete, formal verification of a typical theorem would take millions of steps in untold volumes of books... These writers assume, however, that in order to achieve the kind of complete formal verification they desire one must break down a proof into individual primitive steps that make direct reference to the axioms. This is not necessary. There is no reason not to make use of previously proved theorems rather than proving them over and over... A hierarchy of theorems and definitions permits an exponential growth in the formula sizes and primitive proof steps to be described with only a linear growth in the number of symbols used. Of course, this is how ordinary informal mathematics is normally done anyway, but with Metamath it can be done with absolute rigor and precision.\" The proof here starts with ` ( 2 + 1 ) = 3 ` , commutes it, and repeatedly multiplies both sides by ten. This is certainly longer than traditional mathematical proofs, e.g., there are a number of steps explicitly shown here to show that we're allowed to do operations such as multiplication. However, while longer, the proof is clearly a manageable size - even though every step is rigorously derived all the way back to the primitive notions of set theory and logic. And while there's a risk of making errors, the many independent verifiers make it much less likely that an incorrect result will be accepted. This proof heavily relies on the decimal constructor ~ df-dec developed by Mario Carneiro in 2015. The underlying Metamath language has an intentionally very small set of primitives; it doesn't even have a built-in construct for numbers. Instead, the digits are defined using these primitives, and the decimal constructor is used to make it easy to express larger numbers as combinations of digits. (Contributed by David A. Wheeler, 29-Jun-2016.) (Shortened by Mario Carneiro using the arithmetic algorithm in mmj2, 30-Jun-2016.)","parent":["decadd","deccl","eqid","1nn0","2nn0","0nn0","1p2e3","00id"],"children":[]}