{"bIdx":30426,"bType":"thm","type":"","name":"numclwwlk8","params":"class c0, class c1","body":["|- wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))"],"bodyPretty":["⊢ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)"],"proof":[{"stmt":{"origin":"syl2an2(wcel(c0, cfusgr), wcel(c1, cprime), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0), wcel(c1, cn), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0))))","pretty":"syl2an2(c0 ∈ FinUSGraph, c1 ∈ Prime, ((# `(c1[ClWWalksN]c0))[mod]c1)= 0, c1 ∈ ℕ, c1[||](# `(c1[ClWWalksN]c0)))"},"body":{"origin":"|- wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))\n-| wi(wcel(c1, cprime), wcel(c1, cn))\n-| wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0))))\n-| wi(wa(wcel(c1, cn), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0)))), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))","pretty":"⊢ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)\n⊣ (c1 ∈ Prime → c1 ∈ ℕ)\n⊣ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→ c1[||](# `(c1[ClWWalksN]c0)))\n⊣ ((c1 ∈ ℕ ∧ c1[||](# `(c1[ClWWalksN]c0)))→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))\n-| wi(wcel(c1, cprime), wcel(c1, cn))\n-| wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0))))\n-| wi(wa(wcel(c1, cn), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0)))), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))","pretty":"⊢ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)\n⊣ (c1 ∈ Prime → c1 ∈ ℕ)\n⊣ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→ c1[||](# `(c1[ClWWalksN]c0)))\n⊣ ((c1 ∈ ℕ ∧ c1[||](# `(c1[ClWWalksN]c0)))→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)"}},{"stmt":{"origin":"prmnn(c1)","pretty":"prmnn(c1)"},"body":{"origin":"|- wi(wcel(c1, cprime), wcel(c1, cn))","pretty":"⊢ (c1 ∈ Prime → c1 ∈ ℕ)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))\n-| wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0))))\n-| wi(wa(wcel(c1, cn), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0)))), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))","pretty":"⊢ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)\n⊣ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→ c1[||](# `(c1[ClWWalksN]c0)))\n⊣ ((c1 ∈ ℕ ∧ c1[||](# `(c1[ClWWalksN]c0)))→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)"}},{"stmt":{"origin":"clwwlkndivn(c0, c1)","pretty":"clwwlkndivn(c0, c1)"},"body":{"origin":"|- wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0))))","pretty":"⊢ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→ c1[||](# `(c1[ClWWalksN]c0)))"},"cumulated":{"origin":"|- wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))\n-| wi(wa(wcel(c1, cn), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0)))), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))","pretty":"⊢ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)\n⊣ ((c1 ∈ ℕ ∧ c1[||](# `(c1[ClWWalksN]c0)))→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)"}},{"stmt":{"origin":"dvdsmod0(c1, cfv(chash, co(c1, cclwwlkn, c0)))","pretty":"dvdsmod0(c1, (# `(c1[ClWWalksN]c0)))"},"body":{"origin":"|- wi(wa(wcel(c1, cn), wbr(c1, cdvds, cfv(chash, co(c1, cclwwlkn, c0)))), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))","pretty":"⊢ ((c1 ∈ ℕ ∧ c1[||](# `(c1[ClWWalksN]c0)))→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, cfusgr), wcel(c1, cprime)), wceq(co(cfv(chash, co(c1, cclwwlkn, c0)), cmo, c1), nat0))","pretty":"⊢ ((c0 ∈ FinUSGraph ∧ c1 ∈ Prime)→((# `(c1[ClWWalksN]c0))[mod]c1)= 0)"}}],"comment":"The size of the set of closed walks of length ` P ` , ` P ` prime, is divisible by ` P ` . This corresponds to statement 9 in [Huneke] p. 2: \"It follows that, if p is a prime number, then the number of closed walks of length p is divisible by p\", see also ~ clwlksndivn . (Contributed by Alexander van der Vekens, 7-Oct-2018.) (Revised by AV, 3-Jun-2021.) (Proof shortened by AV, 2-Mar-2022.)","parent":["syl2an2","prmnn","clwwlkndivn","dvdsmod0"],"children":["frgrreggt1"]}