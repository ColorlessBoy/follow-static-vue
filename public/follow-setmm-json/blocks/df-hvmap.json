{"bIdx":42097,"bType":"axiom","type":"","name":"df-hvmap","params":"setvar s0, setvar s1, setvar s2, setvar s3, setvar s4, setvar s5","body":["|- wceq(chvm, cmpt(s0, universe, cmpt(s1, cfv(clh, cv(s0)), cmpt(s2, cdif(cfv(cbs, cfv(cfv(cdvh, cv(s0)), cv(s1))), csn(cfv(c0g, cfv(cfv(cdvh, cv(s0)), cv(s1))))), cmpt(s3, cfv(cbs, cfv(cfv(cdvh, cv(s0)), cv(s1))), crio(s4, cfv(cbs, cfv(csca, cfv(cfv(cdvh, cv(s0)), cv(s1)))), wrex(s5, cfv(cfv(cfv(coch, cv(s0)), cv(s1)), csn(cv(s2))), wceq(cv(s3), co(cv(s5), cfv(cplusg, cfv(cfv(cdvh, cv(s0)), cv(s1))), co(cv(s4), cfv(cvsca, cfv(cfv(cdvh, cv(s0)), cv(s1))), cv(s2)))))))))))","-| diffss(s0, s4)","-| diffss(s4, s5)","-| diffss(s3, s4)","-| diffss(s1, s4)","-| diffss(s2, s4)","-| diffss(s0, s5)","-| diffss(s0, s3)","-| diffss(s0, s1)","-| diffss(s0, s2)","-| diffss(s3, s5)","-| diffss(s1, s5)","-| diffss(s2, s5)","-| diffss(s1, s3)","-| diffss(s2, s3)","-| diffss(s1, s2)"],"bodyPretty":["‚ä¢ HVMap =(s0 ‚àà ùïå ‚Ü¶(s1 ‚àà(LHyp ` s0)‚Ü¶(s2 ‚àà((Base `((DVecH ` s0)` s1))\\ {(0 `((DVecH ` s0)` s1))})‚Ü¶(s3 ‚àà(Base `((DVecH ` s0)` s1))‚Ü¶ iota(s4 ‚àà(Base `(Scalar `((DVecH ` s0)` s1))), ‚àÉ(s5 ‚àà(((ocH ` s0)` s1)` { s2 }), s3 =(s5[(+ `((DVecH ` s0)` s1))](s4[(√ó `((DVecH ` s0)` s1))]s2))))))))","‚ä£ d(s0, s4)","‚ä£ d(s4, s5)","‚ä£ d(s3, s4)","‚ä£ d(s1, s4)","‚ä£ d(s2, s4)","‚ä£ d(s0, s5)","‚ä£ d(s0, s3)","‚ä£ d(s0, s1)","‚ä£ d(s0, s2)","‚ä£ d(s3, s5)","‚ä£ d(s1, s5)","‚ä£ d(s2, s5)","‚ä£ d(s1, s3)","‚ä£ d(s2, s3)","‚ä£ d(s1, s2)"],"proof":[],"comment":"Extend class notation with a map from each nonzero vector ` x ` to a unique nonzero functional in the closed kernel dual space. (We could extend it to include the zero vector, but that is unnecessary for our purposes.) TODO: This pattern is used several times earlier, e.g., ~ lcf1o , ~ dochfl1 - should we update those to use this definition? (Contributed by NM, 23-Mar-2015.)","parent":[],"children":["hvmapffval"]}