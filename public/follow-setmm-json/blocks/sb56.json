{"bIdx":2512,"bType":"thm","type":"","name":"sb56","params":"setvar s0, setvar s1, wff w0","body":["|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))","-| diffss(s0, s1)"],"bodyPretty":["⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))","⊣ d(s0, s1)"],"proof":[{"stmt":{"origin":"equsexv(s0, s1, w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))","pretty":"equsexv(s0, s1, w0, ∀(s0,(s0 = s1 → w0)))"},"body":{"origin":"|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wnf(s0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(wceq(cv(s0), cv(s1)), wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)","pretty":"⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n⊣ F/(s0, ∀(s0,(s0 = s1 → w0)))\n⊣ (s0 = s1 →(w0 ↔ ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wnf(s0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(wceq(cv(s0), cv(s1)), wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)","pretty":"⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n⊣ F/(s0, ∀(s0,(s0 = s1 → w0)))\n⊣ (s0 = s1 →(w0 ↔ ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"nfa1(s0, wi(wceq(cv(s0), cv(s1)), w0))","pretty":"nfa1(s0, (s0 = s1 → w0))"},"body":{"origin":"|- wnf(s0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))","pretty":"⊢ F/(s0, ∀(s0,(s0 = s1 → w0)))"},"cumulated":{"origin":"|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(wceq(cv(s0), cv(s1)), wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)","pretty":"⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n⊣ (s0 = s1 →(w0 ↔ ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"impbid(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))","pretty":"impbid(s0 = s1, w0, ∀(s0,(s0 = s1 → w0)))"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| wi(wceq(cv(s0), cv(s1)), wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0))","pretty":"⊢ (s0 = s1 →(w0 ↔ ∀(s0,(s0 = s1 → w0))))\n⊣ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ (s0 = s1 →(∀(s0,(s0 = s1 → w0))→ w0))"},"cumulated":{"origin":"|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffss(s0, s1)\n-| wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| wi(wceq(cv(s0), cv(s1)), wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0))","pretty":"⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, s1)\n⊣ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ (s0 = s1 →(∀(s0,(s0 = s1 → w0))→ w0))"}},{"stmt":{"origin":"ax12v2(s0, s1, w0)","pretty":"ax12v2(s0, s1, w0)"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)","pretty":"⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffss(s0, s1)\n-| wi(wceq(cv(s0), cv(s1)), wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0))","pretty":"⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, s1)\n⊣ (s0 = s1 →(∀(s0,(s0 = s1 → w0))→ w0))"}},{"stmt":{"origin":"com12(wceq(cv(s0), cv(s1)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)","pretty":"com12(s0 = s1, ∀(s0,(s0 = s1 → w0)), w0)"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0))\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wi(wceq(cv(s0), cv(s1)), w0))","pretty":"⊢ (s0 = s1 →(∀(s0,(s0 = s1 → w0))→ w0))\n⊣ (∀(s0,(s0 = s1 → w0))→(s0 = s1 → w0))"},"cumulated":{"origin":"|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffss(s0, s1)\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wi(wceq(cv(s0), cv(s1)), w0))","pretty":"⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, s1)\n⊣ (∀(s0,(s0 = s1 → w0))→(s0 = s1 → w0))"}},{"stmt":{"origin":"sp(s0, wi(wceq(cv(s0), cv(s1)), w0))","pretty":"sp(s0, (s0 = s1 → w0))"},"body":{"origin":"|- wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wi(wceq(cv(s0), cv(s1)), w0))","pretty":"⊢ (∀(s0,(s0 = s1 → w0))→(s0 = s1 → w0))"},"cumulated":{"origin":"|- wb(wex(s0, wa(wceq(cv(s0), cv(s1)), w0)), wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffss(s0, s1)","pretty":"⊢ (∃(s0,(s0 = s1 ∧ w0))↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, s1)"}}],"comment":"Two equivalent ways of expressing the proper substitution of ` y ` for ` x ` in ` ph ` , when ` x ` and ` y ` are distinct, namely, alternate definitions ~ sb5 and ~ sb6 . Theorem 6.2 of [Quine] p. 40. The proof does not involve ~ df-sb . The implication \"to the left\" is ~ equs4 and does not require any disjoint variable condition (but the version with a disjoint variable condition, ~ equs4v , requires fewer axioms). Theorem ~ equs45f replaces the disjoint variable condition with a non-freeness hypothesis and ~ equs5 replaces it with a distinctor as antecedent. (Contributed by NM, 14-Apr-2008.) Revised to use ~ equsexv in place of ~ equsex in order to remove dependency on ~ ax-13 . (Revised by BJ, 20-Dec-2020.)","parent":["equsexv","nfa1","impbid","ax12v2","com12","sp"],"children":["sb5","dfsb7","sb4vOLDOLD","sb4vOLDALT","sb5ALT2","mopick","alexeqg","dfdif3","pm13.196a"]}