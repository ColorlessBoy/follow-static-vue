{"bIdx":7310,"bType":"thm","type":"","name":"mptrabex","params":"setvar s0, setvar s1, class c0, class c1, wff w0","body":["|- wcel(cmpt(s0, crab(s1, c0, w0), c1), universe)","-| wcel(c0, universe)","-| diffss(s0, s1)","-| diffsc(s0, c0)","-| diffsc(s1, c0)","-| diffsw(s0, w0)"],"bodyPretty":["⊢ (s0 ∈ { s1 ∈ c0 | w0 } ↦ c1)∈ 𝕌","⊣ c0 ∈ 𝕌","⊣ d(s0, s1)","⊣ d(s0, c0)","⊣ d(s1, c0)","⊣ d(s0, w0)"],"proof":[{"stmt":{"origin":"mptex(s0, crab(s1, c0, w0), c1)","pretty":"mptex(s0, { s1 ∈ c0 | w0 }, c1)"},"body":{"origin":"|- wcel(cmpt(s0, crab(s1, c0, w0), c1), universe)\n-| wcel(crab(s1, c0, w0), universe)\n-| diffsc(s0, crab(s1, c0, w0))","pretty":"⊢ (s0 ∈ { s1 ∈ c0 | w0 } ↦ c1)∈ 𝕌\n⊣ { s1 ∈ c0 | w0 } ∈ 𝕌\n⊣ d(s0, { s1 ∈ c0 | w0 })"},"cumulated":{"origin":"|- wcel(cmpt(s0, crab(s1, c0, w0), c1), universe)\n-| wcel(crab(s1, c0, w0), universe)\n-| diffsc(s0, crab(s1, c0, w0))","pretty":"⊢ (s0 ∈ { s1 ∈ c0 | w0 } ↦ c1)∈ 𝕌\n⊣ { s1 ∈ c0 | w0 } ∈ 𝕌\n⊣ d(s0, { s1 ∈ c0 | w0 })"}},{"stmt":{"origin":"rabex(s1, c0, w0)","pretty":"rabex(s1, c0, w0)"},"body":{"origin":"|- wcel(crab(s1, c0, w0), universe)\n-| wcel(c0, universe)\n-| diffsc(s1, c0)","pretty":"⊢ { s1 ∈ c0 | w0 } ∈ 𝕌\n⊣ c0 ∈ 𝕌\n⊣ d(s1, c0)"},"cumulated":{"origin":"|- wcel(cmpt(s0, crab(s1, c0, w0), c1), universe)\n-| diffsc(s0, crab(s1, c0, w0))\n-| wcel(c0, universe)\n-| diffsc(s1, c0)","pretty":"⊢ (s0 ∈ { s1 ∈ c0 | w0 } ↦ c1)∈ 𝕌\n⊣ d(s0, { s1 ∈ c0 | w0 })\n⊣ c0 ∈ 𝕌\n⊣ d(s1, c0)"}},{"stmt":{"origin":"diff.crab.s(s0, s1, c0, w0)","pretty":"diff.crab.s(s0, s1, c0, w0)"},"body":{"origin":"|- diffsc(s0, crab(s1, c0, w0))\n-| diffss(s0, s1)\n-| diffsc(s0, c0)\n-| diffsw(s0, w0)","pretty":"⊢ d(s0, { s1 ∈ c0 | w0 })\n⊣ d(s0, s1)\n⊣ d(s0, c0)\n⊣ d(s0, w0)"},"cumulated":{"origin":"|- wcel(cmpt(s0, crab(s1, c0, w0), c1), universe)\n-| wcel(c0, universe)\n-| diffsc(s1, c0)\n-| diffss(s0, s1)\n-| diffsc(s0, c0)\n-| diffsw(s0, w0)","pretty":"⊢ (s0 ∈ { s1 ∈ c0 | w0 } ↦ c1)∈ 𝕌\n⊣ c0 ∈ 𝕌\n⊣ d(s1, c0)\n⊣ d(s0, s1)\n⊣ d(s0, c0)\n⊣ d(s0, w0)"}}],"comment":"If the domain of a function given by maps-to notation is a class abstraction based on a set, the function is a set. (Contributed by AV, 16-Jul-2019.) (Revised by AV, 26-Mar-2021.)","parent":["mptex","rabex","diff.crab.s"],"children":["odzval","pmtrfval","dmdprd","dprdval","psrlidm","psrass23l","psrass23","mplsubrg","mplmonmul","mplbas2","fusgrfis","wlksnwwlknvbij","clwwlkvbij","clwwlkvbijOLD","sitgval","fwddifnval","diafval","dicfval"]}