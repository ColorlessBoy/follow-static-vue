{"bIdx":2305,"bType":"thm","type":"","name":"equvinv","params":"setvar s0, setvar s1, setvar s2","body":["|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))","-| diffss(s0, s2)","-| diffss(s1, s2)"],"bodyPretty":["⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))","⊣ d(s0, s2)","⊣ d(s1, s2)"],"proof":[{"stmt":{"origin":"bicomi(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))","pretty":"bicomi(s0 = s1, ∃(s2,(s2 = s0 ∧ s2 = s1)))"},"body":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| wb(wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))), wceq(cv(s0), cv(s1)))","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ (∃(s2,(s2 = s0 ∧ s2 = s1))↔ s0 = s1)"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| wb(wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))), wceq(cv(s0), cv(s1)))","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ (∃(s2,(s2 = s0 ∧ s2 = s1))↔ s0 = s1)"}},{"stmt":{"origin":"equsexvw(s2, s0, wceq(cv(s2), cv(s1)), wceq(cv(s0), cv(s1)))","pretty":"equsexvw(s2, s0, s2 = s1, s0 = s1)"},"body":{"origin":"|- wb(wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))), wceq(cv(s0), cv(s1)))\n-| wi(wceq(cv(s2), cv(s0)), wb(wceq(cv(s2), cv(s1)), wceq(cv(s0), cv(s1))))\n-| diffss(s2, s0)\n-| diffsw(s2, wceq(cv(s0), cv(s1)))","pretty":"⊢ (∃(s2,(s2 = s0 ∧ s2 = s1))↔ s0 = s1)\n⊣ (s2 = s0 →(s2 = s1 ↔ s0 = s1))\n⊣ d(s2, s0)\n⊣ d(s2, s0 = s1)"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| wi(wceq(cv(s2), cv(s0)), wb(wceq(cv(s2), cv(s1)), wceq(cv(s0), cv(s1))))\n-| diffss(s2, s0)\n-| diffsw(s2, wceq(cv(s0), cv(s1)))","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ (s2 = s0 →(s2 = s1 ↔ s0 = s1))\n⊣ d(s2, s0)\n⊣ d(s2, s0 = s1)"}},{"stmt":{"origin":"equequ1(s2, s0, s1)","pretty":"equequ1(s2, s0, s1)"},"body":{"origin":"|- wi(wceq(cv(s2), cv(s0)), wb(wceq(cv(s2), cv(s1)), wceq(cv(s0), cv(s1))))","pretty":"⊢ (s2 = s0 →(s2 = s1 ↔ s0 = s1))"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| diffss(s2, s0)\n-| diffsw(s2, wceq(cv(s0), cv(s1)))","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ d(s2, s0)\n⊣ d(s2, s0 = s1)"}},{"stmt":{"origin":"diff.wceq.s(s2, cv(s0), cv(s1))","pretty":"diff.wceq.s(s2, s0, s1)"},"body":{"origin":"|- diffsw(s2, wceq(cv(s0), cv(s1)))\n-| diffsc(s2, cv(s0))\n-| diffsc(s2, cv(s1))","pretty":"⊢ d(s2, s0 = s1)\n⊣ d(s2, s0)\n⊣ d(s2, s1)"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| diffss(s2, s0)\n-| diffsc(s2, cv(s0))\n-| diffsc(s2, cv(s1))","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ d(s2, s0)\n⊣ d(s2, s0)\n⊣ d(s2, s1)"}},{"stmt":{"origin":"diff.cv.s(s2, s0)","pretty":"diff.cv.s(s2, s0)"},"body":{"origin":"|- diffsc(s2, cv(s0))\n-| diffss(s2, s0)","pretty":"⊢ d(s2, s0)\n⊣ d(s2, s0)"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| diffss(s2, s0)\n-| diffsc(s2, cv(s1))","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ d(s2, s0)\n⊣ d(s2, s1)"}},{"stmt":{"origin":"diffss.ex(s2, s0)","pretty":"diffss.ex(s2, s0)"},"body":{"origin":"|- diffss(s2, s0)\n-| diffss(s0, s2)","pretty":"⊢ d(s2, s0)\n⊣ d(s0, s2)"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| diffsc(s2, cv(s1))\n-| diffss(s0, s2)","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ d(s2, s1)\n⊣ d(s0, s2)"}},{"stmt":{"origin":"diff.cv.s(s2, s1)","pretty":"diff.cv.s(s2, s1)"},"body":{"origin":"|- diffsc(s2, cv(s1))\n-| diffss(s2, s1)","pretty":"⊢ d(s2, s1)\n⊣ d(s2, s1)"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| diffss(s0, s2)\n-| diffss(s2, s1)","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ d(s0, s2)\n⊣ d(s2, s1)"}},{"stmt":{"origin":"diffss.ex(s2, s1)","pretty":"diffss.ex(s2, s1)"},"body":{"origin":"|- diffss(s2, s1)\n-| diffss(s1, s2)","pretty":"⊢ d(s2, s1)\n⊣ d(s1, s2)"},"cumulated":{"origin":"|- wb(wceq(cv(s0), cv(s1)), wex(s2, wa(wceq(cv(s2), cv(s0)), wceq(cv(s2), cv(s1)))))\n-| diffss(s0, s2)\n-| diffss(s1, s2)","pretty":"⊢ (s0 = s1 ↔ ∃(s2,(s2 = s0 ∧ s2 = s1)))\n⊣ d(s0, s2)\n⊣ d(s1, s2)"}}],"comment":"A variable introduction law for equality. Lemma 15 of [Monk2] p. 109. (Contributed by NM, 9-Jan-1993.) Remove dependencies on ~ ax-10 , ~ ax-13 . (Revised by Wolf Lammen, 10-Jun-2019.) Move the quantified variable ( ` z ` ) to the left of the equality signs. (Revised by Wolf Lammen, 11-Apr-2021.) (Proof shortened by Wolf Lammen, 12-Jul-2022.)","parent":["bicomi","equsexvw","equequ1","diff.wceq.s","diff.cv.s","diffss.ex"],"children":["ax8","ax9","ax13","cossid"]}