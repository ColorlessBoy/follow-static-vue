{"bIdx":17496,"bType":"thm","type":"","name":"structfung","params":"class c0, class c1","body":["|- wi(wbr(c0, cstr, c1), wfun(ccnv(ccnv(c0))))"],"bodyPretty":["⊢ (c0[Struct]c1 → Fun(`' `' c0))"],"proof":[{"stmt":{"origin":"mpbird(wbr(c0, cstr, c1), wfun(ccnv(ccnv(c0))), wfun(cdif(c0, csn(emptycls))))","pretty":"mpbird(c0[Struct]c1, Fun(`' `' c0), Fun((c0 \\ { ∅ })))"},"body":{"origin":"|- wi(wbr(c0, cstr, c1), wfun(ccnv(ccnv(c0))))\n-| wi(wbr(c0, cstr, c1), wfun(cdif(c0, csn(emptycls))))\n-| wi(wbr(c0, cstr, c1), wb(wfun(ccnv(ccnv(c0))), wfun(cdif(c0, csn(emptycls)))))","pretty":"⊢ (c0[Struct]c1 → Fun(`' `' c0))\n⊣ (c0[Struct]c1 → Fun((c0 \\ { ∅ })))\n⊣ (c0[Struct]c1 →(Fun(`' `' c0)↔ Fun((c0 \\ { ∅ }))))"},"cumulated":{"origin":"|- wi(wbr(c0, cstr, c1), wfun(ccnv(ccnv(c0))))\n-| wi(wbr(c0, cstr, c1), wfun(cdif(c0, csn(emptycls))))\n-| wi(wbr(c0, cstr, c1), wb(wfun(ccnv(ccnv(c0))), wfun(cdif(c0, csn(emptycls)))))","pretty":"⊢ (c0[Struct]c1 → Fun(`' `' c0))\n⊣ (c0[Struct]c1 → Fun((c0 \\ { ∅ })))\n⊣ (c0[Struct]c1 →(Fun(`' `' c0)↔ Fun((c0 \\ { ∅ }))))"}},{"stmt":{"origin":"structn0fun(c0, c1)","pretty":"structn0fun(c0, c1)"},"body":{"origin":"|- wi(wbr(c0, cstr, c1), wfun(cdif(c0, csn(emptycls))))","pretty":"⊢ (c0[Struct]c1 → Fun((c0 \\ { ∅ })))"},"cumulated":{"origin":"|- wi(wbr(c0, cstr, c1), wfun(ccnv(ccnv(c0))))\n-| wi(wbr(c0, cstr, c1), wb(wfun(ccnv(ccnv(c0))), wfun(cdif(c0, csn(emptycls)))))","pretty":"⊢ (c0[Struct]c1 → Fun(`' `' c0))\n⊣ (c0[Struct]c1 →(Fun(`' `' c0)↔ Fun((c0 \\ { ∅ }))))"}},{"stmt":{"origin":"funeqd(ccnv(ccnv(c0)), cdif(c0, csn(emptycls)), wbr(c0, cstr, c1))","pretty":"funeqd(`' `' c0, (c0 \\ { ∅ }), c0[Struct]c1)"},"body":{"origin":"|- wi(wbr(c0, cstr, c1), wb(wfun(ccnv(ccnv(c0))), wfun(cdif(c0, csn(emptycls)))))\n-| wi(wbr(c0, cstr, c1), wceq(ccnv(ccnv(c0)), cdif(c0, csn(emptycls))))","pretty":"⊢ (c0[Struct]c1 →(Fun(`' `' c0)↔ Fun((c0 \\ { ∅ }))))\n⊣ (c0[Struct]c1 → `' `' c0 =(c0 \\ { ∅ }))"},"cumulated":{"origin":"|- wi(wbr(c0, cstr, c1), wfun(ccnv(ccnv(c0))))\n-| wi(wbr(c0, cstr, c1), wceq(ccnv(ccnv(c0)), cdif(c0, csn(emptycls))))","pretty":"⊢ (c0[Struct]c1 → Fun(`' `' c0))\n⊣ (c0[Struct]c1 → `' `' c0 =(c0 \\ { ∅ }))"}},{"stmt":{"origin":"structcnvcnv(c0, c1)","pretty":"structcnvcnv(c0, c1)"},"body":{"origin":"|- wi(wbr(c0, cstr, c1), wceq(ccnv(ccnv(c0)), cdif(c0, csn(emptycls))))","pretty":"⊢ (c0[Struct]c1 → `' `' c0 =(c0 \\ { ∅ }))"},"cumulated":{"origin":"|- wi(wbr(c0, cstr, c1), wfun(ccnv(ccnv(c0))))","pretty":"⊢ (c0[Struct]c1 → Fun(`' `' c0))"}}],"comment":"The converse of the converse of a structure is a function. Closed form of ~ structfun . (Contributed by AV, 12-Nov-2021.)","parent":["mpbird","structn0fun","funeqd","structcnvcnv"],"children":["structfun","opelstrbas","edgfiedgval"]}