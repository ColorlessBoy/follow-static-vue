{"bIdx":14608,"bType":"thm","type":"","name":"iswrdb","params":"class c0, class c1","body":["|- wb(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))"],"bodyPretty":["⊢ (c0 ∈ Word(c1)↔(c0 :(0[..^](# ` c0))→ c1))"],"proof":[{"stmt":{"origin":"impbii(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))","pretty":"impbii(c0 ∈ Word(c1), (c0 :(0[..^](# ` c0))→ c1))"},"body":{"origin":"|- wb(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))\n-| wi(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))\n-| wi(wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1), wcel(c0, cword(c1)))","pretty":"⊢ (c0 ∈ Word(c1)↔(c0 :(0[..^](# ` c0))→ c1))\n⊣ (c0 ∈ Word(c1)→(c0 :(0[..^](# ` c0))→ c1))\n⊣ ((c0 :(0[..^](# ` c0))→ c1)→ c0 ∈ Word(c1))"},"cumulated":{"origin":"|- wb(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))\n-| wi(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))\n-| wi(wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1), wcel(c0, cword(c1)))","pretty":"⊢ (c0 ∈ Word(c1)↔(c0 :(0[..^](# ` c0))→ c1))\n⊣ (c0 ∈ Word(c1)→(c0 :(0[..^](# ` c0))→ c1))\n⊣ ((c0 :(0[..^](# ` c0))→ c1)→ c0 ∈ Word(c1))"}},{"stmt":{"origin":"wrdf(c0, c1)","pretty":"wrdf(c0, c1)"},"body":{"origin":"|- wi(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))","pretty":"⊢ (c0 ∈ Word(c1)→(c0 :(0[..^](# ` c0))→ c1))"},"cumulated":{"origin":"|- wb(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))\n-| wi(wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1), wcel(c0, cword(c1)))","pretty":"⊢ (c0 ∈ Word(c1)↔(c0 :(0[..^](# ` c0))→ c1))\n⊣ ((c0 :(0[..^](# ` c0))→ c1)→ c0 ∈ Word(c1))"}},{"stmt":{"origin":"iswrdi(c0, cfv(chash, c0), c1)","pretty":"iswrdi(c0, (# ` c0), c1)"},"body":{"origin":"|- wi(wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1), wcel(c0, cword(c1)))","pretty":"⊢ ((c0 :(0[..^](# ` c0))→ c1)→ c0 ∈ Word(c1))"},"cumulated":{"origin":"|- wb(wcel(c0, cword(c1)), wf(c0, co(nat0, cfzo, cfv(chash, c0)), c1))","pretty":"⊢ (c0 ∈ Word(c1)↔(c0 :(0[..^](# ` c0))→ c1))"}}],"comment":"A word over an alphabet is a function from an open range of nonnegative integers (of length equal to the length of the word) into the alphabet. (Contributed by Alexander van der Vekens, 30-Jul-2018.)","parent":["impbii","wrdf","iswrdi"],"children":["sswrd","wrdsymb","swrdwrdsymb","upgr2wlk","wlkresOLD","wlkp1","upgrf1istrl","konigsbergssiedgw"]}