{"bIdx":30444,"bType":"thm","type":"","name":"ex-natded5.5","params":"wff w0, wff w1, wff w2","body":["|- wi(w0, wn(w1))","-| wi(w0, wi(w1, w2))","-| wi(w0, wn(w2))"],"bodyPretty":["⊢ (w0 → ¬ w1)","⊣ (w0 →(w1 → w2))","⊣ (w0 → ¬ w2)"],"proof":[{"stmt":{"origin":"pm2.65da(w0, w1, w2)","pretty":"pm2.65da(w0, w1, w2)"},"body":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), w2)\n-| wi(wa(w0, w1), wn(w2))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ w2)\n⊣ ((w0 ∧ w1)→ ¬ w2)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), w2)\n-| wi(wa(w0, w1), wn(w2))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ w2)\n⊣ ((w0 ∧ w1)→ ¬ w2)"}},{"stmt":{"origin":"mpd(wa(w0, w1), w2, w1)","pretty":"mpd((w0 ∧ w1), w2, w1)"},"body":{"origin":"|- wi(wa(w0, w1), w2)\n-| wi(wa(w0, w1), w1)\n-| wi(wa(w0, w1), wi(w1, w2))","pretty":"⊢ ((w0 ∧ w1)→ w2)\n⊣ ((w0 ∧ w1)→ w1)\n⊣ ((w0 ∧ w1)→(w1 → w2))"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), wn(w2))\n-| wi(wa(w0, w1), w1)\n-| wi(wa(w0, w1), wi(w1, w2))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ ¬ w2)\n⊣ ((w0 ∧ w1)→ w1)\n⊣ ((w0 ∧ w1)→(w1 → w2))"}},{"stmt":{"origin":"simpr(w0, w1)","pretty":"simpr(w0, w1)"},"body":{"origin":"|- wi(wa(w0, w1), w1)","pretty":"⊢ ((w0 ∧ w1)→ w1)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), wn(w2))\n-| wi(wa(w0, w1), wi(w1, w2))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ ¬ w2)\n⊣ ((w0 ∧ w1)→(w1 → w2))"}},{"stmt":{"origin":"adantr(w0, w1, wi(w1, w2))","pretty":"adantr(w0, w1, (w1 → w2))"},"body":{"origin":"|- wi(wa(w0, w1), wi(w1, w2))\n-| wi(w0, wi(w1, w2))","pretty":"⊢ ((w0 ∧ w1)→(w1 → w2))\n⊣ (w0 →(w1 → w2))"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), wn(w2))\n-| wi(w0, wi(w1, w2))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ ¬ w2)\n⊣ (w0 →(w1 → w2))"}},{"stmt":{"origin":"adantr(w0, w1, wn(w2))","pretty":"adantr(w0, w1, ¬ w2)"},"body":{"origin":"|- wi(wa(w0, w1), wn(w2))\n-| wi(w0, wn(w2))","pretty":"⊢ ((w0 ∧ w1)→ ¬ w2)\n⊣ (w0 → ¬ w2)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(w0, wi(w1, w2))\n-| wi(w0, wn(w2))","pretty":"⊢ (w0 → ¬ w1)\n⊣ (w0 →(w1 → w2))\n⊣ (w0 → ¬ w2)"}}],"comment":"Theorem 5.5 of [Clemente] p. 18, translated line by line using the usual translation of natural deduction (ND) in the Metamath Proof Explorer (MPE) notation. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>2;3</TD> <TD NOWRAP> ` ( ps -> ch ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps -> ch ) ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>2</TD><TD>5</TD><TD NOWRAP> ` -. ch ` </TD> <TD NOWRAP> ` ( ph -> -. ch ) ` </TD><TD>Given</TD> <TD>$e; we'll use ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>3</TD><TD>1</TD> <TD> ...| ` ps ` </TD><TD> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>4</TD><TD>4</TD><TD> ... ` ch ` </TD> <TD> ` ( ( ph /\\ ps ) -> ch ) ` </TD> <TD> ` -> `E 1,3</TD> <TD> ~ mpd 1,3</TD></TR> <TR><TD>5</TD><TD>6</TD><TD> ... ` -. ch ` </TD> <TD> ` ( ( ph /\\ ps ) -> -. ch ) ` </TD> <TD>IT 2</TD> <TD> ~ adantr 5</TD></TR> <TR><TD>6</TD><TD>7</TD><TD> ` -. ps ` </TD> <TD> ` ( ph -> -. ps ) ` </TD> <TD> ` /\\ `I 3,4,5</TD> <TD> ~ pm2.65da 4,6</TD></TR> </TABLE> </HTML> The original used Latin letters; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. To add an assumption, the antecedent is modified to include it (typically by using ~ adantr ; ~ simpr is useful when you want to depend directly on the new assumption). Below is the final Metamath proof (which reorders some steps). A much more efficient proof is ~ mtod ; a proof without context is shown in ~ mto . (Contributed by David A. Wheeler, 19-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["pm2.65da","mpd","simpr","adantr"],"children":[]}