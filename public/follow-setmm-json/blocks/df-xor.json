{"bIdx":1784,"bType":"axiom","type":"","name":"df-xor","params":"wff w0, wff w1","body":["|- wb(wxo(w0, w1), wn(wb(w0, w1)))"],"bodyPretty":["⊢ ((w0 ⊻ w1)↔ ¬(w0 ↔ w1))"],"proof":[],"comment":"Define exclusive disjunction (logical \"xor\"). Return true if either the left or right, but not both, are true. After we define the constant true ` T. ` ( ~ df-tru ) and the constant false ` F. ` ( ~ df-fal ), we will be able to prove these truth table values: ` ( ( T. \\/_ T. ) <-> F. ) ` ( ~ truxortru ), ` ( ( T. \\/_ F. ) <-> T. ) ` ( ~ truxorfal ), ` ( ( F. \\/_ T. ) <-> T. ) ` ( ~ falxortru ), and ` ( ( F. \\/_ F. ) <-> F. ) ` ( ~ falxorfal ). Contrast with ` /\\ ` ( ~ df-an ), ` \\/ ` ( ~ df-or ), ` -> ` ( ~ wi ), and ` -/\\ ` ( ~ df-nan ). (Contributed by FL, 22-Nov-2010.)","parent":[],"children":["xnor","xorcom","xorass","excxor","xor2","xorneg2","xorbi12i","xorbi12d","anxordi","xorexmid","truxortru","truxorfal","falxorfal","hadbi","elsymdifxor","sadadd2lem2","f1omvdco3","tsxo3","tsxo4","ifpxorxorb","or3or","axorbtnotaiffb","axorbciffatcxorb","aisbnaxb","abnotbtaxb","abnotataxb","afv2orxorb"]}