{"bIdx":1340,"bType":"thm","type":"","name":"casesifp","params":"wff w0, wff w1, wff w2, wff w3","body":["|- wb(w0, wif(w1, w2, w3))","-| wi(w1, wb(w0, w2))","-| wi(wn(w1), wb(w0, w3))"],"bodyPretty":["⊢ (w0 ↔ if(w1, w2, w3))","⊣ (w1 →(w0 ↔ w2))","⊣ (¬ w1 →(w0 ↔ w3))"],"proof":[{"stmt":{"origin":"bitr4i(w0, wif(w1, w2, w3), wo(wa(w1, w2), wa(wn(w1), w3)))","pretty":"bitr4i(w0, if(w1, w2, w3), ((w1 ∧ w2)∨(¬ w1 ∧ w3)))"},"body":{"origin":"|- wb(w0, wif(w1, w2, w3))\n-| wb(w0, wo(wa(w1, w2), wa(wn(w1), w3)))\n-| wb(wif(w1, w2, w3), wo(wa(w1, w2), wa(wn(w1), w3)))","pretty":"⊢ (w0 ↔ if(w1, w2, w3))\n⊣ (w0 ↔((w1 ∧ w2)∨(¬ w1 ∧ w3)))\n⊣ (if(w1, w2, w3)↔((w1 ∧ w2)∨(¬ w1 ∧ w3)))"},"cumulated":{"origin":"|- wb(w0, wif(w1, w2, w3))\n-| wb(w0, wo(wa(w1, w2), wa(wn(w1), w3)))\n-| wb(wif(w1, w2, w3), wo(wa(w1, w2), wa(wn(w1), w3)))","pretty":"⊢ (w0 ↔ if(w1, w2, w3))\n⊣ (w0 ↔((w1 ∧ w2)∨(¬ w1 ∧ w3)))\n⊣ (if(w1, w2, w3)↔((w1 ∧ w2)∨(¬ w1 ∧ w3)))"}},{"stmt":{"origin":"cases(w0, w1, w2, w3)","pretty":"cases(w0, w1, w2, w3)"},"body":{"origin":"|- wb(w0, wo(wa(w1, w2), wa(wn(w1), w3)))\n-| wi(w1, wb(w0, w2))\n-| wi(wn(w1), wb(w0, w3))","pretty":"⊢ (w0 ↔((w1 ∧ w2)∨(¬ w1 ∧ w3)))\n⊣ (w1 →(w0 ↔ w2))\n⊣ (¬ w1 →(w0 ↔ w3))"},"cumulated":{"origin":"|- wb(w0, wif(w1, w2, w3))\n-| wb(wif(w1, w2, w3), wo(wa(w1, w2), wa(wn(w1), w3)))\n-| wi(w1, wb(w0, w2))\n-| wi(wn(w1), wb(w0, w3))","pretty":"⊢ (w0 ↔ if(w1, w2, w3))\n⊣ (if(w1, w2, w3)↔((w1 ∧ w2)∨(¬ w1 ∧ w3)))\n⊣ (w1 →(w0 ↔ w2))\n⊣ (¬ w1 →(w0 ↔ w3))"}},{"stmt":{"origin":"df-ifp(w1, w2, w3)","pretty":"df-ifp(w1, w2, w3)"},"body":{"origin":"|- wb(wif(w1, w2, w3), wo(wa(w1, w2), wa(wn(w1), w3)))","pretty":"⊢ (if(w1, w2, w3)↔((w1 ∧ w2)∨(¬ w1 ∧ w3)))"},"cumulated":{"origin":"|- wb(w0, wif(w1, w2, w3))\n-| wi(w1, wb(w0, w2))\n-| wi(wn(w1), wb(w0, w3))","pretty":"⊢ (w0 ↔ if(w1, w2, w3))\n⊣ (w1 →(w0 ↔ w2))\n⊣ (¬ w1 →(w0 ↔ w3))"}}],"comment":"Version of ~ cases expressed using ` if- ` . Case disjunction according to the value of ` ph ` . One can see this as a proof that the two hypotheses characterize the conditional operator for propositions. For the converses, see ~ ifptru and ~ ifpfal . (Contributed by BJ, 20-Sep-2019.)","parent":["bitr4i","cases","df-ifp"],"children":["hadifp","cadifp"]}