{"bIdx":37576,"bType":"thm","type":"","name":"wl-moae","params":"setvar s0, setvar s1","body":["|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))","-| diffss(s0, s1)"],"bodyPretty":["⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))","⊣ d(s0, s1)"],"proof":[{"stmt":{"origin":"impbii(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))","pretty":"impbii(∃*(s0, T), ∀(s0, s0 = s1))"},"body":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wi(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wmo(s0, wtru))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)→ ∀(s0, s0 = s1))\n⊣ (∀(s0, s0 = s1)→ ∃*(s0, T))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wi(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wmo(s0, wtru))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)→ ∀(s0, s0 = s1))\n⊣ (∀(s0, s0 = s1)→ ∃*(s0, T))"}},{"stmt":{"origin":"wl-motae(s0, s0, s0, s1)","pretty":"wl-motae(s0, s0, s0, s1)"},"body":{"origin":"|- wi(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))","pretty":"⊢ (∃*(s0, T)→ ∀(s0, s0 = s1))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wmo(s0, wtru))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∀(s0, s0 = s1)→ ∃*(s0, T))"}},{"stmt":{"origin":"sylibr(wal(s0, wceq(cv(s0), cv(s1))), wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))","pretty":"sylibr(∀(s0, s0 = s1), ∃*(s0, T), ∃(s1, ∀(s0,(T → s0 = s1))))"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wmo(s0, wtru))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∃*(s0, T))\n⊣ (∀(s0, s0 = s1)→ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∀(s0, s0 = s1)→ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))"}},{"stmt":{"origin":"syl(wal(s0, wceq(cv(s0), cv(s1))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))), wex(s1, wal(s0, wceq(cv(s0), cv(s1)))))","pretty":"syl(∀(s0, s0 = s1), ∃(s1, ∀(s0,(T → s0 = s1))), ∃(s1, ∀(s0, s0 = s1)))"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wex(s1, wal(s0, wceq(cv(s0), cv(s1)))))\n-| wi(wex(s1, wal(s0, wceq(cv(s0), cv(s1)))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∀(s0, s0 = s1)→ ∃(s1, ∀(s0, s0 = s1)))\n⊣ (∃(s1, ∀(s0, s0 = s1))→ ∃(s1, ∀(s0,(T → s0 = s1))))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wex(s1, wal(s0, wceq(cv(s0), cv(s1)))))\n-| wi(wex(s1, wal(s0, wceq(cv(s0), cv(s1)))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∀(s0, s0 = s1)→ ∃(s1, ∀(s0, s0 = s1)))\n⊣ (∃(s1, ∀(s0, s0 = s1))→ ∃(s1, ∀(s0,(T → s0 = s1))))"}},{"stmt":{"origin":"19.8w(s1, wal(s0, wceq(cv(s0), cv(s1))))","pretty":"19.8w(s1, ∀(s0, s0 = s1))"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wex(s1, wal(s0, wceq(cv(s0), cv(s1)))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wal(s0, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∃(s1, ∀(s0, s0 = s1)))\n⊣ (∀(s0, s0 = s1)→ ∀(s1, ∀(s0, s0 = s1)))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wi(wex(s1, wal(s0, wceq(cv(s0), cv(s1)))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wal(s0, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∃(s1, ∀(s0, s0 = s1))→ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∀(s0, s0 = s1)→ ∀(s1, ∀(s0, s0 = s1)))"}},{"stmt":{"origin":"hbaev(s0, s1, s1)","pretty":"hbaev(s0, s1, s1)"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wal(s0, wceq(cv(s0), cv(s1)))))\n-| diffss(s0, s1)","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, ∀(s0, s0 = s1)))\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wi(wex(s1, wal(s0, wceq(cv(s0), cv(s1)))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| diffss(s0, s1)","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∃(s1, ∀(s0, s0 = s1))→ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"eximi(s1, wal(s0, wceq(cv(s0), cv(s1))), wal(s0, wi(wtru, wceq(cv(s0), cv(s1)))))","pretty":"eximi(s1, ∀(s0, s0 = s1), ∀(s0,(T → s0 = s1)))"},"body":{"origin":"|- wi(wex(s1, wal(s0, wceq(cv(s0), cv(s1)))), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s0, wi(wtru, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∃(s1, ∀(s0, s0 = s1))→ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ (∀(s0, s0 = s1)→ ∀(s0,(T → s0 = s1)))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| diffss(s0, s1)\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s0, wi(wtru, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ d(s0, s1)\n⊣ (∀(s0, s0 = s1)→ ∀(s0,(T → s0 = s1)))"}},{"stmt":{"origin":"alimi(s0, wceq(cv(s0), cv(s1)), wi(wtru, wceq(cv(s0), cv(s1))))","pretty":"alimi(s0, s0 = s1, (T → s0 = s1))"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s0, wi(wtru, wceq(cv(s0), cv(s1)))))\n-| wi(wceq(cv(s0), cv(s1)), wi(wtru, wceq(cv(s0), cv(s1))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s0,(T → s0 = s1)))\n⊣ (s0 = s1 →(T → s0 = s1))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| diffss(s0, s1)\n-| wi(wceq(cv(s0), cv(s1)), wi(wtru, wceq(cv(s0), cv(s1))))","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ d(s0, s1)\n⊣ (s0 = s1 →(T → s0 = s1))"}},{"stmt":{"origin":"ax-1(wceq(cv(s0), cv(s1)), wtru)","pretty":"ax-1(s0 = s1, wtru)"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(wtru, wceq(cv(s0), cv(s1))))","pretty":"⊢ (s0 = s1 →(T → s0 = s1))"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| diffss(s0, s1)","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"df-mo(s0, s1, wtru)","pretty":"df-mo(s0, s1, wtru)"},"body":{"origin":"|- wb(wmo(s0, wtru), wex(s1, wal(s0, wi(wtru, wceq(cv(s0), cv(s1))))))\n-| diffss(s0, s1)\n-| diffsw(s1, wtru)","pretty":"⊢ (∃*(s0, T)↔ ∃(s1, ∀(s0,(T → s0 = s1))))\n⊣ d(s0, s1)\n⊣ d(s1, T)"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| diffss(s0, s1)\n-| diffsw(s1, wtru)","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ d(s0, s1)\n⊣ d(s1, T)"}},{"stmt":{"origin":"diff.wtru.s(s1)","pretty":"diff.wtru.s(s1)"},"body":{"origin":"|- diffsw(s1, wtru)","pretty":"⊢ d(s1, T)"},"cumulated":{"origin":"|- wb(wmo(s0, wtru), wal(s0, wceq(cv(s0), cv(s1))))\n-| diffss(s0, s1)","pretty":"⊢ (∃*(s0, T)↔ ∀(s0, s0 = s1))\n⊣ d(s0, s1)"}}],"comment":"Two ways to express \"at most one thing exists\" or, in this context equivalently, \"exactly one thing exists\" . The equivalence results from the presence of ~ ax-6 in the proof, that ensures \"at least one thing exists\". For other equivalences see ~ wl-euae and ~ exists1 . Gerard Lang pointed out, that ` E. y A. x x = y ` with disjoint ` x ` and ` y ` ( ~ df-mo , ~ trut ) also means \"exactly one thing exists\" . (Contributed by NM, 5-Apr-2004.) State the theorem using truth constant ` T. ` . (Revised by BJ, 7-Oct-2022.) Reduce axiom dependencies, and use ` E* ` . (Revised by Wolf Lammen, 7-Mar-2023.)","parent":["impbii","wl-motae","sylibr","syl","19.8w","hbaev","eximi","alimi","ax-1","df-mo","diff.wtru.s"],"children":["wl-euae"]}