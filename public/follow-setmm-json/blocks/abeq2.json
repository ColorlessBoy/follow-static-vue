{"bIdx":3197,"bType":"thm","type":"","name":"abeq2","params":"setvar s0, class c0, wff w0","body":["|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))","-| diffsc(s0, c0)"],"bodyPretty":["⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))","⊣ d(s0, c0)"],"proof":[{"stmt":{"origin":"bitri(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))))","pretty":"bitri(c0 = { s0 | w0 }, ∀(s0,(s0 ∈ c0 ↔ w0)), ∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 })))"},"body":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))))\n-| wb(wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))), wal(s0, wb(wcel(cv(s0), c0), w0)))","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 })))\n⊣ (∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 }))↔ ∀(s0,(s0 ∈ c0 ↔ w0)))"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))))\n-| wb(wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))), wal(s0, wb(wcel(cv(s0), c0), w0)))","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 })))\n⊣ (∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 }))↔ ∀(s0,(s0 ∈ c0 ↔ w0)))"}},{"stmt":{"origin":"cleqh(s0, hs0, c0, cab(s0, w0))","pretty":"cleqh(s0, hs0, c0, { s0 | w0 })"},"body":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))))\n-| wi(wcel(cv(hs0), c0), wal(s0, wcel(cv(hs0), c0)))\n-| wi(wcel(cv(hs0), cab(s0, w0)), wal(s0, wcel(cv(hs0), cab(s0, w0))))\n-| diffss(s0, hs0)\n-| diffsc(hs0, c0)\n-| diffsc(hs0, cab(s0, w0))","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 })))\n⊣ (hs0 ∈ c0 → ∀(s0, hs0 ∈ c0))\n⊣ (hs0 ∈ { s0 | w0 } → ∀(s0, hs0 ∈ { s0 | w0 }))\n⊣ d(s0, hs0)\n⊣ d(hs0, c0)\n⊣ d(hs0, { s0 | w0 })"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wb(wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wi(wcel(cv(hs0), c0), wal(s0, wcel(cv(hs0), c0)))\n-| wi(wcel(cv(hs0), cab(s0, w0)), wal(s0, wcel(cv(hs0), cab(s0, w0))))\n-| diffss(s0, hs0)\n-| diffsc(hs0, c0)\n-| diffsc(hs0, cab(s0, w0))","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ (∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 }))↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ (hs0 ∈ c0 → ∀(s0, hs0 ∈ c0))\n⊣ (hs0 ∈ { s0 | w0 } → ∀(s0, hs0 ∈ { s0 | w0 }))\n⊣ d(s0, hs0)\n⊣ d(hs0, c0)\n⊣ d(hs0, { s0 | w0 })"}},{"stmt":{"origin":"ax-5(s0, wcel(cv(hs0), c0))","pretty":"ax-5(s0, hs0 ∈ c0)"},"body":{"origin":"|- wi(wcel(cv(hs0), c0), wal(s0, wcel(cv(hs0), c0)))\n-| diffsw(s0, wcel(cv(hs0), c0))","pretty":"⊢ (hs0 ∈ c0 → ∀(s0, hs0 ∈ c0))\n⊣ d(s0, hs0 ∈ c0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wb(wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wi(wcel(cv(hs0), cab(s0, w0)), wal(s0, wcel(cv(hs0), cab(s0, w0))))\n-| diffss(s0, hs0)\n-| diffsc(hs0, c0)\n-| diffsc(hs0, cab(s0, w0))\n-| diffsw(s0, wcel(cv(hs0), c0))","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ (∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 }))↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ (hs0 ∈ { s0 | w0 } → ∀(s0, hs0 ∈ { s0 | w0 }))\n⊣ d(s0, hs0)\n⊣ d(hs0, c0)\n⊣ d(hs0, { s0 | w0 })\n⊣ d(s0, hs0 ∈ c0)"}},{"stmt":{"origin":"hbab1(hs0, s0, w0)","pretty":"hbab1(hs0, s0, w0)"},"body":{"origin":"|- wi(wcel(cv(hs0), cab(s0, w0)), wal(s0, wcel(cv(hs0), cab(s0, w0))))\n-| diffss(hs0, s0)","pretty":"⊢ (hs0 ∈ { s0 | w0 } → ∀(s0, hs0 ∈ { s0 | w0 }))\n⊣ d(hs0, s0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wb(wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffsc(hs0, c0)\n-| diffsc(hs0, cab(s0, w0))\n-| diffsw(s0, wcel(cv(hs0), c0))\n-| diffss(hs0, s0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ (∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 }))↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(hs0, c0)\n⊣ d(hs0, { s0 | w0 })\n⊣ d(s0, hs0 ∈ c0)\n⊣ d(hs0, s0)"}},{"stmt":{"origin":"albii(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0))), wb(wcel(cv(s0), c0), w0))","pretty":"albii(s0, (s0 ∈ c0 ↔ s0 ∈ { s0 | w0 }), (s0 ∈ c0 ↔ w0))"},"body":{"origin":"|- wb(wal(s0, wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)))), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| wb(wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0))), wb(wcel(cv(s0), c0), w0))","pretty":"⊢ (∀(s0,(s0 ∈ c0 ↔ s0 ∈ { s0 | w0 }))↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ ((s0 ∈ c0 ↔ s0 ∈ { s0 | w0 })↔(s0 ∈ c0 ↔ w0))"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffsc(hs0, c0)\n-| diffsc(hs0, cab(s0, w0))\n-| diffsw(s0, wcel(cv(hs0), c0))\n-| diffss(hs0, s0)\n-| wb(wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0))), wb(wcel(cv(s0), c0), w0))","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(hs0, c0)\n⊣ d(hs0, { s0 | w0 })\n⊣ d(s0, hs0 ∈ c0)\n⊣ d(hs0, s0)\n⊣ ((s0 ∈ c0 ↔ s0 ∈ { s0 | w0 })↔(s0 ∈ c0 ↔ w0))"}},{"stmt":{"origin":"bibi2i(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0)), w0)","pretty":"bibi2i(s0 ∈ c0, s0 ∈ { s0 | w0 }, w0)"},"body":{"origin":"|- wb(wb(wcel(cv(s0), c0), wcel(cv(s0), cab(s0, w0))), wb(wcel(cv(s0), c0), w0))\n-| wb(wcel(cv(s0), cab(s0, w0)), w0)","pretty":"⊢ ((s0 ∈ c0 ↔ s0 ∈ { s0 | w0 })↔(s0 ∈ c0 ↔ w0))\n⊣ (s0 ∈ { s0 | w0 } ↔ w0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffsc(hs0, c0)\n-| diffsc(hs0, cab(s0, w0))\n-| diffsw(s0, wcel(cv(hs0), c0))\n-| diffss(hs0, s0)\n-| wb(wcel(cv(s0), cab(s0, w0)), w0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(hs0, c0)\n⊣ d(hs0, { s0 | w0 })\n⊣ d(s0, hs0 ∈ c0)\n⊣ d(hs0, s0)\n⊣ (s0 ∈ { s0 | w0 } ↔ w0)"}},{"stmt":{"origin":"abid(s0, w0)","pretty":"abid(s0, w0)"},"body":{"origin":"|- wb(wcel(cv(s0), cab(s0, w0)), w0)","pretty":"⊢ (s0 ∈ { s0 | w0 } ↔ w0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffsc(hs0, c0)\n-| diffsc(hs0, cab(s0, w0))\n-| diffsw(s0, wcel(cv(hs0), c0))\n-| diffss(hs0, s0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(hs0, c0)\n⊣ d(hs0, { s0 | w0 })\n⊣ d(s0, hs0 ∈ c0)\n⊣ d(hs0, s0)"}},{"stmt":{"origin":"diff.hs0.c(c0)","pretty":"diff.hs0.c(c0)"},"body":{"origin":"|- diffsc(hs0, c0)","pretty":"⊢ d(hs0, c0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffsc(hs0, cab(s0, w0))\n-| diffsw(s0, wcel(cv(hs0), c0))\n-| diffss(hs0, s0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(hs0, { s0 | w0 })\n⊣ d(s0, hs0 ∈ c0)\n⊣ d(hs0, s0)"}},{"stmt":{"origin":"diff.hs0.c(cab(s0, w0))","pretty":"diff.hs0.c({ s0 | w0 })"},"body":{"origin":"|- diffsc(hs0, cab(s0, w0))","pretty":"⊢ d(hs0, { s0 | w0 })"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffsw(s0, wcel(cv(hs0), c0))\n-| diffss(hs0, s0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(s0, hs0 ∈ c0)\n⊣ d(hs0, s0)"}},{"stmt":{"origin":"diff.wcel.s(s0, cv(hs0), c0)","pretty":"diff.wcel.s(s0, hs0, c0)"},"body":{"origin":"|- diffsw(s0, wcel(cv(hs0), c0))\n-| diffsc(s0, cv(hs0))\n-| diffsc(s0, c0)","pretty":"⊢ d(s0, hs0 ∈ c0)\n⊣ d(s0, hs0)\n⊣ d(s0, c0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffss(hs0, s0)\n-| diffsc(s0, cv(hs0))\n-| diffsc(s0, c0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(hs0, s0)\n⊣ d(s0, hs0)\n⊣ d(s0, c0)"}},{"stmt":{"origin":"diff.cv.s(s0, hs0)","pretty":"diff.cv.s(s0, hs0)"},"body":{"origin":"|- diffsc(s0, cv(hs0))\n-| diffss(s0, hs0)","pretty":"⊢ d(s0, hs0)\n⊣ d(s0, hs0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(s0, hs0)\n-| diffss(hs0, s0)\n-| diffsc(s0, c0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, hs0)\n⊣ d(hs0, s0)\n⊣ d(s0, c0)"}},{"stmt":{"origin":"diffss.ex(s0, hs0)","pretty":"diffss.ex(s0, hs0)"},"body":{"origin":"|- diffss(s0, hs0)\n-| diffss(hs0, s0)","pretty":"⊢ d(s0, hs0)\n⊣ d(hs0, s0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffss(hs0, s0)\n-| diffsc(s0, c0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(hs0, s0)\n⊣ d(s0, c0)"}},{"stmt":{"origin":"diff.hs0.s(s0)","pretty":"diff.hs0.s(s0)"},"body":{"origin":"|- diffss(hs0, s0)","pretty":"⊢ d(hs0, s0)"},"cumulated":{"origin":"|- wb(wceq(c0, cab(s0, w0)), wal(s0, wb(wcel(cv(s0), c0), w0)))\n-| diffsc(s0, c0)","pretty":"⊢ (c0 = { s0 | w0 } ↔ ∀(s0,(s0 ∈ c0 ↔ w0)))\n⊣ d(s0, c0)"}}],"comment":"Equality of a class variable and a class abstraction (also called a class builder). Theorem 5.1 of [Quine] p. 34. This theorem shows the relationship between expressions with class abstractions and expressions with class variables. Note that ~ abbi and its relatives are among those useful for converting theorems with class variables to equivalent theorems with wff variables, by first substituting a class abstraction for each class variable. Class variables can always be eliminated from a theorem to result in an equivalent theorem with wff variables, and vice-versa. The idea is roughly as follows. To convert a theorem with a wff variable ` ph ` (that has a free variable ` x ` ) to a theorem with a class variable ` A ` , we substitute ` x e. A ` for ` ph ` throughout and simplify, where ` A ` is a new class variable not already in the wff. An example is the conversion of ~ zfauscl to ~ inex1 (look at the instance of ~ zfauscl that occurs in the proof of ~ inex1 ). Conversely, to convert a theorem with a class variable ` A ` to one with ` ph ` , we substitute ` { x | ph } ` for ` A ` throughout and simplify, where ` x ` and ` ph ` are new setvar and wff variables not already in the wff. Examples include ~ dfsymdif2 and ~ cp ; the latter derives a formula containing wff variables from substitution instances of the class variables in its equivalent formulation ~ cplem2 . For more information on class variables, see Quine pp. 15-21 and/or Takeuti and Zaring pp. 10-13. (Contributed by NM, 26-May-1993.)","parent":["bitri","cleqh","ax-5","hbab1","albii","bibi2i","abid","diff.hs0.c","diff.wcel.s","diff.cv.s","diffss.ex","diff.hs0.s"],"children":["abeq1","abbi2dvOLD","abbi2iOLD","clabel","rabid2","ru","sbcabel","dfss2","zfrep4","vpwex","dmopab3","funimaexg"]}