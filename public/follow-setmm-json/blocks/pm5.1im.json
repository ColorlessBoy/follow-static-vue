{"bIdx":530,"bType":"thm","type":"","name":"pm5.1im","params":"wff w0, wff w1","body":["|- wi(w0, wi(w1, wb(w0, w1)))"],"bodyPretty":["⊢ (w0 →(w1 →(w0 ↔ w1)))"],"proof":[{"stmt":{"origin":"impbid21d(w0, w1, w0, w1)","pretty":"impbid21d(w0, w1, w0, w1)"},"body":{"origin":"|- wi(w0, wi(w1, wb(w0, w1)))\n-| wi(w1, wi(w0, w1))\n-| wi(w0, wi(w1, w0))","pretty":"⊢ (w0 →(w1 →(w0 ↔ w1)))\n⊣ (w1 →(w0 → w1))\n⊣ (w0 →(w1 → w0))"},"cumulated":{"origin":"|- wi(w0, wi(w1, wb(w0, w1)))\n-| wi(w1, wi(w0, w1))\n-| wi(w0, wi(w1, w0))","pretty":"⊢ (w0 →(w1 →(w0 ↔ w1)))\n⊣ (w1 →(w0 → w1))\n⊣ (w0 →(w1 → w0))"}},{"stmt":{"origin":"ax-1(w1, w0)","pretty":"ax-1(w1, w0)"},"body":{"origin":"|- wi(w1, wi(w0, w1))","pretty":"⊢ (w1 →(w0 → w1))"},"cumulated":{"origin":"|- wi(w0, wi(w1, wb(w0, w1)))\n-| wi(w0, wi(w1, w0))","pretty":"⊢ (w0 →(w1 →(w0 ↔ w1)))\n⊣ (w0 →(w1 → w0))"}},{"stmt":{"origin":"ax-1(w0, w1)","pretty":"ax-1(w0, w1)"},"body":{"origin":"|- wi(w0, wi(w1, w0))","pretty":"⊢ (w0 →(w1 → w0))"},"cumulated":{"origin":"|- wi(w0, wi(w1, wb(w0, w1)))","pretty":"⊢ (w0 →(w1 →(w0 ↔ w1)))"}}],"comment":"Two propositions are equivalent if they are both true. Closed form of ~ 2th . Equivalent to a ~ biimp -like version of the xor-connective. This theorem stays true, no matter how you permute its operands. This is evident from its sharper version ` ( ph <-> ( ps <-> ( ph <-> ps ) ) ) ` . (Contributed by Wolf Lammen, 12-May-2013.)","parent":["impbid21d","ax-1"],"children":["2thd","pm5.501","nanass"]}