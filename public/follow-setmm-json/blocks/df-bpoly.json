{"bIdx":16306,"bType":"axiom","type":"","name":"df-bpoly","params":"setvar s0, setvar s1, setvar s2, setvar s3, setvar s4","body":["|- wceq(cbp, cmpo(s0, s1, cn0, cc, cfv(cwrecs(clt, cn0, cmpt(s2, universe, csb(s3, cfv(chash, cdm(cv(s2))), co(co(cv(s1), cexp, cv(s3)), cmin, csu(s4, cdm(cv(s2)), co(co(cv(s3), cbc, cv(s4)), cmul, co(cfv(cv(s2), cv(s4)), cdiv, co(co(cv(s3), cmin, cv(s4)), caddc, nat1)))))))), cv(s0))))","-| diffss(s2, s4)","-| diffss(s0, s2)","-| diffss(s2, s3)","-| diffss(s1, s2)","-| diffss(s0, s4)","-| diffss(s3, s4)","-| diffss(s1, s4)","-| diffss(s0, s3)","-| diffss(s0, s1)","-| diffss(s1, s3)"],"bodyPretty":["⊢ BernPoly =(s0 ∈ ℕ0, s1 ∈ ℂ ↦(wrecs(<, ℕ0,(s2 ∈ 𝕌 ↦[(# ` dom(s2))/ s3]((s1[^]s3)[-]sum(s4 ∈ dom(s2),((s3[_C]s4)[×]((s2 ` s4)[÷]((s3[-]s4)[+]1)))))))` s0))","⊣ d(s2, s4)","⊣ d(s0, s2)","⊣ d(s2, s3)","⊣ d(s1, s2)","⊣ d(s0, s4)","⊣ d(s3, s4)","⊣ d(s1, s4)","⊣ d(s0, s3)","⊣ d(s0, s1)","⊣ d(s1, s3)"],"proof":[],"comment":"Define the Bernoulli polynomials. Here we use well-founded recursion to define the Bernoulli polynomials. This agrees with most textbook definitions, although explicit formulas do exist. (Contributed by Scott Fenton, 22-May-2014.)","parent":[],"children":["bpolylem"]}