{"bIdx":43092,"bType":"thm","type":"","name":"ifpdfnan","params":"wff w0, wff w1","body":["|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))"],"bodyPretty":["⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))"],"proof":[{"stmt":{"origin":"3bitri(wnan(w0, w1), wif(w0, wn(w1), wtru), wn(wa(w0, w1)), wn(wif(w0, w1, wfal)))","pretty":"3bitri((w0 ⊼ w1), if(w0, ¬ w1, T), ¬(w0 ∧ w1), ¬ if(w0, w1, F))"},"body":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wnan(w0, w1), wn(wa(w0, w1)))\n-| wb(wn(wa(w0, w1)), wn(wif(w0, w1, wfal)))\n-| wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wtru))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ ((w0 ⊼ w1)↔ ¬(w0 ∧ w1))\n⊣ (¬(w0 ∧ w1)↔ ¬ if(w0, w1, F))\n⊣ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, T))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wnan(w0, w1), wn(wa(w0, w1)))\n-| wb(wn(wa(w0, w1)), wn(wif(w0, w1, wfal)))\n-| wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wtru))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ ((w0 ⊼ w1)↔ ¬(w0 ∧ w1))\n⊣ (¬(w0 ∧ w1)↔ ¬ if(w0, w1, F))\n⊣ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, T))"}},{"stmt":{"origin":"df-nan(w0, w1)","pretty":"df-nan(w0, w1)"},"body":{"origin":"|- wb(wnan(w0, w1), wn(wa(w0, w1)))","pretty":"⊢ ((w0 ⊼ w1)↔ ¬(w0 ∧ w1))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wn(wa(w0, w1)), wn(wif(w0, w1, wfal)))\n-| wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wtru))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ (¬(w0 ∧ w1)↔ ¬ if(w0, w1, F))\n⊣ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, T))"}},{"stmt":{"origin":"notbii(wa(w0, w1), wif(w0, w1, wfal))","pretty":"notbii((w0 ∧ w1), if(w0, w1, F))"},"body":{"origin":"|- wb(wn(wa(w0, w1)), wn(wif(w0, w1, wfal)))\n-| wb(wa(w0, w1), wif(w0, w1, wfal))","pretty":"⊢ (¬(w0 ∧ w1)↔ ¬ if(w0, w1, F))\n⊣ ((w0 ∧ w1)↔ if(w0, w1, F))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wtru))\n-| wb(wa(w0, w1), wif(w0, w1, wfal))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, T))\n⊣ ((w0 ∧ w1)↔ if(w0, w1, F))"}},{"stmt":{"origin":"ifpdfan(w0, w1)","pretty":"ifpdfan(w0, w1)"},"body":{"origin":"|- wb(wa(w0, w1), wif(w0, w1, wfal))","pretty":"⊢ ((w0 ∧ w1)↔ if(w0, w1, F))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wtru))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, T))"}},{"stmt":{"origin":"bitri(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wtru), wif(w0, wn(w1), wn(wfal)))","pretty":"bitri(¬ if(w0, w1, F), if(w0, ¬ w1, T), if(w0, ¬ w1, ¬ F))"},"body":{"origin":"|- wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wtru))\n-| wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wn(wfal)))\n-| wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru))","pretty":"⊢ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, T))\n⊣ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, ¬ F))\n⊣ (if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wn(wfal)))\n-| wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, ¬ F))\n⊣ (if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T))"}},{"stmt":{"origin":"ifpnot23(w0, w1, wfal)","pretty":"ifpnot23(w0, w1, wfal)"},"body":{"origin":"|- wb(wn(wif(w0, w1, wfal)), wif(w0, wn(w1), wn(wfal)))","pretty":"⊢ (¬ if(w0, w1, F)↔ if(w0, ¬ w1, ¬ F))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ (if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T))"}},{"stmt":{"origin":"ax-mp(wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru)), wb(wn(wfal), wtru))","pretty":"ax-mp((if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T)), (¬ F ↔ T))"},"body":{"origin":"|- wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru))\n-| wb(wn(wfal), wtru)\n-| wi(wb(wn(wfal), wtru), wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru)))","pretty":"⊢ (if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T))\n⊣ (¬ F ↔ T)\n⊣ ((¬ F ↔ T)→(if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T)))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wb(wn(wfal), wtru)\n-| wi(wb(wn(wfal), wtru), wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru)))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ (¬ F ↔ T)\n⊣ ((¬ F ↔ T)→(if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T)))"}},{"stmt":{"origin":"notfal()","pretty":"notfal()"},"body":{"origin":"|- wb(wn(wfal), wtru)","pretty":"⊢ (¬ F ↔ T)"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))\n-| wi(wb(wn(wfal), wtru), wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru)))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))\n⊣ ((¬ F ↔ T)→(if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T)))"}},{"stmt":{"origin":"ifpbi3(wn(wfal), wtru, w0, wn(w1))","pretty":"ifpbi3(¬ F, wtru, w0, ¬ w1)"},"body":{"origin":"|- wi(wb(wn(wfal), wtru), wb(wif(w0, wn(w1), wn(wfal)), wif(w0, wn(w1), wtru)))","pretty":"⊢ ((¬ F ↔ T)→(if(w0, ¬ w1, ¬ F)↔ if(w0, ¬ w1, T)))"},"cumulated":{"origin":"|- wb(wnan(w0, w1), wif(w0, wn(w1), wtru))","pretty":"⊢ ((w0 ⊼ w1)↔ if(w0, ¬ w1, T))"}}],"comment":"Define nand as conditional logic operator. (Contributed by RP, 20-Apr-2020.)","parent":["3bitri","df-nan","notbii","ifpdfan","bitri","ifpnot23","ax-mp","notfal","ifpbi3"],"children":[]}