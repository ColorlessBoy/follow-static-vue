{"bIdx":2513,"bType":"thm","type":"","name":"sb6OLD","params":"setvar s0, setvar s1, wff w0","body":["|- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))","-| diffss(s0, s1)"],"bodyPretty":["⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 → w0)))","⊣ d(s0, s1)"],"proof":[{"stmt":{"origin":"impbii(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))","pretty":"impbii([s0 / s1]w0, ∀(s1,(s1 = s0 → w0)))"},"body":{"origin":"|- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| wi(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| wi(wal(s1, wi(wceq(cv(s1), cv(s0)), w0)), wsb(s0, s1, w0))","pretty":"⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 → w0)))\n⊣ ([s0 / s1]w0 → ∀(s1,(s1 = s0 → w0)))\n⊣ (∀(s1,(s1 = s0 → w0))→[s0 / s1]w0)"},"cumulated":{"origin":"|- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| wi(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| wi(wal(s1, wi(wceq(cv(s1), cv(s0)), w0)), wsb(s0, s1, w0))","pretty":"⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 → w0)))\n⊣ ([s0 / s1]w0 → ∀(s1,(s1 = s0 → w0)))\n⊣ (∀(s1,(s1 = s0 → w0))→[s0 / s1]w0)"}},{"stmt":{"origin":"sb4vOLD(s0, s1, w0)","pretty":"sb4vOLD(s0, s1, w0)"},"body":{"origin":"|- wi(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| diffss(s0, s1)","pretty":"⊢ ([s0 / s1]w0 → ∀(s1,(s1 = s0 → w0)))\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| wi(wal(s1, wi(wceq(cv(s1), cv(s0)), w0)), wsb(s0, s1, w0))\n-| diffss(s0, s1)","pretty":"⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 → w0)))\n⊣ (∀(s1,(s1 = s0 → w0))→[s0 / s1]w0)\n⊣ d(s0, s1)"}},{"stmt":{"origin":"sb2vOLD(s1, s0, w0)","pretty":"sb2vOLD(s1, s0, w0)"},"body":{"origin":"|- wi(wal(s1, wi(wceq(cv(s1), cv(s0)), w0)), wsb(s0, s1, w0))\n-| diffss(s1, s0)","pretty":"⊢ (∀(s1,(s1 = s0 → w0))→[s0 / s1]w0)\n⊣ d(s1, s0)"},"cumulated":{"origin":"|- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| diffss(s0, s1)\n-| diffss(s1, s0)","pretty":"⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 → w0)))\n⊣ d(s0, s1)\n⊣ d(s1, s0)"}},{"stmt":{"origin":"diffss.ex(s1, s0)","pretty":"diffss.ex(s1, s0)"},"body":{"origin":"|- diffss(s1, s0)\n-| diffss(s0, s1)","pretty":"⊢ d(s1, s0)\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wb(wsb(s0, s1, w0), wal(s1, wi(wceq(cv(s1), cv(s0)), w0)))\n-| diffss(s0, s1)","pretty":"⊢ ([s0 / s1]w0 ↔ ∀(s1,(s1 = s0 → w0)))\n⊣ d(s0, s1)"}}],"comment":"Obsolete version of ~ sb6 as of 7-Jul-2023. Equivalence for substitution. Compare Theorem 6.2 of [Quine] p. 40. Also proved as Lemmas 16 and 17 of [Tarski] p. 70. The implication \"to the left\", ~ sb2vOLD , also holds without a disjoint variable condition ( ~ sb2 ). Theorem ~ sb6f replaces the disjoint variable condition with a non-freeness hypothesis. Theorem ~ sb4b replaces it with a distinctor antecedent. (Contributed by NM, 18-Aug-1993.) (Proof shortened by Wolf Lammen, 21-Sep-2018.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["impbii","sb4vOLD","sb2vOLD","diffss.ex"],"children":[]}