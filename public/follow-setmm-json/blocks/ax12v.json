{"bIdx":2425,"bType":"thm","type":"","name":"ax12v","params":"setvar s0, setvar s1, wff w0","body":["|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))","-| diffss(s0, s1)","-| diffsw(s1, w0)"],"bodyPretty":["⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))","⊣ d(s0, s1)","⊣ d(s1, w0)"],"proof":[{"stmt":{"origin":"a1ii(wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))), diffss(s0, s1))","pretty":"a1ii((s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0)))), d(s0, s1))"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)","pretty":"⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)","pretty":"⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"syl5(wceq(cv(s0), cv(s1)), w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wal(s1, w0))","pretty":"syl5(s0 = s1, w0, ∀(s0,(s0 = s1 → w0)), ∀(s1, w0))"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| wi(w0, wal(s1, w0))\n-| wi(wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))","pretty":"⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ (w0 → ∀(s1, w0))\n⊣ (s0 = s1 →(∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))"},"cumulated":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)\n-| wi(w0, wal(s1, w0))\n-| wi(wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))","pretty":"⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)\n⊣ (w0 → ∀(s1, w0))\n⊣ (s0 = s1 →(∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))"}},{"stmt":{"origin":"ax-5(s1, w0)","pretty":"ax-5(s1, w0)"},"body":{"origin":"|- wi(w0, wal(s1, w0))\n-| diffsw(s1, w0)","pretty":"⊢ (w0 → ∀(s1, w0))\n⊣ d(s1, w0)"},"cumulated":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)\n-| wi(wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffsw(s1, w0)","pretty":"⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)\n⊣ (s0 = s1 →(∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))\n⊣ d(s1, w0)"}},{"stmt":{"origin":"ax-12(s0, s1, w0)","pretty":"ax-12(s0, s1, w0)"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(wal(s1, w0), wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))","pretty":"⊢ (s0 = s1 →(∀(s1, w0)→ ∀(s0,(s0 = s1 → w0))))"},"cumulated":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0))))\n-| diffss(s0, s1)\n-| diffsw(s1, w0)","pretty":"⊢ (s0 = s1 →(w0 → ∀(s0,(s0 = s1 → w0))))\n⊣ d(s0, s1)\n⊣ d(s1, w0)"}}],"comment":"This is essentially axiom ~ ax-12 weakened by additional restrictions on variables. Besides ~ axc11r , this theorem should be the only one referencing ~ ax-12 directly. Both restrictions on variables have their own value. If for a moment we assume ` x ` could be set to ` y ` , then, after elimination of the tautology ` y = y ` , immediately we have ` ph -> A. y ph ` for all ` ph ` and ` y ` , that is ~ ax-5 , a degenerate result. The second restriction is not necessary, but a simplification that makes the following interpretation easier to see. Since ` ph ` textually at most depends on ` x ` , we can look at it at some given 'fixed' ` y ` . This theorem now states that the truth value of ` ph ` will stay constant, as long as we 'vary ` x ` around ` y ` ' only such that ` x = y ` still holds. Or in other words, equality is the finest grained logical expression. If you cannot differ two sets by ` = ` , you won't find a whatever sophisticated expression that does. One might wonder how the described variation of ` x ` is possible at all. Note that Metamath is a text processor that easily sees a difference between text chunks ` { x | -. x = x } ` and ` { y | -. y = y } ` . Our usual interpretation is to abstract from textual variations of the same set, but we are free to interpret Metamath's formalism differently, and in fact let ` x ` run through all textual representations of sets. Had we allowed ` ph ` to depend also on ` y ` , this idea is both harder to see, and it is less clear that this extra freedom introduces effects not covered by other axioms. (Contributed by Wolf Lammen, 8-Aug-2020.)","parent":["a1ii","syl5","ax-5","ax-12"],"children":["ax12v2","19.8a","sbequ1","axc16g","exsb","axc15","axc15OLD","exsbOLD","dfmo","2eu6","bj-ax12v","bj-ssbid1ALT","bj-sb","rexsb"]}