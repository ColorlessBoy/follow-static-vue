{"bIdx":14827,"bType":"thm","type":"","name":"disjwrdpfx","params":"setvar s0, setvar s1, class c0, class c1, class c2","body":["|- wdisj(s0, c0, crab(s1, cword(c1), wceq(co(cv(s1), cpfx, c2), cv(s0))))","-| diffss(s0, s1)","-| diffsc(s0, c2)","-| diffsc(s1, c1)"],"bodyPretty":["⊢ ⊔(s0 ∈ c0, { s1 ∈ Word(c1)|(s1[prefix]c2)= s0 })","⊣ d(s0, s1)","⊣ d(s0, c2)","⊣ d(s1, c1)"],"proof":[{"stmt":{"origin":"invdisjrab(s0, s1, c0, cword(c1), co(cv(s1), cpfx, c2))","pretty":"invdisjrab(s0, s1, c0, Word(c1), (s1[prefix]c2))"},"body":{"origin":"|- wdisj(s0, c0, crab(s1, cword(c1), wceq(co(cv(s1), cpfx, c2), cv(s0))))\n-| diffss(s0, s1)\n-| diffsc(s0, co(cv(s1), cpfx, c2))\n-| diffsc(s1, cword(c1))","pretty":"⊢ ⊔(s0 ∈ c0, { s1 ∈ Word(c1)|(s1[prefix]c2)= s0 })\n⊣ d(s0, s1)\n⊣ d(s0,(s1[prefix]c2))\n⊣ d(s1, Word(c1))"},"cumulated":{"origin":"|- wdisj(s0, c0, crab(s1, cword(c1), wceq(co(cv(s1), cpfx, c2), cv(s0))))\n-| diffss(s0, s1)\n-| diffsc(s0, co(cv(s1), cpfx, c2))\n-| diffsc(s1, cword(c1))","pretty":"⊢ ⊔(s0 ∈ c0, { s1 ∈ Word(c1)|(s1[prefix]c2)= s0 })\n⊣ d(s0, s1)\n⊣ d(s0,(s1[prefix]c2))\n⊣ d(s1, Word(c1))"}},{"stmt":{"origin":"diff.co.s(s0, cv(s1), cpfx, c2)","pretty":"diff.co.s(s0, s1, cpfx, c2)"},"body":{"origin":"|- diffsc(s0, co(cv(s1), cpfx, c2))\n-| diffsc(s0, cv(s1))\n-| diffsc(s0, cpfx)\n-| diffsc(s0, c2)","pretty":"⊢ d(s0,(s1[prefix]c2))\n⊣ d(s0, s1)\n⊣ d(s0, prefix)\n⊣ d(s0, c2)"},"cumulated":{"origin":"|- wdisj(s0, c0, crab(s1, cword(c1), wceq(co(cv(s1), cpfx, c2), cv(s0))))\n-| diffss(s0, s1)\n-| diffsc(s1, cword(c1))\n-| diffsc(s0, cv(s1))\n-| diffsc(s0, cpfx)\n-| diffsc(s0, c2)","pretty":"⊢ ⊔(s0 ∈ c0, { s1 ∈ Word(c1)|(s1[prefix]c2)= s0 })\n⊣ d(s0, s1)\n⊣ d(s1, Word(c1))\n⊣ d(s0, s1)\n⊣ d(s0, prefix)\n⊣ d(s0, c2)"}},{"stmt":{"origin":"diff.cv.s(s0, s1)","pretty":"diff.cv.s(s0, s1)"},"body":{"origin":"|- diffsc(s0, cv(s1))\n-| diffss(s0, s1)","pretty":"⊢ d(s0, s1)\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wdisj(s0, c0, crab(s1, cword(c1), wceq(co(cv(s1), cpfx, c2), cv(s0))))\n-| diffss(s0, s1)\n-| diffsc(s1, cword(c1))\n-| diffsc(s0, cpfx)\n-| diffsc(s0, c2)","pretty":"⊢ ⊔(s0 ∈ c0, { s1 ∈ Word(c1)|(s1[prefix]c2)= s0 })\n⊣ d(s0, s1)\n⊣ d(s1, Word(c1))\n⊣ d(s0, prefix)\n⊣ d(s0, c2)"}},{"stmt":{"origin":"diff.cpfx.s(s0)","pretty":"diff.cpfx.s(s0)"},"body":{"origin":"|- diffsc(s0, cpfx)","pretty":"⊢ d(s0, prefix)"},"cumulated":{"origin":"|- wdisj(s0, c0, crab(s1, cword(c1), wceq(co(cv(s1), cpfx, c2), cv(s0))))\n-| diffss(s0, s1)\n-| diffsc(s1, cword(c1))\n-| diffsc(s0, c2)","pretty":"⊢ ⊔(s0 ∈ c0, { s1 ∈ Word(c1)|(s1[prefix]c2)= s0 })\n⊣ d(s0, s1)\n⊣ d(s1, Word(c1))\n⊣ d(s0, c2)"}},{"stmt":{"origin":"diff.cword.s(s1, c1)","pretty":"diff.cword.s(s1, c1)"},"body":{"origin":"|- diffsc(s1, cword(c1))\n-| diffsc(s1, c1)","pretty":"⊢ d(s1, Word(c1))\n⊣ d(s1, c1)"},"cumulated":{"origin":"|- wdisj(s0, c0, crab(s1, cword(c1), wceq(co(cv(s1), cpfx, c2), cv(s0))))\n-| diffss(s0, s1)\n-| diffsc(s0, c2)\n-| diffsc(s1, c1)","pretty":"⊢ ⊔(s0 ∈ c0, { s1 ∈ Word(c1)|(s1[prefix]c2)= s0 })\n⊣ d(s0, s1)\n⊣ d(s0, c2)\n⊣ d(s1, c1)"}}],"comment":"Sets of words are disjoint if each set contains exactly the extensions of distinct words of a fixed length. Remark: A word ` W ` is called an \"extension\" of a word ` P ` if ` P ` is a prefix of ` W ` . (Contributed by AV, 29-Jul-2018.) (Revised by AV, 6-May-2020.)","parent":["invdisjrab","diff.co.s","diff.cv.s","diff.cpfx.s","diff.cword.s"],"children":["disjxwwlksn","disjxwwlkn"]}