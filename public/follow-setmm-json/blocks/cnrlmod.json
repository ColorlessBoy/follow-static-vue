{"bIdx":25545,"bType":"thm","type":"","name":"cnrlmod","params":"class c0","body":["|- wcel(c0, clmod)","-| wceq(c0, cfv(crglmod, ccnfld))"],"bodyPretty":["⊢ c0 ∈ LMod","⊣ c0 =(ringLMod ` CCfld)"],"proof":[{"stmt":{"origin":"eqeltri(c0, clmod, cfv(crglmod, ccnfld))","pretty":"eqeltri(c0, clmod, (ringLMod ` CCfld))"},"body":{"origin":"|- wcel(c0, clmod)\n-| wceq(c0, cfv(crglmod, ccnfld))\n-| wcel(cfv(crglmod, ccnfld), clmod)","pretty":"⊢ c0 ∈ LMod\n⊣ c0 =(ringLMod ` CCfld)\n⊣ (ringLMod ` CCfld)∈ LMod"},"cumulated":{"origin":"|- wcel(c0, clmod)\n-| wceq(c0, cfv(crglmod, ccnfld))\n-| wcel(cfv(crglmod, ccnfld), clmod)","pretty":"⊢ c0 ∈ LMod\n⊣ c0 =(ringLMod ` CCfld)\n⊣ (ringLMod ` CCfld)∈ LMod"}},{"stmt":{"origin":"ax-mp(wcel(cfv(crglmod, ccnfld), clmod), wcel(ccnfld, crg))","pretty":"ax-mp((ringLMod ` CCfld)∈ LMod, CCfld ∈ Ring)"},"body":{"origin":"|- wcel(cfv(crglmod, ccnfld), clmod)\n-| wcel(ccnfld, crg)\n-| wi(wcel(ccnfld, crg), wcel(cfv(crglmod, ccnfld), clmod))","pretty":"⊢ (ringLMod ` CCfld)∈ LMod\n⊣ CCfld ∈ Ring\n⊣ (CCfld ∈ Ring →(ringLMod ` CCfld)∈ LMod)"},"cumulated":{"origin":"|- wcel(c0, clmod)\n-| wceq(c0, cfv(crglmod, ccnfld))\n-| wcel(ccnfld, crg)\n-| wi(wcel(ccnfld, crg), wcel(cfv(crglmod, ccnfld), clmod))","pretty":"⊢ c0 ∈ LMod\n⊣ c0 =(ringLMod ` CCfld)\n⊣ CCfld ∈ Ring\n⊣ (CCfld ∈ Ring →(ringLMod ` CCfld)∈ LMod)"}},{"stmt":{"origin":"cnring()","pretty":"cnring()"},"body":{"origin":"|- wcel(ccnfld, crg)","pretty":"⊢ CCfld ∈ Ring"},"cumulated":{"origin":"|- wcel(c0, clmod)\n-| wceq(c0, cfv(crglmod, ccnfld))\n-| wi(wcel(ccnfld, crg), wcel(cfv(crglmod, ccnfld), clmod))","pretty":"⊢ c0 ∈ LMod\n⊣ c0 =(ringLMod ` CCfld)\n⊣ (CCfld ∈ Ring →(ringLMod ` CCfld)∈ LMod)"}},{"stmt":{"origin":"rlmlmod(ccnfld)","pretty":"rlmlmod(ccnfld)"},"body":{"origin":"|- wi(wcel(ccnfld, crg), wcel(cfv(crglmod, ccnfld), clmod))","pretty":"⊢ (CCfld ∈ Ring →(ringLMod ` CCfld)∈ LMod)"},"cumulated":{"origin":"|- wcel(c0, clmod)\n-| wceq(c0, cfv(crglmod, ccnfld))","pretty":"⊢ c0 ∈ LMod\n⊣ c0 =(ringLMod ` CCfld)"}}],"comment":"The complex left module of complex numbers is a left module. The vector operation is ` + ` , and the scalar product is ` x. ` . (Contributed by AV, 21-Sep-2021.)","parent":["eqeltri","ax-mp","cnring","rlmlmod"],"children":["cncvs"]}