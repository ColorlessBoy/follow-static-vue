{"bIdx":4943,"bType":"thm","type":"","name":"tpidm12","params":"class c0, class c1","body":["|- wceq(ctp(c0, c0, c1), cpr(c0, c1))"],"bodyPretty":["⊢ { c0, c0, c1 } = { c0, c1 }"],"proof":[{"stmt":{"origin":"3eqtr4ri(ctp(c0, c0, c1), cpr(c0, c1), cun(csn(c0), csn(c1)), cun(cpr(c0, c0), csn(c1)))","pretty":"3eqtr4ri({ c0, c0, c1 }, { c0, c1 }, ({ c0 } ⋃ { c1 }), ({ c0, c0 } ⋃ { c1 }))"},"body":{"origin":"|- wceq(ctp(c0, c0, c1), cpr(c0, c1))\n-| wceq(cun(csn(c0), csn(c1)), cun(cpr(c0, c0), csn(c1)))\n-| wceq(cpr(c0, c1), cun(csn(c0), csn(c1)))\n-| wceq(ctp(c0, c0, c1), cun(cpr(c0, c0), csn(c1)))","pretty":"⊢ { c0, c0, c1 } = { c0, c1 }\n⊣ ({ c0 } ⋃ { c1 })=({ c0, c0 } ⋃ { c1 })\n⊣ { c0, c1 } =({ c0 } ⋃ { c1 })\n⊣ { c0, c0, c1 } =({ c0, c0 } ⋃ { c1 })"},"cumulated":{"origin":"|- wceq(ctp(c0, c0, c1), cpr(c0, c1))\n-| wceq(cun(csn(c0), csn(c1)), cun(cpr(c0, c0), csn(c1)))\n-| wceq(cpr(c0, c1), cun(csn(c0), csn(c1)))\n-| wceq(ctp(c0, c0, c1), cun(cpr(c0, c0), csn(c1)))","pretty":"⊢ { c0, c0, c1 } = { c0, c1 }\n⊣ ({ c0 } ⋃ { c1 })=({ c0, c0 } ⋃ { c1 })\n⊣ { c0, c1 } =({ c0 } ⋃ { c1 })\n⊣ { c0, c0, c1 } =({ c0, c0 } ⋃ { c1 })"}},{"stmt":{"origin":"uneq1i(csn(c0), csn(c1), cpr(c0, c0))","pretty":"uneq1i({ c0 }, { c1 }, { c0, c0 })"},"body":{"origin":"|- wceq(cun(csn(c0), csn(c1)), cun(cpr(c0, c0), csn(c1)))\n-| wceq(csn(c0), cpr(c0, c0))","pretty":"⊢ ({ c0 } ⋃ { c1 })=({ c0, c0 } ⋃ { c1 })\n⊣ { c0 } = { c0, c0 }"},"cumulated":{"origin":"|- wceq(ctp(c0, c0, c1), cpr(c0, c1))\n-| wceq(cpr(c0, c1), cun(csn(c0), csn(c1)))\n-| wceq(ctp(c0, c0, c1), cun(cpr(c0, c0), csn(c1)))\n-| wceq(csn(c0), cpr(c0, c0))","pretty":"⊢ { c0, c0, c1 } = { c0, c1 }\n⊣ { c0, c1 } =({ c0 } ⋃ { c1 })\n⊣ { c0, c0, c1 } =({ c0, c0 } ⋃ { c1 })\n⊣ { c0 } = { c0, c0 }"}},{"stmt":{"origin":"dfsn2(c0)","pretty":"dfsn2(c0)"},"body":{"origin":"|- wceq(csn(c0), cpr(c0, c0))","pretty":"⊢ { c0 } = { c0, c0 }"},"cumulated":{"origin":"|- wceq(ctp(c0, c0, c1), cpr(c0, c1))\n-| wceq(cpr(c0, c1), cun(csn(c0), csn(c1)))\n-| wceq(ctp(c0, c0, c1), cun(cpr(c0, c0), csn(c1)))","pretty":"⊢ { c0, c0, c1 } = { c0, c1 }\n⊣ { c0, c1 } =({ c0 } ⋃ { c1 })\n⊣ { c0, c0, c1 } =({ c0, c0 } ⋃ { c1 })"}},{"stmt":{"origin":"df-pr(c0, c1)","pretty":"df-pr(c0, c1)"},"body":{"origin":"|- wceq(cpr(c0, c1), cun(csn(c0), csn(c1)))","pretty":"⊢ { c0, c1 } =({ c0 } ⋃ { c1 })"},"cumulated":{"origin":"|- wceq(ctp(c0, c0, c1), cpr(c0, c1))\n-| wceq(ctp(c0, c0, c1), cun(cpr(c0, c0), csn(c1)))","pretty":"⊢ { c0, c0, c1 } = { c0, c1 }\n⊣ { c0, c0, c1 } =({ c0, c0 } ⋃ { c1 })"}},{"stmt":{"origin":"df-tp(c0, c0, c1)","pretty":"df-tp(c0, c0, c1)"},"body":{"origin":"|- wceq(ctp(c0, c0, c1), cun(cpr(c0, c0), csn(c1)))","pretty":"⊢ { c0, c0, c1 } =({ c0, c0 } ⋃ { c1 })"},"cumulated":{"origin":"|- wceq(ctp(c0, c0, c1), cpr(c0, c1))","pretty":"⊢ { c0, c0, c1 } = { c0, c1 }"}}],"comment":"Unordered triple ` { A , A , B } ` is just an overlong way to write ` { A , B } ` . (Contributed by David A. Wheeler, 10-May-2015.)","parent":["3eqtr4ri","uneq1i","dfsn2","df-pr","df-tp"],"children":["tpidm13","tpidm23","tpidm","fntpb","hashtpg"]}