{"bIdx":30447,"bType":"thm","type":"","name":"ex-natded5.8","params":"wff w0, wff w1, wff w2, wff w3, wff w4","body":["|- wi(w0, wn(w1))","-| wi(w0, wi(wa(w1, w2), wn(w3)))","-| wi(w0, wi(w4, w3))","-| wi(w0, w2)","-| wi(w0, w4)"],"bodyPretty":["⊢ (w0 → ¬ w1)","⊣ (w0 →((w1 ∧ w2)→ ¬ w3))","⊣ (w0 →(w4 → w3))","⊣ (w0 → w2)","⊣ (w0 → w4)"],"proof":[{"stmt":{"origin":"pm2.65da(w0, w1, w3)","pretty":"pm2.65da(w0, w1, w3)"},"body":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), w3)\n-| wi(wa(w0, w1), wn(w3))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ w3)\n⊣ ((w0 ∧ w1)→ ¬ w3)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), w3)\n-| wi(wa(w0, w1), wn(w3))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ w3)\n⊣ ((w0 ∧ w1)→ ¬ w3)"}},{"stmt":{"origin":"mpd(wa(w0, w1), w3, w4)","pretty":"mpd((w0 ∧ w1), w3, w4)"},"body":{"origin":"|- wi(wa(w0, w1), w3)\n-| wi(wa(w0, w1), w4)\n-| wi(wa(w0, w1), wi(w4, w3))","pretty":"⊢ ((w0 ∧ w1)→ w3)\n⊣ ((w0 ∧ w1)→ w4)\n⊣ ((w0 ∧ w1)→(w4 → w3))"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), wn(w3))\n-| wi(wa(w0, w1), w4)\n-| wi(wa(w0, w1), wi(w4, w3))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ ¬ w3)\n⊣ ((w0 ∧ w1)→ w4)\n⊣ ((w0 ∧ w1)→(w4 → w3))"}},{"stmt":{"origin":"adantr(w0, w1, w4)","pretty":"adantr(w0, w1, w4)"},"body":{"origin":"|- wi(wa(w0, w1), w4)\n-| wi(w0, w4)","pretty":"⊢ ((w0 ∧ w1)→ w4)\n⊣ (w0 → w4)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), wn(w3))\n-| wi(wa(w0, w1), wi(w4, w3))\n-| wi(w0, w4)","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ ¬ w3)\n⊣ ((w0 ∧ w1)→(w4 → w3))\n⊣ (w0 → w4)"}},{"stmt":{"origin":"adantr(w0, w1, wi(w4, w3))","pretty":"adantr(w0, w1, (w4 → w3))"},"body":{"origin":"|- wi(wa(w0, w1), wi(w4, w3))\n-| wi(w0, wi(w4, w3))","pretty":"⊢ ((w0 ∧ w1)→(w4 → w3))\n⊣ (w0 →(w4 → w3))"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(wa(w0, w1), wn(w3))\n-| wi(w0, w4)\n-| wi(w0, wi(w4, w3))","pretty":"⊢ (w0 → ¬ w1)\n⊣ ((w0 ∧ w1)→ ¬ w3)\n⊣ (w0 → w4)\n⊣ (w0 →(w4 → w3))"}},{"stmt":{"origin":"mpd(wa(w0, w1), wn(w3), wa(w1, w2))","pretty":"mpd((w0 ∧ w1), ¬ w3, (w1 ∧ w2))"},"body":{"origin":"|- wi(wa(w0, w1), wn(w3))\n-| wi(wa(w0, w1), wa(w1, w2))\n-| wi(wa(w0, w1), wi(wa(w1, w2), wn(w3)))","pretty":"⊢ ((w0 ∧ w1)→ ¬ w3)\n⊣ ((w0 ∧ w1)→(w1 ∧ w2))\n⊣ ((w0 ∧ w1)→((w1 ∧ w2)→ ¬ w3))"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(w0, w4)\n-| wi(w0, wi(w4, w3))\n-| wi(wa(w0, w1), wa(w1, w2))\n-| wi(wa(w0, w1), wi(wa(w1, w2), wn(w3)))","pretty":"⊢ (w0 → ¬ w1)\n⊣ (w0 → w4)\n⊣ (w0 →(w4 → w3))\n⊣ ((w0 ∧ w1)→(w1 ∧ w2))\n⊣ ((w0 ∧ w1)→((w1 ∧ w2)→ ¬ w3))"}},{"stmt":{"origin":"jca(wa(w0, w1), w1, w2)","pretty":"jca((w0 ∧ w1), w1, w2)"},"body":{"origin":"|- wi(wa(w0, w1), wa(w1, w2))\n-| wi(wa(w0, w1), w1)\n-| wi(wa(w0, w1), w2)","pretty":"⊢ ((w0 ∧ w1)→(w1 ∧ w2))\n⊣ ((w0 ∧ w1)→ w1)\n⊣ ((w0 ∧ w1)→ w2)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(w0, w4)\n-| wi(w0, wi(w4, w3))\n-| wi(wa(w0, w1), wi(wa(w1, w2), wn(w3)))\n-| wi(wa(w0, w1), w1)\n-| wi(wa(w0, w1), w2)","pretty":"⊢ (w0 → ¬ w1)\n⊣ (w0 → w4)\n⊣ (w0 →(w4 → w3))\n⊣ ((w0 ∧ w1)→((w1 ∧ w2)→ ¬ w3))\n⊣ ((w0 ∧ w1)→ w1)\n⊣ ((w0 ∧ w1)→ w2)"}},{"stmt":{"origin":"simpr(w0, w1)","pretty":"simpr(w0, w1)"},"body":{"origin":"|- wi(wa(w0, w1), w1)","pretty":"⊢ ((w0 ∧ w1)→ w1)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(w0, w4)\n-| wi(w0, wi(w4, w3))\n-| wi(wa(w0, w1), wi(wa(w1, w2), wn(w3)))\n-| wi(wa(w0, w1), w2)","pretty":"⊢ (w0 → ¬ w1)\n⊣ (w0 → w4)\n⊣ (w0 →(w4 → w3))\n⊣ ((w0 ∧ w1)→((w1 ∧ w2)→ ¬ w3))\n⊣ ((w0 ∧ w1)→ w2)"}},{"stmt":{"origin":"adantr(w0, w1, w2)","pretty":"adantr(w0, w1, w2)"},"body":{"origin":"|- wi(wa(w0, w1), w2)\n-| wi(w0, w2)","pretty":"⊢ ((w0 ∧ w1)→ w2)\n⊣ (w0 → w2)"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(w0, w4)\n-| wi(w0, wi(w4, w3))\n-| wi(wa(w0, w1), wi(wa(w1, w2), wn(w3)))\n-| wi(w0, w2)","pretty":"⊢ (w0 → ¬ w1)\n⊣ (w0 → w4)\n⊣ (w0 →(w4 → w3))\n⊣ ((w0 ∧ w1)→((w1 ∧ w2)→ ¬ w3))\n⊣ (w0 → w2)"}},{"stmt":{"origin":"adantr(w0, w1, wi(wa(w1, w2), wn(w3)))","pretty":"adantr(w0, w1, ((w1 ∧ w2)→ ¬ w3))"},"body":{"origin":"|- wi(wa(w0, w1), wi(wa(w1, w2), wn(w3)))\n-| wi(w0, wi(wa(w1, w2), wn(w3)))","pretty":"⊢ ((w0 ∧ w1)→((w1 ∧ w2)→ ¬ w3))\n⊣ (w0 →((w1 ∧ w2)→ ¬ w3))"},"cumulated":{"origin":"|- wi(w0, wn(w1))\n-| wi(w0, w4)\n-| wi(w0, wi(w4, w3))\n-| wi(w0, w2)\n-| wi(w0, wi(wa(w1, w2), wn(w3)))","pretty":"⊢ (w0 → ¬ w1)\n⊣ (w0 → w4)\n⊣ (w0 →(w4 → w3))\n⊣ (w0 → w2)\n⊣ (w0 →((w1 ∧ w2)→ ¬ w3))"}}],"comment":"Theorem 5.8 of [Clemente] p. 20, translated line by line using the usual translation of natural deduction (ND) in the Metamath Proof Explorer (MPE) notation. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>10;11</TD> <TD NOWRAP> ` ( ( ps /\\ ch ) -> -. th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ( ps /\\ ch ) -> -. th ) ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>2</TD><TD>3;4</TD><TD NOWRAP> ` ( ta -> th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ta -> th ) ) ` </TD><TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>3</TD><TD>7;8</TD> <TD> ` ch ` </TD><TD> ` ( ph -> ch ) ` </TD> <TD>Given</TD> <TD>$e; ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>4</TD><TD>1;2</TD><TD> ` ta ` </TD><TD> ` ( ph -> ta ) ` </TD> <TD>Given</TD> <TD>$e. ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>5</TD><TD>6</TD><TD> ...| ` ps ` </TD> <TD> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND Hypothesis/Assumption</TD> <TD> ~ simpr . New ND hypothesis scope, each reference outside the scope must change antecedent ` ph ` to ` ( ph /\\ ps ) `.</TD></TR> <TR><TD>6</TD><TD>9</TD><TD> ... ` ( ps /\\ ch ) ` </TD> <TD> ` ( ( ph /\\ ps ) -> ( ps /\\ ch ) ) ` </TD> <TD> ` /\\ `I 5,3</TD> <TD> ~ jca ( ` /\\ `I), 6,8 ( ~ adantr to bring in scope)</TD></TR> <TR><TD>7</TD><TD>5</TD><TD> ... ` -. th ` </TD> <TD> ` ( ( ph /\\ ps ) -> -. th ) ` </TD> <TD> ` -> `E 1,6</TD> <TD> ~ mpd ( ` -> `E), 2,4</TD></TR> <TR><TD>8</TD><TD>12</TD><TD> ... ` th ` </TD> <TD> ` ( ( ph /\\ ps ) -> th ) ` </TD> <TD> ` -> `E 2,4</TD> <TD> ~ mpd ( ` -> `E), 9,11; note the contradiction with ND line 7 (MPE line 5)</TD></TR> <TR><TD>9</TD><TD>13</TD><TD> ` -. ps ` </TD> <TD> ` ( ph -> -. ps ) ` </TD> <TD> ` -. `I 5,7,8</TD> <TD> ~ pm2.65da ( ` -. `I), 5,12; proof by contradiction. MPE step 6 (ND#5) does not need a reference here, because the assumption is embedded in the antecedents</TD></TR> </TABLE> </HTML> The original used Latin letters; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. To add an assumption, the antecedent is modified to include it (typically by using ~ adantr ; ~ simpr is useful when you want to depend directly on the new assumption). Below is the final Metamath proof (which reorders some steps). A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.8-2 . (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["pm2.65da","mpd","adantr","jca","simpr"],"children":[]}