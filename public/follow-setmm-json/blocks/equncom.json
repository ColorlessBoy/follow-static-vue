{"bIdx":4370,"bType":"thm","type":"","name":"equncom","params":"class c0, class c1, class c2","body":["|- wb(wceq(c0, cun(c1, c2)), wceq(c0, cun(c2, c1)))"],"bodyPretty":["⊢ (c0 =(c1 ⋃ c2)↔ c0 =(c2 ⋃ c1))"],"proof":[{"stmt":{"origin":"eqeq2i(c0, cun(c1, c2), cun(c2, c1))","pretty":"eqeq2i(c0, (c1 ⋃ c2), (c2 ⋃ c1))"},"body":{"origin":"|- wb(wceq(c0, cun(c1, c2)), wceq(c0, cun(c2, c1)))\n-| wceq(cun(c1, c2), cun(c2, c1))","pretty":"⊢ (c0 =(c1 ⋃ c2)↔ c0 =(c2 ⋃ c1))\n⊣ (c1 ⋃ c2)=(c2 ⋃ c1)"},"cumulated":{"origin":"|- wb(wceq(c0, cun(c1, c2)), wceq(c0, cun(c2, c1)))\n-| wceq(cun(c1, c2), cun(c2, c1))","pretty":"⊢ (c0 =(c1 ⋃ c2)↔ c0 =(c2 ⋃ c1))\n⊣ (c1 ⋃ c2)=(c2 ⋃ c1)"}},{"stmt":{"origin":"uncom(c1, c2)","pretty":"uncom(c1, c2)"},"body":{"origin":"|- wceq(cun(c1, c2), cun(c2, c1))","pretty":"⊢ (c1 ⋃ c2)=(c2 ⋃ c1)"},"cumulated":{"origin":"|- wb(wceq(c0, cun(c1, c2)), wceq(c0, cun(c2, c1)))","pretty":"⊢ (c0 =(c1 ⋃ c2)↔ c0 =(c2 ⋃ c1))"}}],"comment":"If a class equals the union of two other classes, then it equals the union of those two classes commuted. ~ equncom was automatically derived from ~ equncomVD using the tools program translate_without_overwriting.cmd and minimizing. (Contributed by Alan Sare, 18-Feb-2012.)","parent":["eqeq2i","uncom"],"children":["equncomi","equncomiVD"]}