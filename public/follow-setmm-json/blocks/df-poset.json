{"bIdx":18805,"bType":"axiom","type":"","name":"df-poset","params":"setvar s0, setvar s1, setvar s2, setvar s3, setvar s4, setvar s5","body":["|- wceq(cpo, cab(s0, wex(s1, wex(s2, w3a(wceq(cv(s1), cfv(cbs, cv(s0))), wceq(cv(s2), cfv(cple, cv(s0))), wral(s3, cv(s1), wral(s4, cv(s1), wral(s5, cv(s1), w3a(wbr(cv(s3), cv(s2), cv(s3)), wi(wa(wbr(cv(s3), cv(s2), cv(s4)), wbr(cv(s4), cv(s2), cv(s3))), wceq(cv(s3), cv(s4))), wi(wa(wbr(cv(s3), cv(s2), cv(s4)), wbr(cv(s4), cv(s2), cv(s5))), wbr(cv(s3), cv(s2), cv(s5))))))))))))","-| diffss(s0, s1)","-| diffss(s1, s2)","-| diffss(s1, s3)","-| diffss(s1, s4)","-| diffss(s1, s5)","-| diffss(s0, s2)","-| diffss(s0, s3)","-| diffss(s0, s4)","-| diffss(s0, s5)","-| diffss(s2, s3)","-| diffss(s2, s4)","-| diffss(s2, s5)","-| diffss(s3, s4)","-| diffss(s3, s5)","-| diffss(s4, s5)"],"bodyPretty":["⊢ Poset = { s0 | ∃(s1, ∃(s2,(s1 =(Base ` s0)∧ s2 =(le ` s0)∧ ∀(s3 ∈ s1, ∀(s4 ∈ s1, ∀(s5 ∈ s1,(s3[s2]s3 ∧((s3[s2]s4 ∧ s4[s2]s3)→ s3 = s4)∧((s3[s2]s4 ∧ s4[s2]s5)→ s3[s2]s5))))))))}","⊣ d(s0, s1)","⊣ d(s1, s2)","⊣ d(s1, s3)","⊣ d(s1, s4)","⊣ d(s1, s5)","⊣ d(s0, s2)","⊣ d(s0, s3)","⊣ d(s0, s4)","⊣ d(s0, s5)","⊣ d(s2, s3)","⊣ d(s2, s4)","⊣ d(s2, s5)","⊣ d(s3, s4)","⊣ d(s3, s5)","⊣ d(s4, s5)"],"proof":[],"comment":"Define the class of partially ordered sets (posets). A poset is a set equipped with a partial order, that is, a binary relation which is reflexive, antisymmetric, and transitive. Unlike a total order, in a partial order there may be pairs of elements where neither precedes the other. Definition of poset in [Crawley] p. 1. Note that Crawley-Dilworth require that a poset base set be nonempty, but we follow the convention of most authors who don't make this a requirement. In our formalism of extensible structures, the base set of a poset ` f ` is denoted by ` ( Base `` f ) ` and its partial order by ` ( le `` f ) ` (for \"less than or equal to\"). The quantifiers ` E. b E. r ` provide a notational shorthand to allow us to refer to the base and ordering relation as ` b ` and ` r ` in the definition rather than having to repeat ` ( Base `` f ) ` and ` ( le `` f ) ` throughout. These quantifiers can be eliminated with ~ ceqsex2v and related theorems. (Contributed by NM, 18-Oct-2012.)","parent":[],"children":["ispos"]}