{"bIdx":8266,"bType":"axiom","type":"","name":"df-unc","params":"setvar s0, setvar s1, setvar s2, class c0","body":["|- wceq(cunc(c0), coprab(s0, s1, s2, wbr(cv(s1), cfv(c0, cv(s0)), cv(s2))))","-| diffss(s0, s1)","-| diffss(s0, s2)","-| diffss(s1, s2)","-| diffsc(s0, c0)","-| diffsc(s1, c0)","-| diffsc(s2, c0)"],"bodyPretty":["⊢ uncurry(c0)= { < < s0, s1 >, s2 > | s1[(c0 ` s0)]s2 }","⊣ d(s0, s1)","⊣ d(s0, s2)","⊣ d(s1, s2)","⊣ d(s0, c0)","⊣ d(s1, c0)","⊣ d(s2, c0)"],"proof":[],"comment":"Define the uncurrying of ` F ` , which takes a function producing functions, and transforms it into a two-argument function. (Contributed by Mario Carneiro, 7-Jan-2017.)","parent":[],"children":["unceq","uncf","uncov","unccur"]}