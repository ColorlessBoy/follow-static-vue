{"bIdx":42497,"bType":"thm","type":"","name":"mzpconstmpt","params":"setvar s0, class c0, class c1","body":["|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))","-| diffsc(s0, c0)","-| diffsc(s0, c1)"],"bodyPretty":["‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))","‚ä£ d(s0, c0)","‚ä£ d(s0, c1)"],"proof":[{"stmt":{"origin":"syl5eqelr(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0), cxp(co(cz, cmap, c0), csn(c1)), wa(wcel(c0, universe), wcel(c1, cz)))","pretty":"syl5eqelr((s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1), (mzPoly ` c0), ((‚Ñ§[‚Ü¶]c0)√ó { c1 }), (c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§))"},"body":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))\n-| wceq(cxp(co(cz, cmap, c0), csn(c1)), cmpt(s0, co(cz, cmap, c0), c1))\n-| wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cxp(co(cz, cmap, c0), csn(c1)), cfv(cmzp, c0)))","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))\n‚ä£ ((‚Ñ§[‚Ü¶]c0)√ó { c1 })=(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)\n‚ä£ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí((‚Ñ§[‚Ü¶]c0)√ó { c1 })‚àà(mzPoly ` c0))"},"cumulated":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))\n-| wceq(cxp(co(cz, cmap, c0), csn(c1)), cmpt(s0, co(cz, cmap, c0), c1))\n-| wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cxp(co(cz, cmap, c0), csn(c1)), cfv(cmzp, c0)))","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))\n‚ä£ ((‚Ñ§[‚Ü¶]c0)√ó { c1 })=(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)\n‚ä£ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí((‚Ñ§[‚Ü¶]c0)√ó { c1 })‚àà(mzPoly ` c0))"}},{"stmt":{"origin":"fconstmpt(s0, co(cz, cmap, c0), c1)","pretty":"fconstmpt(s0, (‚Ñ§[‚Ü¶]c0), c1)"},"body":{"origin":"|- wceq(cxp(co(cz, cmap, c0), csn(c1)), cmpt(s0, co(cz, cmap, c0), c1))\n-| diffsc(s0, co(cz, cmap, c0))\n-| diffsc(s0, c1)","pretty":"‚ä¢ ((‚Ñ§[‚Ü¶]c0)√ó { c1 })=(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)\n‚ä£ d(s0,(‚Ñ§[‚Ü¶]c0))\n‚ä£ d(s0, c1)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))\n-| wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cxp(co(cz, cmap, c0), csn(c1)), cfv(cmzp, c0)))\n-| diffsc(s0, co(cz, cmap, c0))\n-| diffsc(s0, c1)","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))\n‚ä£ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí((‚Ñ§[‚Ü¶]c0)√ó { c1 })‚àà(mzPoly ` c0))\n‚ä£ d(s0,(‚Ñ§[‚Ü¶]c0))\n‚ä£ d(s0, c1)"}},{"stmt":{"origin":"mzpconst(c0, c1)","pretty":"mzpconst(c0, c1)"},"body":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cxp(co(cz, cmap, c0), csn(c1)), cfv(cmzp, c0)))","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí((‚Ñ§[‚Ü¶]c0)√ó { c1 })‚àà(mzPoly ` c0))"},"cumulated":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))\n-| diffsc(s0, co(cz, cmap, c0))\n-| diffsc(s0, c1)","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))\n‚ä£ d(s0,(‚Ñ§[‚Ü¶]c0))\n‚ä£ d(s0, c1)"}},{"stmt":{"origin":"diff.co.s(s0, cz, cmap, c0)","pretty":"diff.co.s(s0, cz, cmap, c0)"},"body":{"origin":"|- diffsc(s0, co(cz, cmap, c0))\n-| diffsc(s0, cz)\n-| diffsc(s0, cmap)\n-| diffsc(s0, c0)","pretty":"‚ä¢ d(s0,(‚Ñ§[‚Ü¶]c0))\n‚ä£ d(s0, ‚Ñ§)\n‚ä£ d(s0, ‚Ü¶)\n‚ä£ d(s0, c0)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))\n-| diffsc(s0, c1)\n-| diffsc(s0, cz)\n-| diffsc(s0, cmap)\n-| diffsc(s0, c0)","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))\n‚ä£ d(s0, c1)\n‚ä£ d(s0, ‚Ñ§)\n‚ä£ d(s0, ‚Ü¶)\n‚ä£ d(s0, c0)"}},{"stmt":{"origin":"diff.cz.s(s0)","pretty":"diff.cz.s(s0)"},"body":{"origin":"|- diffsc(s0, cz)","pretty":"‚ä¢ d(s0, ‚Ñ§)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))\n-| diffsc(s0, c1)\n-| diffsc(s0, cmap)\n-| diffsc(s0, c0)","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))\n‚ä£ d(s0, c1)\n‚ä£ d(s0, ‚Ü¶)\n‚ä£ d(s0, c0)"}},{"stmt":{"origin":"diff.cmap.s(s0)","pretty":"diff.cmap.s(s0)"},"body":{"origin":"|- diffsc(s0, cmap)","pretty":"‚ä¢ d(s0, ‚Ü¶)"},"cumulated":{"origin":"|- wi(wa(wcel(c0, universe), wcel(c1, cz)), wcel(cmpt(s0, co(cz, cmap, c0), c1), cfv(cmzp, c0)))\n-| diffsc(s0, c1)\n-| diffsc(s0, c0)","pretty":"‚ä¢ ((c0 ‚àà ùïå ‚àß c1 ‚àà ‚Ñ§)‚Üí(s0 ‚àà(‚Ñ§[‚Ü¶]c0)‚Ü¶ c1)‚àà(mzPoly ` c0))\n‚ä£ d(s0, c1)\n‚ä£ d(s0, c0)"}}],"comment":"A constant function expressed in maps-to notation is polynomial. This theorem and the several that follow ( ~ mzpaddmpt , ~ mzpmulmpt , ~ mzpnegmpt , ~ mzpsubmpt , ~ mzpexpmpt ) can be used to build proofs that functions which are \"manifestly polynomial\", in the sense of being a maps-to containing constants, projections, and simple arithmetic operations, are actually polynomial functions. There is no mzpprojmpt because ~ mzpproj is already expressed using maps-to notation. (Contributed by Stefan O'Rear, 5-Oct-2014.)","parent":["syl5eqelr","fconstmpt","mzpconst","diff.co.s","diff.cz.s","diff.cmap.s"],"children":["mzpsubmpt","mzpnegmpt","mzpexpmpt","mzpsubst","0dioph","vdioph","eluzrabdioph","rmydioph","rmxdioph","expdiophlem2","expdioph"]}