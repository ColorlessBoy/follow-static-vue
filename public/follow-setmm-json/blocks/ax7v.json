{"bIdx":2285,"bType":"thm","type":"","name":"ax7v","params":"setvar s0, setvar s1, setvar s2","body":["|- wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2))))","-| diffss(s0, s1)"],"bodyPretty":["⊢ (s0 = s1 →(s0 = s2 → s1 = s2))","⊣ d(s0, s1)"],"proof":[{"stmt":{"origin":"a1ii(wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2)))), diffss(s0, s1))","pretty":"a1ii((s0 = s1 →(s0 = s2 → s1 = s2)), d(s0, s1))"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2))))\n-| wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2))))\n-| diffss(s0, s1)","pretty":"⊢ (s0 = s1 →(s0 = s2 → s1 = s2))\n⊣ (s0 = s1 →(s0 = s2 → s1 = s2))\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2))))\n-| wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2))))\n-| diffss(s0, s1)","pretty":"⊢ (s0 = s1 →(s0 = s2 → s1 = s2))\n⊣ (s0 = s1 →(s0 = s2 → s1 = s2))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"ax-7(s0, s1, s2)","pretty":"ax-7(s0, s1, s2)"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2))))","pretty":"⊢ (s0 = s1 →(s0 = s2 → s1 = s2))"},"cumulated":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wi(wceq(cv(s0), cv(s2)), wceq(cv(s1), cv(s2))))\n-| diffss(s0, s1)","pretty":"⊢ (s0 = s1 →(s0 = s2 → s1 = s2))\n⊣ d(s0, s1)"}}],"comment":"Weakened version of ~ ax-7 , with a disjoint variable condition on ` x , y ` . This should be the only proof referencing ~ ax-7 , and it should be referenced only by its two weakened versions ~ ax7v1 and ~ ax7v2 , from which ~ ax-7 is then rederived as ~ ax7 , which shows that either ~ ax7v or the conjunction of ~ ax7v1 and ~ ax7v2 is sufficient. In ~ ax7v , it is still allowed to substitute the same variable for ` x ` and ` z ` , or the same variable for ` y ` and ` z ` . Therefore, ~ ax7v \"bundles\" (a term coined by Raph Levien) its \"principal instance\" ` ( x = y -> ( x = z -> y = z ) ) ` with ` x , y , z ` distinct, and its \"degenerate instances\" ` ( x = y -> ( x = x -> y = x ) ) ` and ` ( x = y -> ( x = y -> y = y ) ) ` with ` x , y ` distinct. These degenerate instances are for instance used in the proofs of ~ equcomiv and ~ equid respectively. (Contributed by BJ, 7-Dec-2020.) Use ~ ax7 instead. (New usage is discouraged.)","parent":["a1ii","ax-7"],"children":["ax7v1","ax7v2"]}