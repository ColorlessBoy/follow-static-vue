{"bIdx":29727,"bType":"thm","type":"","name":"crctisclwlk","params":"class c0, class c1, class c2","body":["|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))"],"bodyPretty":["⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)"],"proof":[{"stmt":{"origin":"syl(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"syl(c0[(Circuits ` c1)]c2, c0[(ClWalks ` c1)]c2, (c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"body":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))\n-| wi(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wi(wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)\n⊣ (c0[(Circuits ` c1)]c2 →(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ ((c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))\n-| wi(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wi(wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)\n⊣ (c0[(Circuits ` c1)]c2 →(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ ((c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)"}},{"stmt":{"origin":"crctprop(c0, c1, c2)","pretty":"crctprop(c0, c1, c2)"},"body":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Circuits ` c1)]c2 →(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))\n-| wi(wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)\n⊣ ((c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)"}},{"stmt":{"origin":"sylan(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0))), wbr(c0, cfv(cclwlks, c1), c2), wbr(c0, cfv(cwlks, c1), c2))","pretty":"sylan(c0[(Trails ` c1)]c2, (c2 ` 0)=(c2 `(# ` c0)), c0[(ClWalks ` c1)]c2, c0[(Walks ` c1)]c2)"},"body":{"origin":"|- wi(wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))\n-| wi(wbr(c0, cfv(ctrls, c1), c2), wbr(c0, cfv(cwlks, c1), c2))\n-| wi(wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"⊢ ((c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)\n⊣ (c0[(Trails ` c1)]c2 → c0[(Walks ` c1)]c2)\n⊣ ((c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))\n-| wi(wbr(c0, cfv(ctrls, c1), c2), wbr(c0, cfv(cwlks, c1), c2))\n-| wi(wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)\n⊣ (c0[(Trails ` c1)]c2 → c0[(Walks ` c1)]c2)\n⊣ ((c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)"}},{"stmt":{"origin":"trliswlk(c0, c1, c2)","pretty":"trliswlk(c0, c1, c2)"},"body":{"origin":"|- wi(wbr(c0, cfv(ctrls, c1), c2), wbr(c0, cfv(cwlks, c1), c2))","pretty":"⊢ (c0[(Trails ` c1)]c2 → c0[(Walks ` c1)]c2)"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))\n-| wi(wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)\n⊣ ((c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)"}},{"stmt":{"origin":"biimpri(wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"biimpri((c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))), c0[(ClWalks ` c1)]c2)"},"body":{"origin":"|- wi(wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wbr(c0, cfv(cclwlks, c1), c2))\n-| wb(wbr(c0, cfv(cclwlks, c1), c2), wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ ((c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→ c0[(ClWalks ` c1)]c2)\n⊣ (c0[(ClWalks ` c1)]c2 ↔(c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))\n-| wb(wbr(c0, cfv(cclwlks, c1), c2), wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)\n⊣ (c0[(ClWalks ` c1)]c2 ↔(c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"}},{"stmt":{"origin":"isclwlk(c0, c1, c2)","pretty":"isclwlk(c0, c1, c2)"},"body":{"origin":"|- wb(wbr(c0, cfv(cclwlks, c1), c2), wa(wbr(c0, cfv(cwlks, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(ClWalks ` c1)]c2 ↔(c0[(Walks ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccrcts, c1), c2), wbr(c0, cfv(cclwlks, c1), c2))","pretty":"⊢ (c0[(Circuits ` c1)]c2 → c0[(ClWalks ` c1)]c2)"}}],"comment":"A circuit is a closed walk. (Contributed by AV, 17-Feb-2021.) (Proof shortened by AV, 30-Oct-2021.)","parent":["syl","crctprop","sylan","trliswlk","biimpri","isclwlk"],"children":[]}