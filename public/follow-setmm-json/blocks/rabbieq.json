{"bIdx":38553,"bType":"thm","type":"","name":"rabbieq","params":"setvar s0, class c0, class c1, wff w0, wff w1","body":["|- wceq(c0, crab(s0, c1, w0))","-| wceq(c0, crab(s0, c1, w1))","-| wb(w1, w0)"],"bodyPretty":["⊢ c0 = { s0 ∈ c1 | w0 }","⊣ c0 = { s0 ∈ c1 | w1 }","⊣ (w1 ↔ w0)"],"proof":[{"stmt":{"origin":"eqtri(c0, crab(s0, c1, w0), crab(s0, c1, w1))","pretty":"eqtri(c0, { s0 ∈ c1 | w0 }, { s0 ∈ c1 | w1 })"},"body":{"origin":"|- wceq(c0, crab(s0, c1, w0))\n-| wceq(c0, crab(s0, c1, w1))\n-| wceq(crab(s0, c1, w1), crab(s0, c1, w0))","pretty":"⊢ c0 = { s0 ∈ c1 | w0 }\n⊣ c0 = { s0 ∈ c1 | w1 }\n⊣ { s0 ∈ c1 | w1 } = { s0 ∈ c1 | w0 }"},"cumulated":{"origin":"|- wceq(c0, crab(s0, c1, w0))\n-| wceq(c0, crab(s0, c1, w1))\n-| wceq(crab(s0, c1, w1), crab(s0, c1, w0))","pretty":"⊢ c0 = { s0 ∈ c1 | w0 }\n⊣ c0 = { s0 ∈ c1 | w1 }\n⊣ { s0 ∈ c1 | w1 } = { s0 ∈ c1 | w0 }"}},{"stmt":{"origin":"rabbii(s0, c1, w1, w0)","pretty":"rabbii(s0, c1, w1, w0)"},"body":{"origin":"|- wceq(crab(s0, c1, w1), crab(s0, c1, w0))\n-| wb(w1, w0)","pretty":"⊢ { s0 ∈ c1 | w1 } = { s0 ∈ c1 | w0 }\n⊣ (w1 ↔ w0)"},"cumulated":{"origin":"|- wceq(c0, crab(s0, c1, w0))\n-| wceq(c0, crab(s0, c1, w1))\n-| wb(w1, w0)","pretty":"⊢ c0 = { s0 ∈ c1 | w0 }\n⊣ c0 = { s0 ∈ c1 | w1 }\n⊣ (w1 ↔ w0)"}}],"comment":"Equivalent wff's correspond to restricted class abstractions which are equal with the same class. (Contributed by Peter Mazsa, 8-Jul-2019.)","parent":["eqtri","rabbii"],"children":["dfrefrels3","dfcnvrefrels3","dfsymrels3","refsymrels3","dftrrels3","dfeqvrels3","dfdisjs3","dfdisjs4"]}