{"bIdx":5532,"bType":"thm","type":"","name":"dvdemo1","params":"setvar s0, setvar s1, setvar s2","body":["|- wex(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))","-| diffss(s0, s1)"],"bodyPretty":["⊢ ∃(s0,(s0 = s1 → s2 ∈ s0))","⊣ d(s0, s1)"],"proof":[{"stmt":{"origin":"eximii(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))), wn(wceq(cv(s0), cv(s1))))","pretty":"eximii(s0, (s0 = s1 → s2 ∈ s0), ¬ s0 = s1)"},"body":{"origin":"|- wex(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| wex(s0, wn(wceq(cv(s0), cv(s1))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))","pretty":"⊢ ∃(s0,(s0 = s1 → s2 ∈ s0))\n⊣ ∃(s0, ¬ s0 = s1)\n⊣ (¬ s0 = s1 →(s0 = s1 → s2 ∈ s0))"},"cumulated":{"origin":"|- wex(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| wex(s0, wn(wceq(cv(s0), cv(s1))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))","pretty":"⊢ ∃(s0,(s0 = s1 → s2 ∈ s0))\n⊣ ∃(s0, ¬ s0 = s1)\n⊣ (¬ s0 = s1 →(s0 = s1 → s2 ∈ s0))"}},{"stmt":{"origin":"mpbir(wex(s0, wn(wceq(cv(s0), cv(s1)))), wn(wal(s0, wceq(cv(s0), cv(s1)))))","pretty":"mpbir(∃(s0, ¬ s0 = s1), ¬ ∀(s0, s0 = s1))"},"body":{"origin":"|- wex(s0, wn(wceq(cv(s0), cv(s1))))\n-| wn(wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wex(s0, wn(wceq(cv(s0), cv(s1)))), wn(wal(s0, wceq(cv(s0), cv(s1)))))","pretty":"⊢ ∃(s0, ¬ s0 = s1)\n⊣ ¬ ∀(s0, s0 = s1)\n⊣ (∃(s0, ¬ s0 = s1)↔ ¬ ∀(s0, s0 = s1))"},"cumulated":{"origin":"|- wex(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| wn(wal(s0, wceq(cv(s0), cv(s1))))\n-| wb(wex(s0, wn(wceq(cv(s0), cv(s1)))), wn(wal(s0, wceq(cv(s0), cv(s1)))))","pretty":"⊢ ∃(s0,(s0 = s1 → s2 ∈ s0))\n⊣ (¬ s0 = s1 →(s0 = s1 → s2 ∈ s0))\n⊣ ¬ ∀(s0, s0 = s1)\n⊣ (∃(s0, ¬ s0 = s1)↔ ¬ ∀(s0, s0 = s1))"}},{"stmt":{"origin":"dtru(s0, s1)","pretty":"dtru(s0, s1)"},"body":{"origin":"|- wn(wal(s0, wceq(cv(s0), cv(s1))))\n-| diffss(s0, s1)","pretty":"⊢ ¬ ∀(s0, s0 = s1)\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wex(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| wb(wex(s0, wn(wceq(cv(s0), cv(s1)))), wn(wal(s0, wceq(cv(s0), cv(s1)))))\n-| diffss(s0, s1)","pretty":"⊢ ∃(s0,(s0 = s1 → s2 ∈ s0))\n⊣ (¬ s0 = s1 →(s0 = s1 → s2 ∈ s0))\n⊣ (∃(s0, ¬ s0 = s1)↔ ¬ ∀(s0, s0 = s1))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"exnal(s0, wceq(cv(s0), cv(s1)))","pretty":"exnal(s0, s0 = s1)"},"body":{"origin":"|- wb(wex(s0, wn(wceq(cv(s0), cv(s1)))), wn(wal(s0, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∃(s0, ¬ s0 = s1)↔ ¬ ∀(s0, s0 = s1))"},"cumulated":{"origin":"|- wex(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| diffss(s0, s1)","pretty":"⊢ ∃(s0,(s0 = s1 → s2 ∈ s0))\n⊣ (¬ s0 = s1 →(s0 = s1 → s2 ∈ s0))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"pm2.21(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0)))","pretty":"pm2.21(s0 = s1, s2 ∈ s0)"},"body":{"origin":"|- wi(wn(wceq(cv(s0), cv(s1))), wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))","pretty":"⊢ (¬ s0 = s1 →(s0 = s1 → s2 ∈ s0))"},"cumulated":{"origin":"|- wex(s0, wi(wceq(cv(s0), cv(s1)), wcel(cv(s2), cv(s0))))\n-| diffss(s0, s1)","pretty":"⊢ ∃(s0,(s0 = s1 → s2 ∈ s0))\n⊣ d(s0, s1)"}}],"comment":"Demonstration of a theorem (scheme) that requires (meta)variables ` x ` and ` y ` to be distinct, but no others. It bundles the theorem schemes ` E. x ( x = y -> x e. x ) ` and ` E. x ( x = y -> y e. x ) ` . Compare ~ dvdemo2 . (\"Bundles\" is a term introduced by Raph Levien.) (Contributed by NM, 1-Dec-2006.)","parent":["eximii","mpbir","dtru","exnal","pm2.21"],"children":[]}