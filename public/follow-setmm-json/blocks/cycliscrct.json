{"bIdx":29732,"bType":"thm","type":"","name":"cycliscrct","params":"class c0, class c1, class c2","body":["|- wi(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2))"],"bodyPretty":["⊢ (c0[(Cycles ` c1)]c2 → c0[(Circuits ` c1)]c2)"],"proof":[{"stmt":{"origin":"3imtr4i(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"3imtr4i(c0[(Cycles ` c1)]c2, c0[(Circuits ` c1)]c2, (c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))), (c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"body":{"origin":"|- wi(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2))\n-| wi(wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wb(wbr(c0, cfv(ccycls, c1), c2), wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wb(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Cycles ` c1)]c2 → c0[(Circuits ` c1)]c2)\n⊣ ((c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Cycles ` c1)]c2 ↔(c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Circuits ` c1)]c2 ↔(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2))\n-| wi(wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wb(wbr(c0, cfv(ccycls, c1), c2), wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wb(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Cycles ` c1)]c2 → c0[(Circuits ` c1)]c2)\n⊣ ((c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Cycles ` c1)]c2 ↔(c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Circuits ` c1)]c2 ↔(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"}},{"stmt":{"origin":"anim1i(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0))), wbr(c0, cfv(ctrls, c1), c2))","pretty":"anim1i(c0[(Paths ` c1)]c2, (c2 ` 0)=(c2 `(# ` c0)), c0[(Trails ` c1)]c2)"},"body":{"origin":"|- wi(wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wi(wbr(c0, cfv(cpths, c1), c2), wbr(c0, cfv(ctrls, c1), c2))","pretty":"⊢ ((c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0)))→(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Paths ` c1)]c2 → c0[(Trails ` c1)]c2)"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2))\n-| wb(wbr(c0, cfv(ccycls, c1), c2), wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wb(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wi(wbr(c0, cfv(cpths, c1), c2), wbr(c0, cfv(ctrls, c1), c2))","pretty":"⊢ (c0[(Cycles ` c1)]c2 → c0[(Circuits ` c1)]c2)\n⊣ (c0[(Cycles ` c1)]c2 ↔(c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Circuits ` c1)]c2 ↔(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Paths ` c1)]c2 → c0[(Trails ` c1)]c2)"}},{"stmt":{"origin":"pthistrl(c0, c1, c2)","pretty":"pthistrl(c0, c1, c2)"},"body":{"origin":"|- wi(wbr(c0, cfv(cpths, c1), c2), wbr(c0, cfv(ctrls, c1), c2))","pretty":"⊢ (c0[(Paths ` c1)]c2 → c0[(Trails ` c1)]c2)"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2))\n-| wb(wbr(c0, cfv(ccycls, c1), c2), wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))\n-| wb(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Cycles ` c1)]c2 → c0[(Circuits ` c1)]c2)\n⊣ (c0[(Cycles ` c1)]c2 ↔(c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))\n⊣ (c0[(Circuits ` c1)]c2 ↔(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"}},{"stmt":{"origin":"iscycl(c0, c1, c2)","pretty":"iscycl(c0, c1, c2)"},"body":{"origin":"|- wb(wbr(c0, cfv(ccycls, c1), c2), wa(wbr(c0, cfv(cpths, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Cycles ` c1)]c2 ↔(c0[(Paths ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2))\n-| wb(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Cycles ` c1)]c2 → c0[(Circuits ` c1)]c2)\n⊣ (c0[(Circuits ` c1)]c2 ↔(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"}},{"stmt":{"origin":"iscrct(c0, c1, c2)","pretty":"iscrct(c0, c1, c2)"},"body":{"origin":"|- wb(wbr(c0, cfv(ccrcts, c1), c2), wa(wbr(c0, cfv(ctrls, c1), c2), wceq(cfv(c2, nat0), cfv(c2, cfv(chash, c0)))))","pretty":"⊢ (c0[(Circuits ` c1)]c2 ↔(c0[(Trails ` c1)]c2 ∧(c2 ` 0)=(c2 `(# ` c0))))"},"cumulated":{"origin":"|- wi(wbr(c0, cfv(ccycls, c1), c2), wbr(c0, cfv(ccrcts, c1), c2))","pretty":"⊢ (c0[(Cycles ` c1)]c2 → c0[(Circuits ` c1)]c2)"}}],"comment":"A cycle is a circuit. (Contributed by Alexander van der Vekens, 30-Oct-2017.) (Revised by AV, 31-Jan-2021.) (Proof shortened by AV, 30-Oct-2021.)","parent":["3imtr4i","anim1i","pthistrl","iscycl","iscrct"],"children":["usgrn2cycl"]}