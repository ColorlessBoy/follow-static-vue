{"bIdx":22495,"bType":"axiom","type":"","name":"df-mamu","params":"setvar s0, setvar s1, setvar s2, setvar s3, setvar s4, setvar s5, setvar s6, setvar s7, setvar s8, setvar s9","body":["|- wceq(cmmul, cmpo(s0, s1, universe, universe, csb(s2, cfv(c1st, cfv(c1st, cv(s1))), csb(s3, cfv(c2nd, cfv(c1st, cv(s1))), csb(s4, cfv(c2nd, cv(s1)), cmpo(s5, s6, co(cfv(cbs, cv(s0)), cmap, cxp(cv(s2), cv(s3))), co(cfv(cbs, cv(s0)), cmap, cxp(cv(s3), cv(s4))), cmpo(s7, s8, cv(s2), cv(s4), co(cv(s0), cgsu, cmpt(s9, cv(s3), co(co(cv(s7), cv(s5), cv(s9)), cfv(cmulr, cv(s0)), co(cv(s9), cv(s6), cv(s8))))))))))))","-| diffss(s7, s9)","-| diffss(s7, s8)","-| diffss(s2, s7)","-| diffss(s3, s7)","-| diffss(s1, s7)","-| diffss(s4, s7)","-| diffss(s0, s7)","-| diffss(s5, s7)","-| diffss(s6, s7)","-| diffss(s8, s9)","-| diffss(s2, s9)","-| diffss(s3, s9)","-| diffss(s1, s9)","-| diffss(s4, s9)","-| diffss(s0, s9)","-| diffss(s5, s9)","-| diffss(s6, s9)","-| diffss(s2, s8)","-| diffss(s3, s8)","-| diffss(s1, s8)","-| diffss(s4, s8)","-| diffss(s0, s8)","-| diffss(s5, s8)","-| diffss(s6, s8)","-| diffss(s2, s3)","-| diffss(s1, s2)","-| diffss(s2, s4)","-| diffss(s0, s2)","-| diffss(s2, s5)","-| diffss(s2, s6)","-| diffss(s1, s3)","-| diffss(s3, s4)","-| diffss(s0, s3)","-| diffss(s3, s5)","-| diffss(s3, s6)","-| diffss(s1, s4)","-| diffss(s0, s1)","-| diffss(s1, s5)","-| diffss(s1, s6)","-| diffss(s0, s4)","-| diffss(s4, s5)","-| diffss(s4, s6)","-| diffss(s0, s5)","-| diffss(s0, s6)","-| diffss(s5, s6)"],"bodyPretty":["‚ä¢ maMul =(s0 ‚àà ùïå, s1 ‚àà ùïå ‚Ü¶[(1st `(1st ` s1))/ s2][(2nd `(1st ` s1))/ s3][(2nd ` s1)/ s4](s5 ‚àà((Base ` s0)[‚Ü¶](s2 √ó s3)), s6 ‚àà((Base ` s0)[‚Ü¶](s3 √ó s4))‚Ü¶(s7 ‚àà s2, s8 ‚àà s4 ‚Ü¶(s0[gsum](s9 ‚àà s3 ‚Ü¶((s7[s5]s9)[(√ó ` s0)](s9[s6]s8)))))))","‚ä£ d(s7, s9)","‚ä£ d(s7, s8)","‚ä£ d(s2, s7)","‚ä£ d(s3, s7)","‚ä£ d(s1, s7)","‚ä£ d(s4, s7)","‚ä£ d(s0, s7)","‚ä£ d(s5, s7)","‚ä£ d(s6, s7)","‚ä£ d(s8, s9)","‚ä£ d(s2, s9)","‚ä£ d(s3, s9)","‚ä£ d(s1, s9)","‚ä£ d(s4, s9)","‚ä£ d(s0, s9)","‚ä£ d(s5, s9)","‚ä£ d(s6, s9)","‚ä£ d(s2, s8)","‚ä£ d(s3, s8)","‚ä£ d(s1, s8)","‚ä£ d(s4, s8)","‚ä£ d(s0, s8)","‚ä£ d(s5, s8)","‚ä£ d(s6, s8)","‚ä£ d(s2, s3)","‚ä£ d(s1, s2)","‚ä£ d(s2, s4)","‚ä£ d(s0, s2)","‚ä£ d(s2, s5)","‚ä£ d(s2, s6)","‚ä£ d(s1, s3)","‚ä£ d(s3, s4)","‚ä£ d(s0, s3)","‚ä£ d(s3, s5)","‚ä£ d(s3, s6)","‚ä£ d(s1, s4)","‚ä£ d(s0, s1)","‚ä£ d(s1, s5)","‚ä£ d(s1, s6)","‚ä£ d(s0, s4)","‚ä£ d(s4, s5)","‚ä£ d(s4, s6)","‚ä£ d(s0, s5)","‚ä£ d(s0, s6)","‚ä£ d(s5, s6)"],"proof":[],"comment":"The operator which multiplies an m x n matrix with an n x p matrix, see also the definition in [Lang] p. 504. Note that it is not generally possible to recover the dimensions from the matrix, since all n x 0 and all 0 x n matrices are represented by the empty set. (Contributed by Stefan O'Rear, 4-Sep-2015.)","parent":[],"children":["mamufval"]}