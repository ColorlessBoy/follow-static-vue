{"bIdx":29501,"bType":"axiom","type":"","name":"df-wlks","params":"setvar s0, setvar s1, setvar s2, setvar s3","body":["|- wceq(cwlks, cmpt(s0, universe, copab(s1, s2, w3a(wcel(cv(s1), cword(cdm(cfv(ciedg, cv(s0))))), wf(cv(s2), co(nat0, cfz, cfv(chash, cv(s1))), cfv(cvtx, cv(s0))), wral(s3, co(nat0, cfzo, cfv(chash, cv(s1))), wif(wceq(cfv(cv(s2), cv(s3)), cfv(cv(s2), co(cv(s3), caddc, nat1))), wceq(cfv(cfv(ciedg, cv(s0)), cfv(cv(s1), cv(s3))), csn(cfv(cv(s2), cv(s3)))), wss(cpr(cfv(cv(s2), cv(s3)), cfv(cv(s2), co(cv(s3), caddc, nat1))), cfv(cfv(ciedg, cv(s0)), cfv(cv(s1), cv(s3))))))))))","-| diffss(s0, s1)","-| diffss(s1, s3)","-| diffss(s1, s2)","-| diffss(s0, s3)","-| diffss(s0, s2)","-| diffss(s2, s3)"],"bodyPretty":["‚ä¢ Walks =(s0 ‚àà ùïå ‚Ü¶ { < s1, s2 > |(s1 ‚àà Word(dom((iEdg ` s0)))‚àß(s2 :(0[...](# ` s1))‚Üí(Vtx ` s0))‚àß ‚àÄ(s3 ‚àà(0[..^](# ` s1)), if((s2 ` s3)=(s2 `(s3[+]1)),((iEdg ` s0)`(s1 ` s3))= {(s2 ` s3)}, {(s2 ` s3),(s2 `(s3[+]1))} ‚äÜ((iEdg ` s0)`(s1 ` s3)))))})","‚ä£ d(s0, s1)","‚ä£ d(s1, s3)","‚ä£ d(s1, s2)","‚ä£ d(s0, s3)","‚ä£ d(s0, s2)","‚ä£ d(s2, s3)"],"proof":[],"comment":"Define the set of all walks (in a hypergraph). Such walks correspond to the s-walks \"on the vertex level\" (with s = 1), and also to 1-walks \"on the edge level\" (see ~ wlk1walk ) discussed in Aksoy et al. The predicate ` F ( Walks `` G ) P ` can be read as \"The pair ` <. F , P >. ` represents a walk in a graph ` G ` \", see also ~ iswlk . The condition ` { ( p `` k ) , ( p `` ( k + 1 ) ) } ` ` C_ ( ( iEdg `` g ) `` ( f `` k ) ) ` (hereinafter referred to as C) would not be sufficient, because the repetition of a vertex in a walk (i.e. ` ( p `` k ) = ( p `` ( k + 1 ) ) ` should be allowed only if there is a loop at ` ( p `` k ) ` . Otherwise, C would be fulfilled by each edge containing ` ( p `` k ) ` . According to the definition of [Bollobas] p. 4.: \"A walk W in a graph is an alternating sequence of vertices and edges x0 , e1 , x1 , e2 , ... , e(l) , x(l) ...\", a walk can be represented by two mappings f from { 1 , ... , n } and p from { 0 , ... , n }, where f enumerates the (indices of the) edges, and p enumerates the vertices. So the walk is represented by the following sequence: p(0) e(f(1)) p(1) e(f(2)) ... p(n-1) e(f(n)) p(n). (Contributed by AV, 30-Dec-2020.)","parent":[],"children":["wksfval","relwlk"]}