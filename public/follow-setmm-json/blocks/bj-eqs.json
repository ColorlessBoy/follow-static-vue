{"bIdx":36765,"bType":"thm","type":"","name":"bj-eqs","params":"setvar s0, setvar s1, wff w0","body":["|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))","-| diffss(s0, s1)","-| diffsw(s0, w0)"],"bodyPretty":["⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))","⊣ d(s0, s1)","⊣ d(s0, w0)"],"proof":[{"stmt":{"origin":"impbii(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))","pretty":"impbii(w0, ∀(s0,(s0 = s1 → w0)))"},"body":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ (w0 → ∀(s0,(s0 = s1 → w0)))\n⊣ (∀(s0,(s0 = s1 → w0))→ w0)"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ (w0 → ∀(s0,(s0 = s1 → w0)))\n⊣ (∀(s0,(s0 = s1 → w0))→ w0)"}},{"stmt":{"origin":"alrimiv(s0, w0, wi(wceq(cv(s0), cv(s1)), w0))","pretty":"alrimiv(s0, w0, (s0 = s1 → w0))"},"body":{"origin":"|- wi(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(w0, wi(wceq(cv(s0), cv(s1)), w0))\n-| diffsw(s0, w0)","pretty":"⊢ (w0 → ∀(s0,(s0 = s1 → w0)))\n⊣ (w0 →(s0 = s1 → w0))\n⊣ d(s0, w0)"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n-| wi(w0, wi(wceq(cv(s0), cv(s1)), w0))\n-| diffsw(s0, w0)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ (∀(s0,(s0 = s1 → w0))→ w0)\n⊣ (w0 →(s0 = s1 → w0))\n⊣ d(s0, w0)"}},{"stmt":{"origin":"ax-1(w0, wceq(cv(s0), cv(s1)))","pretty":"ax-1(w0, s0 = s1)"},"body":{"origin":"|- wi(w0, wi(wceq(cv(s0), cv(s1)), w0))","pretty":"⊢ (w0 →(s0 = s1 → w0))"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n-| diffsw(s0, w0)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ (∀(s0,(s0 = s1 → w0))→ w0)\n⊣ d(s0, w0)"}},{"stmt":{"origin":"3syl(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0, wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0))","pretty":"3syl(∀(s0,(s0 = s1 → w0)), w0, (∃(s0, s0 = s1)→ ∃(s0, w0)), ∃(s0, w0))"},"body":{"origin":"|- wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), w0)\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)))\n-| wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0))\n-| wi(wex(s0, w0), w0)","pretty":"⊢ (∀(s0,(s0 = s1 → w0))→ w0)\n⊣ (∀(s0,(s0 = s1 → w0))→(∃(s0, s0 = s1)→ ∃(s0, w0)))\n⊣ ((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0))\n⊣ (∃(s0, w0)→ w0)"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffsw(s0, w0)\n-| wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)))\n-| wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0))\n-| wi(wex(s0, w0), w0)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, w0)\n⊣ (∀(s0,(s0 = s1 → w0))→(∃(s0, s0 = s1)→ ∃(s0, w0)))\n⊣ ((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0))\n⊣ (∃(s0, w0)→ w0)"}},{"stmt":{"origin":"exim(s0, wceq(cv(s0), cv(s1)), w0)","pretty":"exim(s0, s0 = s1, w0)"},"body":{"origin":"|- wi(wal(s0, wi(wceq(cv(s0), cv(s1)), w0)), wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)))","pretty":"⊢ (∀(s0,(s0 = s1 → w0))→(∃(s0, s0 = s1)→ ∃(s0, w0)))"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffsw(s0, w0)\n-| wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0))\n-| wi(wex(s0, w0), w0)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, w0)\n⊣ ((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0))\n⊣ (∃(s0, w0)→ w0)"}},{"stmt":{"origin":"ax-mp(wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0)), wex(s0, wceq(cv(s0), cv(s1))))","pretty":"ax-mp(((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0)), ∃(s0, s0 = s1))"},"body":{"origin":"|- wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0))\n-| wex(s0, wceq(cv(s0), cv(s1)))\n-| wi(wex(s0, wceq(cv(s0), cv(s1))), wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0)))","pretty":"⊢ ((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0))\n⊣ ∃(s0, s0 = s1)\n⊣ (∃(s0, s0 = s1)→((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0)))"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffsw(s0, w0)\n-| wi(wex(s0, w0), w0)\n-| wex(s0, wceq(cv(s0), cv(s1)))\n-| wi(wex(s0, wceq(cv(s0), cv(s1))), wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0)))","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, w0)\n⊣ (∃(s0, w0)→ w0)\n⊣ ∃(s0, s0 = s1)\n⊣ (∃(s0, s0 = s1)→((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0)))"}},{"stmt":{"origin":"ax6ev(s0, s1)","pretty":"ax6ev(s0, s1)"},"body":{"origin":"|- wex(s0, wceq(cv(s0), cv(s1)))\n-| diffss(s0, s1)","pretty":"⊢ ∃(s0, s0 = s1)\n⊣ d(s0, s1)"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffsw(s0, w0)\n-| wi(wex(s0, w0), w0)\n-| wi(wex(s0, wceq(cv(s0), cv(s1))), wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0)))\n-| diffss(s0, s1)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, w0)\n⊣ (∃(s0, w0)→ w0)\n⊣ (∃(s0, s0 = s1)→((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0)))\n⊣ d(s0, s1)"}},{"stmt":{"origin":"pm2.27(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0))","pretty":"pm2.27(∃(s0, s0 = s1), ∃(s0, w0))"},"body":{"origin":"|- wi(wex(s0, wceq(cv(s0), cv(s1))), wi(wi(wex(s0, wceq(cv(s0), cv(s1))), wex(s0, w0)), wex(s0, w0)))","pretty":"⊢ (∃(s0, s0 = s1)→((∃(s0, s0 = s1)→ ∃(s0, w0))→ ∃(s0, w0)))"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffsw(s0, w0)\n-| wi(wex(s0, w0), w0)\n-| diffss(s0, s1)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, w0)\n⊣ (∃(s0, w0)→ w0)\n⊣ d(s0, s1)"}},{"stmt":{"origin":"ax5e(s0, w0)","pretty":"ax5e(s0, w0)"},"body":{"origin":"|- wi(wex(s0, w0), w0)\n-| diffsw(s0, w0)","pretty":"⊢ (∃(s0, w0)→ w0)\n⊣ d(s0, w0)"},"cumulated":{"origin":"|- wb(w0, wal(s0, wi(wceq(cv(s0), cv(s1)), w0)))\n-| diffsw(s0, w0)\n-| diffss(s0, s1)","pretty":"⊢ (w0 ↔ ∀(s0,(s0 = s1 → w0)))\n⊣ d(s0, w0)\n⊣ d(s0, s1)"}}],"comment":"A lemma for substitutions, proved from Tarski's FOL. The version without DV(x,y) is true but requires ~ ax-13 . The disjoint variable condition DV(x,ph) is necessary for both directions: consider substituting ` x = z ` for ` ph ` . (Contributed by BJ, 25-May-2021.)","parent":["impbii","alrimiv","ax-1","3syl","exim","ax-mp","ax6ev","pm2.27","ax5e"],"children":["bj-sb"]}