{"bIdx":16786,"bType":"axiom","type":"","name":"df-gcd","params":"setvar s0, setvar s1, setvar s2","body":["|- wceq(cgcd, cmpo(s0, s1, cz, cz, cif(nat0, csup(crab(s2, cz, wa(wbr(cv(s2), cdvds, cv(s0)), wbr(cv(s2), cdvds, cv(s1)))), cr, clt), wa(wceq(cv(s0), nat0), wceq(cv(s1), nat0)))))","-| diffss(s0, s2)","-| diffss(s1, s2)","-| diffss(s0, s1)"],"bodyPretty":["⊢ gcd =(s0 ∈ ℤ, s1 ∈ ℤ ↦ if((s0 = 0 ∧ s1 = 0), 0, sup({ s2 ∈ ℤ |(s2[||]s0 ∧ s2[||]s1)}, ℝ, <)))","⊣ d(s0, s2)","⊣ d(s1, s2)","⊣ d(s0, s1)"],"proof":[],"comment":"Define the ` gcd ` operator. For example, ` ( -u 6 gcd 9 ) = 3 ` ( ~ ex-gcd ). For an alternate definition, based on the definition in [ApostolNT] p. 15, see ~ dfgcd2 . (Contributed by Paul Chapman, 21-Mar-2011.)","parent":[],"children":["gcdval","gcdf"]}