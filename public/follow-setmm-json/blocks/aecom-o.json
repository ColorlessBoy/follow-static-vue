{"bIdx":39082,"bType":"thm","type":"","name":"aecom-o","params":"setvar s0, setvar s1","body":["|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))"],"bodyPretty":["⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))"],"proof":[{"stmt":{"origin":"syl(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))), wal(s1, wceq(cv(s0), cv(s1))))","pretty":"syl(∀(s0, s0 = s1), ∀(s1, s1 = s0), ∀(s1, s0 = s1))"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1))))\n-| wi(wal(s1, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (∀(s0, s0 = s1)→ ∀(s1, s0 = s1))\n⊣ (∀(s1, s0 = s1)→ ∀(s1, s1 = s0))"},"cumulated":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1))))\n-| wi(wal(s1, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (∀(s0, s0 = s1)→ ∀(s1, s0 = s1))\n⊣ (∀(s1, s0 = s1)→ ∀(s1, s1 = s0))"}},{"stmt":{"origin":"pm2.43i(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1))))","pretty":"pm2.43i(∀(s0, s0 = s1), ∀(s1, s0 = s1))"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s0 = s1))\n⊣ (∀(s0, s0 = s1)→(∀(s0, s0 = s1)→ ∀(s1, s0 = s1)))"},"cumulated":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wal(s1, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (∀(s1, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (∀(s0, s0 = s1)→(∀(s0, s0 = s1)→ ∀(s1, s0 = s1)))"}},{"stmt":{"origin":"ax-c11(s0, s1, wceq(cv(s0), cv(s1)))","pretty":"ax-c11(s0, s1, s0 = s1)"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s0), cv(s1)))))","pretty":"⊢ (∀(s0, s0 = s1)→(∀(s0, s0 = s1)→ ∀(s1, s0 = s1)))"},"cumulated":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wal(s1, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (∀(s1, s0 = s1)→ ∀(s1, s1 = s0))"}},{"stmt":{"origin":"alimi(s1, wceq(cv(s0), cv(s1)), wceq(cv(s1), cv(s0)))","pretty":"alimi(s1, s0 = s1, s1 = s0)"},"body":{"origin":"|- wi(wal(s1, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wceq(cv(s0), cv(s1)), wceq(cv(s1), cv(s0)))","pretty":"⊢ (∀(s1, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (s0 = s1 → s1 = s0)"},"cumulated":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wceq(cv(s0), cv(s1)), wceq(cv(s1), cv(s0)))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (s0 = s1 → s1 = s0)"}},{"stmt":{"origin":"equcomi1(s0, s1)","pretty":"equcomi1(s0, s1)"},"body":{"origin":"|- wi(wceq(cv(s0), cv(s1)), wceq(cv(s1), cv(s0)))","pretty":"⊢ (s0 = s1 → s1 = s0)"},"cumulated":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))"}}],"comment":"Commutation law for identical variable specifiers. The antecedent and consequent are true when ` x ` and ` y ` are substituted with the same variable. Lemma L12 in [Megill] p. 445 (p. 12 of the preprint). Version of ~ aecom using ~ ax-c11 . Unlike ~ axc11nfromc11 , this version does not require ~ ax-5 (see comment of ~ equcomi1 ). (Contributed by NM, 10-May-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["syl","pm2.43i","ax-c11","alimi","equcomi1"],"children":["aecoms-o","naecoms-o","aev-o","ax12indalem"]}