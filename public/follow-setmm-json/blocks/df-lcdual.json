{"bIdx":41921,"bType":"axiom","type":"","name":"df-lcdual","params":"setvar s0, setvar s1, setvar s2","body":["|- wceq(clcd, cmpt(s0, universe, cmpt(s1, cfv(clh, cv(s0)), co(cfv(cld, cfv(cfv(cdvh, cv(s0)), cv(s1))), cress, crab(s2, cfv(clfn, cfv(cfv(cdvh, cv(s0)), cv(s1))), wceq(cfv(cfv(cfv(coch, cv(s0)), cv(s1)), cfv(cfv(cfv(coch, cv(s0)), cv(s1)), cfv(cfv(clk, cfv(cfv(cdvh, cv(s0)), cv(s1))), cv(s2)))), cfv(cfv(clk, cfv(cfv(cdvh, cv(s0)), cv(s1))), cv(s2))))))))","-| diffss(s0, s2)","-| diffss(s1, s2)","-| diffss(s0, s1)"],"bodyPretty":["‚ä¢ LCDual =(s0 ‚àà ùïå ‚Ü¶(s1 ‚àà(LHyp ` s0)‚Ü¶((LDual `((DVecH ` s0)` s1))[|`s]{ s2 ‚àà(LFnl `((DVecH ` s0)` s1))|(((ocH ` s0)` s1)`(((ocH ` s0)` s1)`((LKer `((DVecH ` s0)` s1))` s2)))=((LKer `((DVecH ` s0)` s1))` s2)})))","‚ä£ d(s0, s2)","‚ä£ d(s1, s2)","‚ä£ d(s0, s1)"],"proof":[],"comment":"Dual vector space of functionals with closed kernels. Note: we could also define this directly without ` mapd ` by using ~ mapdrn . TODO: see if it makes sense to go back and replace some of the ` LDual ` stuff with this. TODO: We could simplify ~ df-mapd using ` ( Base `` ( ( LCDual `` K ) `` W ) ) ` . (Contributed by NM, 13-Mar-2015.)","parent":[],"children":["lcdfval"]}