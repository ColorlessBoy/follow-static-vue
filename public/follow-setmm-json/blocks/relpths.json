{"bIdx":29644,"bType":"thm","type":"","name":"relpths","params":"class c0","body":["|- wrel(cfv(cpths, c0))"],"bodyPretty":["‚ä¢ Rel((Paths ` c0))"],"proof":[{"stmt":{"origin":"relmptopab(hs2, hs0, hs1, cpths, c0, universe, w3a(wbr(cv(hs0), cfv(ctrls, cv(hs2)), cv(hs1)), wfun(ccnv(cres(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0)))))), wceq(cin(cima(cv(hs1), cpr(nat0, cfv(chash, cv(hs0)))), cima(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0))))), emptycls)))","pretty":"relmptopab(hs2, hs0, hs1, cpths, c0, universe, (hs0[(Trails ` hs2)]hs1 ‚àß Fun(`'(hs1 |`(1[..^](# ` hs0))))‚àß((hs1 \" { 0,(# ` hs0)})‚ãÇ(hs1 \"(1[..^](# ` hs0))))= ‚àÖ))"},"body":{"origin":"|- wrel(cfv(cpths, c0))\n-| wceq(cpths, cmpt(hs2, universe, copab(hs0, hs1, w3a(wbr(cv(hs0), cfv(ctrls, cv(hs2)), cv(hs1)), wfun(ccnv(cres(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0)))))), wceq(cin(cima(cv(hs1), cpr(nat0, cfv(chash, cv(hs0)))), cima(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0))))), emptycls)))))\n-| diffsc(hs2, universe)","pretty":"‚ä¢ Rel((Paths ` c0))\n‚ä£ Paths =(hs2 ‚àà ùïå ‚Ü¶ { < hs0, hs1 > |(hs0[(Trails ` hs2)]hs1 ‚àß Fun(`'(hs1 |`(1[..^](# ` hs0))))‚àß((hs1 \" { 0,(# ` hs0)})‚ãÇ(hs1 \"(1[..^](# ` hs0))))= ‚àÖ)})\n‚ä£ d(hs2, ùïå)"},"cumulated":{"origin":"|- wrel(cfv(cpths, c0))\n-| wceq(cpths, cmpt(hs2, universe, copab(hs0, hs1, w3a(wbr(cv(hs0), cfv(ctrls, cv(hs2)), cv(hs1)), wfun(ccnv(cres(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0)))))), wceq(cin(cima(cv(hs1), cpr(nat0, cfv(chash, cv(hs0)))), cima(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0))))), emptycls)))))\n-| diffsc(hs2, universe)","pretty":"‚ä¢ Rel((Paths ` c0))\n‚ä£ Paths =(hs2 ‚àà ùïå ‚Ü¶ { < hs0, hs1 > |(hs0[(Trails ` hs2)]hs1 ‚àß Fun(`'(hs1 |`(1[..^](# ` hs0))))‚àß((hs1 \" { 0,(# ` hs0)})‚ãÇ(hs1 \"(1[..^](# ` hs0))))= ‚àÖ)})\n‚ä£ d(hs2, ùïå)"}},{"stmt":{"origin":"df-pths(hs2, hs0, hs1)","pretty":"df-pths(hs2, hs0, hs1)"},"body":{"origin":"|- wceq(cpths, cmpt(hs2, universe, copab(hs0, hs1, w3a(wbr(cv(hs0), cfv(ctrls, cv(hs2)), cv(hs1)), wfun(ccnv(cres(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0)))))), wceq(cin(cima(cv(hs1), cpr(nat0, cfv(chash, cv(hs0)))), cima(cv(hs1), co(nat1, cfzo, cfv(chash, cv(hs0))))), emptycls)))))\n-| diffss(hs2, hs0)\n-| diffss(hs0, hs1)\n-| diffss(hs2, hs1)","pretty":"‚ä¢ Paths =(hs2 ‚àà ùïå ‚Ü¶ { < hs0, hs1 > |(hs0[(Trails ` hs2)]hs1 ‚àß Fun(`'(hs1 |`(1[..^](# ` hs0))))‚àß((hs1 \" { 0,(# ` hs0)})‚ãÇ(hs1 \"(1[..^](# ` hs0))))= ‚àÖ)})\n‚ä£ d(hs2, hs0)\n‚ä£ d(hs0, hs1)\n‚ä£ d(hs2, hs1)"},"cumulated":{"origin":"|- wrel(cfv(cpths, c0))\n-| diffsc(hs2, universe)\n-| diffss(hs2, hs0)\n-| diffss(hs0, hs1)\n-| diffss(hs2, hs1)","pretty":"‚ä¢ Rel((Paths ` c0))\n‚ä£ d(hs2, ùïå)\n‚ä£ d(hs2, hs0)\n‚ä£ d(hs0, hs1)\n‚ä£ d(hs2, hs1)"}},{"stmt":{"origin":"diff.hs2.c(universe)","pretty":"diff.hs2.c(universe)"},"body":{"origin":"|- diffsc(hs2, universe)","pretty":"‚ä¢ d(hs2, ùïå)"},"cumulated":{"origin":"|- wrel(cfv(cpths, c0))\n-| diffss(hs2, hs0)\n-| diffss(hs0, hs1)\n-| diffss(hs2, hs1)","pretty":"‚ä¢ Rel((Paths ` c0))\n‚ä£ d(hs2, hs0)\n‚ä£ d(hs0, hs1)\n‚ä£ d(hs2, hs1)"}},{"stmt":{"origin":"diff.hs2.s(hs0)","pretty":"diff.hs2.s(hs0)"},"body":{"origin":"|- diffss(hs2, hs0)","pretty":"‚ä¢ d(hs2, hs0)"},"cumulated":{"origin":"|- wrel(cfv(cpths, c0))\n-| diffss(hs0, hs1)\n-| diffss(hs2, hs1)","pretty":"‚ä¢ Rel((Paths ` c0))\n‚ä£ d(hs0, hs1)\n‚ä£ d(hs2, hs1)"}},{"stmt":{"origin":"diff.hs0.s(hs1)","pretty":"diff.hs0.s(hs1)"},"body":{"origin":"|- diffss(hs0, hs1)","pretty":"‚ä¢ d(hs0, hs1)"},"cumulated":{"origin":"|- wrel(cfv(cpths, c0))\n-| diffss(hs2, hs1)","pretty":"‚ä¢ Rel((Paths ` c0))\n‚ä£ d(hs2, hs1)"}},{"stmt":{"origin":"diff.hs2.s(hs1)","pretty":"diff.hs2.s(hs1)"},"body":{"origin":"|- diffss(hs2, hs1)","pretty":"‚ä¢ d(hs2, hs1)"},"cumulated":{"origin":"|- wrel(cfv(cpths, c0))","pretty":"‚ä¢ Rel((Paths ` c0))"}}],"comment":"The set ` ( Paths `` G ) ` of all paths on ` G ` is a set of pairs by our definition of a path, and so is a relation. (Contributed by AV, 30-Oct-2021.)","parent":["relmptopab","df-pths","diff.hs2.c","diff.hs2.s","diff.hs0.s"],"children":["iscycl","cyclnspth"]}