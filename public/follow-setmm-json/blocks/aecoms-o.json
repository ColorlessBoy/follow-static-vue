{"bIdx":39083,"bType":"thm","type":"","name":"aecoms-o","params":"setvar s0, setvar s1, wff w0","body":["|- wi(wal(s0, wceq(cv(s0), cv(s1))), w0)","-| wi(wal(s1, wceq(cv(s1), cv(s0))), w0)"],"bodyPretty":["⊢ (∀(s0, s0 = s1)→ w0)","⊣ (∀(s1, s1 = s0)→ w0)"],"proof":[{"stmt":{"origin":"syl(wal(s0, wceq(cv(s0), cv(s1))), w0, wal(s1, wceq(cv(s1), cv(s0))))","pretty":"syl(∀(s0, s0 = s1), w0, ∀(s1, s1 = s0))"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), w0)\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wal(s1, wceq(cv(s1), cv(s0))), w0)","pretty":"⊢ (∀(s0, s0 = s1)→ w0)\n⊣ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (∀(s1, s1 = s0)→ w0)"},"cumulated":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), w0)\n-| wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))\n-| wi(wal(s1, wceq(cv(s1), cv(s0))), w0)","pretty":"⊢ (∀(s0, s0 = s1)→ w0)\n⊣ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))\n⊣ (∀(s1, s1 = s0)→ w0)"}},{"stmt":{"origin":"aecom-o(s0, s1)","pretty":"aecom-o(s0, s1)"},"body":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), wal(s1, wceq(cv(s1), cv(s0))))","pretty":"⊢ (∀(s0, s0 = s1)→ ∀(s1, s1 = s0))"},"cumulated":{"origin":"|- wi(wal(s0, wceq(cv(s0), cv(s1))), w0)\n-| wi(wal(s1, wceq(cv(s1), cv(s0))), w0)","pretty":"⊢ (∀(s0, s0 = s1)→ w0)\n⊣ (∀(s1, s1 = s0)→ w0)"}}],"comment":"A commutation rule for identical variable specifiers. Version of ~ aecoms using ~ ax-c11 . (Contributed by NM, 10-May-1993.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["syl","aecom-o"],"children":["hbae-o","dral1-o","dvelimf-o","aev-o","ax12indalem","ax12inda2ALT"]}