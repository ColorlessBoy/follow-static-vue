{"bIdx":2914,"bType":"thm","type":"","name":"nfeu1ALT","params":"setvar s0, wff w0","body":["|- wnf(s0, weu(s0, w0))"],"bodyPretty":["⊢ F/(s0, ∃!(s0, w0))"],"proof":[{"stmt":{"origin":"nfxfr(s0, weu(s0, w0), wa(wex(s0, w0), wmo(s0, w0)))","pretty":"nfxfr(s0, ∃!(s0, w0), (∃(s0, w0)∧ ∃*(s0, w0)))"},"body":{"origin":"|- wnf(s0, weu(s0, w0))\n-| wb(weu(s0, w0), wa(wex(s0, w0), wmo(s0, w0)))\n-| wnf(s0, wa(wex(s0, w0), wmo(s0, w0)))","pretty":"⊢ F/(s0, ∃!(s0, w0))\n⊣ (∃!(s0, w0)↔(∃(s0, w0)∧ ∃*(s0, w0)))\n⊣ F/(s0,(∃(s0, w0)∧ ∃*(s0, w0)))"},"cumulated":{"origin":"|- wnf(s0, weu(s0, w0))\n-| wb(weu(s0, w0), wa(wex(s0, w0), wmo(s0, w0)))\n-| wnf(s0, wa(wex(s0, w0), wmo(s0, w0)))","pretty":"⊢ F/(s0, ∃!(s0, w0))\n⊣ (∃!(s0, w0)↔(∃(s0, w0)∧ ∃*(s0, w0)))\n⊣ F/(s0,(∃(s0, w0)∧ ∃*(s0, w0)))"}},{"stmt":{"origin":"df-eu(s0, w0)","pretty":"df-eu(s0, w0)"},"body":{"origin":"|- wb(weu(s0, w0), wa(wex(s0, w0), wmo(s0, w0)))","pretty":"⊢ (∃!(s0, w0)↔(∃(s0, w0)∧ ∃*(s0, w0)))"},"cumulated":{"origin":"|- wnf(s0, weu(s0, w0))\n-| wnf(s0, wa(wex(s0, w0), wmo(s0, w0)))","pretty":"⊢ F/(s0, ∃!(s0, w0))\n⊣ F/(s0,(∃(s0, w0)∧ ∃*(s0, w0)))"}},{"stmt":{"origin":"nfan(s0, wex(s0, w0), wmo(s0, w0))","pretty":"nfan(s0, ∃(s0, w0), ∃*(s0, w0))"},"body":{"origin":"|- wnf(s0, wa(wex(s0, w0), wmo(s0, w0)))\n-| wnf(s0, wex(s0, w0))\n-| wnf(s0, wmo(s0, w0))","pretty":"⊢ F/(s0,(∃(s0, w0)∧ ∃*(s0, w0)))\n⊣ F/(s0, ∃(s0, w0))\n⊣ F/(s0, ∃*(s0, w0))"},"cumulated":{"origin":"|- wnf(s0, weu(s0, w0))\n-| wnf(s0, wex(s0, w0))\n-| wnf(s0, wmo(s0, w0))","pretty":"⊢ F/(s0, ∃!(s0, w0))\n⊣ F/(s0, ∃(s0, w0))\n⊣ F/(s0, ∃*(s0, w0))"}},{"stmt":{"origin":"nfe1(s0, w0)","pretty":"nfe1(s0, w0)"},"body":{"origin":"|- wnf(s0, wex(s0, w0))","pretty":"⊢ F/(s0, ∃(s0, w0))"},"cumulated":{"origin":"|- wnf(s0, weu(s0, w0))\n-| wnf(s0, wmo(s0, w0))","pretty":"⊢ F/(s0, ∃!(s0, w0))\n⊣ F/(s0, ∃*(s0, w0))"}},{"stmt":{"origin":"nfmo1(s0, w0)","pretty":"nfmo1(s0, w0)"},"body":{"origin":"|- wnf(s0, wmo(s0, w0))","pretty":"⊢ F/(s0, ∃*(s0, w0))"},"cumulated":{"origin":"|- wnf(s0, weu(s0, w0))","pretty":"⊢ F/(s0, ∃!(s0, w0))"}}],"comment":"Alternate proof of ~ nfeu1 . This illustrates the systematic way of proving nonfreeness in a defined expression: consider the definiens as a tree whose nodes are its subformulas, and prove by tree-induction nonfreeness of each node, starting from the leaves (generally using ~ nfv or nf* theorems for previously defined expressions) and up to the root. Here, the definiens is a conjunction of two previously defined expressions, which automatically yields the present proof. (Contributed by BJ, 2-Oct-2022.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["nfxfr","df-eu","nfan","nfe1","nfmo1"],"children":[]}