{"bIdx":44066,"bType":"thm","type":"","name":"pm2.43cbi","params":"wff w0, wff w1, wff w2, wff w3","body":["|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))"],"bodyPretty":["⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))"],"proof":[{"stmt":{"origin":"impbii(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))","pretty":"impbii((w0 →(w1 →(w2 →(w0 → w3)))), (w1 →(w2 →(w0 → w3))))"},"body":{"origin":"|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w0, wi(w1, wi(w2, wi(w0, w3)))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))\n⊣ ((w0 →(w1 →(w2 →(w0 → w3))))→(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w0 →(w1 →(w2 →(w0 → w3)))))"},"cumulated":{"origin":"|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w0, wi(w1, wi(w2, wi(w0, w3)))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))\n⊣ ((w0 →(w1 →(w2 →(w0 → w3))))→(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w0 →(w1 →(w2 →(w0 → w3)))))"}},{"stmt":{"origin":"ja(w0, wi(w1, wi(w2, wi(w0, w3))), wi(w1, wi(w2, wi(w0, w3))))","pretty":"ja(w0, (w1 →(w2 →(w0 → w3))), (w1 →(w2 →(w0 → w3))))"},"body":{"origin":"|- wi(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wn(w0), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w1, wi(w2, wi(w0, w3))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))→(w1 →(w2 →(w0 → w3))))\n⊣ (¬ w0 →(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w1 →(w2 →(w0 → w3))))"},"cumulated":{"origin":"|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w0, wi(w1, wi(w2, wi(w0, w3)))))\n-| wi(wn(w0), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w1, wi(w2, wi(w0, w3))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w0 →(w1 →(w2 →(w0 → w3)))))\n⊣ (¬ w0 →(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w1 →(w2 →(w0 → w3))))"}},{"stmt":{"origin":"com4l(wn(w0), w1, w2, w0, w3)","pretty":"com4l(¬ w0, w1, w2, w0, w3)"},"body":{"origin":"|- wi(wn(w0), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(w0, wi(wn(w0), wi(w1, wi(w2, w3))))","pretty":"⊢ (¬ w0 →(w1 →(w2 →(w0 → w3))))\n⊣ (w0 →(¬ w0 →(w1 →(w2 → w3))))"},"cumulated":{"origin":"|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w0, wi(w1, wi(w2, wi(w0, w3)))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(w0, wi(wn(w0), wi(w1, wi(w2, w3))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w0 →(w1 →(w2 →(w0 → w3)))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w1 →(w2 →(w0 → w3))))\n⊣ (w0 →(¬ w0 →(w1 →(w2 → w3))))"}},{"stmt":{"origin":"pm2.24(w0, wi(w1, wi(w2, w3)))","pretty":"pm2.24(w0, (w1 →(w2 → w3)))"},"body":{"origin":"|- wi(w0, wi(wn(w0), wi(w1, wi(w2, w3))))","pretty":"⊢ (w0 →(¬ w0 →(w1 →(w2 → w3))))"},"cumulated":{"origin":"|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w0, wi(w1, wi(w2, wi(w0, w3)))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w1, wi(w2, wi(w0, w3))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w0 →(w1 →(w2 →(w0 → w3)))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w1 →(w2 →(w0 → w3))))"}},{"stmt":{"origin":"id(wi(w1, wi(w2, wi(w0, w3))))","pretty":"id((w1 →(w2 →(w0 → w3))))"},"body":{"origin":"|- wi(wi(w1, wi(w2, wi(w0, w3))), wi(w1, wi(w2, wi(w0, w3))))","pretty":"⊢ ((w1 →(w2 →(w0 → w3)))→(w1 →(w2 →(w0 → w3))))"},"cumulated":{"origin":"|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))\n-| wi(wi(w1, wi(w2, wi(w0, w3))), wi(w0, wi(w1, wi(w2, wi(w0, w3)))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))\n⊣ ((w1 →(w2 →(w0 → w3)))→(w0 →(w1 →(w2 →(w0 → w3)))))"}},{"stmt":{"origin":"ax-1(wi(w1, wi(w2, wi(w0, w3))), w0)","pretty":"ax-1((w1 →(w2 →(w0 → w3))), w0)"},"body":{"origin":"|- wi(wi(w1, wi(w2, wi(w0, w3))), wi(w0, wi(w1, wi(w2, wi(w0, w3)))))","pretty":"⊢ ((w1 →(w2 →(w0 → w3)))→(w0 →(w1 →(w2 →(w0 → w3)))))"},"cumulated":{"origin":"|- wb(wi(w0, wi(w1, wi(w2, wi(w0, w3)))), wi(w1, wi(w2, wi(w0, w3))))","pretty":"⊢ ((w0 →(w1 →(w2 →(w0 → w3))))↔(w1 →(w2 →(w0 → w3))))"}}],"comment":"Logical equivalence of a 3-left-nested implication and a 2-left-nested implicated when two antecedents of the former implication are identical. (Contributed by Alan Sare, 18-Mar-2012.) (Proof modification is discouraged.) (New usage is discouraged.) The following User's Proof is a Virtual Deduction proof completed automatically by the tools program completeusersproof.cmd, which invokes Mel L. O'Cat's mmj2 and Norm Megill's Metamath Proof Assistant. The completed Virtual Deduction Proof (not shown) was minimized. The minimized proof is shown. <HTML> <TABLE> <TR> <TD> 1:: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ` ` ) -> ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ) ` <TR> <TD> 2:: <TD> ` |- ( ( ph -> ( ps -> ( ph -> ( ch -> th ) ) ) ` ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ` <TR> <TD> 3:1,2: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ` ` ) -> ( ps -> ( ph -> ( ch -> th ) ) ) ) ` <TR> <TD> 4:: <TD> ` |- ( ( ps -> ( ph -> ( ch -> th ) ) ) ` ` -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ` <TR> <TD> 5:3,4: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ` ` ) -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ` <TR> <TD> 6:: <TD> ` |- ( ( ps -> ( ch -> ( ph -> th ) ) ) ` ` -> ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ) ) ` <TR> <TD> qed:5,6: <TD> ` |- ( ( ph -> ( ps -> ( ch -> ( ph -> th ) ) ) ` ` ) <-> ( ps -> ( ch -> ( ph -> th ) ) ) ) ` </TABLE> </HTML>","parent":["impbii","ja","com4l","pm2.24","id","ax-1"],"children":["ee233","ee33VD"]}