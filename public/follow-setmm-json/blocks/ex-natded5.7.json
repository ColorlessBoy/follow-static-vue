{"bIdx":30445,"bType":"thm","type":"","name":"ex-natded5.7","params":"wff w0, wff w1, wff w2, wff w3","body":["|- wi(w0, wo(w1, w2))","-| wi(w0, wo(w1, wa(w2, w3)))"],"bodyPretty":["⊢ (w0 →(w1 ∨ w2))","⊣ (w0 →(w1 ∨(w2 ∧ w3)))"],"proof":[{"stmt":{"origin":"mpjaodan(w0, wo(w1, w2), w1, wa(w2, w3))","pretty":"mpjaodan(w0, (w1 ∨ w2), w1, (w2 ∧ w3))"},"body":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w1), wo(w1, w2))\n-| wi(wa(w0, wa(w2, w3)), wo(w1, w2))\n-| wi(w0, wo(w1, wa(w2, w3)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w1)→(w1 ∨ w2))\n⊣ ((w0 ∧(w2 ∧ w3))→(w1 ∨ w2))\n⊣ (w0 →(w1 ∨(w2 ∧ w3)))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w1), wo(w1, w2))\n-| wi(wa(w0, wa(w2, w3)), wo(w1, w2))\n-| wi(w0, wo(w1, wa(w2, w3)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w1)→(w1 ∨ w2))\n⊣ ((w0 ∧(w2 ∧ w3))→(w1 ∨ w2))\n⊣ (w0 →(w1 ∨(w2 ∧ w3)))"}},{"stmt":{"origin":"orcd(wa(w0, w1), w1, w2)","pretty":"orcd((w0 ∧ w1), w1, w2)"},"body":{"origin":"|- wi(wa(w0, w1), wo(w1, w2))\n-| wi(wa(w0, w1), w1)","pretty":"⊢ ((w0 ∧ w1)→(w1 ∨ w2))\n⊣ ((w0 ∧ w1)→ w1)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, wa(w2, w3)), wo(w1, w2))\n-| wi(w0, wo(w1, wa(w2, w3)))\n-| wi(wa(w0, w1), w1)","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧(w2 ∧ w3))→(w1 ∨ w2))\n⊣ (w0 →(w1 ∨(w2 ∧ w3)))\n⊣ ((w0 ∧ w1)→ w1)"}},{"stmt":{"origin":"simpr(w0, w1)","pretty":"simpr(w0, w1)"},"body":{"origin":"|- wi(wa(w0, w1), w1)","pretty":"⊢ ((w0 ∧ w1)→ w1)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, wa(w2, w3)), wo(w1, w2))\n-| wi(w0, wo(w1, wa(w2, w3)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧(w2 ∧ w3))→(w1 ∨ w2))\n⊣ (w0 →(w1 ∨(w2 ∧ w3)))"}},{"stmt":{"origin":"olcd(wa(w0, wa(w2, w3)), w1, w2)","pretty":"olcd((w0 ∧(w2 ∧ w3)), w1, w2)"},"body":{"origin":"|- wi(wa(w0, wa(w2, w3)), wo(w1, w2))\n-| wi(wa(w0, wa(w2, w3)), w2)","pretty":"⊢ ((w0 ∧(w2 ∧ w3))→(w1 ∨ w2))\n⊣ ((w0 ∧(w2 ∧ w3))→ w2)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w1, wa(w2, w3)))\n-| wi(wa(w0, wa(w2, w3)), w2)","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w1 ∨(w2 ∧ w3)))\n⊣ ((w0 ∧(w2 ∧ w3))→ w2)"}},{"stmt":{"origin":"simpld(wa(w0, wa(w2, w3)), w2, w3)","pretty":"simpld((w0 ∧(w2 ∧ w3)), w2, w3)"},"body":{"origin":"|- wi(wa(w0, wa(w2, w3)), w2)\n-| wi(wa(w0, wa(w2, w3)), wa(w2, w3))","pretty":"⊢ ((w0 ∧(w2 ∧ w3))→ w2)\n⊣ ((w0 ∧(w2 ∧ w3))→(w2 ∧ w3))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w1, wa(w2, w3)))\n-| wi(wa(w0, wa(w2, w3)), wa(w2, w3))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w1 ∨(w2 ∧ w3)))\n⊣ ((w0 ∧(w2 ∧ w3))→(w2 ∧ w3))"}},{"stmt":{"origin":"simpr(w0, wa(w2, w3))","pretty":"simpr(w0, (w2 ∧ w3))"},"body":{"origin":"|- wi(wa(w0, wa(w2, w3)), wa(w2, w3))","pretty":"⊢ ((w0 ∧(w2 ∧ w3))→(w2 ∧ w3))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w1, wa(w2, w3)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w1 ∨(w2 ∧ w3)))"}}],"comment":"Theorem 5.7 of [Clemente] p. 19, translated line by line using the interpretation of natural deduction in Metamath. A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.7-2 . For information about ND and Metamath, see the <HTML> <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A></HTML>. The original proof, which uses Fitch style, was written as follows: <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>6</TD> <TD NOWRAP> ` ( ps \\/ ( ch /\\ th ) ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps \\/ ( ch /\\ th ) ) ) ` </TD> <TD>Given</TD> <TD>$e. No need for ~ adantr because we do not move this into an ND hypothesis</TD></TR> <TR><TD>2</TD><TD>1</TD><TD NOWRAP> ...| ` ps ` </TD> <TD NOWRAP> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND hypothesis assumption (new scope)</TD> <TD> ~ simpr </TD></TR> <TR><TD>3</TD><TD>2</TD><TD> ... ` ( ps \\/ ch ) ` </TD> <TD> ` ( ( ph /\\ ps ) -> ( ps \\/ ch ) ) ` </TD> <TD> ` \\/ `I<SUB>L</SUB> 2</TD> <TD> ~ orcd , the MPE equivalent of ` \\/ `I<SUB>L</SUB>, 1</TD></TR> <TR><TD>4</TD><TD>3</TD><TD> ...| ` ( ch /\\ th ) ` </TD> <TD> ` ( ( ph /\\ ( ch /\\ th ) ) -> ( ch /\\ th ) ) ` </TD> <TD>ND hypothesis assumption (new scope)</TD> <TD> ~ simpr </TD></TR> <TR><TD>5</TD><TD>4</TD><TD> ... ` ch ` </TD> <TD> ` ( ( ph /\\ ( ch /\\ th ) ) -> ch ) ` </TD> <TD> ` /\\ `E<SUB>L</SUB> 4</TD> <TD> ~ simpld , the MPE equivalent of ` /\\ `E<SUB>L</SUB>, 3</TD></TR> <TR><TD>6</TD><TD>6</TD><TD> ... ` ( ps \\/ ch ) ` </TD> <TD> ` ( ( ph /\\ ( ch /\\ th ) ) -> ( ps \\/ ch ) ) ` </TD> <TD> ` \\/ `I<SUB>R</SUB> 5</TD> <TD> ~ olcd , the MPE equivalent of ` \\/ `I<SUB>R</SUB>, 4</TD></TR> <TR><TD>7</TD><TD>7</TD><TD NOWRAP> ` ( ps \\/ ch ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps \\/ ch ) ) ` </TD> <TD> ` \\/ `E 1,3,6</TD> <TD> ~ mpjaodan , the MPE equivalent of ` \\/ `E, 2,5,6 </TD></TR> </TABLE> </HTML> The original used Latin letters for predicates; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["mpjaodan","orcd","simpr","olcd","simpld"],"children":[]}