{"bIdx":30449,"bType":"thm","type":"","name":"ex-natded5.13","params":"wff w0, wff w1, wff w2, wff w3, wff w4","body":["|- wi(w0, wo(w1, w2))","-| wi(w0, wo(w3, w4))","-| wi(w0, wi(w3, w1))","-| wi(w0, wi(wn(w2), wn(w4)))"],"bodyPretty":["⊢ (w0 →(w1 ∨ w2))","⊣ (w0 →(w3 ∨ w4))","⊣ (w0 →(w3 → w1))","⊣ (w0 →(¬ w2 → ¬ w4))"],"proof":[{"stmt":{"origin":"mpjaodan(w0, wo(w1, w2), w3, w4)","pretty":"mpjaodan(w0, (w1 ∨ w2), w3, w4)"},"body":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w3), wo(w1, w2))\n-| wi(wa(w0, w4), wo(w1, w2))\n-| wi(w0, wo(w3, w4))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w3)→(w1 ∨ w2))\n⊣ ((w0 ∧ w4)→(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w3), wo(w1, w2))\n-| wi(wa(w0, w4), wo(w1, w2))\n-| wi(w0, wo(w3, w4))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w3)→(w1 ∨ w2))\n⊣ ((w0 ∧ w4)→(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))"}},{"stmt":{"origin":"orcd(wa(w0, w3), w1, w2)","pretty":"orcd((w0 ∧ w3), w1, w2)"},"body":{"origin":"|- wi(wa(w0, w3), wo(w1, w2))\n-| wi(wa(w0, w3), w1)","pretty":"⊢ ((w0 ∧ w3)→(w1 ∨ w2))\n⊣ ((w0 ∧ w3)→ w1)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w4), wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(wa(w0, w3), w1)","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w4)→(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ ((w0 ∧ w3)→ w1)"}},{"stmt":{"origin":"mpd(wa(w0, w3), w1, w3)","pretty":"mpd((w0 ∧ w3), w1, w3)"},"body":{"origin":"|- wi(wa(w0, w3), w1)\n-| wi(wa(w0, w3), w3)\n-| wi(wa(w0, w3), wi(w3, w1))","pretty":"⊢ ((w0 ∧ w3)→ w1)\n⊣ ((w0 ∧ w3)→ w3)\n⊣ ((w0 ∧ w3)→(w3 → w1))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w4), wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(wa(w0, w3), w3)\n-| wi(wa(w0, w3), wi(w3, w1))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w4)→(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ ((w0 ∧ w3)→ w3)\n⊣ ((w0 ∧ w3)→(w3 → w1))"}},{"stmt":{"origin":"simpr(w0, w3)","pretty":"simpr(w0, w3)"},"body":{"origin":"|- wi(wa(w0, w3), w3)","pretty":"⊢ ((w0 ∧ w3)→ w3)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w4), wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(wa(w0, w3), wi(w3, w1))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w4)→(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ ((w0 ∧ w3)→(w3 → w1))"}},{"stmt":{"origin":"adantr(w0, w3, wi(w3, w1))","pretty":"adantr(w0, w3, (w3 → w1))"},"body":{"origin":"|- wi(wa(w0, w3), wi(w3, w1))\n-| wi(w0, wi(w3, w1))","pretty":"⊢ ((w0 ∧ w3)→(w3 → w1))\n⊣ (w0 →(w3 → w1))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(wa(w0, w4), wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ ((w0 ∧ w4)→(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))"}},{"stmt":{"origin":"olcd(wa(w0, w4), w1, w2)","pretty":"olcd((w0 ∧ w4), w1, w2)"},"body":{"origin":"|- wi(wa(w0, w4), wo(w1, w2))\n-| wi(wa(w0, w4), w2)","pretty":"⊢ ((w0 ∧ w4)→(w1 ∨ w2))\n⊣ ((w0 ∧ w4)→ w2)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(wa(w0, w4), w2)","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ ((w0 ∧ w4)→ w2)"}},{"stmt":{"origin":"notnotrd(wa(w0, w4), w2)","pretty":"notnotrd((w0 ∧ w4), w2)"},"body":{"origin":"|- wi(wa(w0, w4), w2)\n-| wi(wa(w0, w4), wn(wn(w2)))","pretty":"⊢ ((w0 ∧ w4)→ w2)\n⊣ ((w0 ∧ w4)→ ¬ ¬ w2)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(wa(w0, w4), wn(wn(w2)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ ((w0 ∧ w4)→ ¬ ¬ w2)"}},{"stmt":{"origin":"pm2.65da(wa(w0, w4), wn(w2), w4)","pretty":"pm2.65da((w0 ∧ w4), ¬ w2, w4)"},"body":{"origin":"|- wi(wa(w0, w4), wn(wn(w2)))\n-| wi(wa(wa(w0, w4), wn(w2)), w4)\n-| wi(wa(wa(w0, w4), wn(w2)), wn(w4))","pretty":"⊢ ((w0 ∧ w4)→ ¬ ¬ w2)\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ w4)\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w4)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(wa(wa(w0, w4), wn(w2)), w4)\n-| wi(wa(wa(w0, w4), wn(w2)), wn(w4))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ w4)\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w4)"}},{"stmt":{"origin":"adantr(wa(w0, w4), wn(w2), w4)","pretty":"adantr((w0 ∧ w4), ¬ w2, w4)"},"body":{"origin":"|- wi(wa(wa(w0, w4), wn(w2)), w4)\n-| wi(wa(w0, w4), w4)","pretty":"⊢ (((w0 ∧ w4)∧ ¬ w2)→ w4)\n⊣ ((w0 ∧ w4)→ w4)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(wa(wa(w0, w4), wn(w2)), wn(w4))\n-| wi(wa(w0, w4), w4)","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w4)\n⊣ ((w0 ∧ w4)→ w4)"}},{"stmt":{"origin":"simpr(w0, w4)","pretty":"simpr(w0, w4)"},"body":{"origin":"|- wi(wa(w0, w4), w4)","pretty":"⊢ ((w0 ∧ w4)→ w4)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(wa(wa(w0, w4), wn(w2)), wn(w4))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w4)"}},{"stmt":{"origin":"mpd(wa(wa(w0, w4), wn(w2)), wn(w4), wn(w2))","pretty":"mpd(((w0 ∧ w4)∧ ¬ w2), ¬ w4, ¬ w2)"},"body":{"origin":"|- wi(wa(wa(w0, w4), wn(w2)), wn(w4))\n-| wi(wa(wa(w0, w4), wn(w2)), wn(w2))\n-| wi(wa(wa(w0, w4), wn(w2)), wi(wn(w2), wn(w4)))","pretty":"⊢ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w4)\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w2)\n⊣ (((w0 ∧ w4)∧ ¬ w2)→(¬ w2 → ¬ w4))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(wa(wa(w0, w4), wn(w2)), wn(w2))\n-| wi(wa(wa(w0, w4), wn(w2)), wi(wn(w2), wn(w4)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w2)\n⊣ (((w0 ∧ w4)∧ ¬ w2)→(¬ w2 → ¬ w4))"}},{"stmt":{"origin":"simpr(wa(w0, w4), wn(w2))","pretty":"simpr((w0 ∧ w4), ¬ w2)"},"body":{"origin":"|- wi(wa(wa(w0, w4), wn(w2)), wn(w2))","pretty":"⊢ (((w0 ∧ w4)∧ ¬ w2)→ ¬ w2)"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(wa(wa(w0, w4), wn(w2)), wi(wn(w2), wn(w4)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ (((w0 ∧ w4)∧ ¬ w2)→(¬ w2 → ¬ w4))"}},{"stmt":{"origin":"ad2antrr(w0, w4, wn(w2), wi(wn(w2), wn(w4)))","pretty":"ad2antrr(w0, w4, ¬ w2, (¬ w2 → ¬ w4))"},"body":{"origin":"|- wi(wa(wa(w0, w4), wn(w2)), wi(wn(w2), wn(w4)))\n-| wi(w0, wi(wn(w2), wn(w4)))","pretty":"⊢ (((w0 ∧ w4)∧ ¬ w2)→(¬ w2 → ¬ w4))\n⊣ (w0 →(¬ w2 → ¬ w4))"},"cumulated":{"origin":"|- wi(w0, wo(w1, w2))\n-| wi(w0, wo(w3, w4))\n-| wi(w0, wi(w3, w1))\n-| wi(w0, wi(wn(w2), wn(w4)))","pretty":"⊢ (w0 →(w1 ∨ w2))\n⊣ (w0 →(w3 ∨ w4))\n⊣ (w0 →(w3 → w1))\n⊣ (w0 →(¬ w2 → ¬ w4))"}}],"comment":"Theorem 5.13 of [Clemente] p. 20, translated line by line using the interpretation of natural deduction in Metamath. For information about ND and Metamath, see the <A HREF=\"mmnatded.html\">page on Deduction Form and Natural Deduction in Metamath Proof Explorer</A>. A much more efficient proof, using more of Metamath and MPE's capabilities, is shown in ~ ex-natded5.13-2 . The original proof, which uses Fitch style, was written as follows (the leading \"...\" shows an embedded ND hypothesis, beginning with the initial assumption of the ND hypothesis): <HTML> <TABLE BORDER> <TR><TH NOWRAP>#</TH><TH>MPE#</TH><TH>ND Expression</TH> <TH NOWRAP>MPE Translation</TH><TH>ND Rationale</TH> <TH>MPE Rationale</TH></TR> <TR><TD>1</TD><TD>15</TD><TD NOWRAP> ` ( ps \\/ ch ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps \\/ ch ) ) ` </TD> <TD>Given</TD> <TD>$e. </TD></TR> <TR><TD>2;3</TD><TD>2</TD><TD NOWRAP> ` ( ps -> th ) ` </TD> <TD NOWRAP> ` ( ph -> ( ps -> th ) ) ` </TD><TD>Given</TD> <TD>$e. ~ adantr to move it into the ND hypothesis</TD></TR> <TR><TD>3</TD><TD>9</TD><TD> ` ( -. ta -> -. ch ) ` </TD> <TD> ` ( ph -> ( -. ta -> -. ch ) ) ` </TD> <TD>Given</TD> <TD>$e. ~ ad2antrr to move it into the ND sub-hypothesis</TD></TR> <TR><TD>4</TD><TD>1</TD><TD> ...| ` ps ` </TD> <TD> ` ( ( ph /\\ ps ) -> ps ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>5</TD><TD>4</TD><TD> ... ` th ` </TD> <TD> ` ( ( ph /\\ ps ) -> th ) ` </TD> <TD> ` -> `E 2,4</TD> <TD> ~ mpd 1,3</TD></TR> <TR><TD>6</TD><TD>5</TD><TD> ... ` ( th \\/ ta ) ` </TD> <TD> ` ( ( ph /\\ ps ) -> ( th \\/ ta ) ) ` </TD> <TD> ` \\/ `I 5</TD> <TD> ~ orcd 4</TD></TR> <TR><TD>7</TD><TD>6</TD><TD> ...| ` ch ` </TD> <TD> ` ( ( ph /\\ ch ) -> ch ) ` </TD> <TD>ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>8</TD><TD>8</TD><TD> ... ...| ` -. ta ` </TD> <TD> ` ( ( ( ph /\\ ch ) /\\ -. ta ) -> -. ta ) ` </TD> <TD>(sub) ND hypothesis assumption</TD> <TD> ~ simpr </TD></TR> <TR><TD>9</TD><TD>11</TD><TD> ... ... ` -. ch ` </TD> <TD> ` ( ( ( ph /\\ ch ) /\\ -. ta ) -> -. ch ) ` </TD> <TD> ` -> `E 3,8</TD> <TD> ~ mpd 8,10</TD></TR> <TR><TD>10</TD><TD>7</TD><TD> ... ... ` ch ` </TD> <TD> ` ( ( ( ph /\\ ch ) /\\ -. ta ) -> ch ) ` </TD> <TD> IT 7</TD> <TD> ~ adantr 6</TD></TR> <TR><TD>11</TD><TD>12</TD><TD> ... ` -. -. ta ` </TD> <TD> ` ( ( ph /\\ ch ) -> -. -. ta ) ` </TD> <TD> ` -. `I 8,9,10</TD> <TD> ~ pm2.65da 7,11</TD></TR> <TR><TD>12</TD><TD>13</TD><TD> ... ` ta ` </TD> <TD> ` ( ( ph /\\ ch ) -> ta ) ` </TD> <TD> ` -. `E 11</TD> <TD> ~ notnotrd 12</TD></TR> <TR><TD>13</TD><TD>14</TD><TD> ... ` ( th \\/ ta ) ` </TD> <TD> ` ( ( ph /\\ ch ) -> ( th \\/ ta ) ) ` </TD> <TD> ` \\/ `I 12</TD> <TD> ~ olcd 13</TD></TR> <TR><TD>14</TD><TD>16</TD><TD> ` ( th \\/ ta ) ` </TD> <TD> ` ( ph -> ( th \\/ ta ) ) ` </TD> <TD> ` \\/ `E 1,6,13</TD> <TD> ~ mpjaodan 5,14,15</TD></TR> </TABLE> </HTML> The original used Latin letters; we have replaced them with Greek letters to follow Metamath naming conventions and so that it is easier to follow the Metamath translation. The Metamath line-for-line translation of this natural deduction approach precedes every line with an antecedent including ` ph ` and uses the Metamath equivalents of the natural deduction rules. To add an assumption, the antecedent is modified to include it (typically by using ~ adantr ; ~ simpr is useful when you want to depend directly on the new assumption). (Contributed by Mario Carneiro, 9-Feb-2017.) (Proof modification is discouraged.) (New usage is discouraged.)","parent":["mpjaodan","orcd","mpd","simpr","adantr","olcd","notnotrd","pm2.65da","ad2antrr"],"children":[]}