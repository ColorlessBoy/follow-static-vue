{"bIdx":36932,"bType":"thm","type":"","name":"bj-termab","params":"setvar s0, class c0","body":["|- wceq(c0, cab(s0, wcel(cv(s0), c0)))","-| diffsc(s0, c0)"],"bodyPretty":["⊢ c0 = { s0 | s0 ∈ c0 }","⊣ d(s0, c0)"],"proof":[{"stmt":{"origin":"bj-abbi2i(s0, c0, wcel(cv(s0), c0))","pretty":"bj-abbi2i(s0, c0, s0 ∈ c0)"},"body":{"origin":"|- wceq(c0, cab(s0, wcel(cv(s0), c0)))\n-| wb(wcel(cv(s0), c0), wcel(cv(s0), c0))\n-| diffsc(s0, c0)","pretty":"⊢ c0 = { s0 | s0 ∈ c0 }\n⊣ (s0 ∈ c0 ↔ s0 ∈ c0)\n⊣ d(s0, c0)"},"cumulated":{"origin":"|- wceq(c0, cab(s0, wcel(cv(s0), c0)))\n-| wb(wcel(cv(s0), c0), wcel(cv(s0), c0))\n-| diffsc(s0, c0)","pretty":"⊢ c0 = { s0 | s0 ∈ c0 }\n⊣ (s0 ∈ c0 ↔ s0 ∈ c0)\n⊣ d(s0, c0)"}},{"stmt":{"origin":"biid(wcel(cv(s0), c0))","pretty":"biid(s0 ∈ c0)"},"body":{"origin":"|- wb(wcel(cv(s0), c0), wcel(cv(s0), c0))","pretty":"⊢ (s0 ∈ c0 ↔ s0 ∈ c0)"},"cumulated":{"origin":"|- wceq(c0, cab(s0, wcel(cv(s0), c0)))\n-| diffsc(s0, c0)","pretty":"⊢ c0 = { s0 | s0 ∈ c0 }\n⊣ d(s0, c0)"}}],"comment":"Every class can be written as (is equal to) a class abstraction. ~ cvjust is a special instance of it, but the present proof does not require ~ ax-13 , contrary to ~ cvjust . This theorem requires ~ ax-ext , ~ df-clab , ~ df-cleq , ~ df-clel , but to prove that any specific class term not containing class variables is a setvar or can be written as (is equal to) a class abstraction does not require these $a-statements. This last fact is a metatheorem, consequence of the fact that the only $a-statements with typecode ` class ` are ~ cv , ~ cab and statements corresponding to defined class constructors. UPDATE: This theorem is (almost) ~ abid2 and ~ bj-abid2 , though the present proof is shorter than a proof from ~ bj-abid2 and ~ eqcomi (and is shorter than the proof of either); plus, it is of the same form as ~ cvjust and such a basic statement deserves to be present in both forms. Note that ~ bj-termab shortens the proof of ~ abid2 , and shortens five proofs by a total of 72 bytes. Move it to Main as \"abid1\" proved from ~ abbi2i ? Note also that this is the form in Quine, more than ~ abid2 . (Contributed by BJ, 21-Oct-2019.) (Proof modification is discouraged.)","parent":["bj-abbi2i","biid"],"children":[]}